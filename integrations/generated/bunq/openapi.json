{
  "swagger": "2.0",
  "info": {
    "contact": {
      "name": "bunq Developer Support",
      "url": "http://bunq.com/developer",
      "x-twitter": "bunq"
    },
    "description": "***UPDATE:*** *We have released a [beta version of the new bunq API documentation.](https://beta.doc.bunq.com)*\n\n***NOTICE:***  *We have updated the sandbox base url to `https://public-api.sandbox.bunq.com/v1/`. Please update your applications accordingly. Check here: <https://github.com/bunq/sdk_php/issues/149> for more info.*\n\n***PSD2 NOTICE:*** *The second Payment Services Directive (PSD2) may affect your current or planned usage of our public API, as some of the API services are now subject to a permit. Please be aware that using our public API without the required PSD2 permit is at your own risk and take notice of our updated API Terms and Conditions on <https://www.bunq.com> for more information.*\n\n# <span id=\"topic-introduction\">Introduction</span>\n\nWelcome to bunq!\n\n- The bunq API is organised around REST. JSON will be returned in almost all responses from the API, including errors but excluding binary (image) files.\n- Please configure your implementation to send its API requests to `https://public-api.sandbox.bunq.com/v1/`\n- There is a version of the [Android app](https://appstore.bunq.com/api/android/builds/bunq-android-sandbox-master.apk) that connects to the bunq Sandbox environment. To create accounts for the Sandbox app, please follow the steps in the [Android Emulator](#android-emulator) section.\n\n## <span id=\"topic-introduction-get-started\">Get started</span>\n\n1. Create a user account with your phone. Afterwards, you can use this account to create an API key from which you can make API calls. You can create an API key either in our [developer portal](https://developer.bunq.com) or in the bunq app *(Profile → Security & Settings → Developers → API keys)*.\n2. Register a device. A device can be a phone (private), computer or a server (public). You can register a new device by using the installation and device-server calls.\n3. Open a session. Sessions are temporary and expire after the same amount of time you have set for auto logout in your user account.\n4. Make your first call!\n\n## <span id=\"topic-introduction-versioning\">Versioning</span>\n\nDevelopments in the financial sector, changing regulatory regimes and new feature requests require us to be flexible. This means we can iterate quickly to improve the API and related tooling. This also allows us to quickly process your feedback (which we are happy to receive!). Therefore, we have chosen not to attach any version numbers to the changes just yet. We will inform you in a timely manner of any important changes we make before they are deployed on together.bunq.com.\n\nOnce the speed of iteration slows down and more developers start using the API and its sandbox we will start versioning the API using the version number in the HTTP URLs (i.e. the `/v1` part of the path). We will inform you when this happens.\n\n# <span id=\"topic-oauth\">OAuth</span>\n\n## <span id=\"topic-oauth-what-is-oauth\">What is OAuth?</span>\n\n[OAuth 2.0](https://www.oauth.com/oauth2-servers/getting-ready/) is a protocol that will let your app connect to bunq users in a safe and easy way. Please be aware that if you want to gain access to account information of other bunq users or initiate a payment for them, you [may require a PSD2 permit](https://beta.doc.bunq.com/other/faq#is-it-possible-to-provide-services-to-third-parties-by-means-of-the-bunq-api-without-a-license).\n\n## <span id=\"topic-oauth-get-started-with-oauth-for-bunq\">Get started with OAuth for bunq</span>\n\nFollow these steps to get started with OAuth:\n1. Register your OAuth Client in the bunq app, you will find the option within \"Security & Settings > Developers\".\n2. Add one or more Redirect URLs.\n3. Get your Client ID and Client Secret from the bunq app.\n4. Redirect your users to the OAuth authorization URL as described [here](#oauth-authorization-request).\n5. If the user accepts your Connection request then he will be redirected to the previously specified `redirect_uri` with an authorization Code parameter.\n6. Use the [token endpoint](#oauth-token-exchange) to exchange the authorization Code for an Access Token.\n7. The Access Token can be used as a normal API Key, open a session with the bunq API or use our SDKs and get started!\n\n## <span id=\"topic-oauth-what-can-my-apps-do-with-oauth\">What can my apps do with OAuth?</span>\n\nWe decided to launch OAuth with a default permission that allows you to perform the following actions:\n- read and create Monetary Accounts;\n- read Payments & Transactions;\n- create Payments between Monetary Accounts of the same user;\n- create Draft-Payments (the user will need to approve the payment using the bunq app);\n- assign a Monetary account to a Card;\n- read, create and manage Cards;\n- read and create Request-Inquiries\n- read Request-Responses.\n\n## <span id=\"topic-oauth-authorization-request\">Authorization request</span>\n\nYour web or mobile app should redirect users to the following URL:\n\n`https://oauth.bunq.com/auth`\n\nThe following parameters should be passed:\n\n- `response_type` - bunq supports the authorization code grant, provide `code` as parameter (required)\n- `client_id` - your Client ID, get it from the bunq app (required)\n- `redirect_uri` - the URL you wish the user to be redirected after the authorization, make sure you register the Redirect URL in the bunq app (required)\n- `state` - a unique string to be passed back upon completion (optional)\n\nUse `https://oauth.sandbox.bunq.com/auth` in the sandbox environment.\n\n**Authorization request example:**\n\n```\nhttps://oauth.bunq.com/auth?response_type=code\n&client_id=1cc540b6e7a4fa3a862620d0751771500ed453b0bef89cd60e36b7db6260f813\n&redirect_uri=https://www.bunq.com\n&state=594f5548-6dfb-4b02-8620-08e03a9469e6\n```\n\n**Authorization request response:**\n\n```\nhttps://www.bunq.com/?code=7d272be434a75933f40c13d56aef6c31496005b653074f7d6ac57029d9995d30\n&state=594f5548-6dfb-4b02-8620-08e03a9469e6\n```\n## <span id=\"topic-oauth-token-exchange\">Token exchange</span>\n\nIf everything went well then you can exchange the authorization Code that we returned you for an Access Token to use with the bunq API.\n\nMake a POST call to the following endpoint:\n\n`https://api.oauth.bunq.com/v1/token`\n\nThe following parameters should be passed as GET variables:\n\n- `grant_type` - the grant type used, `authorization_code` for now (required)\n- `code` -  the authorization code received from bunq (required)\n- `redirect_uri` - the same Redirect URL used in the authorisation request (required)\n- `client_id` - your Client ID (required)\n- `client_secret` - your Client Secret (required)\n\nUse `https://api-oauth.sandbox.bunq.com/v1/token` in the sandbox environment.\n\n**Token request example:**\n\n```\nhttps://api.oauth.bunq.com/v1/token?grant_type=authorization_code\n&code=7d272be434a75933f40c13d56aef6c31496005b653074f7d6ac57029d9995d30\n&redirect_uri=https://www.bunq.com/\n&client_id=1cc540b6e7a4fa3a862620d0751771500ed453b0bef89cd60e36b7db6260f813\n&client_secret=184f969765f6f74f53bf563ae3e9f891aec9179157601d25221d57f2f1151fd5\n```\n\nNote: the request only contains URL parameters.\n\n**Example successful response:**\n\n```json\n{\n    \"access_token\": \"8baec0ac1aafca3345d5b811042feecfe0272514c5d09a69b5fbc84cb1c06029\",\n    \"token_type\": \"bearer\",\n    \"state\": \"594f5548-6dfb-4b02-8620-08e03a9469e6\"\n}\n```\n\n**Example error response:**\n\n```json\n{\n    \"error\": \"invalid_grant\",\n    \"error_description\": \"The authorization code is invalid or expired.\"\n}\n```\n\n## <span id=\"topic-oauth-using-the-connect-button\">Using the Connect button</span>\n\nAll good? Ready to connect to your bunq users? Refer to our style guide and use the following assets when implementing the **Connect to bunq** button.\n\n- [Style guide](https://bunq.com/info/oauth-styleguide)\n- [Connect button assets](https://bunq.com/info/oauth-connect-buttons)\n\n## <span id=\"topic-oauth-whats-next\">What's next?</span>\n\nThe `access_token` you've received can be used as a normal API key. Please continue with [Authentication](#authentication).\n\n**NOTE:** When connecting to a bunq user's account using OAuth, you create a new user that `access_token` is associated with. This user has an ID. Use this ID as the user ID instead of the primary ID of the user that you connected with via OAuth.\n\nWhen calling `GET /user/{userID}`, you might expect to get `UserPerson` or `UserCompany`. Instead, you will get the `UserApiKey` object, which contains references to both the user that requested access *(you)* and the user that granted access *(the bunq user account that you connected to)*. \n\n![bunq_OAuth UserApiKey](https://blobscdn.gitbook.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-LbhJLuxCAKl5yUuS74T%2F-LuhS4YOAX9bwW1eGYF8%2F-LuhnlwEcVXtLVk6846Z%2FUserApiKey%20creation%20(3).jpg?alt=media&token=d1f212a2-3105-4f0e-a980-34b04a12998a)\n\nVisit us on together.bunq.com, share your creations, ask question and build your very own bunq app!\n\n# <span id=\"topic-authentication\">Authentication</span>\n\n- All requests must use HTTPS. HTTP calls will fail. \n- You should use SSL Certificate Pinning and Hostname Verification to ensure your connection with bunq is secure.\n- The auto logout time that you set in the app applies to all your sessions including the API ones. If a request is made 30 minutes before a session expires, the session will automatically be extended.\n- We use extra signing on top of HTTPS encryption that you must implement yourself if you are not using the SDKs.\n\nℹ️ *We use asymmetric cryptography for signing requests and encryption.*\n- The client (you) and the server (bunq) must have a pair of keys: a private key and a public key. You need to pre-generate your own pair of 2048-bit RSA keys in the PEM format aligned with the PKCS #8 standard.\n- The parties (you and bunq) exchange their public keys in the first step of the API context creation flow. All the following requests must be signed by both your application and the server. Pass your signature in the `X-Bunq-Client-Signature` header, and the server will return its signature in the `X-Bunq-Server-Signature` header.\n\n## <span id=\"topic-authentication-device-registration\">Device registration</span>\n\n### <span id=\"topic-authentication-device-registration-using-our-sdks\">Using our SDKs</span>\n\n1. In order to start making calls with the bunq API, you must first register your API key and device and create a session.\n2. In the SDKs, we group these actions and call it \"creating an API context\".\n3. You can find more information on our [GitHub](https://github.com/bunq) page.\n\n### <span id=\"topic-authentication-device-registration-using-our-api\">Using our API</span>\n\n1. Create an Installation with the installation POST call and provide a new public key. After doing so you receive an authentication token which you can use for the API calls in the next steps.\n2. Create a DeviceServer with the device-server POST call and provide a description and API key.\n3. Create a SessionServer with the session-server POST call. After doing so you receive a new authentication token which you can use for the API calls during this active Session.​\n\n### <span id=\"topic-authentication-device-registration-ip-addresses\">IP addresses</span>\n\nWhen using a standard API Key the DeviceServer and Installation that are created in this process are bound to the IP address they are created from. Afterwards it is only possible to add IP addresses via the Permitted IP endpoint.\n\nUsing a Wildcard API Key gives you the freedom to make API calls from any IP address after the POST device-server. You can switch to a Wildcard API Key by tapping on “Allow All IP Addresses” in your API Key menu inside the bunq app. You can also programatically switch to a Wildcard API Key by passing your current ip and a `*` (asterisk) in the `permitted_ips` field of the device-server POST call. E.g: `[\"1.2.3.4\", \"*\"]`.\n\n# <span id=\"topic-psd2\">Connect as a PSD2 service provider</span>\n\nAs a service provider, either an Account Information Service Provider (AISP) or Payment Initiation Service Provider (PISP), you have obtained or are planning to obtain a licence from your local supervisor. You will need your unique eIDAS certificate number to start using the PSD2-compliant bunq API on production.\n\nWe accept pseudo certificates in the sandbox environment so you could test the flow. You can generate a test certificate using this command:\n```\nopenssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj '/CN=My App PISP AISP/C=NL'\n```\n\n## <span id=\"topic-psd2-register-as-a-service-provider\">Register as a service provider</span>\n\nBefore you can read information on bunq users or initiate payments, you need to register a PSD2 account and receive credentials that will enable you to access the bunq user accounts. \n\n1. Execute `POST v1/installation` and get your installation *Token* with a unique random key pair.\n1. Use the installation *Token* and your unique PSD2 certificate to call `POST v1/payment-service-provider-credential`. This will register your software. \n1. Receive your API key in return. It will identify you as a PSD2 bunq API user. You will use it to start an OAuth flow. The session will last 90 days. After it closes, start a new session using the same API key.\n1. Register a device by using `POST v1/device-server` using the API key for the secret and passing the installation *Token* in the `X-Bunq-Client-Authentication` header. \n1. Create your first session by executing `POST v1/session-server`. Provide the installation *Token* in the `X-Bunq-Client-Authentication` header. You will receive a session *Token*. Use it in any following request in the `X-Bunq-Client-Authentication` header.\n\n**NOTE.** The first session will last 1 hour. Start a new session within 60 minutes.\n\n![bunq_PSD_party_identification](https://static.bunq.com/assets/doc/20190313_PSD_party_identification.jpg)\n\n## <span id=\"topic-psd2-register-your-applicaton\">Register your application</span>\n\nBefore you can start authenticating on behalf of a bunq user, you need to get *Client ID* and *Client Secret*, which will identify you in requests to the user accounts.\n\n1. Call `POST /v1/user/{userID}/oauth-client`\n1. Call `GET /v1/user/{userID}/oauth-client/{oauth-clientID}`. We will return your *Client ID* and *Client Secret*.\n1. Call `POST /v1/user/{userID}/oauth-client/{oauth-clientID}/callback-url`. Include the OAuth callback URL of your application.\n1. You are ready to initiate authorization requests.\n\n![bunq_OAuth](https://static.bunq.com/assets/doc/20190313_OAuth_flows.jpg)\n\n## <span id=\"topic-psd2-access-user-accounts-as-an-aisp\">Access user accounts as an AISP</span>\n\nAs an AISP, you are allowed to authenticate in a user’s account with the following permissions:\n\n* access account information (read):\n\t1. legal name\n\t2. IBAN\n\t3. nationality\n\t4. card validity data\n\t5. transaction history\n\t6. account balance\n\nOnce a bunq user has confirmed they want to connect their account via your application, you can initiate the authorization flow.\n0. Open a session on the bunq server.\n1. Initiate an authorization request. If your identity is validated, we send you a confirmation upon its creation. Pass the following parameters with the request:\n\t- *response_type*\n\t- *client_id* (here *response_type=code&client_id*)\n\t- *redirect_uri\n\t- *state\n2. If the bunq user confirms their will to let your application connect to their account, we return you a Code. \n3. Exchange the *Code* for an *Access Token*. Make a `POST` call to `https://api.oauth.bunq.com/v1/token` passing the following parameters:\n\t- *code (at this stage, grant_type=authorization_code&code)*\n\t- *redirect_uri*\n\t- *client_id*\n\t- *client_secret*\n4. We return the *Access Token*. Use it every time you interact with the bunq user’s account. You can use it to start a session to interact with the monetary accounts the user allows you to access.\n\n![bunq_AISP](https://static.bunq.com/assets/doc/20190313_AISP_flow.jpg)\n\n## <span id=\"topic-psd2-initiate-payments-as-a-pisp\">Make payments as a PISP</span>\n\nAs a PISP, you are allowed to authenticate in a user’s account with the following permissions:\n1. read account information \n\t- legal name\n\t- IBAN\n2. initiate payments (create draft payments)\n3. confirm that the account balance is sufficient for covering the payment *(will be available in upcoming releases)*\n\nOnce a bunq user has confirmed they want to make a payment via your application, you can initiate the payment confirmation flow.\n\n0.  Open a session to the bunq server.\n1.   Get the id of the account you want to use to receive the money from the bunq users:\n\t- Call `GET monetary-account`. Check the ids of the accounts and save the id of the account you want to transfer customer money to.\n2. Create a draft payment.\n\t- Call `POST draft-payment` and pass the following parameters:\n\t\t1. monetary-accountID\n\t\t2. userID\n\t\t3. the customer’s email address, phone number or IBAN in the *counterparty_alias*\n3. If the user confirms their intent to make the payment, we carry out the transaction.\n4. Check the status of the payment via `GET draft-payment` using the draft payment id parameter returned in the previous step.\n![bunq_PISP](https://static.bunq.com/assets/doc/20190313_PISP_flow.jpg)\n\n\n# <span id=\"topic-signing\">Signing</span>\n⚠️ **NOTE:**  We deprecated the signing of the entire API request (the URL, headers and body). You only need to sign the request body. Requests with full request signatures are no longer validated.\n\n\nWe are legally required to protect our users and their data from malicious attacks and intrusions. That is why we beyond having a secure https connection, we use [asymmetric cryptography](https://en.wikipedia.org/wiki/Public-key_cryptography) for signing requests that create a session or payment. The use of signatures ensures the data is coming from the trusted party and was not modified after sending and before receiving.\n\nRequest body signing is only mandatory for the following operations: \n- open a session;\n- create a payment;\n- create a scheduled payment;\n- any other operation that executes a payment such as the following:\n\t- accept a draft payment;\n\t- accept a scheduled payment;\n\t- accept a draft scheduled payment;\n\t- accept a payment request.\n\nYou will know that the API call must be encrypted if you get the 466 error code. \n\nThe signing mechanism is implemented in our [SDKs](https://github.com/bunq) so if you are using them you don't have to worry about the details described below.\n\nThe signatures are created using the SHA256 cryptographic hash function and included (encoded in base 64) in the `X-Bunq-Client-Signature` request header and `X-Bunq-Server-Signature` response header. The data to sign is the following:\n\n- For requests: the body only.\n- For responses: the body only.\n\nFor signing requests, the client must use the private key corresponding to the public key that was sent to the server in the installation API call. That public key is what the server will use to verify the signature when it receives the request. In that same call the server will respond with a server side public key, which the client must use to verify the server's signatures. The generated RSA key pair must have key lengths of 2048 bits and adhere to the PKCS #8 standard.\n\n## <span id=\"topic-signing-request-signing-example\">Request signing example</span>\n\nConsider the following request, a `POST` to `/v1/user/126/monetary-account/222/payment` (the JSON is formatted with newlines and indentations to make it more readable):\n\n<table>\n    <thead>\n        <tr>\n            <th>Header</th>\n            <th>Value</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Cache-Control:</td>\n            <td>no-cache</td>\n        </tr>\n        <tr>\n            <td>User-Agent:</td>\n            <td>bunq-TestServer/1.00 sandbox/0.17b3</td>\n        </tr>\n        <tr>\n            <td>X-Bunq-Client-Authentication:</td>\n\n<td>f15f1bbe1feba25efb00802fa127042b54101c8ec0a524c36464f5bb143d3b8b</td>\n        </tr>\n    </tbody>\n</table>\n\n```json\n{\n\t\"amount\": {\n\t\t\"value\": \"12.50\",\n\t\t\"currency\": \"EUR\"\n\t},\n\t\"counterparty_alias\": {\n\t\t\"type\": \"EMAIL\",\n\t\t\"value\": \"bravo@bunq.com\"\n\t},\n\t\"description\": \"Payment for drinks.\"\n}\n```\n\nLet's sign that request. First create a variable `$dataToSign` containing the body of the request:\n\n```json\n{\n    \"amount\": {\n        \"value\": \"12.50\",\n        \"currency\": \"EUR\"\n    },\n    \"counterparty_alias\": {\n        \"type\": \"EMAIL\",\n        \"value\": \"bravo@bunq.com\"\n    },\n    \"description\": \"Payment for drinks.\"\n}\n```\nNext, create the signature of `$dataToSign` using the SHA256 algorithm and the private key `$privateKey` of the Installation's key pair. In PHP, use the following to create a signature. The signature will be passed by reference into `$signature`.\n\n`openssl_sign($dataToSign, $signature, $privateKey, OPENSSL_ALGO_SHA256);`\n\nEncode the resulting `$signature` using base64, and add the resulting value to the request under the `X-Bunq-Client-Signature` header. You have just signed your request, and can send it!\n\n## <span id=\"topic-signing-response-verifying-example\">Response verifying example</span>\n\nThe response to the previous request is as follows (the JSON is formatted with newlines and indentations to make it more readable):\n\n<table>\n    <thead>\n        <tr>\n            <th>Header</th>\n            <th>Value</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Access-Control-Allow-Origin:</td>\n            <td>*</td>\n        </tr>\n        <tr>\n            <td>Content-Type:</td>\n            <td>application/json</td>\n        </tr>\n        <tr>\n            <td>Date:</td>\n            <td>Thu, 07 Apr 2016 08:32:04 GMT</td>\n        </tr>\n        <tr>\n            <td>Server:</td>\n            <td>APACHE</td>\n        </tr>\n        <tr>\n            <td>Strict-Transport-Security:</td>\n            <td>max-age=31536000</td>\n        </tr>\n        <tr>\n            <td>Transfer-Encoding:</td>\n            <td>chunked</td>\n        </tr>\n        <tr>\n            <td>X-Bunq-Client-Response-Id:</td>\n            <td>89dcaa5c-fa55-4068-9822-3f87985d2268</td>\n        </tr>\n        <tr>\n            <td>X-Bunq-Client-Request-Id:</td>\n            <td>57061b04b67ef</td>\n        </tr>\n        <tr>\n            <td>X-Bunq-Server-Signature:</td>\n            <td>ee9sDfzEhQ2L6Rquyh2XmJyNWdSBOBo6Z2eUYuM4bAOBCn9N5vjs6k6RROpagxXFXdGI9sT15tYCaLe5FS9aciIuJmrVW/SZCDWq/nOvSThi7+BwD9JFdG7zfR4afC8qfVABmjuMrtjaUFSrthyHS/5wEuDuax9qUZn6sVXcgZEq49hy4yHrV8257I4sSQIHRmgds4BXcGhPp266Z6pxjzAJbfyzt5JgJ8/suxgKvm/nYhnOfsgIIYCgcyh4DRrQltohiSon6x1ZsRIfQnCDlDDghaIxbryLfinT5Y4eU1eiCkFB4D69S4HbFXYyAxlqtX2W6Tvax6rIM2MMPNOh4Q==</td>\n        </tr>\n        <tr>\n            <td>X-Frame-Options:</td>\n            <td>SAMEORIGIN</td>\n        </tr>\n    </tbody>\n</table>\n\n```json\n{\n\t\"Response\": [\n\t\t{\n\t\t\t\"Id\": {\n\t\t\t\t\"id\": 1561\n\t\t\t}\n\t\t}\n\t]\n}\n```\nWe need to verify that this response was sent by the bunq server and not from a man-in-the-middle:\n- Create a `$dataToSign` variable containing the body of the request.\n\n**NOTE:** We started to only sign the response body on April 28, 2020. Please make sure you validate our new response signature.\n\nSo for our example above the response to sign will look like this:\n\n```\n{\"Response\":[{\"Id\":{\"id\":1561}}]}\n```\nNow, verify the signature of `$dataToVerify` using the SHA256 algorithm and the public key `$publicKey` of the server. In PHP, use the following to verify the signature.\n\n`openssl_sign($dataToVerify, $signature, $publicKey, OPENSSL_ALGO_SHA256);`\n\n## <span id=\"topic-signing-troubleshooting\">Troubleshooting</span>\n\nIf you get an error telling you \"The request signature is invalid\", please check the following:\n\n- There are no redundant characters (extra spaces, trailing line breaks, etc.) in the data to sign.\n- Make sure the body is appended to the data to sign exactly as you're adding it to the request.\n- You have added the full body to the data to sign.\n- You use the data to sign to create a SHA256 hash signature.\n- You have base64 encoded the SHA256 hash signature before adding it to the request under `X-Bunq-Client-Signature`.\n\n# <span id=\"topic-headers\">Headers</span>\n\nHTTP headers allow your client and bunq to pass on additional information along with the request or response.\n\nWhile this is already implemented in our [SDKs](https://github.com/bunq), please follow these instructions to make sure you set appropriate headers for calls if using bunq API directly.\n\n## <span id=\"topic-headers-request-headers\">Request headers</span>\n\n### <span id=\"topic-headers-request-headers-mandatory-request-headers\">Mandatory request headers</span>\n\n#### Cache-Control\n\n`Cache-Control: no-cache`\n\nThe standard HTTP Cache-Control header is required for all requests.\n\n#### User-Agent\n\n`User-Agent: bunq-TestServer/1.00 sandbox/0.17b3`\n\nThe User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.\n\n#### X-Bunq-Client-Signature\n\n**⚠️ UPCOMING CHANGE:** Header and URL signature will stop being validated on April 28, 2020. Please [sign the request body](https://doc.bunq.com/#/signing) only.\n\n`X-Bunq-Client-Signature: XLOwEdyjF1d+tT2w7a7Epv4Yj7w74KncvVfq9mDJVvFRlsUaMLR2q4ISgT+5mkwQsSygRRbooxBqydw7IkqpuJay9g8eOngsFyIxSgf2vXGAQatLm47tLoUFGSQsRiYoKiTKkgBwA+/3dIpbDWd+Z7LEYVbHaHRKkEY9TJ22PpDlVgLLVaf2KGRiZ+9/+0OUsiiF1Fkd9aukv0iWT6N2n1P0qxpjW0aw8mC1nBSJuuk5yKtDCyQpqNyDQSOpQ8V56LNWM4Px5l6SQMzT8r6zk5DvrMAB9DlcRdUDcp/U9cg9kACXIgfquef3s7R8uyOWfKLSNBQpdVIpzljwNKI1Q`\n\n\n#### X-Bunq-Client-Authentication\n\n`X-Bunq-Client-Authentication: 622749ac8b00c81719ad0c7d822d3552e8ff153e3447eabed1a6713993749440`\n\nThe authentication *token* is used to authenticate the source of the API call. It is required by all API calls except for `POST /v1/installation`. \n\nIt is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call:\n- Pass the **installation *Token*** you get in the response to the `POST /installation` call in the `/device-server` and `/session-server` calls.\n- Pass the **session *Token*** you get in the response to the `POST /session-server` call in all the other calls.\n\n### <span id=\"topic-headers-request-headers-otpional-request-headers\">Optional request headers</span>\n\n#### X-Bunq-Language\n\n`X-Bunq-Language: en_US`\n\n`en_US` is the default language setting for responses and error descriptions.\n\nThe X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.\n\nCurrently only the languages en_US and nl_NL are supported. Anything else will default to en_US.\n\n#### X-Bunq-Region\n\n`X-Bunq-Region: en_US`\n\n`en_US` is the default region for localization formatting.\n\nThe X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.\n\n#### X-Bunq-Client-Request-Id\n\n`X-Bunq-Client-Request-Id: a4f0de`\n\nThis header has to specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.\n\n#### X-Bunq-Geolocation\n\n`X-Bunq-Geolocation: 4.89 53.2 12 100 NL`\n\n`X-Bunq-Geolocation: 0 0 0 0 000` *(if no geolocation is available or known)*\n\nThis header has to specify the geolocation of the device. It makes it possible for bunq to map the geolocation with the payment.\n‌\nThe format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.\n\n### <span id=\"topic-headers-request-headers-attachment-headers\">Attachment headers</span>\n\n#### Content-Type\n\n`Content-Type: image/jpeg`\n\nThis header should be used when uploading an attachment to pass its MIME type. Supported types are: image/png, image/jpeg and image/gif.\n\n#### X-Bunq-Attachment-Description\nX-Bunq-Attachment-Description: Check out these cookies.\nThis header should be used when uploading an Attachment's content to give it a description.\n\n## <span id=\"topic-response-headers\">Response headers</span>\n\n### <span id=\"topic-response-headers-all-responses\">All Responses</span>\n\n####  X-Bunq-Client-Request-Id\n\n`X-Bunq-Client-Request-Id: a4f0de`\n\nThe same ID that was provided in the request's X-Bunq-Client-Request-Id header. Is included in the response (and request) signature, so can be used to ensure this is the response for the sent request.\n\n#### X-Bunq-Client-Response-Id\n\n`X-Bunq-Client-Response-Id: 76cc7772-4b23-420a-9586-8721dcdde174`\n\nA unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.\n\n#### X-Bunq-Server-Signature\n\n`X-Bunq-Server-Signature: XBBwfDaOZJapvcBpAIBT1UOmczKqJXLSpX9ZWHsqXwrf1p+H+eON+TktYksAbmkSkI4gQghw1AUQSJh5i2c4+CTuKdZ4YuFT0suYG4sltiKnmtwODOFtu1IBGuE5XcfGEDDSFC+zqxypMi9gmTqjl1KI3WP2gnySRD6PBJCXfDxJnXwjRkk4kpG8Ng9nyxJiFG9vcHNrtRBj9ZXNdUAjxXZZFmtdhmJGDahGn2bIBWsCEudW3rBefycL1DlpJZw6yRLoDltxeBo7MjgROBpIeElh5qAz9vxUFLqIQC7EDONBGbSBjaXS0wWrq9s2MGuOi9kJxL2LQm/Olj2g==`\n\nThe server's signature for this response. See the signing page for details on how to verify this signature.\n\n### <span id=\"topic-response-headers-warning-header\">Warning header</span>\n\n#### X-Bunq-Warning\n\n`X-Bunq-Warning: \"You have a negative balance. Please check the app for more details.\"`\n\nUsed to inform you on situations that might impact your bunq account and API access.\n\n# <span id=\"topic-errors\">Errors</span>\n\nFamiliar HTTP response codes are used to indicate the success or failure of an API request.\n\nGenerally speaking, codes in the 2xx range indicate success, while codes in the 4xx range indicate an error having to do with provided information (e.g. a required parameter was missing, insufficient funds, etc.).\n\nFinally, codes in the 5xx range indicate an error with bunq servers. If this is the case, please stop by the support chat and report it to us.\n\n## <span id=\"topic-errors-response-codes\">Response codes</span>\n\n<table>\n    <thead>\n        <tr>\n            <th>Code</th>\n            <th>Error</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>200</td>\n            <td>OK</td>\n            <td>Successful HTTP request</td>\n        </tr>\n        <tr>\n            <td>399</td>\n            <td>NOT MODIFIED</td>\n            <td>Same as a 304, it implies you have a local cached copy of the data</td>\n        </tr>\n        <tr>\n            <td>400</td>\n            <td>BAD REQUEST</td>\n            <td>Most likely a parameter is missing or invalid</td>\n        </tr>\n        <tr>\n            <td>401</td>\n            <td>UNAUTHORISED</td>\n            <td>Token or signature provided is not valid</td>\n        </tr>\n        <tr>\n            <td>403</td>\n            <td>FORBIDDEN</td>\n            <td>You're not allowed to make this call</td>\n        </tr>\n        <tr>\n            <td>404</td>\n            <td>NOT FOUND</td>\n            <td>The object you're looking for cannot be found</td>\n        </tr>\n        <tr>\n            <td>405</td>\n            <td>METHOD NOT ALLOWED</td>\n            <td>The method you are using is not allowed for this endpoint</td>\n        </tr>\n        <tr>\n            <td>429</td>\n            <td>RATE LIMIT</td>\n            <td>Too many API calls have been made in a too short period</td>\n        </tr>\n        <tr>\n            <td>466</td>\n            <td>REQUEST SIGNATURE REQUIRED</td>\n            <td>Request signature is required for this operation.</td>\n        </tr>\n        <tr>\n            <td>490</td>\n            <td>USER ERROR</td>\n            <td>Most likely a parameter is missing or invalid</td>\n        </tr>\n        <tr>\n            <td>491</td>\n            <td>MAINTENANCE ERROR</td>\n            <td>bunq is in maintenance mode</td>\n        </tr>\n        <tr>\n            <td>500</td>\n            <td>INTERNAL SERVER ERROR</td>\n            <td>Something went wrong on bunq's end</td>\n        </tr>\n    </tbody>\n</table>\n\nAll errors 4xx code errors will include a JSON body explaining what went wrong.\n\n## <span id=\"topic-errors-rate-limits\">Rate limits</span>\n\nIf you are receiving the error 429, please make sure you are sending requests at rates that are below our rate limits.\n\nOur rate limits per IP address per endpoint:\n\n- GET requests: 3 within any 3 consecutive seconds\n- POST requests: 5 within any 3 consecutive seconds\n- PUT requests: 2 within any 3 consecutive seconds\n- Callbacks: 2 callback URLs per notification category\n\nWe have a lower rate limit for `/session-server`: 1 request within 30 consecutive seconds.\n\n# <span id=\"topic-api-conventions\">API conventions</span>\n\nMake sure to follow these indications when using the bunq API or get started with our SDKs.\n\n## <span id=\"topic-api-conventions-responses\">Responses</span>\n\nAll JSON responses have one top level object. In this object will be a Response field of which the value is always an array, even for responses that only contain one object.\n\nExample response body\n\n```json\n{\n\t\"Response\": [\n\t\t{\n\t\t\t\"DataObject\": {}\n\t\t}\n\t]\n}\n```\n\n## <span id=\"topic-api-conventions-errors\">Errors</span>\n\n- Error responses also have one top level Error object.\n- The contents of the array will be a JSON object with an error_description and error_description_translated field.\n- The error_description is an English text indicating the error and the error_description_translated field can be shown to end users and is translated into the language from the X-Bunq-Language header, defaulting to en_US.\n- When using bunq SDKs, error responses will be always raised in form of an exception.\n\nExample response body\n```json\n{\n\t\"Error\": [\n\t\t{\n\t\t\t\"error_description\": \"Error description\",\n\t\t\t\"error_description_translated\": \"User facing error description\"\n\t\t}\n\t]\n}\n```\n\n## <span id=\"topic-api-conventionsobject-type-indications\">Object Type indications</span>\n\nWhen the API returns different types of objects for the same field, they will be nested in another JSON object that includes a specific field for each one of them. Within bunq SDKs a BunqResponse object will be returned as the top level object.\n\nIn this example there is a field content, which can have multiple types of objects as value such as — in this case — ChatMessageContentText. Be sure to follow this convention or use bunq SDKs instead.\n\n```json\n{\n\t\"content\": {\n\t\t\"ChatMessageContentText\": {\n\t\t\t\"text\": \"Hi! This is an automated security message. We saw you just logged in on an My Device Description. If you believe someone else logged in with your account, please get in touch with Support.\"\n\t\t}\n\t}\n}\n```\n\n## <span id=\"topic-api-conventions-time-formats\">Time formats</span>\n\nTimes and dates being sent to and from the API are in UTC. The format that should be used is `YYYY-MM-DD hh:mm:ss.ssssss`, where the letters have the meaning as specified in ISO 8601. For example: `2017-01-13 13:19:16.215235`.\n\n# <span id=\"topic-callbacks\">Callbacks</span>\n\nCallbacks are used to send information about events on your bunq account to a URL of your choice, so that you can receive real-time updates.\n\n## <span id=\"topic-callbacks-notification-filters\">Notification Filters</span>\n\nTo receive notifications for certain activities on a bunq account, you have to create notification filters. It is possible to send the notifications to a provided URL and/or the user’s phone as push notifications.\n\nUse the `notification-filter-push` resource to create and manage push notification filters. Provide the type of events you want to receive notifications about in the `category` field. \n\n```json    \n{\n   \"notification_filters\":[\n      {\n         \"category\":\"SCHEDULE_RESULT\"\n      }\n   ]\n}\n```\n\nUse the `notification-filter-url` resource to create and manage URL notification filters. The callback URL you provide in the `notification_target` field must use HTTPS. \n\n```json\n{\n   \"notification_filters\":[\n      {\n         \"category\":\"PAYMENT\",\n         \"notification_target\":\"{YOUR_CALLBACK_URL}\"\n      }\n   ]\n}\n```\n\n### <span id=\"topic-callbacks-notification-filters-callback-categories\">Callback categories</span>\n\n<table>\n    <thead>\n        <tr>\n            <th>Category</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>BILLING</td>\n            <td>notifications for all bunq invoices</td>\n        </tr>\n        <tr>\n            <td>CARD_TRANSACTION_SUCCESSFUL</td>\n            <td>notifications for successful card transactions</td>\n        </tr>\n        <tr>\n            <td>CARD_TRANSACTION_FAILED</td>\n            <td>notifications for failed card transaction</td>\n        </tr>\n        <tr>\n            <td>CHAT</td>\n            <td>notifications for received chat messages</td>\n        </tr>\n        <tr>\n            <td>DRAFT_PAYMENT</td>\n            <td>notifications for creation and updates of draft payments</td>\n        </tr>\n        <tr>\n            <td>IDEAL</td>\n            <td>notifications for iDEAL-deposits towards a bunq account</td>\n        </tr>\n        <tr>\n            <td>SOFORT</td>\n            <td>notifications for SOFORT-deposits towards a bunq account</td>\n        </tr>\n        <tr>\n            <td>MUTATION</td>\n            <td>notifications for any action that affects a monetary account’s balance</td>\n        </tr>\n\t<tr>\n            <td>OAUTH</td>\n            <td>notifications for revoked OAuth connections</td>\n        </tr>\n        <tr>\n            <td>PAYMENT</td>\n            <td>notifications for payments created from, or received on a bunq account (doesn’t include payments that result out of paying a Request, iDEAL, Sofort or Invoice). Outgoing payments have a negative value while incoming payments have a positive value</td>\n        </tr>\n        <tr>\n            <td>REQUEST</td>\n            <td>notifications for incoming requests and updates on outgoing requests</td>\n        </tr>\n        <tr>\n            <td>SCHEDULE_RESULT</td>\n            <td>notifications for when a scheduled payment is executed</td>\n        </tr>\n        <tr>\n            <td>SCHEDULE_STATUS</td>\n            <td>notifications about the status of a scheduled payment, e.g. when the scheduled payment is updated or cancelled</td>\n        </tr>\n        <tr>\n            <td>SHARE</td>\n            <td>notifications for any updates or creation of Connects (ShareInviteBankInquiry)</td>\n        </tr>\n        <tr>\n            <td>TAB_RESULT</td>\n            <td>notifications for updates on Tab payments</td>\n        </tr>\n        <tr>\n            <td>BUNQME_TAB</td>\n            <td>notifications for updates on bunq.me Tab (open request) payments</td>\n        </tr>\n        <tr>\n            <td>SUPPORT</td>\n            <td>notifications for messages received from us through support chat</td>\n        </tr>\n    </tbody>\n</table>\n\n### <span id=\"topic-callbacks-notification-filters-mutation-category\">Mutation category</span>\n\nA Mutation is a change in the balance of a monetary account. So, for each payment-like object, such as a request, iDEAL-payment or a regular payment, a Mutation is created. Therefore, the `MUTATION` category can be used to keep track of a monetary account's balance.\n\n### <span id=\"topic-callbacks-notification-filters-receiving-callbacks\">Receiving callbacks</span>\n\nCallbacks for the sandbox environment will be made from different IP's at AWS.  \nCallbacks for the production environment will be made from `185.40.108.0/22`.\n\n*The IP addresses might change*. We will notify you in a timely fashion if such a change would take place.\n\n### <span id=\"topic-callbacks-notification-filters-retry-mechanism\">Retry mechanism</span>\n\nWhen the execution of a callback fails (e.g. if the callback server is down or the response contains an error) it is tried again for a maximum of 5 times, with an interval of one minute between each try. If your server is not reachable by the callback after the 6th total try, the callback is not sent anymore.\n\n### <span id=\"topic-callbacks-notification-filters-removing-callbacks\">Removing callbacks</span>\n\nTo remove callbacks for an object, send a PUT request to the *user-person*, *user-company*, *monetary-account* or *cash-register* resource with the `notification_filters` field of the JSON request body unset.\n```\n{\n    \"notification_filters\": []\n}\n```\n\n## <span id=\"topic-callbacks-certificate-pinning\">Certificate pinning</span>\n\nWe recommend you use certificate pinning as an extra security measure. With certificate pinning, we check the certificate of the server on which you want to receive callbacks against the pinned certificate that has been provided by you and cancel the callback if that check fails.\n\n### <span id=\"topic-callbacks-certificate-pinning-how-to-set-up-certificate-pinning\">How to set up certificate pinning</span>\n\nRetrieve the SSL certificate of your server using the following command:\n\n1. `openssl s_client -servername www.example.com -connect www.example.com:443 < /dev/null | sed -n \"/-----BEGIN/,/-----END/p\" > www.example.com.pem`\n2. `POST` the certificate to the certificate-pinned endpoint.\n\nNow every callback that is made will be checked against the pinned certificate that you provided. Note that if the SSL certificate on your server expires or is changed, our callbacks will fail.\n\n# <span id=\"topic-pagination\">Pagination</span>\n\nIn order to control the size of the response of a `LIST` request, items can be paginated. A `LIST` request is a request for every one of a certain resources, for instance all payments of a certain monetary account `GET /v1/user/1/monetary-account/1/payment`). You can decide on the maximum amount of items of a response by adding a `count` query parameter with the number of items you want per page to the URL. For instance:\n\n`GET /v1/user/1/monetary-account/1/payment?count=25`\n\nWhen no `count` is given, the default count is set to 10. The maximum `count` you can set is 200.\n\nWith every listing, a `Pagination` object will be added to the response, containing the URLs to be used to get the next or previous set of items. The URLs in the Pagination object can be used to navigate through the listed resources. The Pagination object looks like this given a count of 25:\n\n```json\n{\n    \"Pagination\": {\n        \"future_url\": null,\n        \"newer_url\": \"/v1/user/1/monetary-account/1/payment?count=25&newer_id=249\",\n        \"older_url\": \"/v1/user/1/monetary-account/1/payment?count=25&older_id=224\"\n    }\n}\n```\n\nThe `newer_url` value can be used to get the next page. The `newer_id` is always the ID of the last item in the current page. If `newer_url` is `null`, there are no more recent items before the current page.\n\nThe `older_url` value can be used to get the previous page. The `older_id` is always the ID of the first item in the current page. If `older_url` is `null`, there are no older items after the current page.\n\nThe `future_url` can be used to refresh and check for newer items that didn't exist when the listing was requested. The `newer_id` will always be the ID of the last item in the current page. `future_url` will be `null` if `newer_id` is not also the ID of the latest item.\n\n# <span id=\"topic-sandbox\">Sandbox</span>\n*The sandbox base URL is https://public-api.sandbox.bunq.com/v1/*\n\nWe do not use real money and do not allow external transactions in the sandbox environment. \n\n## Sandbox user accounts\nYou need to create a sandbox user to test the bunq API. The easiest way to do it is by using [our developer portal](https://developer.bunq.com/):\n1. Log in using your bunq account or [create a free developer account](https://developer.bunq.com/portal/signup) with sandbox-only access.\n1. Go to Sandbox Users.\n1. Generate up to 5 users.\n1. Use the sandbox API key to create an API context and/or use the user credentials to log in to the [sandbox bunq app](https://doc.bunq.com/#/android-emulator).\n\n### Alternative ways to generate sandbox API keys\nThere are 3 other ways you can generate a bunq sandbox API key:\n* connect to [Tinker](https://lexy.gitbook.io/bunq/quickstart/tinker) *(it will also return login credentials for the sandbox app)*;\n* create it in the [sandbox app](https://doc.bunq.com/#/android-emulator) *(you need to be logged in as a sandbox user)*;\n* call the sandbox user endpoints directly, using [our Postman collection](https://github.com/bunq/postman), or by running a cURL command (change `sandbox-user-person` to `sandbox-user-company` to generate a business user):\n\n```\ncurl https://public-api.sandbox.bunq.com/v1/sandbox-user-person -X POST --header \"Content-Type: application/json\" --header \"Cache-Control: none\" --header \"User-Agent: curl-request\" --header \"X-Bunq-Client-Request-Id: $(date)randomId\" --header \"X-Bunq-Language: nl_NL\" --header \"X-Bunq-Region: nl_NL\" --header \"X-Bunq-Geolocation: 0 0 0 0 000\"\n```\n\n⚠️ **NOTE:** An API key can only be assigned to an IP within 1 hour after its creation. After the 1 hour, it will become invalid if not assigned. API keys that are created via the sandbox app are wiped with each sandbox reset.\n\nOnce you have a sandbox API key, create more sandbox users to use as test customer accounts, and start playing with the API. \n\nThe sandbox base URL is https://public-api.sandbox.bunq.com/v1/.\n\n## Sandbox money\nWithout money, it's not always sunny in the sandbox world. Fortunately, getting money on the bunq sandbox is easy. All you need to do is ask Sugar Daddy for it.\n\nSend a `POST v1/request-inquiry` request passing sugardaddy@bunq.com  in the counterparty_alias field. Specify the type for the alias and set the `allow_bunqme` field. Request up to €500 at a time.\n```\n{\n    \"amount_inquired\": {\n        \"value\": \"100\",\n        \"currency\": \"EUR\"\n    },\n    \"counterparty_alias\": {\n        \"type\": \"EMAIL\",\n        \"value\": \"sugardaddy@bunq.com\",\n        \"name\": \"Sugar Daddy\"\n    },\n    \"description\": \"You're the best!\",\n    \"allow_bunqme\": false\n}\n```\n\n# <span id=\"topic-android-emulator\">Android Emulator</span>\n\nIn case you do not own an Android device on which you can run our Sandbox app for end-to-end testing, you can set up an emulator to run the bunq Sandbox app for Android.\n\n## Things you will need\n\n- The [bunq Sandbox App APK](https://appstore.bunq.com/api/android/builds/bunq-android-sandbox-master.apk) that's optimised for emulating;\n- [Android Studio](https://developer.android.com/studio/index.html).\n\n## Starting the Android Virtual Device (AVD) Manager\n\n1. Open Android Studio.\n2. From the top menu, select “Tools” > \"Android\" > \"AVD Manager\".\n\n## Setting up a new virtual device\n\n1. Start the wizard by clicking on \"+ Create Virtual Device\".\n2. Select a device (recommendation: \"Pixel 5.0\" or \"Nexus 6\") and press \"Next\".\n3. Select an x86 system image (recommendation: Nougat, API Level 25, Android 7.1.1 with Google APIs) and press \"Next\". The image needs to have Google Play Services 10.0.1 or higher.\n4. In the bottom left corner, select \"Show Advanced Settings\".\n5. Scroll to \"Memory and Storage\".\n6. Change \"Internal Storage\" to \"2048 MB\".\n7. Change \"SD card\" to \"200 MB\".\n8. Press \"Finish\".\n\n## Starting the virtual device\n\n1. On the right side under \"Actions\", select the green \"Play\" button.\n2. Wait for the device to boot, this may take a few minutes.\n\n## Installing the bunq Sandbox App APK\n\n1. Open the command line.\n2. Navigate to your Android SDK platform tools directory (e.g. `cd ~/Library/Android/sdk/platform-tools` on macOS).\n3. Make sure that the virtual device is started and has fully booted.\n4. Run `./adb install ~/Downloads/bunq-android-sandboxEmulator-public-api.apk`, this may take a few minutes, and should finish with \"Success\".\n\n## Creating an account or logging in\n\n1. Create a sandbox account in the [developer portal](https://developer.bunq.com/).\n1. Log in to the sandbox app using the sandbox user credentials.\n\nℹ️ *You will be asked to verify your phone number when you open the app for the first time. Sandbox does not send actual SMS messages. Enter any valid phone number and use the default verification code `992266`*. \n\nIf you couldn't generate a sandbox account in the developer portal, use Tinker:\n1. Install [Tinker](https://beta.doc.bunq.com/quickstart/tinker).\n1. Run `tinker/user-overview` to create a sandbox account. The output of the command will include the login credentials for the sandbox account.\n\n⚠️ **NOTE:** It is **not** possible to create accounts using the regular signup in the app, bunq is not reviewing Sandbox applications.\n\n# <span id=\"topic-moving-to-production\">Moving to Production</span>\n\nHave you tested your bunq integration to the fullest and are you now ready to introduce it to the world? Then the time has come to move it to a production environment!\n\nTo get started you'll need some fresh API keys for the production environment, which you can create via your bunq app. You can create these under \"Profile\" by tapping the \"Security\" menu. We do, however, highly recommend using a standard API Key instead of a Wildcard API Key. The former is significantly safer and it protects you from intrusions and possible attacks.\n\nThere's only a few things to do before your beautiful bunq creation can be moved to production. You're going to have to change your API Key and redo the sequence of calls to open a session.\n\nThe bunq Public API production environment is hosted at `https://api.bunq.com`.\n\nDo you have any questions or remarks about the process, or do you simply want to show off with your awesome creations? Don't hesitate to drop us a line on [together.bunq.com](https://together.bunq.com).\n\nPlease be aware that if you will gain access to account information of other bunq users or initiate a payment for them, you  maybrequire a PSD2 permit.\n\n# <span id=\"topic-quickstart-opening-a-session\">Quickstart: Opening a Session</span>\n\n## <span id=\"topic-quickstart-opening-a-session-goal\">Goal</span>\n\nSo, you want to start using the bunq API, awesome! To do this, you have to open a session in which you will be making those calls.\n\n## <span id=\"topic-quickstart-opening-a-session-getting-an-api-key\">Getting an API key</span>\n\nTo connect to the API, you have to make sure you have received an API key. \n\n**For production:**\n1. create an app in the [developer portal](http://developer.bunq.com/), or\n1. generate it in the bunq app *(Profile → Security & Settings → Developers → API keys)*.\n\n**For sandbox**\nYou can use one of the following ways:\n- create a sandbox user in the [developer portal](http://developer.bunq.com/);\n- generate an API key in the [sandbox app](#android-emulator) *(Profile → Security & Settings → Developers → API keys)*;\n- get an API key from [Tinker](https://beta.doc.bunq.com/quickstart/tinker);\n- run a cURL request: `curl https://public-api.sandbox.bunq.com/v1/sandbox-user-person -X POST --header \"Content-Type: application/json\" --header \"Cache-Control: none\" --header \"User-Agent: curl-request\" --header \"X-Bunq-Client-Request-Id: $(date)randomId\" --header \"X-Bunq-Language: nl_NL\" --header \"X-Bunq-Region: nl_NL\" --header \"X-Bunq-Geolocation: 0 0 0 0 000\"`. Use `sandbox-user-company` to generate a business user.\n\nNote that production API key is only usable on production and sandbox key is only usable on sandbox. Sandbox key has a `sandbox_` prefix while production key does not have any noticeable prefixes.\n\n## <span id=\"topic-quickstart-opening-a-session-call-sequence\">Call sequence</span>\n\nThe calls you need to perform to set up a session from scratch are the following:\n\n### <span id=\"topic-quickstart-opening-a-session-call-sequence-post-installation\">1. POST installation</span>\n\nEach call needs to be signed with your own private key. An Installation is used to tell the server about the public key of your key pair. The server uses this key to verify your subsequent calls.\n\nStart by generating a 2048-bit RSA key pair. You can find examples by looking at the source code of the sdk's located at github.\n\n#### Headers\n\nOn the headers page you can find out about the mandatory headers. Take care that if you are in the sandbox environment, you set an `Authorization` header. Specific to the `POST /installation` call, you shouldn't use the `X-Bunq-Client-Authentication` or the `X-Bunq-Client-Signature` headers.\n\n#### Body\n\nPost your public key to the Installation endpoint (use `\\n` for newlines in your public key).\n\n#### Response\n\nSave the Installation token and the bunq API's public key from the response. This token is used in the `Authentication` header to register a `DeviceServer` and to start a `SessionServer`. The bunq API's public key should be used to verify future responses received from the bunq API.\n\n### <span id=\"topic-quickstart-opening-a-session-call-sequence-post-device-server\">2. POST device-server</span>\n\nFurther calls made to the server need to come from a registered device. `POST /device-server` registers your current device and the IP address(es) it uses to connect to the bunq API.\n\n#### Headers\n\nUse the token you received from `POST /installation` in the `X-Bunq-Client-Authentication` header. Make sure you sign your call, passing the call signature in `X-Bunq-Client-Signature` header.\n\n#### Body\n\nFor the secret, use the API key you received. If you want to create another API key, you can do so in the bunq sandbox app (or production app for the production environment). Login, go to Profile > Security and tap 'API keys'. The freshly created API key can be assigned to one or multiple IP addresses using `POST device-server` within 4 hours before becoming invalid. As soon as you start using your API key, it will remain valid until the next sandbox reset.   For the secret, use the API key you received.\n\n### <span id=\"topic-quickstart-opening-a-session-call-sequence-post-session-server\">3. POST session-server</span>\n\nTo make any calls besides `installation` and `device-server`, you need to open a session.\n\n#### Headers\n\nUse the token you received from `POST /installation` in the `X-Bunq-Client-Authentication` header. Make sure you sign your call, passing the call signature in `X-Bunq-Client-Signature` header.\n\n#### Body\n\nFor the secret, use the API key you received.\n\n#### Response\n\nThe token received in the response to `POST /session-server` should be used to authenticate your calls in this session. Pass this session's token in the `X-Bunq-Client-Authentication` header on every call you make in this session.\n\n# <span id=\"topic-quickstart-payment-request\">Quickstart: Payment Request</span>\n\n## <span id=\"topic-quickstart-payment-request-goal\">Goal</span>\n\nYou want to offer bunq payments on a website or in an application.\n\n## <span id=\"topic-quickstart-payment-request-scenario\">Scenario</span>\n\nIn this use case the consumer and the merchant both have a bunq account. The consumer wants to pay with bunq and enters their alias in the bunq payment field at checkout. The merchant sends the request for payment to the consumer when the consumer presses enter. The consumer agrees to the request in the bunq mobile app and the merchant has immediate confirmation of the payment. Please be aware that if you will gain access to account information of other bunq users or initiate a payment for them, you require a PSD2 permit.\n\n## <span id=\"topic-quickstart-payment-request-before-you-start\">Before you start</span>\n\nMake sure that you have opened a session and that for any call you make after that, you pass the session’s token in the X-Bunq-Client-Authentication header.\n\n## <span id=\"topic-quickstart-payment-request-call-sequence\">Call Sequence</span>\n\nThe consumer is at checkout and selects the bunq payment method. This would be a logical time to open a session on the bunq server.\n\n### <span id=\"topic-quickstart-payment-request-call-sequence-list-monetary-account\">1. LIST monetary-account</span>\n\nWhen a request for payment is accepted, the money will be deposited on the bank account the request for payment is connected to. Let’s start by finding all your available bank accounts. Pick one of them to make the request for payment with and save its `id`.\n\n### <span id=\"topic-quickstart-payment-request-call-sequence-post-monetary-account-attachment\">2. POST monetary-account attachment (optional)</span>\n\nOptionally, you can attach an image to the request for payment.\n\n#### Headers\nMake sure you set the `Content-Type` header to match the MIME type of the image. It’s also required you pass a description of the image via the `X-Bunq-Attachment-Description` header.\n\n#### Body\nThe payload of this request is the binary representation of the image file. Do not use any JSON formatting.\n\n#### Response\nSave the `id` of the posted attachment. You’ll need it to attach it to the request for payment.\n\n### <span id=\"topic-quickstart-payment-request-call-sequence-post-request-inquiry\">3. POST request-inquiry</span>\n\nNext, create a request inquiry. A request inquiry is the request for payment that your customer can respond to by accepting or rejecting it.\n\n#### Body\n\nPass the customer’s email address, phone number or IBAN in the `counterparty_alias`. Make sure you set the correct `type` for the alias, depending on what you pass. When providing an IBAN, a name of the `counterparty_alias` is required. You can provide the `id` of the created attachment.\n\n#### Response\n\nYou will receive the `id` of the created request inquiry in the response. Save this `id`. You will need it to check if the customer has responded to the request yet.\n\n### <span id=\"topic-quickstart-payment-request-call-sequence-get-request-inquiry\">4. GET request-inquiry</span>\n\nAfter you’ve sent the request for payment, its status can be checked.\n\n#### Response\n\nWhen the `status` is `ACCEPTED`, the customer has accepted and paid the request, and you will have received the money on the connected monetary account. If the `status` is `REJECTED`, the customer did not accept the request.\n\n# <span id=\"topic-quickstart-create-a-tab-payment\">Quickstart: Create a Tab payment</span>\n\n## <span id=\"topic-quickstart-create-a-tab-payment-goal\">Goal</span>\n\nYou will create a tab that can be paid once by a single user, a so called TagUsageSingle, and explore three different ways to make the Tab visible to your customers:\n\n- QR code from the CashRegister\n- QR code from the Tab.\n\n## <span id=\"topic-quickstart-create-a-tab-payment-before-you-start\">Before you start</span>\n\nMake sure that you have opened a session and that for any call you make after that, you pass the session’s token in the `X-Bunq-Client-Authentication` header.\n\n## <span id=\"topic-quickstart-create-a-tab-payment-call-sequence\">Call sequence</span>\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-attachment-public\">1. POST attachment-public</span>\n\nStart by creating an attachment that will be used for the avatar for the cash register.\n\n#### Header\n\nMake sure you set the `Content-Type` header to match the MIME type of the image. It is also required you pass a description of the image via the `X-Bunq-Attachment-Description` header.\n\n#### Body\n\nThe payload of this request is the binary representation of the image file. Do not use any JSON formatting.\n\n#### Response\n\nSave the `uuid` of the posted attachment. You'll need it to create the avatar in the next step.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-avatar\">2. POST avatar</span>\n\nMake an avatar using the public attachment you've just created.\n\n#### Body\n\nThe payload of this request is the `uuid` of the attachment public.\n\n#### Response\n\nIn response, you’ll receive the UUID of the avatar created using the attachment. Save this UUID. You’ll use it as the avatar for the cash register you're about to create.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-list-monetary-account\">3. LIST monetary-account</span>\n\nGet a listing of all available monetary accounts. Choose one, and save the id of the monetary account you want your cash register to be connected to. Each paid tab for the cash register will transfer the money to this account.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-cash-register\">4a. POST cash-register</span>\n\nCreate a cash register. Use the `id` of the monetary account you want to connect the cash register to in the URL of the request.\n\n#### Body\n\nIn the body provide the `uuid` of the avatar you created for this cash register. Also make sure to provide a unique name for your cash register. Set the status to `PENDING_APPROVAL`.\n\n#### Response\n\nThe response contains the `id` of the cash register you created. Save this `id`. You will need it to create subsequent tabs and tab items.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-wait-for-approval\">4b. Wait for approval</span>\n\nOn the production environment, a bunq admin will review and approve your cash register. In the sandbox environment, your cash register will be automatically approved.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-tab-usage-single\">5. POST tab-usage-single</span>\n\nCreate a new tab that is connected to your cash register. Use the id of the cash register you want to connect this tab to in the URL of your request.\n\n#### Body\n\nGive the tab a name in `merchant_reference`. Create the tab with status `OPEN`, and give the tab a starting amount. You can update this amount later.\n\n#### Response\n\nThe response contains the uuid of the tab you created.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-tab-item\">6. POST tab-item (optional)</span>\n\nYou can add items to a tab. For instance, if a customer will be paying for multiple products via this tab, you can decide to add an item for each of these. Adding items to a tab is optional, and adding them will not change the total amount of the tab itself. However, if you've added any tab items the sum of the amounts of these items must be equal to the `total_amount` of the tab when you change its status to `WAITING_FOR_PAYMENT`.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-put-tab-usage-single\">7. PUT tab-usage-single</span>\n\nUpdate the status of the tab to `WAITING_FOR_PAYMENT` if you want the costumer to pay the tab, and you're done adding any tab items. You can use this request to make the tab visible for your costumers.\n\n#### Visibility\n\nTo decide how you are going to make your tab visible, pass a visibility object in the payload.\n\nSetting `cash_register_qr_code` to true will connect this tab to the QR code from the cash register. If this cash register does not have a QR code yet, one will be created. Only one Tab can be connected to the cash register’s QR code at any given time.\n\nSetting `tab_qr_code` to true will create a QR code specifically for this tab. This QR code can not be linked to anything else.\n\n# <span id=\"topic-quickstart-transwerwise-payment\">Quickstart: Create a TransferWise payment</span>\n\n## Goal\n\nYou want to send a payment in currency other than euro outside the SEPA zone.\n\n## Before you start\n\nMake sure that you have opened a session and that for any call you make after that, you pass the session’s token in the `X-Bunq-Client-Authentication` header.\n\nℹ️ *bunq relies on TransferWise for international, so you need to create a TransferWise account linked to a bunq account to be able to create international transfers. You can do it either from the bunq app or using our API as described below.*\n\n## Get the up-to-date exchange rate (optional)\n\nYou might want to check the latest currency exchange rate before making a transfer. Here’s how you can do it using the bunq API:\n1. Check the list of supported currencies via `GET /user/{userID}/transferwise-currency`. Copy the needed currency code.\n2. Create a temporary quote for the currency of your choice via `POST /user/{userID}/transferwise-quote-temporary`.\n\nℹ️ *A quote is the exchange rate at the exact timestamp. Temporary quotes carry solely informative value and cannot be used for creating a transfer.*\n\n3. Read the temporary quote via `GET /user/{userID}/transferwise-quote-temporary/{transferwise-quote-temporaryID}`.\n\n## Create a TransferWise account\n\nYou need a TransferWise account linked to your bunq account to make TransferWise payments via the bunq API. Create one via `POST /user/{userID}/transferwise-user`, and save its ID. \n\nℹ️ *You cannot use an existing TransferWise account.*\n\n## Create a quote\n\n1. Create a quote via POST /user/{userID}/transferwise-quote and save its ID. \n\nℹ️ *Use amount_target to indicate the sum the recipient must get. Amount_source, on the other hand, will indicate the sum you want to send, but it will not necessarily be the final sum the recipient gets.*\n\nℹ️ *Quotes are valid for 30 minutes so if you do not manage to create a transfer within this time, you will need to create another quote.*\n\n2. Get the exchange rate by reading the quote via GET /user/{userID}/transferwise-quote/(transferwise-quoteID).\n\n## Create a recipient\n\nIf you have sent money via the TransferWise account linked to your bunq account, you can reuse the recipients. You can list their IDs via `GET /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient`.\n\nTo create a new, previously unused recipient, follow these steps:\n1. Retrieve the fields required for creating the recipient as the requirements vary for the type of recipient in each country. Iterate sending the following request pair till there are no more required fields:\n- `GET /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient-requirement`\n- `POST /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient-requirement`\n2. Create a recipient account using the final request body from the previous step with `POST /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient-requirement`\n\n## Create a transfer\n\nFinally, having both the quote ID and the recipient ID, you can create a transfer. 🎉\n\n1. Check if there are any additional transfer requirements via `POST /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-transfer-requirement`.\n2. Create a transfer via `POST /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-transfer`. You need to specify the ID of the monetary account from which you want the payment to be made.\n\n# <span id=\"topic-quickstart-attachments\">Quickstart: Downloading attachments</span>\n\n## Goal\nExport receipts and invoices attached to payments to your application.\n\n## The scenario you want to achieve\n0. The bunq user has accepted the authorization request and your application can read the bunq user’s account information.\n1. Your application imports all the transactions and attachments.\n2. The bunq user sees the transactions matched with the receipts and invoices in your application.\n\n## Before you start\n* Make sure that you have opened a session\n* Make sure you pass the session Token in the X-Bunq-Client-Authentication header in all the following requests of the session.\n\n## Call sequence\n1. List the payments of the user via GET /user/{userID}/monetary-account/{monetary-accountID}/payment.\n2. Check if the payments have attachments via GET /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment. Save the attachment IDs.\n3. Export the raw content of the attachments via GET /user/{userID}/attachment/{attachmentID}/content.\n\n***HINT:** You can use [callbacks](https://doc.bunq.com/#/callbacks) to make sure you don’t miss anything happening on the bunq account.*\n",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "http://bunq.com/terms-api/",
    "title": "bunq API",
    "version": "1.0",
    "x-apisguru-categories": [
      "financial"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_bunq_profile_image.jpeg"
    },
    "x-origin": [
      {
        "converter": {
          "url": "https://github.com/lucybot/api-spec-converter",
          "version": "2.7.31"
        },
        "format": "openapi",
        "url": "https://raw.githubusercontent.com/bunq/doc/master/swagger.json",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "bunq.com",
    "x-datafire": {
      "name": "bunq",
      "type": "openapi"
    }
  },
  "host": "public-api.sandbox.bunq.com",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/attachment-public": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachmentPublic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This call is used to upload an attachment that can be referenced to as an avatar (through the Avatar endpoint) or in a tab sent. Attachments supported are png, jpg and gif.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AttachmentPublicCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "attachment-public"
        ],
        "description": "Create a new public attachment. Create a POST request with a payload that contains a binary representation of the file, without any JSON wrapping. Make sure you define the MIME type (i.e. image/jpeg, or image/png) in the Content-Type header. You are required to provide a description of the attachment using the X-Bunq-Attachment-Description header.",
        "operationId": "CREATE_AttachmentPublic",
        "summary": ""
      }
    },
    "/attachment-public/{attachment-publicUUID}/content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "attachment-publicUUID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch the raw content of a public attachment with given ID. The raw content is the binary representation of a file, without any JSON wrapping.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/AttachmentPublicContentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Get the raw content of a specific attachment.",
        "operationId": "List_all_Content_for_AttachmentPublic",
        "summary": ""
      }
    },
    "/attachment-public/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This call is used to upload an attachment that can be referenced to as an avatar (through the Avatar endpoint) or in a tab sent. Attachments supported are png, jpg and gif.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AttachmentPublicRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "attachment-public"
        ],
        "description": "Get a specific attachment's metadata through its UUID. The Content-Type header of the response will describe the MIME type of the attachment file.",
        "operationId": "READ_AttachmentPublic",
        "summary": ""
      }
    },
    "/avatar": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Avatars are public images used to represent you or your company. Avatars are used to represent users, monetary accounts and cash registers. Avatars cannot be deleted, only replaced. Avatars can be updated after uploading the image you would like to use through AttachmentPublic. Using the attachment_public_uuid which is returned you can update your Avatar. Avatars used for cash registers and company accounts will be reviewed by bunq.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AvatarCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "avatar"
        ],
        "description": "Avatars are public images used to represent you or your company. Avatars are used to represent users, monetary accounts and cash registers. Avatars cannot be deleted, only replaced. Avatars can be updated after uploading the image you would like to use through AttachmentPublic. Using the attachment_public_uuid which is returned you can update your Avatar. Avatars used for cash registers and company accounts will be reviewed by bunq.",
        "operationId": "CREATE_Avatar",
        "summary": ""
      }
    },
    "/avatar/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Avatars are public images used to represent you or your company. Avatars are used to represent users, monetary accounts and cash registers. Avatars cannot be deleted, only replaced. Avatars can be updated after uploading the image you would like to use through AttachmentPublic. Using the attachment_public_uuid which is returned you can update your Avatar. Avatars used for cash registers and company accounts will be reviewed by bunq.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AvatarRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "avatar"
        ],
        "description": "Avatars are public images used to represent you or your company. Avatars are used to represent users, monetary accounts and cash registers. Avatars cannot be deleted, only replaced. Avatars can be updated after uploading the image you would like to use through AttachmentPublic. Using the attachment_public_uuid which is returned you can update your Avatar. Avatars used for cash registers and company accounts will be reviewed by bunq.",
        "operationId": "READ_Avatar",
        "summary": ""
      }
    },
    "/device": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to get a Device or a listing of Devices. Creating a DeviceServer should happen via /device-server",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/DeviceListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "device"
        ],
        "description": "Get a collection of Devices. A Device is either a DevicePhone or a DeviceServer.",
        "operationId": "List_all_Device",
        "summary": ""
      }
    },
    "/device-server": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "After having created an Installation you can now create a DeviceServer. A DeviceServer is needed to do a login call with session-server.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/DeviceServerListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "device-server"
        ],
        "description": "Get a collection of all the DeviceServers you have created.",
        "operationId": "List_all_DeviceServer",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceServer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "After having created an Installation you can now create a DeviceServer. A DeviceServer is needed to do a login call with session-server.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DeviceServerCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "device-server"
        ],
        "description": "Create a new DeviceServer providing the installation token in the header and signing the request with the private part of the key you used to create the installation. The API Key that you are using will be bound to the IP address of the DeviceServer which you have created.<br/><br/>Using a Wildcard API Key gives you the freedom to make API calls even if the IP address has changed after the POST device-server.<br/><br/>Find out more at this link <a href=\"https:/bunq.com/en/apikey-dynamic-ip\" target=\"_blank\">https:/bunq.com/en/apikey-dynamic-ip</a>.",
        "operationId": "CREATE_DeviceServer",
        "summary": ""
      }
    },
    "/device-server/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "After having created an Installation you can now create a DeviceServer. A DeviceServer is needed to do a login call with session-server.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DeviceServerRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "device-server"
        ],
        "description": "Get one of your DeviceServers.",
        "operationId": "READ_DeviceServer",
        "summary": ""
      }
    },
    "/device/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to get a Device or a listing of Devices. Creating a DeviceServer should happen via /device-server",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DeviceRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "device"
        ],
        "description": "Get a single Device. A Device is either a DevicePhone or a DeviceServer.",
        "operationId": "READ_Device",
        "summary": ""
      }
    },
    "/installation": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Installation is used to tell the server about the public key of your key pair. The server uses this key to verify your subsequent calls, which need to be signed with your own private key. Additionally, you can use the token you get from an Installation to authenticate the registration of a new device.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/InstallationListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "installation"
        ],
        "description": "You must have an active session to make this call. This call returns the Id of the the Installation you are using in your session.",
        "operationId": "List_all_Installation",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Installation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Installation is used to tell the server about the public key of your key pair. The server uses this key to verify your subsequent calls, which need to be signed with your own private key. Additionally, you can use the token you get from an Installation to authenticate the registration of a new device.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InstallationCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "installation"
        ],
        "description": "This is the only API call that does not require you to use the \"X-Bunq-Client-Authentication\" and \"X-Bunq-Client-Signature\" headers.\n You provide the server with the public part of the key pair that you are going to use to create the value of the signature header for all future API calls. The server creates an installation for you. Store the Installation Token and ServerPublicKey from the response. This token is used in the \"X-Bunq-Client-Authentication\" header for the creation of a DeviceServer and SessionServer.",
        "operationId": "CREATE_Installation",
        "summary": ""
      }
    },
    "/installation/{installationID}/server-public-key": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "installationID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Using /installation/_/server-public-key you can request the ServerPublicKey again. This is done by referring to the id of the Installation.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/InstallationServerPublicKeyListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "server-public-key"
        ],
        "description": "Show the ServerPublicKey for this Installation.",
        "operationId": "List_all_ServerPublicKey_for_Installation",
        "summary": ""
      }
    },
    "/installation/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Installation is used to tell the server about the public key of your key pair. The server uses this key to verify your subsequent calls, which need to be signed with your own private key. Additionally, you can use the token you get from an Installation to authenticate the registration of a new device.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InstallationRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "installation"
        ],
        "description": "You must have an active session to make this call. This call is used to check whether the Id you provide is the Id of your current installation or not.",
        "operationId": "READ_Installation",
        "summary": ""
      }
    },
    "/payment-service-provider-credential": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentServiceProviderCredential"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Register a Payment Service Provider and provide credentials",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentServiceProviderCredentialCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-service-provider-credential"
        ],
        "description": "Register a Payment Service Provider and provide credentials",
        "operationId": "CREATE_PaymentServiceProviderCredential",
        "summary": ""
      }
    },
    "/payment-service-provider-credential/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Register a Payment Service Provider and provide credentials",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentServiceProviderCredentialRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-service-provider-credential"
        ],
        "description": "Register a Payment Service Provider and provide credentials",
        "operationId": "READ_PaymentServiceProviderCredential",
        "summary": ""
      }
    },
    "/sandbox-user-company": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SandboxUserCompany"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create a sandbox userCompany.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SandboxUserCompanyCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "sandbox-user-company"
        ],
        "description": "Used to create a sandbox userCompany.",
        "operationId": "CREATE_SandboxUserCompany",
        "summary": ""
      }
    },
    "/sandbox-user-person": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SandboxUserPerson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create a sandbox userPerson.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SandboxUserPersonCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "sandbox-user-person"
        ],
        "description": "Used to create a sandbox userPerson.",
        "operationId": "CREATE_SandboxUserPerson",
        "summary": ""
      }
    },
    "/session-server": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionServer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Once you have created an Installation and a DeviceServer with that Installation, then you are ready to start a session! A session expires after the same amount of time you have set for Auto Logout in your user account. By default this is 1 week. If a request is made 30 seconds before a session expires, it will be extended from that moment by your auto logout time, but never by more than 5 minutes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SessionServerCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "session-server"
        ],
        "description": "Create a new session for a DeviceServer. Provide the Installation token in the \"X-Bunq-Client-Authentication\" header. And don't forget to create the \"X-Bunq-Client-Signature\" header. The response contains a Session token that should be used for as the \"X-Bunq-Client-Authentication\" header for all future API calls. The ip address making this call needs to match the ip address bound to your API key.",
        "operationId": "CREATE_SessionServer",
        "summary": ""
      }
    },
    "/session/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for operations over the current session.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SessionDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "session"
        ],
        "description": "Deletes the current session.",
        "operationId": "DELETE_Session",
        "summary": ""
      }
    },
    "/tab/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to read a single publicly visible tab.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab"
        ],
        "description": "Get a publicly visible tab.",
        "operationId": "READ_Tab",
        "summary": ""
      }
    },
    "/tab/{tabUUID}/attachment/{attachmentID}/content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "tabUUID",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "attachmentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch the raw content of a tab attachment with given ID. The raw content is the binary representation of a file, without any JSON wrapping.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TabAttachmentTabContentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Get the raw content of a specific attachment.",
        "operationId": "List_all_Content_for_Tab_Attachment",
        "summary": ""
      }
    },
    "/tab/{tabUUID}/attachment/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "tabUUID",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This call is used to view an attachment that is linked to a tab.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabAttachmentTabRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "attachment"
        ],
        "description": "Get a specific attachment. The header of the response contains the content-type of the attachment.",
        "operationId": "READ_Attachment_for_Tab",
        "summary": ""
      }
    },
    "/user": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Using this call you can retrieve information of the user you are logged in as. This includes your user id, which is referred to in endpoints.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/UserListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "user"
        ],
        "description": "Get a collection of all available users.",
        "operationId": "List_all_User",
        "summary": ""
      }
    },
    "/user-company/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "With UserCompany you can retrieve information regarding the authenticated UserCompany and update specific fields.<br/><br/>Notification filters can be set on a UserCompany level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UserCompanyRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "user-company"
        ],
        "description": "Get a specific company.",
        "operationId": "READ_UserCompany",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCompany"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "With UserCompany you can retrieve information regarding the authenticated UserCompany and update specific fields.<br/><br/>Notification filters can be set on a UserCompany level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UserCompanyUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "user-company"
        ],
        "description": "Modify a specific company's data.",
        "operationId": "UPDATE_UserCompany",
        "summary": ""
      }
    },
    "/user-company/{user-companyID}/name": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "user-companyID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for getting all the known (trade) names for a user company. This is needed for updating the user name, as we only accept legal or trade names.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/UserCompanyNameListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "name"
        ],
        "description": "Return all the known (trade) names for a specific user company.",
        "operationId": "List_all_Name_for_UserCompany",
        "summary": ""
      }
    },
    "/user-payment-service-provider/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view UserPaymentServiceProvider for session creation.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UserPaymentServiceProviderRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "user-payment-service-provider"
        ],
        "description": "Used to view UserPaymentServiceProvider for session creation.",
        "operationId": "READ_UserPaymentServiceProvider",
        "summary": ""
      }
    },
    "/user-person/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "With UserPerson you can retrieve information regarding the authenticated UserPerson and update specific fields.<br/><br/>Notification filters can be set on a UserPerson level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UserPersonRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "user-person"
        ],
        "description": "Get a specific person.",
        "operationId": "READ_UserPerson",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserPerson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "With UserPerson you can retrieve information regarding the authenticated UserPerson and update specific fields.<br/><br/>Notification filters can be set on a UserPerson level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UserPersonUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "user-person"
        ],
        "description": "Modify a specific person object's data.",
        "operationId": "UPDATE_UserPerson",
        "summary": ""
      }
    },
    "/user/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Using this call you can retrieve information of the user you are logged in as. This includes your user id, which is referred to in endpoints.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UserRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "user"
        ],
        "description": "Get a specific user.",
        "operationId": "READ_User",
        "summary": ""
      }
    },
    "/user/{userID}/attachment/{attachmentID}/content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "attachmentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch the raw content of a user attachment with given ID. The raw content is the binary representation of a file, without any JSON wrapping.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/AttachmentUserContentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Get the raw content of a specific attachment.",
        "operationId": "List_all_Content_for_User_Attachment",
        "summary": ""
      }
    },
    "/user/{userID}/attachment/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This call is used to upload an attachment that is accessible only by a specific user. This can be used for example to upload passport scans or other documents. Attachments supported are png, jpg and gif.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AttachmentUserRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "attachment"
        ],
        "description": "Get a specific attachment. The header of the response contains the content-type of the attachment.",
        "operationId": "READ_Attachment_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/billing-contract-subscription": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Show the subscription billing contract for the authenticated user.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/BillingContractSubscriptionListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "billing-contract-subscription"
        ],
        "description": "Get all subscription billing contract for the authenticated user.",
        "operationId": "List_all_BillingContractSubscription_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/bunqme-fundraiser-profile": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "bunq.me public profile of the user.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/BunqMeFundraiserProfileUserListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "bunqme-fundraiser-profile"
        ],
        "description": "bunq.me public profile of the user.",
        "operationId": "List_all_BunqmeFundraiserProfile_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/bunqme-fundraiser-profile/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "bunq.me public profile of the user.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BunqMeFundraiserProfileUserRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "bunqme-fundraiser-profile"
        ],
        "description": "bunq.me public profile of the user.",
        "operationId": "READ_BunqmeFundraiserProfile_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/card": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for retrieving details for the cards the user has access to.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/CardListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "card"
        ],
        "description": "Return all the cards available to the user.",
        "operationId": "List_all_Card_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/card-batch": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to update multiple cards in a batch.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CardBatchCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "card-batch"
        ],
        "description": "Used to update multiple cards in a batch.",
        "operationId": "CREATE_CardBatch_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/card-credit": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardCredit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "With bunq it is possible to order credit cards that can then be connected with each one of the monetary accounts the user has access to (including connected accounts).",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CardCreditCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "card-credit"
        ],
        "description": "Create a new credit card request.",
        "operationId": "CREATE_CardCredit_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/card-debit": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardDebit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "With bunq it is possible to order debit cards that can then be connected with each one of the monetary accounts the user has access to (including connected accounts).",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CardDebitCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "card-debit"
        ],
        "description": "Create a new debit card request.",
        "operationId": "CREATE_CardDebit_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/card-name": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for getting all the accepted card names for a user. As bunq do not allow total freedom in choosing the name that is going to be printed on the card, the following formats are accepted: Name Surname, N. Surname, N Surname or Surname.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/CardNameListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "card-name"
        ],
        "description": "Return all the accepted card names for a specific user.",
        "operationId": "List_all_CardName_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/card/{cardID}/generated-cvc2": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cardID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for generating and retrieving a new CVC2 code.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/CardGeneratedCvc2Listing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "generated-cvc2"
        ],
        "description": "Get all generated CVC2 codes for a card.",
        "operationId": "List_all_GeneratedCvc2_for_User_Card",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cardID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardGeneratedCvc2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for generating and retrieving a new CVC2 code.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CardGeneratedCvc2Create"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "generated-cvc2"
        ],
        "description": "Generate a new CVC2 code for a card.",
        "operationId": "CREATE_GeneratedCvc2_for_User_Card",
        "summary": ""
      }
    },
    "/user/{userID}/card/{cardID}/generated-cvc2/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cardID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for generating and retrieving a new CVC2 code.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CardGeneratedCvc2Read"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "generated-cvc2"
        ],
        "description": "Get the details for a specific generated CVC2 code.",
        "operationId": "READ_GeneratedCvc2_for_User_Card",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cardID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardGeneratedCvc2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for generating and retrieving a new CVC2 code.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CardGeneratedCvc2Update"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "generated-cvc2"
        ],
        "description": "Endpoint for generating and retrieving a new CVC2 code.",
        "operationId": "UPDATE_GeneratedCvc2_for_User_Card",
        "summary": ""
      }
    },
    "/user/{userID}/card/{cardID}/replace": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cardID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardReplace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "It is possible to order a card replacement with the bunq API.<br/><br/>You can order up to one free card replacement per year. Additional replacement requests will be billed.<br/><br/>The card replacement will have the same expiry date and the same pricing as the old card, but it will have a new card number. You can change the description and optional the PIN through the card replacement endpoint.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CardReplaceCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "replace"
        ],
        "description": "Request a card replacement.",
        "operationId": "CREATE_Replace_for_User_Card",
        "summary": ""
      }
    },
    "/user/{userID}/card/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for retrieving details for the cards the user has access to.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CardRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "card"
        ],
        "description": "Return the details of a specific card.",
        "operationId": "READ_Card_for_User",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for retrieving details for the cards the user has access to.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CardUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "card"
        ],
        "description": "Update the card details. Allow to change pin code, status, limits, country permissions and the monetary account connected to the card. When the card has been received, it can be also activated through this endpoint.",
        "operationId": "UPDATE_Card_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/certificate-pinned": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This endpoint allow you to pin the certificate chains to your account. These certificate chains are used for SSL validation whenever a callback is initiated to one of your https callback urls.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/CertificatePinnedListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "certificate-pinned"
        ],
        "description": "List all the pinned certificate chain for the given user.",
        "operationId": "List_all_CertificatePinned_for_User",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CertificatePinned"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This endpoint allow you to pin the certificate chains to your account. These certificate chains are used for SSL validation whenever a callback is initiated to one of your https callback urls.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CertificatePinnedCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "certificate-pinned"
        ],
        "description": "Pin the certificate chain.",
        "operationId": "CREATE_CertificatePinned_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/certificate-pinned/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This endpoint allow you to pin the certificate chains to your account. These certificate chains are used for SSL validation whenever a callback is initiated to one of your https callback urls.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CertificatePinnedDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "certificate-pinned"
        ],
        "description": "Remove the pinned certificate chain with the specific ID.",
        "operationId": "DELETE_CertificatePinned_for_User",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This endpoint allow you to pin the certificate chains to your account. These certificate chains are used for SSL validation whenever a callback is initiated to one of your https callback urls.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CertificatePinnedRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "certificate-pinned"
        ],
        "description": "Get the pinned certificate chain with the specified ID.",
        "operationId": "READ_CertificatePinned_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/chat-conversation/{chat-conversationID}/attachment/{attachmentID}/content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "chat-conversationID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "attachmentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch the raw content of an attachment with given ID. The raw content is the base64 of a file, without any JSON wrapping.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/AttachmentConversationContentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Get the raw content of a specific attachment.",
        "operationId": "List_all_Content_for_User_ChatConversation_Attachment",
        "summary": ""
      }
    },
    "/user/{userID}/company": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create and manage companies.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/CompanyListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "company"
        ],
        "description": "Create and manage companies.",
        "operationId": "List_all_Company_for_User",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create and manage companies.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CompanyCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "company"
        ],
        "description": "Create and manage companies.",
        "operationId": "CREATE_Company_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/company/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create and manage companies.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CompanyRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "company"
        ],
        "description": "Create and manage companies.",
        "operationId": "READ_Company_for_User",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create and manage companies.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CompanyUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "company"
        ],
        "description": "Create and manage companies.",
        "operationId": "UPDATE_Company_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/confirmation-of-funds": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfirmationOfFunds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to confirm availability of funds on an account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ConfirmationOfFundsCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "confirmation-of-funds"
        ],
        "description": "Used to confirm availability of funds on an account.",
        "operationId": "CREATE_ConfirmationOfFunds_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/credential-password-ip": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create a credential of a user for server authentication, or delete the credential of a user for server authentication.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/UserCredentialPasswordIpListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "credential-password-ip"
        ],
        "description": "Create a credential of a user for server authentication, or delete the credential of a user for server authentication.",
        "operationId": "List_all_CredentialPasswordIp_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/credential-password-ip/{credential-password-ipID}/ip": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "credential-password-ipID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/PermittedIpListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "ip"
        ],
        "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
        "operationId": "List_all_Ip_for_User_CredentialPasswordIp",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "credential-password-ipID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermittedIp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PermittedIpCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "ip"
        ],
        "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
        "operationId": "CREATE_Ip_for_User_CredentialPasswordIp",
        "summary": ""
      }
    },
    "/user/{userID}/credential-password-ip/{credential-password-ipID}/ip/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "credential-password-ipID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PermittedIpRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "ip"
        ],
        "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
        "operationId": "READ_Ip_for_User_CredentialPasswordIp",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "credential-password-ipID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermittedIp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PermittedIpUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "ip"
        ],
        "description": "Manage the IPs which may be used for a credential of a user for server authentication.",
        "operationId": "UPDATE_Ip_for_User_CredentialPasswordIp",
        "summary": ""
      }
    },
    "/user/{userID}/credential-password-ip/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create a credential of a user for server authentication, or delete the credential of a user for server authentication.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UserCredentialPasswordIpRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "credential-password-ip"
        ],
        "description": "Create a credential of a user for server authentication, or delete the credential of a user for server authentication.",
        "operationId": "READ_CredentialPasswordIp_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/draft-share-invite-bank": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create a draft share invite for a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. The user that accepts the invite can share one of their MonetaryAccounts with the user that created the invite.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/DraftShareInviteBankListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "draft-share-invite-bank"
        ],
        "description": "Used to create a draft share invite for a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. The user that accepts the invite can share one of their MonetaryAccounts with the user that created the invite.",
        "operationId": "List_all_DraftShareInviteBank_for_User",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DraftShareInviteBank"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create a draft share invite for a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. The user that accepts the invite can share one of their MonetaryAccounts with the user that created the invite.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DraftShareInviteBankCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "draft-share-invite-bank"
        ],
        "description": "Used to create a draft share invite for a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. The user that accepts the invite can share one of their MonetaryAccounts with the user that created the invite.",
        "operationId": "CREATE_DraftShareInviteBank_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/draft-share-invite-bank/{draft-share-invite-bankID}/qr-code-content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "draft-share-invite-bankID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This call returns the raw content of the QR code that links to this draft share invite. When a bunq user scans this QR code with the bunq app the draft share invite will be shown on his/her device.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/DraftShareInviteBankQrCodeContentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "qr-code-content"
        ],
        "description": "Returns the raw content of the QR code that links to this draft share invite. The raw content is the binary representation of a file, without any JSON wrapping.",
        "operationId": "List_all_QrCodeContent_for_User_DraftShareInviteBank",
        "summary": ""
      }
    },
    "/user/{userID}/draft-share-invite-bank/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create a draft share invite for a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. The user that accepts the invite can share one of their MonetaryAccounts with the user that created the invite.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DraftShareInviteBankRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "draft-share-invite-bank"
        ],
        "description": "Get the details of a specific draft of a share invite.",
        "operationId": "READ_DraftShareInviteBank_for_User",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DraftShareInviteBank"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create a draft share invite for a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. The user that accepts the invite can share one of their MonetaryAccounts with the user that created the invite.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DraftShareInviteBankUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "draft-share-invite-bank"
        ],
        "description": "Update a draft share invite. When sending status CANCELLED it is possible to cancel the draft share invite.",
        "operationId": "UPDATE_DraftShareInviteBank_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/event": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view events. Events are automatically created and contain information about everything that happens to your bunq account. In the bunq app events are shown in your 'overview'. Examples of when events are created or modified: payment sent, payment received, request for payment received or connect invite received.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/EventListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "event"
        ],
        "description": "Get a collection of events for a given user. You can add query the parameters monetary_account_id, status and/or display_user_event to filter the response. When monetary_account_id={id,id} is provided only events that relate to these monetary account ids are returned. When status={AWAITING_REPLY/FINALIZED} is provided the response only contains events with the status AWAITING_REPLY or FINALIZED. When display_user_event={true/false} is set to false user events are excluded from the response, when not provided user events are displayed. User events are events that are not related to a monetary account (for example: connect invites).",
        "operationId": "List_all_Event_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/event/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view events. Events are automatically created and contain information about everything that happens to your bunq account. In the bunq app events are shown in your 'overview'. Examples of when events are created or modified: payment sent, payment received, request for payment received or connect invite received.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/EventRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "event"
        ],
        "description": "Get a specific event for a given user.",
        "operationId": "READ_Event_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/export-annual-overview": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create new and read existing annual overviews of all the user's monetary accounts. Once created, annual overviews can be downloaded in PDF format via the 'export-annual-overview/{id}/content' endpoint.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ExportAnnualOverviewListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "export-annual-overview"
        ],
        "description": "List all the annual overviews for a user.",
        "operationId": "List_all_ExportAnnualOverview_for_User",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportAnnualOverview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create new and read existing annual overviews of all the user's monetary accounts. Once created, annual overviews can be downloaded in PDF format via the 'export-annual-overview/{id}/content' endpoint.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ExportAnnualOverviewCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "export-annual-overview"
        ],
        "description": "Create a new annual overview for a specific year. An overview can be generated only for a past year.",
        "operationId": "CREATE_ExportAnnualOverview_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/export-annual-overview/{export-annual-overviewID}/content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "export-annual-overviewID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch the raw content of an annual overview. The annual overview is always in PDF format. Doc won't display the response of a request to get the content of an annual overview.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ExportAnnualOverviewContentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Used to retrieve the raw content of an annual overview.",
        "operationId": "List_all_Content_for_User_ExportAnnualOverview",
        "summary": ""
      }
    },
    "/user/{userID}/export-annual-overview/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create new and read existing annual overviews of all the user's monetary accounts. Once created, annual overviews can be downloaded in PDF format via the 'export-annual-overview/{id}/content' endpoint.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ExportAnnualOverviewDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "export-annual-overview"
        ],
        "description": "Used to create new and read existing annual overviews of all the user's monetary accounts. Once created, annual overviews can be downloaded in PDF format via the 'export-annual-overview/{id}/content' endpoint.",
        "operationId": "DELETE_ExportAnnualOverview_for_User",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create new and read existing annual overviews of all the user's monetary accounts. Once created, annual overviews can be downloaded in PDF format via the 'export-annual-overview/{id}/content' endpoint.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ExportAnnualOverviewRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "export-annual-overview"
        ],
        "description": "Get an annual overview for a user by its id.",
        "operationId": "READ_ExportAnnualOverview_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/feature-announcement/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "view for updating the feature display.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/FeatureAnnouncementRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "feature-announcement"
        ],
        "description": "view for updating the feature display.",
        "operationId": "READ_FeatureAnnouncement_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/insights": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to get insights about transactions between given time range.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/InsightListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "insights"
        ],
        "description": "Used to get insights about transactions between given time range.",
        "operationId": "List_all_Insights_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/insights-search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to get events based on time and insight category.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/InsightEventListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "insights-search"
        ],
        "description": "Used to get events based on time and insight category.",
        "operationId": "List_all_InsightsSearch_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/invoice": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to list bunq invoices by user.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/InvoiceByUserListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "invoice"
        ],
        "description": "Used to list bunq invoices by user.",
        "operationId": "List_all_Invoice_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/invoice/{invoiceID}/pdf-content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "invoiceID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a PDF export of an invoice.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/InvoiceExportPdfContentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "pdf-content"
        ],
        "description": "Get a PDF export of an invoice.",
        "operationId": "List_all_PdfContent_for_User_Invoice",
        "summary": ""
      }
    },
    "/user/{userID}/invoice/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to list bunq invoices by user.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InvoiceByUserRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "invoice"
        ],
        "description": "Used to list bunq invoices by user.",
        "operationId": "READ_Invoice_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/legal-name": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for getting available legal names that can be used by the user.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/UserLegalNameListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "legal-name"
        ],
        "description": "Endpoint for getting available legal names that can be used by the user.",
        "operationId": "List_all_LegalName_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/limit": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Show the limits for the authenticated user.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerLimitListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "limit"
        ],
        "description": "Get all limits for the authenticated user.",
        "operationId": "List_all_Limit_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/mastercard-action-green-aggregation": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Aggregation of how many card payments have been done with a Green Card in the current calendar month.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/MasterCardActionGreenAggregationListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "mastercard-action-green-aggregation"
        ],
        "description": "Aggregation of how many card payments have been done with a Green Card in the current calendar month.",
        "operationId": "List_all_MastercardActionGreenAggregation_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to show the MonetaryAccounts that you can access. Currently the only MonetaryAccount type is MonetaryAccountBank. See also: monetary-account-bank.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/2/page/callbacks\">dedicated callbacks page</a>.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/MonetaryAccountListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "monetary-account"
        ],
        "description": "Get a collection of all your MonetaryAccounts.",
        "operationId": "List_all_MonetaryAccount_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account-bank": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "With MonetaryAccountBank you can create a new bank account, retrieve information regarding your existing MonetaryAccountBanks and update specific fields of an existing MonetaryAccountBank. Examples of fields that can be updated are the description, the daily limit and the avatar of the account.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/MonetaryAccountBankListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "monetary-account-bank"
        ],
        "description": "Gets a listing of all MonetaryAccountBanks of a given user.",
        "operationId": "List_all_MonetaryAccountBank_for_User",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonetaryAccountBank"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "With MonetaryAccountBank you can create a new bank account, retrieve information regarding your existing MonetaryAccountBanks and update specific fields of an existing MonetaryAccountBank. Examples of fields that can be updated are the description, the daily limit and the avatar of the account.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/MonetaryAccountBankCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "monetary-account-bank"
        ],
        "description": "Create new MonetaryAccountBank.",
        "operationId": "CREATE_MonetaryAccountBank_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account-bank/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "With MonetaryAccountBank you can create a new bank account, retrieve information regarding your existing MonetaryAccountBanks and update specific fields of an existing MonetaryAccountBank. Examples of fields that can be updated are the description, the daily limit and the avatar of the account.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/MonetaryAccountBankRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "monetary-account-bank"
        ],
        "description": "Get a specific MonetaryAccountBank.",
        "operationId": "READ_MonetaryAccountBank_for_User",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonetaryAccountBank"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "With MonetaryAccountBank you can create a new bank account, retrieve information regarding your existing MonetaryAccountBanks and update specific fields of an existing MonetaryAccountBank. Examples of fields that can be updated are the description, the daily limit and the avatar of the account.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/MonetaryAccountBankUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "monetary-account-bank"
        ],
        "description": "Update a specific existing MonetaryAccountBank.",
        "operationId": "UPDATE_MonetaryAccountBank_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account-joint": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint for joint monetary accounts.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/MonetaryAccountJointListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "monetary-account-joint"
        ],
        "description": "The endpoint for joint monetary accounts.",
        "operationId": "List_all_MonetaryAccountJoint_for_User",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonetaryAccountJoint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint for joint monetary accounts.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/MonetaryAccountJointCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "monetary-account-joint"
        ],
        "description": "The endpoint for joint monetary accounts.",
        "operationId": "CREATE_MonetaryAccountJoint_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account-joint/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint for joint monetary accounts.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/MonetaryAccountJointRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "monetary-account-joint"
        ],
        "description": "The endpoint for joint monetary accounts.",
        "operationId": "READ_MonetaryAccountJoint_for_User",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonetaryAccountJoint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint for joint monetary accounts.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/MonetaryAccountJointUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "monetary-account-joint"
        ],
        "description": "The endpoint for joint monetary accounts.",
        "operationId": "UPDATE_MonetaryAccountJoint_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account-savings": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "With MonetaryAccountSavings you can create a new savings account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/MonetaryAccountSavingsListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "monetary-account-savings"
        ],
        "description": "Gets a listing of all MonetaryAccountSavingss of a given user.",
        "operationId": "List_all_MonetaryAccountSavings_for_User",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonetaryAccountSavings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "With MonetaryAccountSavings you can create a new savings account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/MonetaryAccountSavingsCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "monetary-account-savings"
        ],
        "description": "Create new MonetaryAccountSavings.",
        "operationId": "CREATE_MonetaryAccountSavings_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account-savings/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "With MonetaryAccountSavings you can create a new savings account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/MonetaryAccountSavingsRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "monetary-account-savings"
        ],
        "description": "Get a specific MonetaryAccountSavings.",
        "operationId": "READ_MonetaryAccountSavings_for_User",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonetaryAccountSavings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "With MonetaryAccountSavings you can create a new savings account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/MonetaryAccountSavingsUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "monetary-account-savings"
        ],
        "description": "Update a specific existing MonetaryAccountSavings.",
        "operationId": "UPDATE_MonetaryAccountSavings_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to show the MonetaryAccounts that you can access. Currently the only MonetaryAccount type is MonetaryAccountBank. See also: monetary-account-bank.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/2/page/callbacks\">dedicated callbacks page</a>.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/MonetaryAccountRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "monetary-account"
        ],
        "description": "Get a specific MonetaryAccount.",
        "operationId": "READ_MonetaryAccount_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/attachment": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachmentMonetaryAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This call is used to upload an attachment that can be referenced to in payment requests and payments sent from a specific monetary account. Attachments supported are png, jpg and gif.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AttachmentMonetaryAccountCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "attachment"
        ],
        "description": "Create a new monetary account attachment. Create a POST request with a payload that contains the binary representation of the file, without any JSON wrapping. Make sure you define the MIME type (i.e. image/jpeg) in the Content-Type header. You are required to provide a description of the attachment using the X-Bunq-Attachment-Description header.",
        "operationId": "CREATE_Attachment_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/attachment-tab": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachmentTab"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This call is used to upload an attachment that will be accessible only through tabs. This can be used for example to upload special promotions or other attachments. Attachments supported are png, jpg and gif.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AttachmentTabCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "attachment-tab"
        ],
        "description": "Upload a new attachment to use with a tab, and to read its metadata. Create a POST request with a payload that contains the binary representation of the file, without any JSON wrapping. Make sure you define the MIME type (i.e. image/jpeg) in the Content-Type header. You are required to provide a description of the attachment using the X-Bunq-Attachment-Description header.",
        "operationId": "CREATE_AttachmentTab_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/attachment-tab/{attachment-tabID}/content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "attachment-tabID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch the raw content of a tab attachment with given ID. The raw content is the binary representation of a file, without any JSON wrapping.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/AttachmentTabContentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Get the raw content of a specific attachment.",
        "operationId": "List_all_Content_for_User_MonetaryAccount_AttachmentTab",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/attachment-tab/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This call is used to upload an attachment that will be accessible only through tabs. This can be used for example to upload special promotions or other attachments. Attachments supported are png, jpg and gif.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AttachmentTabRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "attachment-tab"
        ],
        "description": "Get a specific attachment. The header of the response contains the content-type of the attachment.",
        "operationId": "READ_AttachmentTab_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/attachment/{attachmentID}/content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "attachmentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch the raw content of a monetary account attachment with given ID. The raw content is the binary representation of a file, without any JSON wrapping.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/AttachmentMonetaryAccountContentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Get the raw content of a specific attachment.",
        "operationId": "List_all_Content_for_User_MonetaryAccount_Attachment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-fundraiser-result/{bunqme-fundraiser-resultID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "bunqme-fundraiser-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentBunqMeFundraiserResultListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "bunqme-fundraiser-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentBunqMeFundraiserResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentBunqMeFundraiserResultCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-fundraiser-result/{bunqme-fundraiser-resultID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "bunqme-fundraiser-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentBunqMeFundraiserResultDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "bunqme-fundraiser-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentBunqMeFundraiserResultRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "bunqme-fundraiser-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentBunqMeFundraiserResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentBunqMeFundraiserResultUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-fundraiser-result/{bunqme-fundraiser-resultID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "bunqme-fundraiser-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextBunqMeFundraiserResultListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "bunqme-fundraiser-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextBunqMeFundraiserResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextBunqMeFundraiserResultCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-fundraiser-result/{bunqme-fundraiser-resultID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "bunqme-fundraiser-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextBunqMeFundraiserResultDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "bunqme-fundraiser-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextBunqMeFundraiserResultRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "bunqme-fundraiser-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextBunqMeFundraiserResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextBunqMeFundraiserResultUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-fundraiser-result/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "bunq.me fundraiser result containing all payments.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BunqMeFundraiserResultRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "bunqme-fundraiser-result"
        ],
        "description": "bunq.me fundraiser result containing all payments.",
        "operationId": "READ_BunqmeFundraiserResult_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-tab": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/BunqMeTabListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "bunqme-tab"
        ],
        "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
        "operationId": "List_all_BunqmeTab_for_User_MonetaryAccount",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BunqMeTab"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BunqMeTabCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "bunqme-tab"
        ],
        "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
        "operationId": "CREATE_BunqmeTab_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-tab-result-response/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view bunq.me TabResultResponse objects belonging to a tab. A TabResultResponse is an object that holds details on a tab which has been paid from the provided monetary account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BunqMeTabResultResponseRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "bunqme-tab-result-response"
        ],
        "description": "Used to view bunq.me TabResultResponse objects belonging to a tab. A TabResultResponse is an object that holds details on a tab which has been paid from the provided monetary account.",
        "operationId": "READ_BunqmeTabResultResponse_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-tab/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BunqMeTabRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "bunqme-tab"
        ],
        "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
        "operationId": "READ_BunqmeTab_for_User_MonetaryAccount",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BunqMeTab"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BunqMeTabUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "bunqme-tab"
        ],
        "description": "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
        "operationId": "UPDATE_BunqmeTab_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "CashRegisters are virtual points of sale. They have a specific name and avatar, and optionally, a location.<br/>With a CashRegister you can create a Tab and then use a QR code to receive payments.<br/>Check out our Quickstart example to learn how you can easily <a href=\"/api/1/page/usecase-tab-payment\">create Tab payments</a>.<br/><br/>Notification filters can be set on a CashRegister to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/CashRegisterListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "cash-register"
        ],
        "description": "Get a collection of CashRegister for a given user and monetary account.",
        "operationId": "List_all_CashRegister_for_User_MonetaryAccount",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CashRegister"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CashRegisters are virtual points of sale. They have a specific name and avatar, and optionally, a location.<br/>With a CashRegister you can create a Tab and then use a QR code to receive payments.<br/>Check out our Quickstart example to learn how you can easily <a href=\"/api/1/page/usecase-tab-payment\">create Tab payments</a>.<br/><br/>Notification filters can be set on a CashRegister to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CashRegisterCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "cash-register"
        ],
        "description": "Create a new CashRegister. Only an UserCompany can create a CashRegisters. They need to be created with status PENDING_APPROVAL, an bunq admin has to approve your CashRegister before you can use it. In the sandbox testing environment an CashRegister will be automatically approved immediately after creation.",
        "operationId": "CREATE_CashRegister_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/qr-code": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Once your CashRegister has been activated you can create a QR code for it. The visibility of a tab can be modified to be linked to this QR code. If a user of the bunq app scans this QR code, the linked tab will be shown on his device.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/CashRegisterQrCodeListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "qr-code"
        ],
        "description": "Get a collection of QR code information from a given CashRegister",
        "operationId": "List_all_QrCode_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CashRegisterQrCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Once your CashRegister has been activated you can create a QR code for it. The visibility of a tab can be modified to be linked to this QR code. If a user of the bunq app scans this QR code, the linked tab will be shown on his device.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CashRegisterQrCodeCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "qr-code"
        ],
        "description": "Create a new QR code for this CashRegister. You can only have one ACTIVE CashRegister QR code at the time.",
        "operationId": "CREATE_QrCode_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/qr-code/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Once your CashRegister has been activated you can create a QR code for it. The visibility of a tab can be modified to be linked to this QR code. If a user of the bunq app scans this QR code, the linked tab will be shown on his device.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CashRegisterQrCodeRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "qr-code"
        ],
        "description": "Get the information of a specific QR code. To get the RAW content of the QR code use ../qr-code/{id}/content",
        "operationId": "READ_QrCode_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CashRegisterQrCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Once your CashRegister has been activated you can create a QR code for it. The visibility of a tab can be modified to be linked to this QR code. If a user of the bunq app scans this QR code, the linked tab will be shown on his device.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CashRegisterQrCodeUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "qr-code"
        ],
        "description": "Modify a QR code in a given CashRegister. You can only have one ACTIVE CashRegister QR code at the time.",
        "operationId": "UPDATE_QrCode_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/qr-code/{qr-codeID}/content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "qr-codeID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Show the raw contents of a QR code. First you need to created a QR code using ../cash-register/{id}/qr-code.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/CashRegisterQrCodeContentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Show the raw contents of a QR code",
        "operationId": "List_all_Content_for_User_MonetaryAccount_CashRegister_QrCode",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Once your CashRegister has been activated you can use it to create Tabs. A Tab is a template for a payment. In contrast to requests a Tab is not pointed towards a specific user. Any user can pay the Tab as long as it is made visible by you. The creation of a Tab happens with /tab-usage-single or /tab-usage-multiple. A TabUsageSingle is a Tab that can be paid once. A TabUsageMultiple is a Tab that can be paid multiple times by different users.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TabListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab"
        ],
        "description": "Get a collection of tabs.",
        "operationId": "List_all_Tab_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab-usage-multiple": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "TabUsageMultiple is a Tab that can be paid by multiple users. Just like the TabUsageSingle it is created with the status OPEN, the visibility can be defined in the visibility object and TabItems can be added as long as the status is OPEN. When you change the status to PAYABLE any bunq user can use the tab to make a payment to your account. After an user has paid your TabUsageMultiple the status will not change, it will stay PAYABLE. For example: you can create a TabUsageMultiple with require_address set to true. Now show the QR code of this Tab on your webshop, and any bunq user can instantly pay and order something from your webshop.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TabUsageMultipleListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-usage-multiple"
        ],
        "description": "Get a collection of TabUsageMultiple.",
        "operationId": "List_all_TabUsageMultiple_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TabUsageMultiple"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TabUsageMultiple is a Tab that can be paid by multiple users. Just like the TabUsageSingle it is created with the status OPEN, the visibility can be defined in the visibility object and TabItems can be added as long as the status is OPEN. When you change the status to PAYABLE any bunq user can use the tab to make a payment to your account. After an user has paid your TabUsageMultiple the status will not change, it will stay PAYABLE. For example: you can create a TabUsageMultiple with require_address set to true. Now show the QR code of this Tab on your webshop, and any bunq user can instantly pay and order something from your webshop.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabUsageMultipleCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-usage-multiple"
        ],
        "description": "Create a TabUsageMultiple. On creation the status must be set to OPEN",
        "operationId": "CREATE_TabUsageMultiple_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab-usage-multiple/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "TabUsageMultiple is a Tab that can be paid by multiple users. Just like the TabUsageSingle it is created with the status OPEN, the visibility can be defined in the visibility object and TabItems can be added as long as the status is OPEN. When you change the status to PAYABLE any bunq user can use the tab to make a payment to your account. After an user has paid your TabUsageMultiple the status will not change, it will stay PAYABLE. For example: you can create a TabUsageMultiple with require_address set to true. Now show the QR code of this Tab on your webshop, and any bunq user can instantly pay and order something from your webshop.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabUsageMultipleDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-usage-multiple"
        ],
        "description": "Close a specific TabUsageMultiple.",
        "operationId": "DELETE_TabUsageMultiple_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "TabUsageMultiple is a Tab that can be paid by multiple users. Just like the TabUsageSingle it is created with the status OPEN, the visibility can be defined in the visibility object and TabItems can be added as long as the status is OPEN. When you change the status to PAYABLE any bunq user can use the tab to make a payment to your account. After an user has paid your TabUsageMultiple the status will not change, it will stay PAYABLE. For example: you can create a TabUsageMultiple with require_address set to true. Now show the QR code of this Tab on your webshop, and any bunq user can instantly pay and order something from your webshop.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabUsageMultipleRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-usage-multiple"
        ],
        "description": "Get a specific TabUsageMultiple.",
        "operationId": "READ_TabUsageMultiple_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TabUsageMultiple"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TabUsageMultiple is a Tab that can be paid by multiple users. Just like the TabUsageSingle it is created with the status OPEN, the visibility can be defined in the visibility object and TabItems can be added as long as the status is OPEN. When you change the status to PAYABLE any bunq user can use the tab to make a payment to your account. After an user has paid your TabUsageMultiple the status will not change, it will stay PAYABLE. For example: you can create a TabUsageMultiple with require_address set to true. Now show the QR code of this Tab on your webshop, and any bunq user can instantly pay and order something from your webshop.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabUsageMultipleUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-usage-multiple"
        ],
        "description": "Modify a specific TabUsageMultiple. You can change the amount_total, status and visibility. Once you change the status to PAYABLE the TabUsageMultiple will expire after a year (default). If you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to PAYABLE.",
        "operationId": "UPDATE_TabUsageMultiple_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab-usage-single": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "TabUsageSingle is a Tab that can be paid once. The TabUsageSingle is created with the status OPEN. Optionally you can add TabItems to the tab using /tab/_/tab-item, TabItems don't affect the total amount of the Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to WAITING_FOR_PAYMENT. By setting the visibility object a TabUsageSingle with the status OPEN or WAITING_FOR_PAYMENT can be made visible to customers. As soon as a customer pays the TabUsageSingle its status changes to PAID, and it can't be paid again.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TabUsageSingleListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-usage-single"
        ],
        "description": "Get a collection of TabUsageSingle.",
        "operationId": "List_all_TabUsageSingle_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TabUsageSingle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TabUsageSingle is a Tab that can be paid once. The TabUsageSingle is created with the status OPEN. Optionally you can add TabItems to the tab using /tab/_/tab-item, TabItems don't affect the total amount of the Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to WAITING_FOR_PAYMENT. By setting the visibility object a TabUsageSingle with the status OPEN or WAITING_FOR_PAYMENT can be made visible to customers. As soon as a customer pays the TabUsageSingle its status changes to PAID, and it can't be paid again.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabUsageSingleCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-usage-single"
        ],
        "description": "Create a TabUsageSingle. The initial status must be OPEN",
        "operationId": "CREATE_TabUsageSingle_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab-usage-single/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "TabUsageSingle is a Tab that can be paid once. The TabUsageSingle is created with the status OPEN. Optionally you can add TabItems to the tab using /tab/_/tab-item, TabItems don't affect the total amount of the Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to WAITING_FOR_PAYMENT. By setting the visibility object a TabUsageSingle with the status OPEN or WAITING_FOR_PAYMENT can be made visible to customers. As soon as a customer pays the TabUsageSingle its status changes to PAID, and it can't be paid again.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabUsageSingleDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-usage-single"
        ],
        "description": "Cancel a specific TabUsageSingle.",
        "operationId": "DELETE_TabUsageSingle_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "TabUsageSingle is a Tab that can be paid once. The TabUsageSingle is created with the status OPEN. Optionally you can add TabItems to the tab using /tab/_/tab-item, TabItems don't affect the total amount of the Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to WAITING_FOR_PAYMENT. By setting the visibility object a TabUsageSingle with the status OPEN or WAITING_FOR_PAYMENT can be made visible to customers. As soon as a customer pays the TabUsageSingle its status changes to PAID, and it can't be paid again.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabUsageSingleRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-usage-single"
        ],
        "description": "Get a specific TabUsageSingle.",
        "operationId": "READ_TabUsageSingle_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TabUsageSingle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TabUsageSingle is a Tab that can be paid once. The TabUsageSingle is created with the status OPEN. Optionally you can add TabItems to the tab using /tab/_/tab-item, TabItems don't affect the total amount of the Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to WAITING_FOR_PAYMENT. By setting the visibility object a TabUsageSingle with the status OPEN or WAITING_FOR_PAYMENT can be made visible to customers. As soon as a customer pays the TabUsageSingle its status changes to PAID, and it can't be paid again.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabUsageSingleUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-usage-single"
        ],
        "description": "Modify a specific TabUsageSingle. You can change the amount_total, status and visibility. Once you change the status to WAITING_FOR_PAYMENT the TabUsageSingle will expire after 5 minutes (default) or up to 1 hour if a different expiration is provided.",
        "operationId": "UPDATE_TabUsageSingle_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Once your CashRegister has been activated you can use it to create Tabs. A Tab is a template for a payment. In contrast to requests a Tab is not pointed towards a specific user. Any user can pay the Tab as long as it is made visible by you. The creation of a Tab happens with /tab-usage-single or /tab-usage-multiple. A TabUsageSingle is a Tab that can be paid once. A TabUsageMultiple is a Tab that can be paid multiple times by different users.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab"
        ],
        "description": "Get a specific tab. This returns a TabUsageSingle or TabUsageMultiple.",
        "operationId": "READ_Tab_for_User_MonetaryAccount_CashRegister",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab/{tabUUID}/qr-code-content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "tabUUID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This call returns the raw content of the QR code that links to this Tab. When a bunq user scans this QR code with the bunq app the Tab will be shown on his/her device.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TabQrCodeContentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "qr-code-content"
        ],
        "description": "Returns the raw content of the QR code that links to this Tab. The raw content is the binary representation of a file, without any JSON wrapping.",
        "operationId": "List_all_QrCodeContent_for_User_MonetaryAccount_CashRegister_Tab",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab/{tabUUID}/tab-item": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "tabUUID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "After you’ve created a Tab using /tab-usage-single or /tab-usage-multiple you can add items and attachments using tab-item. You can only add or modify TabItems of a Tab which status is OPEN. The amount of the TabItems will not influence the total_amount of the corresponding Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to PAYABLE/WAITING_FOR_PAYMENT.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TabItemShopListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-item"
        ],
        "description": "Get a collection of TabItems from a given Tab.",
        "operationId": "List_all_TabItem_for_User_MonetaryAccount_CashRegister_Tab",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "tabUUID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TabItemShop"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "After you’ve created a Tab using /tab-usage-single or /tab-usage-multiple you can add items and attachments using tab-item. You can only add or modify TabItems of a Tab which status is OPEN. The amount of the TabItems will not influence the total_amount of the corresponding Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to PAYABLE/WAITING_FOR_PAYMENT.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabItemShopCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-item"
        ],
        "description": "Create a new TabItem for a given Tab.",
        "operationId": "CREATE_TabItem_for_User_MonetaryAccount_CashRegister_Tab",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab/{tabUUID}/tab-item-batch": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "tabUUID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TabItemShopBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create a batch of tab items.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabItemShopBatchCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-item-batch"
        ],
        "description": "Create tab items as a batch.",
        "operationId": "CREATE_TabItemBatch_for_User_MonetaryAccount_CashRegister_Tab",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab/{tabUUID}/tab-item/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "tabUUID",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "After you’ve created a Tab using /tab-usage-single or /tab-usage-multiple you can add items and attachments using tab-item. You can only add or modify TabItems of a Tab which status is OPEN. The amount of the TabItems will not influence the total_amount of the corresponding Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to PAYABLE/WAITING_FOR_PAYMENT.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabItemShopDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-item"
        ],
        "description": "Delete a specific TabItem from a Tab.",
        "operationId": "DELETE_TabItem_for_User_MonetaryAccount_CashRegister_Tab",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "tabUUID",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "After you’ve created a Tab using /tab-usage-single or /tab-usage-multiple you can add items and attachments using tab-item. You can only add or modify TabItems of a Tab which status is OPEN. The amount of the TabItems will not influence the total_amount of the corresponding Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to PAYABLE/WAITING_FOR_PAYMENT.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabItemShopRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-item"
        ],
        "description": "Get a specific TabItem from a given Tab.",
        "operationId": "READ_TabItem_for_User_MonetaryAccount_CashRegister_Tab",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "tabUUID",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TabItemShop"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "After you’ve created a Tab using /tab-usage-single or /tab-usage-multiple you can add items and attachments using tab-item. You can only add or modify TabItems of a Tab which status is OPEN. The amount of the TabItems will not influence the total_amount of the corresponding Tab. However, if you've created any TabItems for a Tab the sum of the amounts of these items must be equal to the total_amount of the Tab when you change its status to PAYABLE/WAITING_FOR_PAYMENT.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabItemShopUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-item"
        ],
        "description": "Modify a TabItem from a given Tab.",
        "operationId": "UPDATE_TabItem_for_User_MonetaryAccount_CashRegister_Tab",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab/{tabUUID}/tab-result-inquiry": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "tabUUID",
            "required": true,
            "type": "string"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view TabResultInquiry objects belonging to a tab. A TabResultInquiry is an object that holds details on both the tab and a single payment made for that tab.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TabResultInquiryListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-result-inquiry"
        ],
        "description": "Used to view a list of TabResultInquiry objects belonging to a tab.",
        "operationId": "List_all_TabResultInquiry_for_User_MonetaryAccount_CashRegister_Tab",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{cash-registerID}/tab/{tabUUID}/tab-result-inquiry/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "cash-registerID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "tabUUID",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view TabResultInquiry objects belonging to a tab. A TabResultInquiry is an object that holds details on both the tab and a single payment made for that tab.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabResultInquiryRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-result-inquiry"
        ],
        "description": "Used to view a single TabResultInquiry belonging to a tab.",
        "operationId": "READ_TabResultInquiry_for_User_MonetaryAccount_CashRegister_Tab",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/cash-register/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "CashRegisters are virtual points of sale. They have a specific name and avatar, and optionally, a location.<br/>With a CashRegister you can create a Tab and then use a QR code to receive payments.<br/>Check out our Quickstart example to learn how you can easily <a href=\"/api/1/page/usecase-tab-payment\">create Tab payments</a>.<br/><br/>Notification filters can be set on a CashRegister to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CashRegisterRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "cash-register"
        ],
        "description": "Get a specific CashRegister.",
        "operationId": "READ_CashRegister_for_User_MonetaryAccount",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CashRegister"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CashRegisters are virtual points of sale. They have a specific name and avatar, and optionally, a location.<br/>With a CashRegister you can create a Tab and then use a QR code to receive payments.<br/>Check out our Quickstart example to learn how you can easily <a href=\"/api/1/page/usecase-tab-payment\">create Tab payments</a>.<br/><br/>Notification filters can be set on a CashRegister to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CashRegisterUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "cash-register"
        ],
        "description": "Modify or close an existing CashRegister. You must set the status back to PENDING_APPROVAL if you modify the name, avatar or location of a CashRegister. To close a cash register put its status to CLOSED.",
        "operationId": "UPDATE_CashRegister_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/customer-statement": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ExportStatementListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "customer-statement"
        ],
        "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
        "operationId": "List_all_CustomerStatement_for_User_MonetaryAccount",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportStatement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ExportStatementCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "customer-statement"
        ],
        "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
        "operationId": "CREATE_CustomerStatement_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/customer-statement/{customer-statementID}/content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "customer-statementID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch the raw content of a statement export. The returned file format could be MT940, CSV or PDF depending on the statement format specified during the statement creation. The doc won't display the response of a request to get the content of a statement export.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ExportStatementContentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Fetch the raw content of a statement export. The returned file format could be MT940, CSV or PDF depending on the statement format specified during the statement creation. The doc won't display the response of a request to get the content of a statement export.",
        "operationId": "List_all_Content_for_User_MonetaryAccount_CustomerStatement",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/customer-statement/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ExportStatementDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "customer-statement"
        ],
        "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
        "operationId": "DELETE_CustomerStatement_for_User_MonetaryAccount",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ExportStatementRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "customer-statement"
        ],
        "description": "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
        "operationId": "READ_CustomerStatement_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/draft-payment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A DraftPayment is like a regular Payment, but it needs to be accepted by the sending party before the actual Payment is done.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/DraftPaymentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "draft-payment"
        ],
        "description": "Get a listing of all DraftPayments from a given MonetaryAccount.",
        "operationId": "List_all_DraftPayment_for_User_MonetaryAccount",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DraftPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A DraftPayment is like a regular Payment, but it needs to be accepted by the sending party before the actual Payment is done.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DraftPaymentCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "draft-payment"
        ],
        "description": "Create a new DraftPayment.",
        "operationId": "CREATE_DraftPayment_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/draft-payment/{draft-paymentID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "draft-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentDraftPaymentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_DraftPayment",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "draft-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentDraftPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentDraftPaymentCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_DraftPayment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/draft-payment/{draft-paymentID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "draft-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentDraftPaymentDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_DraftPayment",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "draft-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentDraftPaymentRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_DraftPayment",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "draft-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentDraftPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentDraftPaymentUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_DraftPayment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/draft-payment/{draft-paymentID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "draft-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextDraftPaymentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_DraftPayment",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "draft-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextDraftPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextDraftPaymentCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_DraftPayment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/draft-payment/{draft-paymentID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "draft-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextDraftPaymentDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_DraftPayment",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "draft-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextDraftPaymentRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_DraftPayment",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "draft-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextDraftPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextDraftPaymentUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_DraftPayment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/draft-payment/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A DraftPayment is like a regular Payment, but it needs to be accepted by the sending party before the actual Payment is done.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DraftPaymentRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "draft-payment"
        ],
        "description": "Get a specific DraftPayment.",
        "operationId": "READ_DraftPayment_for_User_MonetaryAccount",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DraftPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A DraftPayment is like a regular Payment, but it needs to be accepted by the sending party before the actual Payment is done.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DraftPaymentUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "draft-payment"
        ],
        "description": "Update a DraftPayment.",
        "operationId": "UPDATE_DraftPayment_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/event/{eventID}/statement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "eventID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportStatementPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create a statement export of a single payment.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ExportStatementPaymentCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "statement"
        ],
        "description": "Used to create a statement export of a single payment.",
        "operationId": "CREATE_Statement_for_User_MonetaryAccount_Event",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/event/{eventID}/statement/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "eventID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create a statement export of a single payment.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ExportStatementPaymentRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "statement"
        ],
        "description": "Used to create a statement export of a single payment.",
        "operationId": "READ_Statement_for_User_MonetaryAccount_Event",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/event/{eventID}/statement/{statementID}/content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "eventID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "statementID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch the raw content of a payment statement export.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ExportStatementPaymentContentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Fetch the raw content of a payment statement export.",
        "operationId": "List_all_Content_for_User_MonetaryAccount_Event_Statement",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/export-rib": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create new and read existing RIBs of a monetary account",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ExportRibListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "export-rib"
        ],
        "description": "List all the RIBs for a monetary account.",
        "operationId": "List_all_ExportRib_for_User_MonetaryAccount",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportRib"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create new and read existing RIBs of a monetary account",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ExportRibCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "export-rib"
        ],
        "description": "Create a new RIB.",
        "operationId": "CREATE_ExportRib_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/export-rib/{export-ribID}/content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "export-ribID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch the raw content of an RIB. The RIB is always in PDF format.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ExportRibContentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Used to retrieve the raw content of an RIB.",
        "operationId": "List_all_Content_for_User_MonetaryAccount_ExportRib",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/export-rib/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create new and read existing RIBs of a monetary account",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ExportRibDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "export-rib"
        ],
        "description": "Used to create new and read existing RIBs of a monetary account",
        "operationId": "DELETE_ExportRib_for_User_MonetaryAccount",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create new and read existing RIBs of a monetary account",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ExportRibRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "export-rib"
        ],
        "description": "Get a RIB for a monetary account by its id.",
        "operationId": "READ_ExportRib_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/ideal-merchant-transaction": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "View for requesting iDEAL transactions and polling their status.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/IdealMerchantTransactionListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "ideal-merchant-transaction"
        ],
        "description": "View for requesting iDEAL transactions and polling their status.",
        "operationId": "List_all_IdealMerchantTransaction_for_User_MonetaryAccount",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdealMerchantTransaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "View for requesting iDEAL transactions and polling their status.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/IdealMerchantTransactionCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "ideal-merchant-transaction"
        ],
        "description": "View for requesting iDEAL transactions and polling their status.",
        "operationId": "CREATE_IdealMerchantTransaction_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/ideal-merchant-transaction/{ideal-merchant-transactionID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "ideal-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentIdealMerchantTransactionListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_IdealMerchantTransaction",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "ideal-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentIdealMerchantTransaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentIdealMerchantTransactionCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_IdealMerchantTransaction",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/ideal-merchant-transaction/{ideal-merchant-transactionID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "ideal-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentIdealMerchantTransactionDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_IdealMerchantTransaction",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "ideal-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentIdealMerchantTransactionRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_IdealMerchantTransaction",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "ideal-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentIdealMerchantTransaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentIdealMerchantTransactionUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_IdealMerchantTransaction",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/ideal-merchant-transaction/{ideal-merchant-transactionID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "ideal-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextIdealMerchantTransactionListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_IdealMerchantTransaction",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "ideal-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextIdealMerchantTransaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextIdealMerchantTransactionCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_IdealMerchantTransaction",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/ideal-merchant-transaction/{ideal-merchant-transactionID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "ideal-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextIdealMerchantTransactionDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_IdealMerchantTransaction",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "ideal-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextIdealMerchantTransactionRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_IdealMerchantTransaction",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "ideal-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextIdealMerchantTransaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextIdealMerchantTransactionUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_IdealMerchantTransaction",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/ideal-merchant-transaction/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "View for requesting iDEAL transactions and polling their status.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/IdealMerchantTransactionRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "ideal-merchant-transaction"
        ],
        "description": "View for requesting iDEAL transactions and polling their status.",
        "operationId": "READ_IdealMerchantTransaction_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/invoice": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view a bunq invoice.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/InvoiceListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "invoice"
        ],
        "description": "Used to view a bunq invoice.",
        "operationId": "List_all_Invoice_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/invoice/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view a bunq invoice.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InvoiceRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "invoice"
        ],
        "description": "Used to view a bunq invoice.",
        "operationId": "READ_Invoice_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/mastercard-action": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "MasterCard transaction view.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/MasterCardActionListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "mastercard-action"
        ],
        "description": "MasterCard transaction view.",
        "operationId": "List_all_MastercardAction_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/mastercard-action/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "MasterCard transaction view.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/MasterCardActionRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "mastercard-action"
        ],
        "description": "MasterCard transaction view.",
        "operationId": "READ_MastercardAction_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/mastercard-action/{mastercard-actionID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "mastercard-actionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentMasterCardActionListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_MastercardAction",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "mastercard-actionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentMasterCardAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentMasterCardActionCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_MastercardAction",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/mastercard-action/{mastercard-actionID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "mastercard-actionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentMasterCardActionDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_MastercardAction",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "mastercard-actionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentMasterCardActionRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_MastercardAction",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "mastercard-actionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentMasterCardAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentMasterCardActionUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_MastercardAction",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/mastercard-action/{mastercard-actionID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "mastercard-actionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextMasterCardActionListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_MastercardAction",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "mastercard-actionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextMasterCardAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextMasterCardActionCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_MastercardAction",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/mastercard-action/{mastercard-actionID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "mastercard-actionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextMasterCardActionDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_MastercardAction",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "mastercard-actionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextMasterCardActionRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_MastercardAction",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "mastercard-actionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextMasterCardAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextMasterCardActionUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_MastercardAction",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/notification-filter-url": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Manage the url notification filters for a user.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NotificationFilterUrlMonetaryAccountListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "notification-filter-url"
        ],
        "description": "Manage the url notification filters for a user.",
        "operationId": "List_all_NotificationFilterUrl_for_User_MonetaryAccount",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationFilterUrlMonetaryAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Manage the url notification filters for a user.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NotificationFilterUrlMonetaryAccountCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "notification-filter-url"
        ],
        "description": "Manage the url notification filters for a user.",
        "operationId": "CREATE_NotificationFilterUrl_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Using Payment, you can send payments to bunq and non-bunq users from your bunq MonetaryAccounts. This can be done using bunq Aliases or IBAN Aliases. When transferring money to other bunq MonetaryAccounts you can also refer to Attachments. These will be received by the counter-party as part of the Payment. You can also retrieve a single Payment or all executed Payments of a specific monetary account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/PaymentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment"
        ],
        "description": "Get a listing of all Payments performed on a given MonetaryAccount (incoming and outgoing).",
        "operationId": "List_all_Payment_for_User_MonetaryAccount",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Using Payment, you can send payments to bunq and non-bunq users from your bunq MonetaryAccounts. This can be done using bunq Aliases or IBAN Aliases. When transferring money to other bunq MonetaryAccounts you can also refer to Attachments. These will be received by the counter-party as part of the Payment. You can also retrieve a single Payment or all executed Payments of a specific monetary account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment"
        ],
        "description": "Create a new Payment.",
        "operationId": "CREATE_Payment_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-auto-allocate": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Manage a users automatic payment auto allocated settings.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/PaymentAutoAllocateListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-auto-allocate"
        ],
        "description": "Manage a users automatic payment auto allocated settings.",
        "operationId": "List_all_PaymentAutoAllocate_for_User_MonetaryAccount",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentAutoAllocate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Manage a users automatic payment auto allocated settings.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentAutoAllocateCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-auto-allocate"
        ],
        "description": "Manage a users automatic payment auto allocated settings.",
        "operationId": "CREATE_PaymentAutoAllocate_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-auto-allocate/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Manage a users automatic payment auto allocated settings.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentAutoAllocateDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-auto-allocate"
        ],
        "description": "Manage a users automatic payment auto allocated settings.",
        "operationId": "DELETE_PaymentAutoAllocate_for_User_MonetaryAccount",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Manage a users automatic payment auto allocated settings.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentAutoAllocateRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-auto-allocate"
        ],
        "description": "Manage a users automatic payment auto allocated settings.",
        "operationId": "READ_PaymentAutoAllocate_for_User_MonetaryAccount",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentAutoAllocate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Manage a users automatic payment auto allocated settings.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentAutoAllocateUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-auto-allocate"
        ],
        "description": "Manage a users automatic payment auto allocated settings.",
        "operationId": "UPDATE_PaymentAutoAllocate_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-auto-allocate/{payment-auto-allocateID}/definition": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "payment-auto-allocateID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List all the definitions in a payment auto allocate.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/PaymentAutoAllocateDefinitionListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "definition"
        ],
        "description": "List all the definitions in a payment auto allocate.",
        "operationId": "List_all_Definition_for_User_MonetaryAccount_PaymentAutoAllocate",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-auto-allocate/{payment-auto-allocateID}/instance": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "payment-auto-allocateID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List all the times a users payment was automatically allocated.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/PaymentAutoAllocateInstanceListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "instance"
        ],
        "description": "List all the times a users payment was automatically allocated.",
        "operationId": "List_all_Instance_for_User_MonetaryAccount_PaymentAutoAllocate",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-auto-allocate/{payment-auto-allocateID}/instance/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "payment-auto-allocateID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List all the times a users payment was automatically allocated.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentAutoAllocateInstanceRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "instance"
        ],
        "description": "List all the times a users payment was automatically allocated.",
        "operationId": "READ_Instance_for_User_MonetaryAccount_PaymentAutoAllocate",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-batch": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create a payment batch, or show the payment batches of a monetary account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/PaymentBatchListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-batch"
        ],
        "description": "Return all the payment batches for a monetary account.",
        "operationId": "List_all_PaymentBatch_for_User_MonetaryAccount",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create a payment batch, or show the payment batches of a monetary account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentBatchCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-batch"
        ],
        "description": "Create a payment batch by sending an array of single payment objects, that will become part of the batch.",
        "operationId": "CREATE_PaymentBatch_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-batch/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create a payment batch, or show the payment batches of a monetary account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentBatchRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-batch"
        ],
        "description": "Return the details of a specific payment batch.",
        "operationId": "READ_PaymentBatch_for_User_MonetaryAccount",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create a payment batch, or show the payment batches of a monetary account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentBatchUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-batch"
        ],
        "description": "Revoke a bunq.to payment batch. The status of all the payments will be set to REVOKED.",
        "operationId": "UPDATE_PaymentBatch_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-batch/{payment-batchID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentPaymentBatchListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_PaymentBatch",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentPaymentBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentPaymentBatchCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_PaymentBatch",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-batch/{payment-batchID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentPaymentBatchDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_PaymentBatch",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentPaymentBatchRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_PaymentBatch",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentPaymentBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentPaymentBatchUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_PaymentBatch",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-batch/{payment-batchID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextPaymentBatchListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_PaymentBatch",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextPaymentBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextPaymentBatchCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_PaymentBatch",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-batch/{payment-batchID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextPaymentBatchDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_PaymentBatch",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextPaymentBatchRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_PaymentBatch",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextPaymentBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextPaymentBatchUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_PaymentBatch",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Using Payment, you can send payments to bunq and non-bunq users from your bunq MonetaryAccounts. This can be done using bunq Aliases or IBAN Aliases. When transferring money to other bunq MonetaryAccounts you can also refer to Attachments. These will be received by the counter-party as part of the Payment. You can also retrieve a single Payment or all executed Payments of a specific monetary account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment"
        ],
        "description": "Get a specific previous Payment.",
        "operationId": "READ_Payment_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentPaymentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_Payment",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentPaymentCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_Payment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentPaymentDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_Payment",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentPaymentRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_Payment",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentPaymentUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_Payment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextPaymentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_Payment",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextPaymentCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_Payment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextPaymentDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_Payment",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextPaymentRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_Payment",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextPaymentUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_Payment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "RequestInquiry, aka 'RFP' (Request for Payment), is one of the innovative features that bunq offers. To request payment from another bunq account a new Request Inquiry is created. As with payments you can add attachments to a RFP. Requests for Payment are the foundation for a number of consumer features like 'Split the bill' and 'Request forwarding'. We invite you to invent your own based on the bunq api!",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/RequestInquiryListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "request-inquiry"
        ],
        "description": "Get all payment requests for a user's monetary account. bunqme_share_url is always null if the counterparty is a bunq user.",
        "operationId": "List_all_RequestInquiry_for_User_MonetaryAccount",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestInquiry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RequestInquiry, aka 'RFP' (Request for Payment), is one of the innovative features that bunq offers. To request payment from another bunq account a new Request Inquiry is created. As with payments you can add attachments to a RFP. Requests for Payment are the foundation for a number of consumer features like 'Split the bill' and 'Request forwarding'. We invite you to invent your own based on the bunq api!",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RequestInquiryCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "request-inquiry"
        ],
        "description": "Create a new payment request.",
        "operationId": "CREATE_RequestInquiry_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry-batch": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create a batch of requests for payment, or show the request batches of a monetary account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/RequestInquiryBatchListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "request-inquiry-batch"
        ],
        "description": "Return all the request batches for a monetary account.",
        "operationId": "List_all_RequestInquiryBatch_for_User_MonetaryAccount",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestInquiryBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create a batch of requests for payment, or show the request batches of a monetary account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RequestInquiryBatchCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "request-inquiry-batch"
        ],
        "description": "Create a request batch by sending an array of single request objects, that will become part of the batch.",
        "operationId": "CREATE_RequestInquiryBatch_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry-batch/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Create a batch of requests for payment, or show the request batches of a monetary account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RequestInquiryBatchRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "request-inquiry-batch"
        ],
        "description": "Return the details of a specific request batch.",
        "operationId": "READ_RequestInquiryBatch_for_User_MonetaryAccount",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestInquiryBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create a batch of requests for payment, or show the request batches of a monetary account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RequestInquiryBatchUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "request-inquiry-batch"
        ],
        "description": "Revoke a request batch. The status of all the requests will be set to REVOKED.",
        "operationId": "UPDATE_RequestInquiryBatch_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry-batch/{request-inquiry-batchID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiry-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentRequestInquiryBatchListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_RequestInquiryBatch",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiry-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestInquiryBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestInquiryBatchCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_RequestInquiryBatch",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry-batch/{request-inquiry-batchID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiry-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestInquiryBatchDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_RequestInquiryBatch",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiry-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestInquiryBatchRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_RequestInquiryBatch",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiry-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestInquiryBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestInquiryBatchUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_RequestInquiryBatch",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry-batch/{request-inquiry-batchID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiry-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextRequestInquiryBatchListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_RequestInquiryBatch",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiry-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextRequestInquiryBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextRequestInquiryBatchCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_RequestInquiryBatch",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry-batch/{request-inquiry-batchID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiry-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextRequestInquiryBatchDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_RequestInquiryBatch",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiry-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextRequestInquiryBatchRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_RequestInquiryBatch",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiry-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextRequestInquiryBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextRequestInquiryBatchUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_RequestInquiryBatch",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "RequestInquiry, aka 'RFP' (Request for Payment), is one of the innovative features that bunq offers. To request payment from another bunq account a new Request Inquiry is created. As with payments you can add attachments to a RFP. Requests for Payment are the foundation for a number of consumer features like 'Split the bill' and 'Request forwarding'. We invite you to invent your own based on the bunq api!",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RequestInquiryRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "request-inquiry"
        ],
        "description": "Get the details of a specific payment request, including its status. bunqme_share_url is always null if the counterparty is a bunq user.",
        "operationId": "READ_RequestInquiry_for_User_MonetaryAccount",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestInquiry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RequestInquiry, aka 'RFP' (Request for Payment), is one of the innovative features that bunq offers. To request payment from another bunq account a new Request Inquiry is created. As with payments you can add attachments to a RFP. Requests for Payment are the foundation for a number of consumer features like 'Split the bill' and 'Request forwarding'. We invite you to invent your own based on the bunq api!",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RequestInquiryUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "request-inquiry"
        ],
        "description": "Revoke a request for payment, by updating the status to REVOKED.",
        "operationId": "UPDATE_RequestInquiry_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry/{request-inquiryID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentRequestInquiryListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_RequestInquiry",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestInquiry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestInquiryCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_RequestInquiry",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry/{request-inquiryID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestInquiryDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_RequestInquiry",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestInquiryRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_RequestInquiry",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestInquiry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestInquiryUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_RequestInquiry",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry/{request-inquiryID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextRequestInquiryListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_RequestInquiry",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextRequestInquiry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextRequestInquiryCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_RequestInquiry",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry/{request-inquiryID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextRequestInquiryDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_RequestInquiry",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextRequestInquiryRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_RequestInquiry",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-inquiryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextRequestInquiry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextRequestInquiryUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_RequestInquiry",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-response": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A RequestResponse is what a user on the other side of a RequestInquiry gets when he is sent one. So a RequestInquiry is the initiator and visible for the user that sent it and that wants to receive the money. A RequestResponse is what the other side sees, i.e. the user that pays the money to accept the request. The content is almost identical.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/RequestResponseListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "request-response"
        ],
        "description": "Get all RequestResponses for a MonetaryAccount.",
        "operationId": "List_all_RequestResponse_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-response/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A RequestResponse is what a user on the other side of a RequestInquiry gets when he is sent one. So a RequestInquiry is the initiator and visible for the user that sent it and that wants to receive the money. A RequestResponse is what the other side sees, i.e. the user that pays the money to accept the request. The content is almost identical.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RequestResponseRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "request-response"
        ],
        "description": "Get the details for a specific existing RequestResponse.",
        "operationId": "READ_RequestResponse_for_User_MonetaryAccount",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A RequestResponse is what a user on the other side of a RequestInquiry gets when he is sent one. So a RequestInquiry is the initiator and visible for the user that sent it and that wants to receive the money. A RequestResponse is what the other side sees, i.e. the user that pays the money to accept the request. The content is almost identical.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RequestResponseUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "request-response"
        ],
        "description": "Update the status to accept or reject the RequestResponse.",
        "operationId": "UPDATE_RequestResponse_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-response/{request-responseID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-responseID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentRequestResponseListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_RequestResponse",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-responseID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestResponseCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_RequestResponse",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-response/{request-responseID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-responseID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestResponseDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_RequestResponse",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-responseID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestResponseRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_RequestResponse",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-responseID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentRequestResponseUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_RequestResponse",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-response/{request-responseID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-responseID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextRequestResponseListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_RequestResponse",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-responseID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextRequestResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextRequestResponseCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_RequestResponse",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-response/{request-responseID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-responseID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextRequestResponseDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_RequestResponse",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-responseID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextRequestResponseRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_RequestResponse",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "request-responseID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextRequestResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextRequestResponseUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_RequestResponse",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "view for reading the scheduled definitions.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ScheduleListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "schedule"
        ],
        "description": "Get a collection of scheduled definition for a given monetary account. You can add the parameter type to filter the response. When type={SCHEDULE_DEFINITION_PAYMENT,SCHEDULE_DEFINITION_PAYMENT_BATCH} is provided only schedule definition object that relate to these definitions are returned.",
        "operationId": "List_all_Schedule_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for schedule payments.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/SchedulePaymentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "schedule-payment"
        ],
        "description": "Endpoint for schedule payments.",
        "operationId": "List_all_SchedulePayment_for_User_MonetaryAccount",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchedulePayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for schedule payments.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SchedulePaymentCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "schedule-payment"
        ],
        "description": "Endpoint for schedule payments.",
        "operationId": "CREATE_SchedulePayment_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment-batch": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchedulePaymentBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for schedule payment batches.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SchedulePaymentBatchCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "schedule-payment-batch"
        ],
        "description": "Endpoint for schedule payment batches.",
        "operationId": "CREATE_SchedulePaymentBatch_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment-batch/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for schedule payment batches.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SchedulePaymentBatchDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "schedule-payment-batch"
        ],
        "description": "Endpoint for schedule payment batches.",
        "operationId": "DELETE_SchedulePaymentBatch_for_User_MonetaryAccount",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchedulePaymentBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for schedule payment batches.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SchedulePaymentBatchUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "schedule-payment-batch"
        ],
        "description": "Endpoint for schedule payment batches.",
        "operationId": "UPDATE_SchedulePaymentBatch_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment-batch/{schedule-payment-batchID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentSchedulePaymentBatchListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_SchedulePaymentBatch",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSchedulePaymentBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSchedulePaymentBatchCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_SchedulePaymentBatch",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment-batch/{schedule-payment-batchID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSchedulePaymentBatchDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_SchedulePaymentBatch",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSchedulePaymentBatchRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_SchedulePaymentBatch",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSchedulePaymentBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSchedulePaymentBatchUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_SchedulePaymentBatch",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment-batch/{schedule-payment-batchID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextSchedulePaymentBatchListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_SchedulePaymentBatch",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextSchedulePaymentBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextSchedulePaymentBatchCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_SchedulePaymentBatch",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment-batch/{schedule-payment-batchID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextSchedulePaymentBatchDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_SchedulePaymentBatch",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextSchedulePaymentBatchRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_SchedulePaymentBatch",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-payment-batchID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextSchedulePaymentBatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextSchedulePaymentBatchUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_SchedulePaymentBatch",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for schedule payments.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SchedulePaymentDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "schedule-payment"
        ],
        "description": "Endpoint for schedule payments.",
        "operationId": "DELETE_SchedulePayment_for_User_MonetaryAccount",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for schedule payments.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SchedulePaymentRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "schedule-payment"
        ],
        "description": "Endpoint for schedule payments.",
        "operationId": "READ_SchedulePayment_for_User_MonetaryAccount",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchedulePayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint for schedule payments.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SchedulePaymentUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "schedule-payment"
        ],
        "description": "Endpoint for schedule payments.",
        "operationId": "UPDATE_SchedulePayment_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment/{schedule-paymentID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentSchedulePaymentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_SchedulePayment",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSchedulePayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSchedulePaymentCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_SchedulePayment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment/{schedule-paymentID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSchedulePaymentDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_SchedulePayment",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSchedulePaymentRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_SchedulePayment",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSchedulePayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSchedulePaymentUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_SchedulePayment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment/{schedule-paymentID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextSchedulePaymentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_SchedulePayment",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextSchedulePayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextSchedulePaymentCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_SchedulePayment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment/{schedule-paymentID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextSchedulePaymentDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_SchedulePayment",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextSchedulePaymentRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_SchedulePayment",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextSchedulePayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextSchedulePaymentUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_SchedulePayment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "view for reading the scheduled definitions.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ScheduleRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "schedule"
        ],
        "description": "Get a specific schedule definition for a given monetary account.",
        "operationId": "READ_Schedule_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{scheduleID}/schedule-instance": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "scheduleID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "view for reading, updating and listing the scheduled instance.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ScheduleInstanceListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "schedule-instance"
        ],
        "description": "view for reading, updating and listing the scheduled instance.",
        "operationId": "List_all_ScheduleInstance_for_User_MonetaryAccount_Schedule",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{scheduleID}/schedule-instance/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "scheduleID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "view for reading, updating and listing the scheduled instance.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ScheduleInstanceRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "schedule-instance"
        ],
        "description": "view for reading, updating and listing the scheduled instance.",
        "operationId": "READ_ScheduleInstance_for_User_MonetaryAccount_Schedule",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "scheduleID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduleInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "view for reading, updating and listing the scheduled instance.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ScheduleInstanceUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "schedule-instance"
        ],
        "description": "view for reading, updating and listing the scheduled instance.",
        "operationId": "UPDATE_ScheduleInstance_for_User_MonetaryAccount_Schedule",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{scheduleID}/schedule-instance/{schedule-instanceID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "scheduleID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-instanceID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentScheduleInstanceListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "scheduleID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-instanceID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentScheduleInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentScheduleInstanceCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{scheduleID}/schedule-instance/{schedule-instanceID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "scheduleID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-instanceID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentScheduleInstanceDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "scheduleID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-instanceID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentScheduleInstanceRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "scheduleID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-instanceID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentScheduleInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentScheduleInstanceUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{scheduleID}/schedule-instance/{schedule-instanceID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "scheduleID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-instanceID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextScheduleInstanceListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "scheduleID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-instanceID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextScheduleInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextScheduleInstanceCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{scheduleID}/schedule-instance/{schedule-instanceID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "scheduleID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-instanceID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextScheduleInstanceDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "scheduleID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-instanceID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextScheduleInstanceRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "scheduleID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "schedule-instanceID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextScheduleInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextScheduleInstanceUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/share-invite-monetary-account-inquiry": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "[DEPRECATED - use /share-invite-monetary-account-response] Used to share a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. Allow the creation of share inquiries that, in the same way as request inquiries, can be revoked by the user creating them or accepted/rejected by the other party.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ShareInviteMonetaryAccountInquiryListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "share-invite-monetary-account-inquiry"
        ],
        "description": "[DEPRECATED - use /share-invite-monetary-account-response] Get a list with all the share inquiries for a monetary account, only if the requesting user has permission to change the details of the various ones.",
        "operationId": "List_all_ShareInviteMonetaryAccountInquiry_for_User_MonetaryAccount",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShareInviteMonetaryAccountInquiry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "[DEPRECATED - use /share-invite-monetary-account-response] Used to share a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. Allow the creation of share inquiries that, in the same way as request inquiries, can be revoked by the user creating them or accepted/rejected by the other party.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ShareInviteMonetaryAccountInquiryCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "share-invite-monetary-account-inquiry"
        ],
        "description": "[DEPRECATED - use /share-invite-monetary-account-response] Create a new share inquiry for a monetary account, specifying the permission the other bunq user will have on it.",
        "operationId": "CREATE_ShareInviteMonetaryAccountInquiry_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/share-invite-monetary-account-inquiry/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "[DEPRECATED - use /share-invite-monetary-account-response] Used to share a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. Allow the creation of share inquiries that, in the same way as request inquiries, can be revoked by the user creating them or accepted/rejected by the other party.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ShareInviteMonetaryAccountInquiryRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "share-invite-monetary-account-inquiry"
        ],
        "description": "[DEPRECATED - use /share-invite-monetary-account-response] Get the details of a specific share inquiry.",
        "operationId": "READ_ShareInviteMonetaryAccountInquiry_for_User_MonetaryAccount",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShareInviteMonetaryAccountInquiry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "[DEPRECATED - use /share-invite-monetary-account-response] Used to share a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. Allow the creation of share inquiries that, in the same way as request inquiries, can be revoked by the user creating them or accepted/rejected by the other party.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ShareInviteMonetaryAccountInquiryUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "share-invite-monetary-account-inquiry"
        ],
        "description": "[DEPRECATED - use /share-invite-monetary-account-response] Update the details of a share. This includes updating status (revoking or cancelling it), granted permission and validity period of this share.",
        "operationId": "UPDATE_ShareInviteMonetaryAccountInquiry_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/share-invite-monetary-account-inquiry/{share-invite-monetary-account-inquiryID}/amount-used/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "share-invite-monetary-account-inquiryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "When you have connected your monetary account to a user, and given this user a (for example) daily budget of 10 EUR. If this users has used his entire budget or part of it, this call can be used to reset the amount he used to 0. The user can then spend the daily budget of 10 EUR again.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ShareInviteMonetaryAccountAmountUsedDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "amount-used"
        ],
        "description": "Reset the available budget for an account share. To be called without any ID at the end of the path.",
        "operationId": "DELETE_AmountUsed_for_User_MonetaryAccount_ShareInviteMonetaryAccountInquiry",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/sofort-merchant-transaction": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "View for requesting Sofort transactions and polling their status.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/SofortMerchantTransactionListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "sofort-merchant-transaction"
        ],
        "description": "View for requesting Sofort transactions and polling their status.",
        "operationId": "List_all_SofortMerchantTransaction_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/sofort-merchant-transaction/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "View for requesting Sofort transactions and polling their status.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SofortMerchantTransactionRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "sofort-merchant-transaction"
        ],
        "description": "View for requesting Sofort transactions and polling their status.",
        "operationId": "READ_SofortMerchantTransaction_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/sofort-merchant-transaction/{sofort-merchant-transactionID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "sofort-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentSofortMerchantTransactionListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_SofortMerchantTransaction",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "sofort-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSofortMerchantTransaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSofortMerchantTransactionCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_SofortMerchantTransaction",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/sofort-merchant-transaction/{sofort-merchant-transactionID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "sofort-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSofortMerchantTransactionDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_SofortMerchantTransaction",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "sofort-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSofortMerchantTransactionRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_SofortMerchantTransaction",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "sofort-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSofortMerchantTransaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentSofortMerchantTransactionUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_SofortMerchantTransaction",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/sofort-merchant-transaction/{sofort-merchant-transactionID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "sofort-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextSofortMerchantTransactionListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_SofortMerchantTransaction",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "sofort-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextSofortMerchantTransaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextSofortMerchantTransactionCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_SofortMerchantTransaction",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/sofort-merchant-transaction/{sofort-merchant-transactionID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "sofort-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextSofortMerchantTransactionDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_SofortMerchantTransaction",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "sofort-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextSofortMerchantTransactionRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_SofortMerchantTransaction",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "sofort-merchant-transactionID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextSofortMerchantTransaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextSofortMerchantTransactionUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_SofortMerchantTransaction",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/switch-service-payment/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An incoming payment made towards an account of an external bank and redirected to a bunq account via switch service.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BankSwitchServiceNetherlandsIncomingPaymentRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "switch-service-payment"
        ],
        "description": "An incoming payment made towards an account of an external bank and redirected to a bunq account via switch service.",
        "operationId": "READ_SwitchServicePayment_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/switch-service-payment/{switch-service-paymentID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "switch-service-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_SwitchServicePayment",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "switch-service-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentBankSwitchServiceNetherlandsIncomingPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_SwitchServicePayment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/switch-service-payment/{switch-service-paymentID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "switch-service-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_SwitchServicePayment",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "switch-service-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_SwitchServicePayment",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "switch-service-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentBankSwitchServiceNetherlandsIncomingPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_SwitchServicePayment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/switch-service-payment/{switch-service-paymentID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "switch-service-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextBankSwitchServiceNetherlandsIncomingPaymentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_SwitchServicePayment",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "switch-service-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextBankSwitchServiceNetherlandsIncomingPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextBankSwitchServiceNetherlandsIncomingPaymentCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_SwitchServicePayment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/switch-service-payment/{switch-service-paymentID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "switch-service-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextBankSwitchServiceNetherlandsIncomingPaymentDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_SwitchServicePayment",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "switch-service-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextBankSwitchServiceNetherlandsIncomingPaymentRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_SwitchServicePayment",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "switch-service-paymentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextBankSwitchServiceNetherlandsIncomingPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextBankSwitchServiceNetherlandsIncomingPaymentUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_SwitchServicePayment",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/tab-result-response": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view TabResultResponse objects belonging to a tab. A TabResultResponse is an object that holds details on a tab which has been paid from the provided monetary account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TabResultResponseListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-result-response"
        ],
        "description": "Used to view a list of TabResultResponse objects belonging to a tab.",
        "operationId": "List_all_TabResultResponse_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/tab-result-response/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view TabResultResponse objects belonging to a tab. A TabResultResponse is an object that holds details on a tab which has been paid from the provided monetary account.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TabResultResponseRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tab-result-response"
        ],
        "description": "Used to view a single TabResultResponse belonging to a tab.",
        "operationId": "READ_TabResultResponse_for_User_MonetaryAccount",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/whitelist/{whitelistID}/whitelist-result/{whitelist-resultID}/note-attachment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelistID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelist-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteAttachmentWhitelistResultListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteAttachment_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelistID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelist-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentWhitelistResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentWhitelistResultCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "CREATE_NoteAttachment_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/whitelist/{whitelistID}/whitelist-result/{whitelist-resultID}/note-attachment/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelistID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelist-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentWhitelistResultDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "DELETE_NoteAttachment_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelistID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelist-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentWhitelistResultRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "READ_NoteAttachment_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelistID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelist-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteAttachmentWhitelistResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage attachment notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteAttachmentWhitelistResultUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-attachment"
        ],
        "description": "Used to manage attachment notes.",
        "operationId": "UPDATE_NoteAttachment_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/whitelist/{whitelistID}/whitelist-result/{whitelist-resultID}/note-text": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelistID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelist-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NoteTextWhitelistResultListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Manage the notes for a given user.",
        "operationId": "List_all_NoteText_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelistID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelist-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextWhitelistResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextWhitelistResultCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "CREATE_NoteText_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "summary": ""
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/whitelist/{whitelistID}/whitelist-result/{whitelist-resultID}/note-text/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelistID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelist-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextWhitelistResultDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "DELETE_NoteText_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelistID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelist-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextWhitelistResultRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "READ_NoteText_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "monetary-accountID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelistID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "whitelist-resultID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTextWhitelistResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage text notes.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NoteTextWhitelistResultUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "note-text"
        ],
        "description": "Used to manage text notes.",
        "operationId": "UPDATE_NoteText_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "summary": ""
      }
    },
    "/user/{userID}/notification-filter-push": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Manage the push notification filters for a user.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NotificationFilterPushUserListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "notification-filter-push"
        ],
        "description": "Manage the push notification filters for a user.",
        "operationId": "List_all_NotificationFilterPush_for_User",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationFilterPushUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Manage the push notification filters for a user.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NotificationFilterPushUserCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "notification-filter-push"
        ],
        "description": "Manage the push notification filters for a user.",
        "operationId": "CREATE_NotificationFilterPush_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/notification-filter-url": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Manage the url notification filters for a user.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/NotificationFilterUrlUserListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "notification-filter-url"
        ],
        "description": "Manage the url notification filters for a user.",
        "operationId": "List_all_NotificationFilterUrl_for_User",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationFilterUrlUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Manage the url notification filters for a user.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NotificationFilterUrlUserCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "notification-filter-url"
        ],
        "description": "Manage the url notification filters for a user.",
        "operationId": "CREATE_NotificationFilterUrl_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/oauth-client": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used for managing OAuth Clients.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/OauthClientListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "oauth-client"
        ],
        "description": "Used for managing OAuth Clients.",
        "operationId": "List_all_OauthClient_for_User",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OauthClient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used for managing OAuth Clients.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/OauthClientCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "oauth-client"
        ],
        "description": "Used for managing OAuth Clients.",
        "operationId": "CREATE_OauthClient_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/oauth-client/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used for managing OAuth Clients.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/OauthClientRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "oauth-client"
        ],
        "description": "Used for managing OAuth Clients.",
        "operationId": "READ_OauthClient_for_User",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OauthClient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used for managing OAuth Clients.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/OauthClientUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "oauth-client"
        ],
        "description": "Used for managing OAuth Clients.",
        "operationId": "UPDATE_OauthClient_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/oauth-client/{oauth-clientID}/callback-url": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "oauth-clientID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used for managing OAuth Client Callback URLs.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/OauthCallbackUrlListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "callback-url"
        ],
        "description": "Used for managing OAuth Client Callback URLs.",
        "operationId": "List_all_CallbackUrl_for_User_OauthClient",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "oauth-clientID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OauthCallbackUrl"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used for managing OAuth Client Callback URLs.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/OauthCallbackUrlCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "callback-url"
        ],
        "description": "Used for managing OAuth Client Callback URLs.",
        "operationId": "CREATE_CallbackUrl_for_User_OauthClient",
        "summary": ""
      }
    },
    "/user/{userID}/oauth-client/{oauth-clientID}/callback-url/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "oauth-clientID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used for managing OAuth Client Callback URLs.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/OauthCallbackUrlDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "callback-url"
        ],
        "description": "Used for managing OAuth Client Callback URLs.",
        "operationId": "DELETE_CallbackUrl_for_User_OauthClient",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "oauth-clientID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used for managing OAuth Client Callback URLs.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/OauthCallbackUrlRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "callback-url"
        ],
        "description": "Used for managing OAuth Client Callback URLs.",
        "operationId": "READ_CallbackUrl_for_User_OauthClient",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "oauth-clientID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OauthCallbackUrl"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used for managing OAuth Client Callback URLs.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/OauthCallbackUrlUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "callback-url"
        ],
        "description": "Used for managing OAuth Client Callback URLs.",
        "operationId": "UPDATE_CallbackUrl_for_User_OauthClient",
        "summary": ""
      }
    },
    "/user/{userID}/payment-auto-allocate": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List a users automatic payment auto allocated settings.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/PaymentAutoAllocateUserListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-auto-allocate"
        ],
        "description": "List a users automatic payment auto allocated settings.",
        "operationId": "List_all_PaymentAutoAllocate_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/payment-service-provider-draft-payment": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/PaymentServiceProviderDraftPaymentListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-service-provider-draft-payment"
        ],
        "description": "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
        "operationId": "List_all_PaymentServiceProviderDraftPayment_for_User",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentServiceProviderDraftPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentServiceProviderDraftPaymentCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-service-provider-draft-payment"
        ],
        "description": "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
        "operationId": "CREATE_PaymentServiceProviderDraftPayment_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/payment-service-provider-draft-payment/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentServiceProviderDraftPaymentRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-service-provider-draft-payment"
        ],
        "description": "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
        "operationId": "READ_PaymentServiceProviderDraftPayment_for_User",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentServiceProviderDraftPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentServiceProviderDraftPaymentUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "payment-service-provider-draft-payment"
        ],
        "description": "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
        "operationId": "UPDATE_PaymentServiceProviderDraftPayment_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/registry": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage Slice groups.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/RegistryListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry"
        ],
        "description": "Get a listing of all Slice groups.",
        "operationId": "List_all_Registry_for_User",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Registry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage Slice groups.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RegistryCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry"
        ],
        "description": "Create a new Slice group.",
        "operationId": "CREATE_Registry_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/registry/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage Slice groups.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RegistryDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry"
        ],
        "description": "Delete a specific Slice group.",
        "operationId": "DELETE_Registry_for_User",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage Slice groups.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RegistryRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry"
        ],
        "description": "Get a specific Slice group.",
        "operationId": "READ_Registry_for_User",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Registry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage Slice groups.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RegistryUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry"
        ],
        "description": "Update a specific Slice group.",
        "operationId": "UPDATE_Registry_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/registry/{registryID}/registry-entry": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "registryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage Slice group payment.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/RegistryEntryListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry-entry"
        ],
        "description": "Get a listing of all Slice group payments.",
        "operationId": "List_all_RegistryEntry_for_User_Registry",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "registryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistryEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage Slice group payment.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RegistryEntryCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry-entry"
        ],
        "description": "Create a new Slice group payment.",
        "operationId": "CREATE_RegistryEntry_for_User_Registry",
        "summary": ""
      }
    },
    "/user/{userID}/registry/{registryID}/registry-entry/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "registryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage Slice group payment.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RegistryEntryDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry-entry"
        ],
        "description": "Delete a specific Slice group payment.",
        "operationId": "DELETE_RegistryEntry_for_User_Registry",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "registryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage Slice group payment.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RegistryEntryRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry-entry"
        ],
        "description": "Get a specific Slice group payment.",
        "operationId": "READ_RegistryEntry_for_User_Registry",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "registryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistryEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage Slice group payment.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RegistryEntryUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry-entry"
        ],
        "description": "Update a specific Slice group payment.",
        "operationId": "UPDATE_RegistryEntry_for_User_Registry",
        "summary": ""
      }
    },
    "/user/{userID}/registry/{registryID}/registry-setting/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "registryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage Slice group settings.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RegistrySettingRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry-setting"
        ],
        "description": "Get a specific Slice group setting.",
        "operationId": "READ_RegistrySetting_for_User_Registry",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "registryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistrySetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage Slice group settings.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RegistrySettingUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry-setting"
        ],
        "description": "Update a specific Slice group setting.",
        "operationId": "UPDATE_RegistrySetting_for_User_Registry",
        "summary": ""
      }
    },
    "/user/{userID}/registry/{registryID}/registry-settlement": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "registryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to settle a Slice group.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/RegistrySettlementListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry-settlement"
        ],
        "description": "Get a listing of all Slice group settlements.",
        "operationId": "List_all_RegistrySettlement_for_User_Registry",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "registryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistrySettlement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to settle a Slice group.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RegistrySettlementCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry-settlement"
        ],
        "description": "Create a new Slice group settlement.",
        "operationId": "CREATE_RegistrySettlement_for_User_Registry",
        "summary": ""
      }
    },
    "/user/{userID}/registry/{registryID}/registry-settlement-pending": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "registryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage pending Slice group settlements.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/RegistrySettlementPendingListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry-settlement-pending"
        ],
        "description": "Get a listing of all pending Slice group settlements.",
        "operationId": "List_all_RegistrySettlementPending_for_User_Registry",
        "summary": ""
      }
    },
    "/user/{userID}/registry/{registryID}/registry-settlement/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "registryID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to settle a Slice group.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RegistrySettlementRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "registry-settlement"
        ],
        "description": "Get a specific Slice group settlement.",
        "operationId": "READ_RegistrySettlement_for_User_Registry",
        "summary": ""
      }
    },
    "/user/{userID}/reward": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view Rewards.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/RewardListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "reward"
        ],
        "description": "Used to view Rewards.",
        "operationId": "List_all_Reward_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/reward-recipient": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view Rewards.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/RewardRecipientListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "reward-recipient"
        ],
        "description": "Used to view Rewards.",
        "operationId": "List_all_RewardRecipient_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/reward-recipient/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view Rewards.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RewardRecipientRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "reward-recipient"
        ],
        "description": "Used to view Rewards.",
        "operationId": "READ_RewardRecipient_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/reward-sender": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view Rewards.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/RewardSenderListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "reward-sender"
        ],
        "description": "Used to view Rewards.",
        "operationId": "List_all_RewardSender_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/reward-sender/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view Rewards.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RewardSenderRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "reward-sender"
        ],
        "description": "Used to view Rewards.",
        "operationId": "READ_RewardSender_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/reward/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view Rewards.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RewardRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "reward"
        ],
        "description": "Used to view Rewards.",
        "operationId": "READ_Reward_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/schedule": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "view for reading the scheduled definitions.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ScheduleUserListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "schedule"
        ],
        "description": "Get a collection of scheduled definition for all accessible monetary accounts of the user. You can add the parameter type to filter the response. When type={SCHEDULE_DEFINITION_PAYMENT,SCHEDULE_DEFINITION_PAYMENT_BATCH} is provided only schedule definition object that relate to these definitions are returned.",
        "operationId": "List_all_Schedule_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/share-invite-monetary-account-response": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view or respond to shares a user was invited to. See 'share-invite-bank-inquiry' for more information about the inquiring endpoint.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ShareInviteMonetaryAccountResponseListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "share-invite-monetary-account-response"
        ],
        "description": "Return all the shares a user was invited to.",
        "operationId": "List_all_ShareInviteMonetaryAccountResponse_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/share-invite-monetary-account-response/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view or respond to shares a user was invited to. See 'share-invite-bank-inquiry' for more information about the inquiring endpoint.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ShareInviteMonetaryAccountResponseRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "share-invite-monetary-account-response"
        ],
        "description": "Return the details of a specific share a user was invited to.",
        "operationId": "READ_ShareInviteMonetaryAccountResponse_for_User",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShareInviteMonetaryAccountResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to view or respond to shares a user was invited to. See 'share-invite-bank-inquiry' for more information about the inquiring endpoint.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ShareInviteMonetaryAccountResponseUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "share-invite-monetary-account-response"
        ],
        "description": "Accept or reject a share a user was invited to.",
        "operationId": "UPDATE_ShareInviteMonetaryAccountResponse_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/token-qr-request-ideal": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenQrRequestIdeal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Using this call you create a request for payment from an external token provided with an ideal transaction. Make sure your iDEAL payments are compliant with the iDEAL standards, by following the following manual: https:/www.bunq.com/terms-idealstandards. It's very important to keep these points in mind when you are using the endpoint to make iDEAL payments from your application.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TokenQrRequestIdealCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "token-qr-request-ideal"
        ],
        "description": "Create a request from an ideal transaction.",
        "operationId": "CREATE_TokenQrRequestIdeal_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/token-qr-request-sofort": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenQrRequestSofort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Using this call you can create a SOFORT Request assigned to your User by providing the Token of the request.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TokenQrRequestSofortCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "token-qr-request-sofort"
        ],
        "description": "Create a request from an SOFORT transaction.",
        "operationId": "CREATE_TokenQrRequestSofort_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/transferwise-currency": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to get a list of supported currencies for Transferwise.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TransferwiseCurrencyListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-currency"
        ],
        "description": "Used to get a list of supported currencies for Transferwise.",
        "operationId": "List_all_TransferwiseCurrency_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/transferwise-quote": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferwiseQuote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to get quotes from Transferwise. These can be used to initiate payments.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TransferwiseQuoteCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-quote"
        ],
        "description": "Used to get quotes from Transferwise. These can be used to initiate payments.",
        "operationId": "CREATE_TransferwiseQuote_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/transferwise-quote-temporary": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferwiseQuoteTemporary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to get temporary quotes from Transferwise. These cannot be used to initiate payments",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TransferwiseQuoteTemporaryCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-quote-temporary"
        ],
        "description": "Used to get temporary quotes from Transferwise. These cannot be used to initiate payments",
        "operationId": "CREATE_TransferwiseQuoteTemporary_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/transferwise-quote-temporary/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to get temporary quotes from Transferwise. These cannot be used to initiate payments",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TransferwiseQuoteTemporaryRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-quote-temporary"
        ],
        "description": "Used to get temporary quotes from Transferwise. These cannot be used to initiate payments",
        "operationId": "READ_TransferwiseQuoteTemporary_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/transferwise-quote/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to get quotes from Transferwise. These can be used to initiate payments.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TransferwiseQuoteRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-quote"
        ],
        "description": "Used to get quotes from Transferwise. These can be used to initiate payments.",
        "operationId": "READ_TransferwiseQuote_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "transferwise-quoteID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage recipient accounts with Transferwise.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TransferwiseAccountQuoteListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-recipient"
        ],
        "description": "Used to manage recipient accounts with Transferwise.",
        "operationId": "List_all_TransferwiseRecipient_for_User_TransferwiseQuote",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "transferwise-quoteID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferwiseAccountQuote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage recipient accounts with Transferwise.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TransferwiseAccountQuoteCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-recipient"
        ],
        "description": "Used to manage recipient accounts with Transferwise.",
        "operationId": "CREATE_TransferwiseRecipient_for_User_TransferwiseQuote",
        "summary": ""
      }
    },
    "/user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient-requirement": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "transferwise-quoteID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to determine the recipient account requirements for Transferwise transfers.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TransferwiseAccountRequirementListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-recipient-requirement"
        ],
        "description": "Used to determine the recipient account requirements for Transferwise transfers.",
        "operationId": "List_all_TransferwiseRecipientRequirement_for_User_TransferwiseQuote",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "transferwise-quoteID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferwiseAccountRequirement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to determine the recipient account requirements for Transferwise transfers.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TransferwiseAccountRequirementCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-recipient-requirement"
        ],
        "description": "Used to determine the recipient account requirements for Transferwise transfers.",
        "operationId": "CREATE_TransferwiseRecipientRequirement_for_User_TransferwiseQuote",
        "summary": ""
      }
    },
    "/user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "transferwise-quoteID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage recipient accounts with Transferwise.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TransferwiseAccountQuoteDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-recipient"
        ],
        "description": "Used to manage recipient accounts with Transferwise.",
        "operationId": "DELETE_TransferwiseRecipient_for_User_TransferwiseQuote",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "transferwise-quoteID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage recipient accounts with Transferwise.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TransferwiseAccountQuoteRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-recipient"
        ],
        "description": "Used to manage recipient accounts with Transferwise.",
        "operationId": "READ_TransferwiseRecipient_for_User_TransferwiseQuote",
        "summary": ""
      }
    },
    "/user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-transfer": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "transferwise-quoteID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create Transferwise payments.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TransferwiseTransferListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-transfer"
        ],
        "description": "Used to create Transferwise payments.",
        "operationId": "List_all_TransferwiseTransfer_for_User_TransferwiseQuote",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "transferwise-quoteID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferwiseTransfer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create Transferwise payments.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TransferwiseTransferCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-transfer"
        ],
        "description": "Used to create Transferwise payments.",
        "operationId": "CREATE_TransferwiseTransfer_for_User_TransferwiseQuote",
        "summary": ""
      }
    },
    "/user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-transfer-requirement": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "transferwise-quoteID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferwiseTransferRequirement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to determine the account requirements for Transferwise transfers.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TransferwiseTransferRequirementCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-transfer-requirement"
        ],
        "description": "Used to determine the account requirements for Transferwise transfers.",
        "operationId": "CREATE_TransferwiseTransferRequirement_for_User_TransferwiseQuote",
        "summary": ""
      }
    },
    "/user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-transfer/{itemId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "transferwise-quoteID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to create Transferwise payments.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TransferwiseTransferRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-transfer"
        ],
        "description": "Used to create Transferwise payments.",
        "operationId": "READ_TransferwiseTransfer_for_User_TransferwiseQuote",
        "summary": ""
      }
    },
    "/user/{userID}/transferwise-user": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage Transferwise users.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TransferwiseUserListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-user"
        ],
        "description": "Used to manage Transferwise users.",
        "operationId": "List_all_TransferwiseUser_for_User",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferwiseUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Used to manage Transferwise users.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TransferwiseUserCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "transferwise-user"
        ],
        "description": "Used to manage Transferwise users.",
        "operationId": "CREATE_TransferwiseUser_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/tree-progress": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "See how many trees this user has planted.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/TreeProgressListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "tree-progress"
        ],
        "description": "See how many trees this user has planted.",
        "operationId": "List_all_TreeProgress_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/whitelist-sdd": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Whitelist an SDD so that when one comes in, it is automatically accepted.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/WhitelistSddListing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "whitelist-sdd"
        ],
        "description": "Get a listing of all SDD whitelist entries for a target monetary account.",
        "operationId": "List_all_WhitelistSdd_for_User",
        "summary": ""
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WhitelistSdd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Whitelist an SDD so that when one comes in, it is automatically accepted.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/WhitelistSddCreate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "whitelist-sdd"
        ],
        "description": "Create a new SDD whitelist entry.",
        "operationId": "CREATE_WhitelistSdd_for_User",
        "summary": ""
      }
    },
    "/user/{userID}/whitelist-sdd/{itemId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Whitelist an SDD so that when one comes in, it is automatically accepted.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/WhitelistSddDelete"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "whitelist-sdd"
        ],
        "description": "Whitelist an SDD so that when one comes in, it is automatically accepted.",
        "operationId": "DELETE_WhitelistSdd_for_User",
        "summary": ""
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Whitelist an SDD so that when one comes in, it is automatically accepted.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/WhitelistSddRead"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "whitelist-sdd"
        ],
        "description": "Get a specific SDD whitelist entry.",
        "operationId": "READ_WhitelistSdd_for_User",
        "summary": ""
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The standard HTTP Cache-Control header is required for all signed requests.",
            "in": "header",
            "name": "Cache-Control",
            "required": false,
            "type": "string"
          },
          {
            "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
            "in": "header",
            "name": "User-Agent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
            "in": "header",
            "name": "X-Bunq-Language",
            "required": false,
            "type": "string"
          },
          {
            "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "in": "header",
            "name": "X-Bunq-Region",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
            "in": "header",
            "name": "X-Bunq-Client-Request-Id",
            "required": false,
            "type": "string"
          },
          {
            "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
            "in": "header",
            "name": "X-Bunq-Geolocation",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
            "in": "header",
            "name": "X-Bunq-Client-Authentication",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WhitelistSdd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Whitelist an SDD so that when one comes in, it is automatically accepted.",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/WhitelistSddUpdate"
            }
          },
          "400": {
            "description": "This is how the error response looks like for 4XX response codes",
            "headers": {
              "X-Bunq-Client-Request-Id": {
                "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
                "required": false,
                "type": "string"
              },
              "X-Bunq-Client-Response-Id": {
                "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
                "type": "string"
              },
              "X-Bunq-Server-Signature": {
                "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "whitelist-sdd"
        ],
        "description": "Whitelist an SDD so that when one comes in, it is automatically accepted.",
        "operationId": "UPDATE_WhitelistSdd_for_User",
        "summary": ""
      }
    }
  },
  "definitions": {
    "Address": {
      "properties": {
        "city": {
          "description": "The city.",
          "readOnly": false,
          "type": "string"
        },
        "country": {
          "description": "The country as an ISO 3166-1 alpha-2 country code.",
          "readOnly": false,
          "type": "string"
        },
        "extra": {
          "description": "The apartment, building or other extra information for addresses.",
          "readOnly": false,
          "type": "string"
        },
        "house_number": {
          "description": "The house number.",
          "readOnly": false,
          "type": "string"
        },
        "mailbox_name": {
          "description": "The name on the mailbox (only used for Postal addresses).",
          "readOnly": false,
          "type": "string"
        },
        "po_box": {
          "description": "The PO box.",
          "readOnly": false,
          "type": "string"
        },
        "postal_code": {
          "description": "The postal code.",
          "readOnly": false,
          "type": "string"
        },
        "province": {
          "description": "The province according to local standard.",
          "readOnly": true,
          "type": "string"
        },
        "street": {
          "description": "The street.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AllocationItem": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/Pointer",
          "description": "The Alias of the party we are allocating money for.",
          "readOnly": false,
          "type": "object"
        },
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The Amount of the AllocationItem.",
          "readOnly": false,
          "type": "object"
        },
        "membership": {
          "$ref": "#/definitions/RegistryMembership",
          "description": "The membership.",
          "readOnly": true,
          "type": "object"
        },
        "share_ratio": {
          "description": "The share ratio of the AllocationItem.",
          "readOnly": false,
          "type": "integer"
        },
        "type": {
          "description": "The type of the AllocationItem.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "alias"
      ],
      "type": "object"
    },
    "Amount": {
      "properties": {
        "currency": {
          "description": "The currency of the amount. It is an ISO 4217 formatted currency code.",
          "readOnly": false,
          "type": "string"
        },
        "value": {
          "description": "The amount formatted to two decimal places.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Attachment": {
      "properties": {
        "content_type": {
          "description": "The content type of the attachment's file.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the attachment.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AttachmentConversationContentListing": {
      "type": "object"
    },
    "AttachmentMonetaryAccount": {
      "type": "object"
    },
    "AttachmentMonetaryAccountContentListing": {
      "type": "object"
    },
    "AttachmentMonetaryAccountCreate": {
      "properties": {
        "id": {
          "description": "The ID of the attachment created.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AttachmentMonetaryAccountPayment": {
      "properties": {
        "id": {
          "description": "The id of the attached Attachment.",
          "readOnly": false,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the MonetaryAccount this Attachment is attached from.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AttachmentPublic": {
      "type": "object"
    },
    "AttachmentPublicContentListing": {
      "type": "object"
    },
    "AttachmentPublicCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "AttachmentPublicRead": {
      "properties": {
        "attachment": {
          "$ref": "#/definitions/Attachment",
          "description": "The attachment.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the attachment's creation.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the attachment's last update.",
          "readOnly": true,
          "type": "string"
        },
        "uuid": {
          "description": "The UUID of the attachment.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AttachmentTab": {
      "type": "object"
    },
    "AttachmentTabContentListing": {
      "type": "object"
    },
    "AttachmentTabCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "AttachmentTabRead": {
      "properties": {
        "attachment": {
          "$ref": "#/definitions/Attachment",
          "description": "The attachment.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the attachment's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the attachment.",
          "readOnly": true,
          "type": "integer"
        },
        "updated": {
          "description": "The timestamp of the attachment's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AttachmentUserContentListing": {
      "type": "object"
    },
    "AttachmentUserRead": {
      "properties": {
        "attachment": {
          "$ref": "#/definitions/Attachment",
          "description": "The attachment.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the attachment's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the attachment.",
          "readOnly": true,
          "type": "integer"
        },
        "updated": {
          "description": "The timestamp of the attachment's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Avatar": {
      "properties": {
        "anchor_uuid": {
          "description": "The public UUID of object this avatar is anchored to.",
          "readOnly": true,
          "type": "string"
        },
        "image": {
          "description": "The actual image information of this avatar.",
          "items": {
            "$ref": "#/definitions/Image"
          },
          "readOnly": true,
          "type": "array"
        },
        "uuid": {
          "description": "The public UUID of the avatar.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AvatarCreate": {
      "properties": {
        "uuid": {
          "description": "The UUID of the created avatar.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AvatarRead": {
      "properties": {
        "image": {
          "description": "The content type of the image.",
          "items": {
            "$ref": "#/definitions/Image"
          },
          "readOnly": true,
          "type": "array"
        },
        "uuid": {
          "description": "The UUID of the created avatar.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "BankSwitchServiceNetherlandsIncoming": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The label of the monetary of this switch service.",
          "readOnly": false,
          "type": "object"
        },
        "attachment": {
          "$ref": "#/definitions/Attachment",
          "description": "Reference to the bank transfer form for this switch-service.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The IBAN alias that's displayed for this switch service.",
          "readOnly": false,
          "type": "object"
        },
        "status": {
          "description": "The status of the switch service.",
          "readOnly": false,
          "type": "string"
        },
        "sub_status": {
          "description": "The sub status of the switch service.",
          "readOnly": true,
          "type": "string"
        },
        "time_end": {
          "description": "The timestamp when the switch service ends.",
          "readOnly": true,
          "type": "string"
        },
        "time_start_actual": {
          "description": "The timestamp when the switch service actually starts.",
          "readOnly": true,
          "type": "string"
        },
        "time_start_desired": {
          "description": "The timestamp when the switch service desired to be start.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user creator of this switch service.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "BankSwitchServiceNetherlandsIncomingPayment": {
      "properties": {
        "bank_switch_service": {
          "$ref": "#/definitions/BankSwitchServiceNetherlandsIncoming",
          "description": "The bank switch service details.",
          "readOnly": true,
          "type": "object"
        },
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The payment made using bank switch service.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "BankSwitchServiceNetherlandsIncomingPaymentRead": {
      "properties": {
        "bank_switch_service": {
          "$ref": "#/definitions/BankSwitchServiceNetherlandsIncoming",
          "description": "The bank switch service details.",
          "readOnly": true,
          "type": "object"
        },
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The payment made using bank switch service.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "BillingContractSubscription": {
      "properties": {
        "contract_date_end": {
          "description": "The date until when the billing contract is valid.",
          "readOnly": true,
          "type": "string"
        },
        "contract_date_start": {
          "description": "The date from when the billing contract is valid.",
          "readOnly": true,
          "type": "string"
        },
        "contract_version": {
          "description": "The version of the billing contract.",
          "readOnly": true,
          "type": "integer"
        },
        "created": {
          "description": "The timestamp when the billing contract was made.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the billing contract.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The subscription status.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The subscription substatus.",
          "readOnly": true,
          "type": "string"
        },
        "subscription_type": {
          "description": "The subscription type of the user. Can be one of PERSON_SUPER_LIGHT_V1, PERSON_LIGHT_V1, PERSON_MORE_V1, PERSON_FREE_V1, PERSON_PREMIUM_V1, COMPANY_V1, or COMPANY_V2.",
          "readOnly": false,
          "type": "string"
        },
        "subscription_type_downgrade": {
          "description": "The subscription type the user will have after a subscription downgrade. Will be null if downgrading is not possible.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the billing contract was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillingContractSubscriptionListing": {
      "properties": {
        "contract_date_end": {
          "description": "The date until when the billing contract is valid.",
          "readOnly": true,
          "type": "string"
        },
        "contract_date_start": {
          "description": "The date from when the billing contract is valid.",
          "readOnly": true,
          "type": "string"
        },
        "contract_version": {
          "description": "The version of the billing contract.",
          "readOnly": true,
          "type": "integer"
        },
        "created": {
          "description": "The timestamp when the billing contract was made.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the billing contract.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The subscription status.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The subscription substatus.",
          "readOnly": true,
          "type": "string"
        },
        "subscription_type": {
          "description": "The subscription type of the user. Can be one of PERSON_SUPER_LIGHT_V1, PERSON_LIGHT_V1, PERSON_MORE_V1, PERSON_FREE_V1, PERSON_PREMIUM_V1, COMPANY_V1, or COMPANY_V2.",
          "readOnly": true,
          "type": "string"
        },
        "subscription_type_downgrade": {
          "description": "The subscription type the user will have after a subscription downgrade. Will be null if downgrading is not possible.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the billing contract was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "BudgetRestriction": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the budget given to the invited user.",
          "readOnly": false,
          "type": "object"
        },
        "frequency": {
          "description": "The duration for a budget restriction. Valid values are DAILY, WEEKLY, MONTHLY, YEARLY.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "BunqId": {
      "properties": {
        "id": {
          "description": "An integer ID of an object. Unique per object type.",
          "readOnly": false,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BunqMeFundraiserProfile": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the User and the MonetaryAccount that created the bunq.me fundraiser profile.",
          "readOnly": true,
          "type": "object"
        },
        "attachment": {
          "$ref": "#/definitions/AttachmentPublic",
          "description": "The attachment attached to the fundraiser profile.",
          "readOnly": true,
          "type": "object"
        },
        "color": {
          "description": "The color chosen for the bunq.me fundraiser profile in hexadecimal format.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the bunq.me fundraiser profile.",
          "readOnly": true,
          "type": "string"
        },
        "invite_profile_name": {
          "description": "Provided if the user has enabled their invite link.",
          "readOnly": true,
          "type": "string"
        },
        "pointer": {
          "$ref": "#/definitions/Pointer",
          "description": "The pointer (url) which will be used to access the bunq.me fundraiser profile.",
          "readOnly": false,
          "type": "object"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to when a payment is completed.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the bunq.me fundraiser profile, can be ACTIVE or DEACTIVATED.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "BunqMeFundraiserProfileUserListing": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the User and the MonetaryAccount that created the bunq.me fundraiser profile.",
          "readOnly": true,
          "type": "object"
        },
        "attachment": {
          "$ref": "#/definitions/AttachmentPublic",
          "description": "The attachment used for the background of the bunq.me fundraiser profile.",
          "readOnly": true,
          "type": "object"
        },
        "color": {
          "description": "The color chosen for the bunq.me fundraiser profile in hexadecimal format.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the bunq.me fundraiser profile.",
          "readOnly": true,
          "type": "string"
        },
        "monetary_account_id": {
          "description": "Id of the monetary account on which you want to receive bunq.me payments.",
          "readOnly": true,
          "type": "integer"
        },
        "owner_user_id": {
          "description": "Id of the user owning the profile.",
          "readOnly": true,
          "type": "integer"
        },
        "pointer": {
          "$ref": "#/definitions/Pointer",
          "description": "The pointer (url) which will be used to access the bunq.me fundraiser profile.",
          "readOnly": true,
          "type": "object"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to when a payment is completed.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the bunq.me fundraiser profile, can be ACTIVE or DEACTIVATED.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "BunqMeFundraiserProfileUserRead": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the User and the MonetaryAccount that created the bunq.me fundraiser profile.",
          "readOnly": true,
          "type": "object"
        },
        "attachment": {
          "$ref": "#/definitions/AttachmentPublic",
          "description": "The attachment used for the background of the bunq.me fundraiser profile.",
          "readOnly": true,
          "type": "object"
        },
        "color": {
          "description": "The color chosen for the bunq.me fundraiser profile in hexadecimal format.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the bunq.me fundraiser profile.",
          "readOnly": true,
          "type": "string"
        },
        "monetary_account_id": {
          "description": "Id of the monetary account on which you want to receive bunq.me payments.",
          "readOnly": true,
          "type": "integer"
        },
        "owner_user_id": {
          "description": "Id of the user owning the profile.",
          "readOnly": true,
          "type": "integer"
        },
        "pointer": {
          "$ref": "#/definitions/Pointer",
          "description": "The pointer (url) which will be used to access the bunq.me fundraiser profile.",
          "readOnly": true,
          "type": "object"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to when a payment is completed.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the bunq.me fundraiser profile, can be ACTIVE or DEACTIVATED.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "BunqMeFundraiserResult": {
      "properties": {
        "bunqme_fundraiser_profile": {
          "$ref": "#/definitions/BunqMeFundraiserProfile",
          "description": "The bunq.me fundraiser profile.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp when the bunq.me was created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the bunq.me.",
          "readOnly": true,
          "type": "integer"
        },
        "payments": {
          "description": "The list of payments, paid to the bunq.me fundraiser profile.",
          "items": {
            "$ref": "#/definitions/Payment"
          },
          "readOnly": true,
          "type": "array"
        },
        "updated": {
          "description": "The timestamp when the bunq.me was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "BunqMeFundraiserResultRead": {
      "properties": {
        "bunqme_fundraiser_profile": {
          "$ref": "#/definitions/BunqMeFundraiserProfile",
          "description": "The bunq.me fundraiser profile.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp when the bunq.me was created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the bunq.me.",
          "readOnly": true,
          "type": "integer"
        },
        "payments": {
          "description": "The list of payments, paid to the bunq.me fundraiser profile.",
          "items": {
            "$ref": "#/definitions/Payment"
          },
          "readOnly": true,
          "type": "array"
        },
        "updated": {
          "description": "The timestamp when the bunq.me was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "BunqMeMerchantAvailable": {
      "properties": {
        "available": {
          "description": "Whether or not the merchant is available for the user.",
          "readOnly": true,
          "type": "boolean"
        },
        "merchant_type": {
          "description": "A merchant type supported by bunq.me.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "BunqMeTab": {
      "properties": {
        "bunqme_tab_entry": {
          "$ref": "#/definitions/BunqMeTabEntry",
          "description": "The bunq.me entry containing the payment information.",
          "readOnly": false,
          "type": "object"
        },
        "status": {
          "description": "The status of the bunq.me. Ignored in POST requests but can be used for cancelling the bunq.me by setting status as CANCELLED with a PUT request.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "bunqme_tab_entry"
      ],
      "type": "object"
    },
    "BunqMeTabCreate": {
      "properties": {
        "id": {
          "description": "The id of the created bunq.me.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BunqMeTabEntry": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the User and the MonetaryAccount that created the bunq.me link.",
          "readOnly": true,
          "type": "object"
        },
        "amount_inquired": {
          "$ref": "#/definitions/Amount",
          "description": "The requested Amount.",
          "readOnly": false,
          "type": "object"
        },
        "description": {
          "description": "The description for the bunq.me. Maximum 9000 characters.",
          "readOnly": false,
          "type": "string"
        },
        "merchant_available": {
          "description": "List of available merchants.",
          "items": {
            "$ref": "#/definitions/BunqMeMerchantAvailable"
          },
          "readOnly": true,
          "type": "array"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to when a payment is completed.",
          "readOnly": false,
          "type": "string"
        },
        "status": {
          "description": "The status of the bunq.me. Can be WAITING_FOR_PAYMENT, CANCELLED or EXPIRED.",
          "readOnly": true,
          "type": "string"
        },
        "uuid": {
          "description": "The uuid of the bunq.me.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "BunqMeTabListing": {
      "properties": {
        "bunqme_tab_entry": {
          "$ref": "#/definitions/BunqMeTabEntry",
          "description": "The bunq.me entry containing the payment information.",
          "readOnly": true,
          "type": "object"
        },
        "bunqme_tab_share_url": {
          "description": "The url that points to the bunq.me page.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp when the bunq.me was created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the created bunq.me.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the MonetaryAccount the bunq.me was sent from.",
          "readOnly": true,
          "type": "integer"
        },
        "result_inquiries": {
          "description": "The list of bunq.me result Inquiries successfully made and paid.",
          "items": {
            "$ref": "#/definitions/BunqMeTabResultInquiry"
          },
          "readOnly": true,
          "type": "array"
        },
        "status": {
          "description": "The status of the bunq.me. Can be WAITING_FOR_PAYMENT, CANCELLED or EXPIRED.",
          "readOnly": true,
          "type": "string"
        },
        "time_expiry": {
          "description": "The timestamp of when the bunq.me expired or will expire.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the bunq.me was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "BunqMeTabRead": {
      "properties": {
        "bunqme_tab_entry": {
          "$ref": "#/definitions/BunqMeTabEntry",
          "description": "The bunq.me entry containing the payment information.",
          "readOnly": true,
          "type": "object"
        },
        "bunqme_tab_share_url": {
          "description": "The url that points to the bunq.me page.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp when the bunq.me was created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the created bunq.me.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the MonetaryAccount the bunq.me was sent from.",
          "readOnly": true,
          "type": "integer"
        },
        "result_inquiries": {
          "description": "The list of bunq.me result Inquiries successfully made and paid.",
          "items": {
            "$ref": "#/definitions/BunqMeTabResultInquiry"
          },
          "readOnly": true,
          "type": "array"
        },
        "status": {
          "description": "The status of the bunq.me. Can be WAITING_FOR_PAYMENT, CANCELLED or EXPIRED.",
          "readOnly": true,
          "type": "string"
        },
        "time_expiry": {
          "description": "The timestamp of when the bunq.me expired or will expire.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the bunq.me was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "BunqMeTabResultInquiry": {
      "properties": {
        "bunq_me_tab_id": {
          "description": "The Id of the bunq.me tab that this BunqMeTabResultInquiry belongs to.",
          "readOnly": true,
          "type": "integer"
        },
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The payment made for the Tab.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "BunqMeTabResultResponse": {
      "properties": {
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The payment made for the bunq.me tab.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "BunqMeTabResultResponseRead": {
      "properties": {
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The payment made for the bunq.me tab.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "BunqMeTabUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "Card": {
      "properties": {
        "card_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The spending limit for the card.",
          "readOnly": false,
          "type": "object"
        },
        "card_limit_atm": {
          "$ref": "#/definitions/Amount",
          "description": "The ATM spending limit for the card.",
          "readOnly": false,
          "type": "object"
        },
        "country_permission": {
          "description": "The countries for which to grant (temporary) permissions to use the card.",
          "items": {
            "$ref": "#/definitions/CardCountryPermission"
          },
          "readOnly": false,
          "type": "array"
        },
        "monetary_account_id_fallback": {
          "description": "ID of the MA to be used as fallback for this card if insufficient balance. Fallback account is removed if not supplied.",
          "readOnly": false,
          "type": "integer"
        },
        "pin_code": {
          "description": "The plaintext pin code. Requests require encryption to be enabled.",
          "readOnly": false,
          "type": "string"
        },
        "pin_code_assignment": {
          "description": "Array of Types, PINs, account IDs assigned to the card.",
          "items": {
            "$ref": "#/definitions/CardPinAssignment"
          },
          "readOnly": false,
          "type": "array"
        },
        "primary_account_numbers": {
          "description": "Array of PANs and their attributes.",
          "items": {
            "$ref": "#/definitions/CardPrimaryAccountNumber"
          },
          "readOnly": false,
          "type": "array"
        },
        "status": {
          "description": "The status to set for the card. Can be ACTIVE, DEACTIVATED, LOST, STOLEN or CANCELLED, and can only be set to LOST/STOLEN/CANCELLED when order status is ACCEPTED_FOR_PRODUCTION/DELIVERED_TO_CUSTOMER/CARD_UPDATE_REQUESTED/CARD_UPDATE_SENT/CARD_UPDATE_ACCEPTED. Can only be set to DEACTIVATED after initial activation, i.e. order_status is DELIVERED_TO_CUSTOMER/CARD_UPDATE_REQUESTED/CARD_UPDATE_SENT/CARD_UPDATE_ACCEPTED. Mind that all the possible choices (apart from ACTIVE and DEACTIVATED) are permanent and cannot be changed after.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CardBatch": {
      "properties": {
        "cards": {
          "description": "The cards that need to be updated.",
          "items": {
            "$ref": "#/definitions/CardBatchEntry"
          },
          "readOnly": false,
          "type": "array"
        }
      },
      "required": [
        "cards"
      ],
      "type": "object"
    },
    "CardBatchCreate": {
      "properties": {
        "updated_card_ids": {
          "description": "The ids of the cards that have been updated.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "CardBatchEntry": {
      "properties": {
        "card_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The spending limit for the card.",
          "readOnly": false,
          "type": "object"
        },
        "card_limit_atm": {
          "$ref": "#/definitions/Amount",
          "description": "The ATM spending limit for the card.",
          "readOnly": false,
          "type": "object"
        },
        "country_permission": {
          "description": "The countries for which to grant (temporary) permissions to use the card.",
          "items": {
            "$ref": "#/definitions/CardCountryPermission"
          },
          "readOnly": false,
          "type": "array"
        },
        "id": {
          "description": "The ID of the card that needs to be updated.",
          "readOnly": false,
          "type": "integer"
        },
        "monetary_account_id_fallback": {
          "description": "ID of the MA to be used as fallback for this card if insufficient balance. Fallback account is removed if not supplied.",
          "readOnly": false,
          "type": "integer"
        },
        "status": {
          "description": "The status to set for the card. Can be ACTIVE, DEACTIVATED, LOST, STOLEN or CANCELLED, and can only be set to LOST/STOLEN/CANCELLED when order status is ACCEPTED_FOR_PRODUCTION/DELIVERED_TO_CUSTOMER/CARD_UPDATE_REQUESTED/CARD_UPDATE_SENT/CARD_UPDATE_ACCEPTED. Can only be set to DEACTIVATED after initial activation, i.e. order_status is DELIVERED_TO_CUSTOMER/CARD_UPDATE_REQUESTED/CARD_UPDATE_SENT/CARD_UPDATE_ACCEPTED. Mind that all the possible choices (apart from ACTIVE and DEACTIVATED) are permanent and cannot be changed after.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "CardCountryPermission": {
      "properties": {
        "country": {
          "description": "The country to allow transactions in (e.g. NL, DE).",
          "readOnly": false,
          "type": "string"
        },
        "expiry_time": {
          "description": "Expiry time of this rule.",
          "readOnly": false,
          "type": "string"
        },
        "id": {
          "description": "The id of the card country permission entry.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CardCredit": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/Pointer",
          "description": "The pointer to the monetary account that will be connected at first with the card. Its IBAN code is also the one that will be printed on the card itself. The pointer must be of type IBAN.",
          "readOnly": false,
          "type": "object"
        },
        "monetary_account_id_fallback": {
          "description": "ID of the MA to be used as fallback for this card if insufficient balance. Fallback account is removed if not supplied.",
          "readOnly": false,
          "type": "integer"
        },
        "name_on_card": {
          "description": "The user's name as it will be on the card. Check 'card-name' for the available card names for a user.",
          "readOnly": false,
          "type": "string"
        },
        "pin_code_assignment": {
          "description": "Array of Types, PINs, account IDs assigned to the card.",
          "items": {
            "$ref": "#/definitions/CardPinAssignment"
          },
          "readOnly": false,
          "type": "array"
        },
        "product_type": {
          "description": "The product type of the card to order.",
          "readOnly": false,
          "type": "string"
        },
        "second_line": {
          "description": "The second line of text on the card, used as name/description for it. It can contain at most 17 characters and it can be empty.",
          "readOnly": false,
          "type": "string"
        },
        "type": {
          "description": "The type of card to order. Can be MASTERCARD.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "second_line",
        "name_on_card",
        "type"
      ],
      "type": "object"
    },
    "CardCreditCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "CardDebit": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/Pointer",
          "description": "The pointer to the monetary account that will be connected at first with the card. Its IBAN code is also the one that will be printed on the card itself. The pointer must be of type IBAN.",
          "readOnly": false,
          "type": "object"
        },
        "monetary_account_id_fallback": {
          "description": "ID of the MA to be used as fallback for this card if insufficient balance. Fallback account is removed if not supplied.",
          "readOnly": false,
          "type": "integer"
        },
        "name_on_card": {
          "description": "The user's name as it will be on the card. Check 'card-name' for the available card names for a user.",
          "readOnly": false,
          "type": "string"
        },
        "pin_code_assignment": {
          "description": "Array of Types, PINs, account IDs assigned to the card.",
          "items": {
            "$ref": "#/definitions/CardPinAssignment"
          },
          "readOnly": false,
          "type": "array"
        },
        "product_type": {
          "description": "The product type of the card to order.",
          "readOnly": false,
          "type": "string"
        },
        "second_line": {
          "description": "The second line of text on the card, used as name/description for it. It can contain at most 17 characters and it can be empty.",
          "readOnly": false,
          "type": "string"
        },
        "type": {
          "description": "The type of card to order. Can be MAESTRO or MASTERCARD.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "second_line",
        "name_on_card",
        "type"
      ],
      "type": "object"
    },
    "CardDebitCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "CardGeneratedCvc2": {
      "properties": {
        "type": {
          "description": "The type of generated cvc2. Can be STATIC or GENERATED.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CardGeneratedCvc2Create": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "CardGeneratedCvc2Listing": {
      "properties": {
        "created": {
          "description": "The timestamp of the cvc code's creation.",
          "readOnly": true,
          "type": "string"
        },
        "cvc2": {
          "description": "The cvc2 code.",
          "readOnly": true,
          "type": "string"
        },
        "expiry_time": {
          "description": "Expiry time of the cvc2.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the cvc code.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the cvc2. Can be AVAILABLE, USED, EXPIRED, BLOCKED.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of generated cvc2. Can be STATIC or GENERATED.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the cvc code's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CardGeneratedCvc2Read": {
      "properties": {
        "created": {
          "description": "The timestamp of the cvc code's creation.",
          "readOnly": true,
          "type": "string"
        },
        "cvc2": {
          "description": "The cvc2 code.",
          "readOnly": true,
          "type": "string"
        },
        "expiry_time": {
          "description": "Expiry time of the cvc2.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the cvc code.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the cvc2. Can be AVAILABLE, USED, EXPIRED, BLOCKED.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of generated cvc2. Can be STATIC or GENERATED.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the cvc code's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CardGeneratedCvc2Update": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "CardListing": {
      "properties": {
        "amount_saved_zero_fx": {
          "$ref": "#/definitions/Amount",
          "description": "The amount saved through ZeroFX on this card.",
          "readOnly": true,
          "type": "object"
        },
        "card_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The spending limit for the card.",
          "readOnly": true,
          "type": "object"
        },
        "card_limit_atm": {
          "$ref": "#/definitions/Amount",
          "description": "The ATM spending limit for the card.",
          "readOnly": true,
          "type": "object"
        },
        "card_shipment_tracking_url": {
          "description": "A tracking link provided by our shipment provider.",
          "readOnly": true,
          "type": "string"
        },
        "country": {
          "description": "The country that is domestic to the card. Defaults to country of residence of user.",
          "readOnly": true,
          "type": "string"
        },
        "country_permission": {
          "description": "The countries for which to grant (temporary) permissions to use the card.",
          "items": {
            "$ref": "#/definitions/CardCountryPermission"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the card's creation.",
          "readOnly": true,
          "type": "string"
        },
        "expiry_date": {
          "description": "Expiry date of the card.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the card.",
          "readOnly": true,
          "type": "integer"
        },
        "label_monetary_account_current": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account that this card is currently linked to and the label user viewing it.",
          "readOnly": true,
          "type": "object"
        },
        "label_monetary_account_ordered": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account this card was ordered on and the label user that owns the card.",
          "readOnly": true,
          "type": "object"
        },
        "monetary_account_id_fallback": {
          "description": "ID of the MA to be used as fallback for this card if insufficient balance. Fallback account is removed if not supplied.",
          "readOnly": true,
          "type": "integer"
        },
        "name_on_card": {
          "description": "The user's name on the card.",
          "readOnly": true,
          "type": "string"
        },
        "order_status": {
          "description": "The order status of the card. Can be NEW_CARD_REQUEST_RECEIVED, CARD_REQUEST_PENDING, SENT_FOR_PRODUCTION, ACCEPTED_FOR_PRODUCTION, DELIVERED_TO_CUSTOMER, CARD_UPDATE_REQUESTED, CARD_UPDATE_PENDING, CARD_UPDATE_SENT, CARD_UPDATE_ACCEPTED, VIRTUAL_DELIVERY, NEW_CARD_REQUEST_PENDING_USER_APPROVAL, SENT_FOR_DELIVERY or NEW_CARD_REQUEST_CANCELLED.",
          "readOnly": true,
          "type": "string"
        },
        "pin_code_assignment": {
          "description": "Array of Types, PINs, account IDs assigned to the card.",
          "items": {
            "$ref": "#/definitions/CardPinAssignment"
          },
          "readOnly": true,
          "type": "array"
        },
        "primary_account_numbers": {
          "description": "Array of PANs and their attributes.",
          "items": {
            "$ref": "#/definitions/CardPrimaryAccountNumber"
          },
          "readOnly": true,
          "type": "array"
        },
        "public_uuid": {
          "description": "The public UUID of the card.",
          "readOnly": true,
          "type": "string"
        },
        "second_line": {
          "description": "The second line of text on the card",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status to set for the card. Can be ACTIVE, DEACTIVATED, LOST, STOLEN, CANCELLED, EXPIRED or PIN_TRIES_EXCEEDED.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The sub-status of the card. Can be NONE or REPLACED.",
          "readOnly": true,
          "type": "string"
        },
        "sub_type": {
          "description": "The sub-type of the card.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the card. Can be MAESTRO, MASTERCARD.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the card's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user who is owner of the card.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CardNameListing": {
      "properties": {
        "possible_card_name_array": {
          "description": "All possible variations (of suitable length) of user's legal name for the debit card.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "CardPinAssignment": {
      "properties": {
        "monetary_account_id": {
          "description": "The ID of the monetary account to assign to this pin for the card.",
          "readOnly": false,
          "type": "integer"
        },
        "pin_code": {
          "description": "The 4 digit PIN to be assigned to this account.",
          "readOnly": false,
          "type": "string"
        },
        "type": {
          "description": "PIN type. Can be PRIMARY, SECONDARY or TERTIARY",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CardPrimaryAccountNumber": {
      "properties": {
        "description": {
          "description": "The description for this PAN.",
          "readOnly": false,
          "type": "string"
        },
        "four_digit": {
          "description": "The last four digits of the PAN.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID for this Virtual PAN.",
          "readOnly": false,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The ID of the monetary account to assign to this PAN, only for Online Cards.",
          "readOnly": false,
          "type": "integer"
        },
        "status": {
          "description": "The status for this PAN, only for Online Cards.",
          "readOnly": false,
          "type": "string"
        },
        "uuid": {
          "description": "The UUID for this Virtual PAN.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CardRead": {
      "properties": {
        "amount_saved_zero_fx": {
          "$ref": "#/definitions/Amount",
          "description": "The amount saved through ZeroFX on this card.",
          "readOnly": true,
          "type": "object"
        },
        "card_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The spending limit for the card.",
          "readOnly": true,
          "type": "object"
        },
        "card_limit_atm": {
          "$ref": "#/definitions/Amount",
          "description": "The ATM spending limit for the card.",
          "readOnly": true,
          "type": "object"
        },
        "card_shipment_tracking_url": {
          "description": "A tracking link provided by our shipment provider.",
          "readOnly": true,
          "type": "string"
        },
        "country": {
          "description": "The country that is domestic to the card. Defaults to country of residence of user.",
          "readOnly": true,
          "type": "string"
        },
        "country_permission": {
          "description": "The countries for which to grant (temporary) permissions to use the card.",
          "items": {
            "$ref": "#/definitions/CardCountryPermission"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the card's creation.",
          "readOnly": true,
          "type": "string"
        },
        "expiry_date": {
          "description": "Expiry date of the card.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the card.",
          "readOnly": true,
          "type": "integer"
        },
        "label_monetary_account_current": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account that this card is currently linked to and the label user viewing it.",
          "readOnly": true,
          "type": "object"
        },
        "label_monetary_account_ordered": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account this card was ordered on and the label user that owns the card.",
          "readOnly": true,
          "type": "object"
        },
        "monetary_account_id_fallback": {
          "description": "ID of the MA to be used as fallback for this card if insufficient balance. Fallback account is removed if not supplied.",
          "readOnly": true,
          "type": "integer"
        },
        "name_on_card": {
          "description": "The user's name on the card.",
          "readOnly": true,
          "type": "string"
        },
        "order_status": {
          "description": "The order status of the card. Can be NEW_CARD_REQUEST_RECEIVED, CARD_REQUEST_PENDING, SENT_FOR_PRODUCTION, ACCEPTED_FOR_PRODUCTION, DELIVERED_TO_CUSTOMER, CARD_UPDATE_REQUESTED, CARD_UPDATE_PENDING, CARD_UPDATE_SENT, CARD_UPDATE_ACCEPTED, VIRTUAL_DELIVERY, NEW_CARD_REQUEST_PENDING_USER_APPROVAL, SENT_FOR_DELIVERY or NEW_CARD_REQUEST_CANCELLED.",
          "readOnly": true,
          "type": "string"
        },
        "pin_code_assignment": {
          "description": "Array of Types, PINs, account IDs assigned to the card.",
          "items": {
            "$ref": "#/definitions/CardPinAssignment"
          },
          "readOnly": true,
          "type": "array"
        },
        "primary_account_numbers": {
          "description": "Array of PANs and their attributes.",
          "items": {
            "$ref": "#/definitions/CardPrimaryAccountNumber"
          },
          "readOnly": true,
          "type": "array"
        },
        "public_uuid": {
          "description": "The public UUID of the card.",
          "readOnly": true,
          "type": "string"
        },
        "second_line": {
          "description": "The second line of text on the card",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status to set for the card. Can be ACTIVE, DEACTIVATED, LOST, STOLEN, CANCELLED, EXPIRED or PIN_TRIES_EXCEEDED.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The sub-status of the card. Can be NONE or REPLACED.",
          "readOnly": true,
          "type": "string"
        },
        "sub_type": {
          "description": "The sub-type of the card.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the card. Can be MAESTRO, MASTERCARD.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the card's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user who is owner of the card.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CardReplace": {
      "properties": {
        "name_on_card": {
          "description": "The user's name as it will be on the card. Check 'card-name' for the available card names for a user.",
          "readOnly": false,
          "type": "string"
        },
        "pin_code_assignment": {
          "description": "Array of Types, PINs, account IDs assigned to the card.",
          "items": {
            "$ref": "#/definitions/CardPinAssignment"
          },
          "readOnly": false,
          "type": "array"
        },
        "second_line": {
          "description": "The second line on the card.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CardReplaceCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "CardUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "CashRegister": {
      "properties": {
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The Avatar of the CashRegister.",
          "readOnly": true,
          "type": "object"
        },
        "avatar_uuid": {
          "description": "The UUID of the avatar of the CashRegister. Use the calls /attachment-public and /avatar to create a new Avatar and get its UUID.",
          "readOnly": false,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the CashRegister's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the created CashRegister.",
          "readOnly": true,
          "type": "integer"
        },
        "location": {
          "$ref": "#/definitions/Geolocation",
          "description": "The geolocation of the CashRegister. Can be null.",
          "readOnly": false,
          "type": "object"
        },
        "name": {
          "description": "The name of the CashRegister.",
          "readOnly": false,
          "type": "string"
        },
        "status": {
          "description": "The status of the CashRegister. Can be PENDING_APPROVAL, ACTIVE, DENIED or CLOSED.",
          "readOnly": false,
          "type": "string"
        },
        "tab_text_waiting_screen": {
          "description": "The tab text for waiting screen of CashRegister.",
          "items": {
            "$ref": "#/definitions/TabTextWaitingScreen"
          },
          "readOnly": false,
          "type": "array"
        },
        "updated": {
          "description": "The timestamp of the CashRegister's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "avatar_uuid"
      ],
      "type": "object"
    },
    "CashRegisterCreate": {
      "properties": {
        "id": {
          "description": "The id of the created CashRegister.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CashRegisterListing": {
      "properties": {
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The Avatar of the CashRegister.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the CashRegister's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the created CashRegister.",
          "readOnly": true,
          "type": "integer"
        },
        "location": {
          "$ref": "#/definitions/Geolocation",
          "description": "The geolocation of the CashRegister. Can be null.",
          "readOnly": true,
          "type": "object"
        },
        "name": {
          "description": "The name of the CashRegister.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the CashRegister. Can be PENDING_APPROVAL, ACTIVE, DENIED or CLOSED.",
          "readOnly": true,
          "type": "string"
        },
        "tab_text_waiting_screen": {
          "description": "The tab text for waiting screen of CashRegister.",
          "items": {
            "$ref": "#/definitions/TabTextWaitingScreen"
          },
          "readOnly": true,
          "type": "array"
        },
        "updated": {
          "description": "The timestamp of the CashRegister's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CashRegisterQrCode": {
      "properties": {
        "status": {
          "description": "The status of the QR code. ACTIVE or INACTIVE. Only one QR code can be ACTIVE for a CashRegister at any time. Setting a QR code to ACTIVE will deactivate any other CashRegister QR codes.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "type": "object"
    },
    "CashRegisterQrCodeContentListing": {
      "type": "object"
    },
    "CashRegisterQrCodeCreate": {
      "properties": {
        "id": {
          "description": "The id of the created QR code. Use this id to get the RAW content of the QR code with: ../qr-code/{id}/content",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CashRegisterQrCodeListing": {
      "properties": {
        "cash_register": {
          "$ref": "#/definitions/CashRegister",
          "description": "The CashRegister that is linked to the token.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the QR code's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the created QR code. Use this id to get the RAW content of the QR code with: ../qr-code/{id}/content",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of this QR code. If the status is \"ACTIVE\" the QR code can be scanned to see the linked CashRegister and tab. If the status is \"INACTIVE\" the QR code does not link to a anything.",
          "readOnly": true,
          "type": "string"
        },
        "tab_object": {
          "$ref": "#/definitions/Tab",
          "description": "Holds the Tab object. Can be TabUsageSingle, TabUsageMultiple or null",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the TokenQrCashRegister's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CashRegisterQrCodeRead": {
      "properties": {
        "cash_register": {
          "$ref": "#/definitions/CashRegister",
          "description": "The CashRegister that is linked to the token.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the QR code's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the created QR code. Use this id to get the RAW content of the QR code with: ../qr-code/{id}/content",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of this QR code. If the status is \"ACTIVE\" the QR code can be scanned to see the linked CashRegister and tab. If the status is \"INACTIVE\" the QR code does not link to a anything.",
          "readOnly": true,
          "type": "string"
        },
        "tab_object": {
          "$ref": "#/definitions/Tab",
          "description": "Holds the Tab object. Can be TabUsageSingle, TabUsageMultiple or null",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the TokenQrCashRegister's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CashRegisterQrCodeUpdate": {
      "properties": {
        "id": {
          "description": "The id of the updated QR code. Use this id to get the RAW content of the QR code with: ../qr-code/{id}/content",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CashRegisterRead": {
      "properties": {
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The Avatar of the CashRegister.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the CashRegister's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the created CashRegister.",
          "readOnly": true,
          "type": "integer"
        },
        "location": {
          "$ref": "#/definitions/Geolocation",
          "description": "The geolocation of the CashRegister. Can be null.",
          "readOnly": true,
          "type": "object"
        },
        "name": {
          "description": "The name of the CashRegister.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the CashRegister. Can be PENDING_APPROVAL, ACTIVE, DENIED or CLOSED.",
          "readOnly": true,
          "type": "string"
        },
        "tab_text_waiting_screen": {
          "description": "The tab text for waiting screen of CashRegister.",
          "items": {
            "$ref": "#/definitions/TabTextWaitingScreen"
          },
          "readOnly": true,
          "type": "array"
        },
        "updated": {
          "description": "The timestamp of the CashRegister's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CashRegisterUpdate": {
      "properties": {
        "id": {
          "description": "The id of the updated CashRegister.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Certificate": {
      "properties": {
        "certificate": {
          "description": "A single certificate in the chain in .PEM format.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CertificatePinned": {
      "properties": {
        "certificate_chain": {
          "description": "The certificate chain in .PEM format.",
          "items": {
            "$ref": "#/definitions/Certificate"
          },
          "readOnly": false,
          "type": "array"
        }
      },
      "required": [
        "certificate_chain"
      ],
      "type": "object"
    },
    "CertificatePinnedCreate": {
      "properties": {
        "id": {
          "description": "The id generated for the pinned certificate chain.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CertificatePinnedDelete": {
      "type": "object"
    },
    "CertificatePinnedListing": {
      "properties": {
        "certificate_chain": {
          "description": "The certificate chain in .PEM format. Certificates are glued with newline characters.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id generated for the pinned certificate chain.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CertificatePinnedRead": {
      "properties": {
        "certificate_chain": {
          "description": "The certificate chain in .PEM format. Certificates are glued with newline characters.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id generated for the pinned certificate chain.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CoOwner": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The Alias of the co-owner.",
          "readOnly": false,
          "type": "object"
        },
        "status": {
          "description": "Can be: ACCEPTED, REJECTED, PENDING or REVOKED",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Company": {
      "properties": {
        "address_main": {
          "$ref": "#/definitions/Address",
          "description": "The company's main address.",
          "readOnly": false,
          "type": "object"
        },
        "address_postal": {
          "$ref": "#/definitions/Address",
          "description": "The company's postal address.",
          "readOnly": false,
          "type": "object"
        },
        "avatar_uuid": {
          "description": "The public UUID of the company's avatar.",
          "readOnly": false,
          "type": "string"
        },
        "chamber_of_commerce_number": {
          "description": "The company's chamber of commerce number.",
          "readOnly": false,
          "type": "string"
        },
        "country": {
          "description": "The country where the company is registered.",
          "readOnly": false,
          "type": "string"
        },
        "legal_form": {
          "description": "The company's legal form.",
          "readOnly": false,
          "type": "string"
        },
        "name": {
          "description": "The company name.",
          "readOnly": false,
          "type": "string"
        },
        "subscription_type": {
          "description": "The subscription type for the company.",
          "readOnly": false,
          "type": "string"
        },
        "ubo": {
          "description": "The names and birth dates of the company's ultimate beneficiary owners. Minimum zero, maximum four.",
          "items": {
            "$ref": "#/definitions/Ubo"
          },
          "readOnly": false,
          "type": "array"
        }
      },
      "required": [
        "name",
        "address_main",
        "address_postal",
        "country",
        "legal_form"
      ],
      "type": "object"
    },
    "CompanyCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "CompanyListing": {
      "properties": {
        "UserCompany": {
          "$ref": "#/definitions/UserCompany",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "CompanyRead": {
      "properties": {
        "UserCompany": {
          "$ref": "#/definitions/UserCompany",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "CompanyUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ConfirmationOfFunds": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The amount we want to check for.",
          "readOnly": false,
          "type": "object"
        },
        "pointer_iban": {
          "$ref": "#/definitions/Pointer",
          "description": "The pointer (IBAN) of the account we're querying.",
          "readOnly": false,
          "type": "object"
        }
      },
      "required": [
        "pointer_iban",
        "amount"
      ],
      "type": "object"
    },
    "ConfirmationOfFundsCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "Customer": {
      "properties": {
        "billing_account_id": {
          "description": "The primary billing account account's id.",
          "readOnly": false,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the customer object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the customer.",
          "readOnly": true,
          "type": "integer"
        },
        "invoice_notification_preference": {
          "description": "The preferred notification type for invoices.",
          "readOnly": false,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the customer object's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerLimit": {
      "properties": {
        "limit_amount_monthly": {
          "$ref": "#/definitions/Amount",
          "description": "The maximum amount a user is allowed to spend in a month.",
          "readOnly": true,
          "type": "object"
        },
        "limit_card_debit_maestro": {
          "description": "The limit of Maestro cards.",
          "readOnly": true,
          "type": "integer"
        },
        "limit_card_debit_mastercard": {
          "description": "The limit of MasterCard cards.",
          "readOnly": true,
          "type": "integer"
        },
        "limit_card_debit_wildcard": {
          "description": "DEPRECTATED: The limit of wildcards, e.g. Maestro or MasterCard cards.",
          "readOnly": true,
          "type": "integer"
        },
        "limit_card_replacement": {
          "description": "The limit of free replacement cards.",
          "readOnly": true,
          "type": "integer"
        },
        "limit_card_wildcard": {
          "description": "The limit of wildcards, e.g. Maestro or MasterCard cards.",
          "readOnly": true,
          "type": "integer"
        },
        "limit_monetary_account": {
          "description": "The limit of monetary accounts.",
          "readOnly": true,
          "type": "integer"
        },
        "limit_monetary_account_remaining": {
          "description": "The amount of additional monetary accounts you can create.",
          "readOnly": true,
          "type": "integer"
        },
        "spent_amount_monthly": {
          "$ref": "#/definitions/Amount",
          "description": "The amount the user has spent in the last month.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomerLimitListing": {
      "properties": {
        "limit_amount_monthly": {
          "$ref": "#/definitions/Amount",
          "description": "The maximum amount a user is allowed to spend in a month.",
          "readOnly": true,
          "type": "object"
        },
        "limit_card_debit_maestro": {
          "description": "The limit of Maestro cards.",
          "readOnly": true,
          "type": "integer"
        },
        "limit_card_debit_mastercard": {
          "description": "The limit of MasterCard cards.",
          "readOnly": true,
          "type": "integer"
        },
        "limit_card_debit_wildcard": {
          "description": "DEPRECTATED: The limit of wildcards, e.g. Maestro or MasterCard cards.",
          "readOnly": true,
          "type": "integer"
        },
        "limit_card_replacement": {
          "description": "The limit of free replacement cards.",
          "readOnly": true,
          "type": "integer"
        },
        "limit_card_wildcard": {
          "description": "The limit of wildcards, e.g. Maestro or MasterCard cards.",
          "readOnly": true,
          "type": "integer"
        },
        "limit_monetary_account": {
          "description": "The limit of monetary accounts.",
          "readOnly": true,
          "type": "integer"
        },
        "limit_monetary_account_remaining": {
          "description": "The amount of additional monetary accounts you can create.",
          "readOnly": true,
          "type": "integer"
        },
        "spent_amount_monthly": {
          "$ref": "#/definitions/Amount",
          "description": "The amount the user has spent in the last month.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeviceListing": {
      "properties": {
        "DeviceServer": {
          "$ref": "#/definitions/DeviceServer",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeviceRead": {
      "properties": {
        "DeviceServer": {
          "$ref": "#/definitions/DeviceServer",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeviceServer": {
      "properties": {
        "description": {
          "description": "The description of the DeviceServer. This is only for your own reference when reading the DeviceServer again.",
          "readOnly": false,
          "type": "string"
        },
        "permitted_ips": {
          "description": "An array of IPs (v4 or v6) this DeviceServer will be able to do calls from. These will be linked to the API key.",
          "items": {
            "type": "string"
          },
          "readOnly": false,
          "type": "array"
        },
        "secret": {
          "description": "The API key. You can request an API key in the bunq app.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "description",
        "secret"
      ],
      "type": "object"
    },
    "DeviceServerCreate": {
      "properties": {
        "id": {
          "description": "The id of the DeviceServer as created on the server.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DeviceServerListing": {
      "properties": {
        "created": {
          "description": "The timestamp of the DeviceServer's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the DeviceServer.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the DeviceServer as created on the server.",
          "readOnly": true,
          "type": "integer"
        },
        "ip": {
          "description": "The ip address which was used to create the DeviceServer.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the DeviceServer. Can be ACTIVE, BLOCKED, NEEDS_CONFIRMATION or OBSOLETE.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the DeviceServer's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeviceServerRead": {
      "properties": {
        "created": {
          "description": "The timestamp of the DeviceServer's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the DeviceServer.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the DeviceServer as created on the server.",
          "readOnly": true,
          "type": "integer"
        },
        "ip": {
          "description": "The ip address which was used to create the DeviceServer.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the DeviceServer. Can be ACTIVE, BLOCKED, NEEDS_CONFIRMATION or OBSOLETE.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the DeviceServer's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "DraftPayment": {
      "properties": {
        "entries": {
          "description": "The list of entries in the DraftPayment. Each entry will result in a payment when the DraftPayment is accepted.",
          "items": {
            "$ref": "#/definitions/DraftPaymentEntry"
          },
          "readOnly": false,
          "type": "array"
        },
        "number_of_required_accepts": {
          "description": "The number of accepts that are required for the draft payment to receive status ACCEPTED. Currently only 1 is valid.",
          "readOnly": false,
          "type": "integer"
        },
        "previous_updated_timestamp": {
          "description": "The last updated_timestamp that you received for this DraftPayment. This needs to be provided to prevent race conditions.",
          "readOnly": false,
          "type": "string"
        },
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule details when creating or updating a scheduled payment.",
          "readOnly": false,
          "type": "object"
        },
        "status": {
          "description": "The status of the DraftPayment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "entries",
        "number_of_required_accepts"
      ],
      "type": "object"
    },
    "DraftPaymentAnchorObject": {
      "properties": {
        "Payment": {
          "$ref": "#/definitions/Payment",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "PaymentBatch": {
          "$ref": "#/definitions/PaymentBatch",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftPaymentCreate": {
      "properties": {
        "id": {
          "description": "The id of the created DrafPayment.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DraftPaymentEntry": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of 'this' (party) side of the DraftPayment.",
          "readOnly": true,
          "type": "object"
        },
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the payment.",
          "readOnly": false,
          "type": "object"
        },
        "attachment": {
          "description": "The Attachments attached to the DraftPayment.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": false,
          "type": "array"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of the other (counterparty) side of the DraftPayment.",
          "readOnly": false,
          "type": "object"
        },
        "description": {
          "description": "The description for the DraftPayment. Maximum 140 characters for DraftPayments to external IBANs, 9000 characters for DraftPayments to only other bunq MonetaryAccounts.",
          "readOnly": false,
          "type": "string"
        },
        "id": {
          "description": "The id of the draft payment entry.",
          "readOnly": true,
          "type": "integer"
        },
        "merchant_reference": {
          "description": "Optional data to be included with the Payment specific to the merchant.",
          "readOnly": false,
          "type": "string"
        },
        "type": {
          "description": "The type of the draft payment entry.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "DraftPaymentListing": {
      "properties": {
        "responses": {
          "description": "All responses to this draft payment.",
          "items": {
            "$ref": "#/definitions/DraftPaymentResponse"
          },
          "readOnly": true,
          "type": "array"
        },
        "entries": {
          "description": "The entries in the DraftPayment.",
          "items": {
            "$ref": "#/definitions/DraftPaymentEntry"
          },
          "readOnly": true,
          "type": "array"
        },
        "id": {
          "description": "The id of the created DrafPayment.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the MonetaryAccount the DraftPayment applies to.",
          "readOnly": true,
          "type": "integer"
        },
        "object": {
          "$ref": "#/definitions/DraftPaymentAnchorObject",
          "description": "The Payment or PaymentBatch. This will only be present after the DraftPayment has been accepted.",
          "readOnly": true,
          "type": "object"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule details.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status of the DraftPayment.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the DraftPayment.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the User who created the DraftPayment.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftPaymentRead": {
      "properties": {
        "responses": {
          "description": "All responses to this draft payment.",
          "items": {
            "$ref": "#/definitions/DraftPaymentResponse"
          },
          "readOnly": true,
          "type": "array"
        },
        "entries": {
          "description": "The entries in the DraftPayment.",
          "items": {
            "$ref": "#/definitions/DraftPaymentEntry"
          },
          "readOnly": true,
          "type": "array"
        },
        "id": {
          "description": "The id of the created DrafPayment.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the MonetaryAccount the DraftPayment applies to.",
          "readOnly": true,
          "type": "integer"
        },
        "object": {
          "$ref": "#/definitions/DraftPaymentAnchorObject",
          "description": "The Payment or PaymentBatch. This will only be present after the DraftPayment has been accepted.",
          "readOnly": true,
          "type": "object"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule details.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status of the DraftPayment.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the DraftPayment.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the User who created the DraftPayment.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftPaymentResponse": {
      "properties": {
        "status": {
          "description": "The status with which was responded.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user that responded to the DraftPayment.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftPaymentUpdate": {
      "properties": {
        "id": {
          "description": "The id of the created DrafPayment.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DraftShareInviteBank": {
      "properties": {
        "draft_share_settings": {
          "$ref": "#/definitions/DraftShareInviteEntry",
          "description": "The draft share invite details.",
          "readOnly": false,
          "type": "object"
        },
        "expiration": {
          "description": "The moment when this draft share invite expires.",
          "readOnly": false,
          "type": "string"
        },
        "status": {
          "description": "The status of the draft share invite. Can be CANCELLED (the user cancels the draft share before it's used).",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "expiration",
        "draft_share_settings"
      ],
      "type": "object"
    },
    "DraftShareInviteBankCreate": {
      "properties": {
        "id": {
          "description": "The id of the newly created draft share invite.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DraftShareInviteBankListing": {
      "properties": {
        "draft_share_settings": {
          "$ref": "#/definitions/DraftShareInviteEntry",
          "description": "The draft share invite details.",
          "readOnly": true,
          "type": "object"
        },
        "draft_share_url": {
          "description": "The URL redirecting user to the draft share invite in the app. Only works on mobile devices.",
          "readOnly": true,
          "type": "string"
        },
        "expiration": {
          "description": "The moment when this draft share invite expires.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the newly created draft share invite.",
          "readOnly": true,
          "type": "integer"
        },
        "share_invite_bank_response_id": {
          "description": "The id of the share invite bank response this draft share belongs to.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the draft share invite. Can be USED, CANCELLED and PENDING.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user who created the draft share invite.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftShareInviteBankQrCodeContentListing": {
      "type": "object"
    },
    "DraftShareInviteBankRead": {
      "properties": {
        "draft_share_settings": {
          "$ref": "#/definitions/DraftShareInviteEntry",
          "description": "The draft share invite details.",
          "readOnly": true,
          "type": "object"
        },
        "draft_share_url": {
          "description": "The URL redirecting user to the draft share invite in the app. Only works on mobile devices.",
          "readOnly": true,
          "type": "string"
        },
        "expiration": {
          "description": "The moment when this draft share invite expires.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the newly created draft share invite.",
          "readOnly": true,
          "type": "integer"
        },
        "share_invite_bank_response_id": {
          "description": "The id of the share invite bank response this draft share belongs to.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the draft share invite. Can be USED, CANCELLED and PENDING.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user who created the draft share invite.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftShareInviteBankUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftShareInviteEntry": {
      "properties": {
        "end_date": {
          "description": "The expiration date of this share.",
          "readOnly": false,
          "type": "string"
        },
        "share_detail": {
          "$ref": "#/definitions/ShareDetail",
          "description": "The share details. Only one of these objects is returned.",
          "readOnly": false,
          "type": "object"
        },
        "start_date": {
          "description": "The start date of this share.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Error": {
      "items": {
        "properties": {
          "error_description": {
            "description": "The error description in English.",
            "type": "string"
          },
          "error_description_translated": {
            "description": "The error description translated to the user's language.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "EventListing": {
      "properties": {
        "action": {
          "description": "The performed action. Can be: CREATE or UPDATE.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the event's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the event.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account the event applied to (if it was a monetary account event).",
          "readOnly": true,
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/EventObject",
          "description": "The details of the external object the event was created for.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The event status. Can be: FINALIZED or AWAITING_REPLY. An example of FINALIZED event is a payment received event, while an AWAITING_REPLY event is a request received event.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the event's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_id": {
          "description": "The id of the user the event applied to (if it was a user event).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventObject": {
      "properties": {
        "BankSwitchServiceNetherlandsIncomingPayment": {
          "$ref": "#/definitions/BankSwitchServiceNetherlandsIncomingPayment",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "BunqMeFundraiserResult": {
          "$ref": "#/definitions/BunqMeFundraiserResult",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "BunqMeTab": {
          "$ref": "#/definitions/BunqMeTab",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "BunqMeTabResultResponse": {
          "$ref": "#/definitions/BunqMeTabResultResponse",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "Card": {
          "$ref": "#/definitions/Card",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "CardDebit": {
          "$ref": "#/definitions/CardDebit",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "DraftPayment": {
          "$ref": "#/definitions/DraftPayment",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "FeatureAnnouncement": {
          "$ref": "#/definitions/FeatureAnnouncement",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "IdealMerchantTransaction": {
          "$ref": "#/definitions/IdealMerchantTransaction",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "Invoice": {
          "$ref": "#/definitions/Invoice",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "MasterCardAction": {
          "$ref": "#/definitions/MasterCardAction",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "Payment": {
          "$ref": "#/definitions/Payment",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "PaymentBatch": {
          "$ref": "#/definitions/PaymentBatch",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "RequestInquiry": {
          "$ref": "#/definitions/RequestInquiry",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "RequestInquiryBatch": {
          "$ref": "#/definitions/RequestInquiryBatch",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "RequestResponse": {
          "$ref": "#/definitions/RequestResponse",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "RewardRecipient": {
          "$ref": "#/definitions/RewardRecipient",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "RewardSender": {
          "$ref": "#/definitions/RewardSender",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "ScheduledInstance": {
          "$ref": "#/definitions/ScheduleInstance",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "ScheduledPayment": {
          "$ref": "#/definitions/SchedulePayment",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "ScheduledPaymentBatch": {
          "$ref": "#/definitions/SchedulePaymentBatch",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "ShareInviteBankInquiry": {
          "$ref": "#/definitions/ShareInviteMonetaryAccountInquiry",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "ShareInviteBankInquiryBatch": {
          "$ref": "#/definitions/ShareInviteBankInquiryBatch",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "ShareInviteBankResponse": {
          "$ref": "#/definitions/ShareInviteMonetaryAccountResponse",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "SofortMerchantTransaction": {
          "$ref": "#/definitions/SofortMerchantTransaction",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "TabResultInquiry": {
          "$ref": "#/definitions/TabResultInquiry",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "TabResultResponse": {
          "$ref": "#/definitions/TabResultResponse",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "TransferwisePayment": {
          "$ref": "#/definitions/TransferwiseTransfer",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "EventRead": {
      "properties": {
        "action": {
          "description": "The performed action. Can be: CREATE or UPDATE.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the event's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the event.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account the event applied to (if it was a monetary account event).",
          "readOnly": true,
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/EventObject",
          "description": "The details of the external object the event was created for.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The event status. Can be: FINALIZED or AWAITING_REPLY. An example of FINALIZED event is a payment received event, while an AWAITING_REPLY event is a request received event.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the event's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_id": {
          "description": "The id of the user the event applied to (if it was a user event).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExportAnnualOverview": {
      "properties": {
        "year": {
          "description": "The year for which the overview is.",
          "readOnly": false,
          "type": "integer"
        }
      },
      "required": [
        "year"
      ],
      "type": "object"
    },
    "ExportAnnualOverviewContentListing": {
      "type": "object"
    },
    "ExportAnnualOverviewCreate": {
      "properties": {
        "id": {
          "description": "The id of the annual overview as created on the server.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ExportAnnualOverviewDelete": {
      "type": "object"
    },
    "ExportAnnualOverviewListing": {
      "properties": {
        "alias_user": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user to which this annual overview belongs.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the annual overview 's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the annual overview as created on the server.",
          "readOnly": true,
          "type": "integer"
        },
        "updated": {
          "description": "The timestamp of the annual overview 's last update.",
          "readOnly": true,
          "type": "string"
        },
        "year": {
          "description": "The year for which the overview is.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ExportAnnualOverviewRead": {
      "properties": {
        "alias_user": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user to which this annual overview belongs.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the annual overview 's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the annual overview as created on the server.",
          "readOnly": true,
          "type": "integer"
        },
        "updated": {
          "description": "The timestamp of the annual overview 's last update.",
          "readOnly": true,
          "type": "string"
        },
        "year": {
          "description": "The year for which the overview is.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ExportRib": {
      "type": "object"
    },
    "ExportRibContentListing": {
      "type": "object"
    },
    "ExportRibCreate": {
      "properties": {
        "id": {
          "description": "The id of the rib as created on the server.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ExportRibDelete": {
      "type": "object"
    },
    "ExportRibListing": {
      "properties": {
        "created": {
          "description": "The timestamp of the RIB's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the rib as created on the server.",
          "readOnly": true,
          "type": "integer"
        },
        "updated": {
          "description": "The timestamp of the RIB's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExportRibRead": {
      "properties": {
        "created": {
          "description": "The timestamp of the RIB's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the rib as created on the server.",
          "readOnly": true,
          "type": "integer"
        },
        "updated": {
          "description": "The timestamp of the RIB's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExportStatement": {
      "properties": {
        "date_end": {
          "description": "The end date for making statements.",
          "readOnly": false,
          "type": "string"
        },
        "date_start": {
          "description": "The start date for making statements.",
          "readOnly": false,
          "type": "string"
        },
        "include_attachment": {
          "description": "Only for PDF exports. Includes attachments to mutations in the export, such as scanned receipts.",
          "readOnly": false,
          "type": "boolean"
        },
        "regional_format": {
          "description": "Required for CSV exports. The regional format of the statement, can be UK_US (comma-separated) or EUROPEAN (semicolon-separated).",
          "readOnly": false,
          "type": "string"
        },
        "statement_format": {
          "description": "The format type of statement. Allowed values: MT940, CSV, PDF.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "statement_format",
        "date_start",
        "date_end"
      ],
      "type": "object"
    },
    "ExportStatementContentListing": {
      "type": "object"
    },
    "ExportStatementCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ExportStatementDelete": {
      "type": "object"
    },
    "ExportStatementListing": {
      "properties": {
        "alias_monetary_account": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account for which this statement was created.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the statement model's creation.",
          "readOnly": true,
          "type": "string"
        },
        "date_end": {
          "description": "The date until which statement shows transactions.",
          "readOnly": true,
          "type": "string"
        },
        "date_start": {
          "description": "The date from when this statement shows transactions.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the customer statement model.",
          "readOnly": true,
          "type": "integer"
        },
        "regional_format": {
          "description": "The regional format of a CSV statement.",
          "readOnly": true,
          "type": "string"
        },
        "statement_format": {
          "description": "The format of statement.",
          "readOnly": true,
          "type": "string"
        },
        "statement_number": {
          "description": "MT940 Statement number. Unique per monetary account.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the export.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the statement model's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExportStatementPayment": {
      "type": "object"
    },
    "ExportStatementPaymentContentListing": {
      "type": "object"
    },
    "ExportStatementPaymentCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ExportStatementPaymentRead": {
      "properties": {
        "created": {
          "description": "The timestamp of the statement model's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the single payment statement model.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the export.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the statement model's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExportStatementRead": {
      "properties": {
        "alias_monetary_account": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account for which this statement was created.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the statement model's creation.",
          "readOnly": true,
          "type": "string"
        },
        "date_end": {
          "description": "The date until which statement shows transactions.",
          "readOnly": true,
          "type": "string"
        },
        "date_start": {
          "description": "The date from when this statement shows transactions.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the customer statement model.",
          "readOnly": true,
          "type": "integer"
        },
        "regional_format": {
          "description": "The regional format of a CSV statement.",
          "readOnly": true,
          "type": "string"
        },
        "statement_format": {
          "description": "The format of statement.",
          "readOnly": true,
          "type": "string"
        },
        "statement_number": {
          "description": "MT940 Statement number. Unique per monetary account.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the export.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the statement model's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "FeatureAnnouncement": {
      "properties": {
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The Avatar of the event overview.",
          "readOnly": true,
          "type": "object"
        },
        "sub_title": {
          "description": "The event overview subtitle of the feature display",
          "readOnly": true,
          "type": "string"
        },
        "title": {
          "description": "The event overview title of the feature display",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "FeatureAnnouncementRead": {
      "properties": {
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The Avatar of the event overview.",
          "readOnly": true,
          "type": "object"
        },
        "sub_title": {
          "description": "The event overview subtitle of the feature display",
          "readOnly": true,
          "type": "string"
        },
        "title": {
          "description": "The event overview title of the feature display",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Geolocation": {
      "properties": {
        "altitude": {
          "description": "The altitude for a geolocation restriction.",
          "readOnly": false,
          "type": "integer"
        },
        "latitude": {
          "description": "The latitude for a geolocation restriction.",
          "readOnly": false,
          "type": "integer"
        },
        "longitude": {
          "description": "The longitude for a geolocation restriction.",
          "readOnly": false,
          "type": "integer"
        },
        "radius": {
          "description": "The radius for a geolocation restriction.",
          "readOnly": false,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "IdealMerchantTransaction": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the monetary account to add money to.",
          "readOnly": true,
          "type": "object"
        },
        "amount_guaranteed": {
          "$ref": "#/definitions/Amount",
          "description": "In case of a successful transaction, the amount of money that will be transferred.",
          "readOnly": true,
          "type": "object"
        },
        "amount_requested": {
          "$ref": "#/definitions/Amount",
          "description": "The requested amount of money to add.",
          "readOnly": false,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the monetary account the money comes from.",
          "readOnly": true,
          "type": "object"
        },
        "expiration": {
          "description": "When the transaction will expire.",
          "readOnly": true,
          "type": "string"
        },
        "issuer": {
          "description": "The BIC of the issuer.",
          "readOnly": false,
          "type": "string"
        },
        "issuer_authentication_url": {
          "description": "The URL to visit to ",
          "readOnly": true,
          "type": "string"
        },
        "issuer_name": {
          "description": "The Name of the issuer.",
          "readOnly": true,
          "type": "string"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account this ideal merchant transaction links to.",
          "readOnly": true,
          "type": "integer"
        },
        "purchase_identifier": {
          "description": "The 'purchase ID' of the iDEAL transaction.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the transaction.",
          "readOnly": true,
          "type": "string"
        },
        "status_timestamp": {
          "description": "When the status was last updated.",
          "readOnly": true,
          "type": "string"
        },
        "transaction_identifier": {
          "description": "The 'transaction ID' of the iDEAL transaction.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "IdealMerchantTransactionCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "IdealMerchantTransactionListing": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the monetary account to add money to.",
          "readOnly": true,
          "type": "object"
        },
        "amount_guaranteed": {
          "$ref": "#/definitions/Amount",
          "description": "In case of a successful transaction, the amount of money that will be transferred.",
          "readOnly": true,
          "type": "object"
        },
        "amount_requested": {
          "$ref": "#/definitions/Amount",
          "description": "The requested amount of money to add.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the monetary account the money comes from.",
          "readOnly": true,
          "type": "object"
        },
        "expiration": {
          "description": "When the transaction will expire.",
          "readOnly": true,
          "type": "string"
        },
        "issuer": {
          "description": "The BIC of the issuer.",
          "readOnly": true,
          "type": "string"
        },
        "issuer_authentication_url": {
          "description": "The URL to visit to ",
          "readOnly": true,
          "type": "string"
        },
        "issuer_name": {
          "description": "The Name of the issuer.",
          "readOnly": true,
          "type": "string"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account this ideal merchant transaction links to.",
          "readOnly": true,
          "type": "integer"
        },
        "purchase_identifier": {
          "description": "The 'purchase ID' of the iDEAL transaction.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the transaction.",
          "readOnly": true,
          "type": "string"
        },
        "status_timestamp": {
          "description": "When the status was last updated.",
          "readOnly": true,
          "type": "string"
        },
        "transaction_identifier": {
          "description": "The 'transaction ID' of the iDEAL transaction.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "IdealMerchantTransactionRead": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the monetary account to add money to.",
          "readOnly": true,
          "type": "object"
        },
        "amount_guaranteed": {
          "$ref": "#/definitions/Amount",
          "description": "In case of a successful transaction, the amount of money that will be transferred.",
          "readOnly": true,
          "type": "object"
        },
        "amount_requested": {
          "$ref": "#/definitions/Amount",
          "description": "The requested amount of money to add.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the monetary account the money comes from.",
          "readOnly": true,
          "type": "object"
        },
        "expiration": {
          "description": "When the transaction will expire.",
          "readOnly": true,
          "type": "string"
        },
        "issuer": {
          "description": "The BIC of the issuer.",
          "readOnly": true,
          "type": "string"
        },
        "issuer_authentication_url": {
          "description": "The URL to visit to ",
          "readOnly": true,
          "type": "string"
        },
        "issuer_name": {
          "description": "The Name of the issuer.",
          "readOnly": true,
          "type": "string"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account this ideal merchant transaction links to.",
          "readOnly": true,
          "type": "integer"
        },
        "purchase_identifier": {
          "description": "The 'purchase ID' of the iDEAL transaction.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the transaction.",
          "readOnly": true,
          "type": "string"
        },
        "status_timestamp": {
          "description": "When the status was last updated.",
          "readOnly": true,
          "type": "string"
        },
        "transaction_identifier": {
          "description": "The 'transaction ID' of the iDEAL transaction.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Image": {
      "properties": {
        "attachment_public_uuid": {
          "description": "The public UUID of the public attachment containing the image.",
          "readOnly": true,
          "type": "string"
        },
        "content_type": {
          "description": "The content-type as a MIME filetype.",
          "readOnly": true,
          "type": "string"
        },
        "height": {
          "description": "The image height in pixels.",
          "readOnly": true,
          "type": "integer"
        },
        "width": {
          "description": "The image width in pixels.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InsightEventListing": {
      "properties": {
        "action": {
          "description": "The performed action. Can be: CREATE or UPDATE.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the event's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the event.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account the event applied to (if it was a monetary account event).",
          "readOnly": true,
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/EventObject",
          "description": "The details of the external object the event was created for.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The event status. Can be: FINALIZED or AWAITING_REPLY. An example of FINALIZED event is a payment received event, while an AWAITING_REPLY event is a request received event.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the event's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_id": {
          "description": "The id of the user the event applied to (if it was a user event).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "InsightListing": {
      "properties": {
        "amount_total": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount of the transactions in the category.",
          "readOnly": true,
          "type": "object"
        },
        "category": {
          "description": "The category.",
          "readOnly": true,
          "type": "string"
        },
        "category_translated": {
          "description": "The translated category.",
          "readOnly": true,
          "type": "string"
        },
        "number_of_transactions": {
          "description": "The number of the transactions in the category.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Installation": {
      "properties": {
        "client_public_key": {
          "description": "Your public key. This is the public part of the key pair that you are going to use to create value of the \"X-Bunq-Client-Signature\" header for all future API calls.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "client_public_key"
      ],
      "type": "object"
    },
    "InstallationCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The Id object of the created Installation",
          "readOnly": true,
          "type": "object"
        },
        "ServerPublicKey": {
          "$ref": "#/definitions/InstallationServerPublicKey",
          "description": "The ServerPublicKey object of the created Installation",
          "readOnly": true,
          "type": "object"
        },
        "Token": {
          "$ref": "#/definitions/InstallationToken",
          "description": "The Token object of this Installation.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "InstallationListing": {
      "properties": {
        "id": {
          "description": "The id of the Installation as created on the server. You can use this id to request the server's public key again.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InstallationRead": {
      "properties": {
        "id": {
          "description": "The id of the Installation as created on the server. You can use this id to request the server's public key again.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InstallationServerPublicKey": {
      "properties": {
        "server_public_key": {
          "description": "The server's public key for this Installation. You should use this key to verify the \"X-Bunq-Server-Signature\" header for each response from the server.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "InstallationServerPublicKeyListing": {
      "properties": {
        "server_public_key": {
          "description": "The server's public key for this Installation.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "InstallationToken": {
      "properties": {
        "created": {
          "description": "The timestamp of the Token's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the Token.",
          "readOnly": true,
          "type": "integer"
        },
        "token": {
          "description": "The installation token is the token the client has to provide in the \"X-Bunq-Client-Authentication\" header for the creation of a DeviceServer and SessionServer.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the Token's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Invoice": {
      "properties": {
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The customer's address.",
          "readOnly": true,
          "type": "object"
        },
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The label that's displayed to the counterparty with the invoice. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "category": {
          "description": "The category to display to the user.",
          "readOnly": true,
          "type": "string"
        },
        "chamber_of_commerce_number": {
          "description": "The company's chamber of commerce number.",
          "readOnly": true,
          "type": "string"
        },
        "counterparty_address": {
          "$ref": "#/definitions/Address",
          "description": "The company's address.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The label of the counterparty of the invoice. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the invoice object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description provided by the admin.",
          "readOnly": false,
          "type": "string"
        },
        "external_url": {
          "description": "The external url provided by the admin.",
          "readOnly": false,
          "type": "string"
        },
        "group": {
          "description": "The invoice item groups.",
          "items": {
            "$ref": "#/definitions/InvoiceItemGroup"
          },
          "readOnly": true,
          "type": "array"
        },
        "id": {
          "description": "The id of the invoice object.",
          "readOnly": true,
          "type": "integer"
        },
        "invoice_date": {
          "description": "The invoice date.",
          "readOnly": true,
          "type": "string"
        },
        "invoice_number": {
          "description": "The invoice number.",
          "readOnly": true,
          "type": "string"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "status": {
          "description": "The invoice status.",
          "readOnly": false,
          "type": "string"
        },
        "total_vat": {
          "$ref": "#/definitions/Amount",
          "description": "The VAT on the total discounted item price.",
          "readOnly": true,
          "type": "object"
        },
        "total_vat_exclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The total discounted item price excluding VAT.",
          "readOnly": true,
          "type": "object"
        },
        "total_vat_inclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The total discounted item price including VAT.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the invoice object's last update.",
          "readOnly": true,
          "type": "string"
        },
        "vat_number": {
          "description": "The company's chamber of commerce number.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "description",
        "external_url"
      ],
      "type": "object"
    },
    "InvoiceByUserListing": {
      "properties": {
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The customer's address.",
          "readOnly": true,
          "type": "object"
        },
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The label that's displayed to the counterparty with the invoice. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "chamber_of_commerce_number": {
          "description": "The company's chamber of commerce number.",
          "readOnly": true,
          "type": "string"
        },
        "counterparty_address": {
          "$ref": "#/definitions/Address",
          "description": "The company's address.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The label of the counterparty of the invoice. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the invoice object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "group": {
          "description": "The invoice item groups.",
          "items": {
            "$ref": "#/definitions/InvoiceItemGroup"
          },
          "readOnly": true,
          "type": "array"
        },
        "id": {
          "description": "The id of the invoice object.",
          "readOnly": true,
          "type": "integer"
        },
        "invoice_date": {
          "description": "The invoice date.",
          "readOnly": true,
          "type": "string"
        },
        "invoice_number": {
          "description": "The invoice number.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The invoice status.",
          "readOnly": true,
          "type": "string"
        },
        "total_vat": {
          "$ref": "#/definitions/Amount",
          "description": "The VAT on the total discounted item price.",
          "readOnly": true,
          "type": "object"
        },
        "total_vat_exclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The total discounted item price excluding VAT.",
          "readOnly": true,
          "type": "object"
        },
        "total_vat_inclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The total discounted item price including VAT.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the invoice object's last update.",
          "readOnly": true,
          "type": "string"
        },
        "vat_number": {
          "description": "The company's chamber of commerce number.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceByUserRead": {
      "properties": {
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The customer's address.",
          "readOnly": true,
          "type": "object"
        },
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The label that's displayed to the counterparty with the invoice. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "chamber_of_commerce_number": {
          "description": "The company's chamber of commerce number.",
          "readOnly": true,
          "type": "string"
        },
        "counterparty_address": {
          "$ref": "#/definitions/Address",
          "description": "The company's address.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The label of the counterparty of the invoice. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the invoice object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "group": {
          "description": "The invoice item groups.",
          "items": {
            "$ref": "#/definitions/InvoiceItemGroup"
          },
          "readOnly": true,
          "type": "array"
        },
        "id": {
          "description": "The id of the invoice object.",
          "readOnly": true,
          "type": "integer"
        },
        "invoice_date": {
          "description": "The invoice date.",
          "readOnly": true,
          "type": "string"
        },
        "invoice_number": {
          "description": "The invoice number.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The invoice status.",
          "readOnly": true,
          "type": "string"
        },
        "total_vat": {
          "$ref": "#/definitions/Amount",
          "description": "The VAT on the total discounted item price.",
          "readOnly": true,
          "type": "object"
        },
        "total_vat_exclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The total discounted item price excluding VAT.",
          "readOnly": true,
          "type": "object"
        },
        "total_vat_inclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The total discounted item price including VAT.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the invoice object's last update.",
          "readOnly": true,
          "type": "string"
        },
        "vat_number": {
          "description": "The company's chamber of commerce number.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceExportPdfContentListing": {
      "type": "object"
    },
    "InvoiceItem": {
      "properties": {
        "billing_date": {
          "description": "The billing date of the item.",
          "readOnly": true,
          "type": "string"
        },
        "quantity": {
          "description": "The number of items priced.",
          "readOnly": true,
          "type": "integer"
        },
        "total_vat_exclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The item price excluding VAT.",
          "readOnly": true,
          "type": "object"
        },
        "total_vat_inclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The item price including VAT.",
          "readOnly": true,
          "type": "object"
        },
        "type_description": {
          "description": "The price description.",
          "readOnly": true,
          "type": "string"
        },
        "type_description_translated": {
          "description": "The translated price description.",
          "readOnly": true,
          "type": "string"
        },
        "unit_vat_exclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The unit item price excluding VAT.",
          "readOnly": true,
          "type": "object"
        },
        "unit_vat_inclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The unit item price including VAT.",
          "readOnly": true,
          "type": "object"
        },
        "vat": {
          "description": "The VAT tax fraction.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InvoiceItemGroup": {
      "properties": {
        "instance_description": {
          "description": "The identifier of the invoice item group.",
          "readOnly": true,
          "type": "string"
        },
        "item": {
          "description": "The invoice items in the group.",
          "items": {
            "$ref": "#/definitions/InvoiceItem"
          },
          "readOnly": true,
          "type": "array"
        },
        "product_vat_exclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The unit item price excluding VAT.",
          "readOnly": true,
          "type": "object"
        },
        "product_vat_inclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The unit item price including VAT.",
          "readOnly": true,
          "type": "object"
        },
        "type": {
          "description": "The type of the invoice item group.",
          "readOnly": true,
          "type": "string"
        },
        "type_description": {
          "description": "The description of the type of the invoice item group.",
          "readOnly": true,
          "type": "string"
        },
        "type_description_translated": {
          "description": "The translated description of the type of the invoice item group.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceListing": {
      "properties": {
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The customer's address.",
          "readOnly": true,
          "type": "object"
        },
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The label that's displayed to the counterparty with the invoice. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "category": {
          "description": "The category to display to the user.",
          "readOnly": true,
          "type": "string"
        },
        "chamber_of_commerce_number": {
          "description": "The company's chamber of commerce number.",
          "readOnly": true,
          "type": "string"
        },
        "counterparty_address": {
          "$ref": "#/definitions/Address",
          "description": "The company's address.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The label of the counterparty of the invoice. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the invoice object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "group": {
          "description": "The invoice item groups.",
          "items": {
            "$ref": "#/definitions/InvoiceItemGroup"
          },
          "readOnly": true,
          "type": "array"
        },
        "id": {
          "description": "The id of the invoice object.",
          "readOnly": true,
          "type": "integer"
        },
        "invoice_date": {
          "description": "The invoice date.",
          "readOnly": true,
          "type": "string"
        },
        "invoice_number": {
          "description": "The invoice number.",
          "readOnly": true,
          "type": "string"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "status": {
          "description": "The invoice status.",
          "readOnly": true,
          "type": "string"
        },
        "total_vat": {
          "$ref": "#/definitions/Amount",
          "description": "The VAT on the total discounted item price.",
          "readOnly": true,
          "type": "object"
        },
        "total_vat_exclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The total discounted item price excluding VAT.",
          "readOnly": true,
          "type": "object"
        },
        "total_vat_inclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The total discounted item price including VAT.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the invoice object's last update.",
          "readOnly": true,
          "type": "string"
        },
        "vat_number": {
          "description": "The company's chamber of commerce number.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceRead": {
      "properties": {
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The customer's address.",
          "readOnly": true,
          "type": "object"
        },
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The label that's displayed to the counterparty with the invoice. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "category": {
          "description": "The category to display to the user.",
          "readOnly": true,
          "type": "string"
        },
        "chamber_of_commerce_number": {
          "description": "The company's chamber of commerce number.",
          "readOnly": true,
          "type": "string"
        },
        "counterparty_address": {
          "$ref": "#/definitions/Address",
          "description": "The company's address.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The label of the counterparty of the invoice. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the invoice object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "group": {
          "description": "The invoice item groups.",
          "items": {
            "$ref": "#/definitions/InvoiceItemGroup"
          },
          "readOnly": true,
          "type": "array"
        },
        "id": {
          "description": "The id of the invoice object.",
          "readOnly": true,
          "type": "integer"
        },
        "invoice_date": {
          "description": "The invoice date.",
          "readOnly": true,
          "type": "string"
        },
        "invoice_number": {
          "description": "The invoice number.",
          "readOnly": true,
          "type": "string"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "status": {
          "description": "The invoice status.",
          "readOnly": true,
          "type": "string"
        },
        "total_vat": {
          "$ref": "#/definitions/Amount",
          "description": "The VAT on the total discounted item price.",
          "readOnly": true,
          "type": "object"
        },
        "total_vat_exclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The total discounted item price excluding VAT.",
          "readOnly": true,
          "type": "object"
        },
        "total_vat_inclusive": {
          "$ref": "#/definitions/Amount",
          "description": "The total discounted item price including VAT.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the invoice object's last update.",
          "readOnly": true,
          "type": "string"
        },
        "vat_number": {
          "description": "The company's chamber of commerce number.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Issuer": {
      "properties": {
        "bic": {
          "description": "The BIC code.",
          "readOnly": false,
          "type": "string"
        },
        "name": {
          "description": "The name of the bank.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "LabelCard": {
      "properties": {
        "expiry_date": {
          "description": "The date this card will expire.",
          "readOnly": true,
          "type": "string"
        },
        "label_user": {
          "$ref": "#/definitions/LabelUser",
          "description": "The owner of this card.",
          "readOnly": true,
          "type": "object"
        },
        "second_line": {
          "description": "The second line on the card.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the card.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the card.",
          "readOnly": true,
          "type": "string"
        },
        "uuid": {
          "description": "The public UUID.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "LabelMonetaryAccount": {
      "properties": {
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The avatar of the monetary account.",
          "readOnly": true,
          "type": "object"
        },
        "bunq_me": {
          "$ref": "#/definitions/Pointer",
          "description": "Bunq.me pointer with type and value.",
          "readOnly": true,
          "type": "object"
        },
        "country": {
          "description": "The country of the user. Formatted as a ISO 3166-1 alpha-2 country code.",
          "readOnly": true,
          "type": "string"
        },
        "display_name": {
          "description": "The name to display with this monetary account.",
          "readOnly": true,
          "type": "string"
        },
        "iban": {
          "description": "The IBAN of the monetary account.",
          "readOnly": true,
          "type": "string"
        },
        "is_light": {
          "description": "Whether or not the monetary account is light.",
          "readOnly": true,
          "type": "boolean"
        },
        "label_user": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user this monetary account belongs to.",
          "readOnly": true,
          "type": "object"
        },
        "merchant_category_code": {
          "description": "The merchant category code.",
          "readOnly": true,
          "type": "string"
        },
        "swift_account_number": {
          "description": "The account number used for a SWIFT payment. May or may not be an IBAN.",
          "readOnly": true,
          "type": "string"
        },
        "swift_bic": {
          "description": "The BIC used for a SWIFT payment.",
          "readOnly": true,
          "type": "string"
        },
        "transferwise_account_number": {
          "description": "The account number used for a Transferwise payment. May or may not be an IBAN.",
          "readOnly": true,
          "type": "string"
        },
        "transferwise_bank_code": {
          "description": "The bank code used for a Transferwise payment. May or may not be a BIC.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "LabelUser": {
      "properties": {
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The current avatar of the user.",
          "readOnly": true,
          "type": "object"
        },
        "country": {
          "description": "The country of the user. 000 stands for \"unknown\"",
          "readOnly": false,
          "type": "string"
        },
        "display_name": {
          "description": "The name to be displayed for this user, as it was given on the request.",
          "readOnly": false,
          "type": "string"
        },
        "public_nick_name": {
          "description": "The current nickname of the user.",
          "readOnly": true,
          "type": "string"
        },
        "uuid": {
          "description": "The public UUID of the label-user.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "MasterCardAction": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account label of the account that this action is created for.",
          "readOnly": true,
          "type": "object"
        },
        "amount_billing": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the transaction in the monetary account's currency.",
          "readOnly": true,
          "type": "object"
        },
        "amount_converted": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the transaction in local currency.",
          "readOnly": true,
          "type": "object"
        },
        "amount_fee": {
          "$ref": "#/definitions/Amount",
          "description": "The fee amount as charged by the merchant, if applicable.",
          "readOnly": true,
          "type": "object"
        },
        "amount_local": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the transaction in local currency.",
          "readOnly": true,
          "type": "object"
        },
        "amount_original_billing": {
          "$ref": "#/definitions/Amount",
          "description": "The original amount in the monetary account's currency.",
          "readOnly": true,
          "type": "object"
        },
        "amount_original_local": {
          "$ref": "#/definitions/Amount",
          "description": "The original amount in local currency.",
          "readOnly": true,
          "type": "object"
        },
        "applied_limit": {
          "description": "The type of the limit applied to validate if this MasterCardAction was within the spending limits. The returned string matches the limit types as defined in the card endpoint.",
          "readOnly": true,
          "type": "string"
        },
        "authorisation_status": {
          "description": "The status in the authorisation process.",
          "readOnly": true,
          "type": "string"
        },
        "authorisation_type": {
          "description": "The type of transaction that was delivered using the card.",
          "readOnly": true,
          "type": "string"
        },
        "card_authorisation_id_response": {
          "description": "The response code by which authorised transaction can be identified as authorised by bunq.",
          "readOnly": true,
          "type": "string"
        },
        "card_id": {
          "description": "The id of the card this action links to.",
          "readOnly": true,
          "type": "integer"
        },
        "city": {
          "description": "The city where the message originates from as announced by the terminal.",
          "readOnly": true,
          "type": "string"
        },
        "clearing_expiry_time": {
          "description": "The time when the processing of the clearing is expired, refunding the authorisation.",
          "readOnly": true,
          "type": "string"
        },
        "clearing_status": {
          "description": "The clearing status of the authorisation. Can be 'PENDING', 'FIRST_PRESENTMENT_COMPLETE' or 'REFUND_LENIENCY'.",
          "readOnly": true,
          "type": "string"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account label of the counterparty.",
          "readOnly": true,
          "type": "object"
        },
        "decision": {
          "description": "Why the transaction was denied, if it was denied, or just ALLOWED.",
          "readOnly": true,
          "type": "string"
        },
        "decision_description": {
          "description": "Empty if allowed, otherwise a textual explanation of why it was denied.",
          "readOnly": true,
          "type": "string"
        },
        "decision_description_translated": {
          "description": "Empty if allowed, otherwise a textual explanation of why it was denied in user's language.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description for this transaction to display.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the MastercardAction.",
          "readOnly": true,
          "type": "integer"
        },
        "label_card": {
          "$ref": "#/definitions/LabelCard",
          "description": "The label of the card.",
          "readOnly": true,
          "type": "object"
        },
        "maturity_date": {
          "description": "The maturity date.",
          "readOnly": true,
          "type": "string"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account this action links to.",
          "readOnly": true,
          "type": "integer"
        },
        "pan_entry_mode_user": {
          "description": "The type of entry mode the user used. Can be 'ATM', 'ICC', 'MAGNETIC_STRIPE' or 'E_COMMERCE'.",
          "readOnly": true,
          "type": "string"
        },
        "payment_status": {
          "description": "The payment status of the transaction. For example PAYMENT_SUCCESSFUL, for a successful payment.",
          "readOnly": true,
          "type": "string"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "reservation_expiry_time": {
          "description": "If this is a reservation, the moment the reservation will expire.",
          "readOnly": true,
          "type": "string"
        },
        "secure_code_id": {
          "description": "The secure code id for this mastercard action or null.",
          "readOnly": true,
          "type": "integer"
        },
        "settlement_status": {
          "description": "The setlement status in the authorisation process.",
          "readOnly": true,
          "type": "string"
        },
        "token_status": {
          "description": "If this is a tokenisation action, this shows the status of the token.",
          "readOnly": true,
          "type": "string"
        },
        "wallet_provider_id": {
          "description": "The ID of the wallet provider as defined by MasterCard. 420 = bunq Android app with Tap&Pay; 103 = Apple Pay.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "MasterCardActionGreenAggregationListing": {
      "properties": {
        "date": {
          "description": "The date of the aggregation.",
          "readOnly": true,
          "type": "string"
        },
        "percentage": {
          "description": "The percentage of card payments that were done with a Green Card.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "MasterCardActionListing": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account label of the account that this action is created for.",
          "readOnly": true,
          "type": "object"
        },
        "amount_billing": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the transaction in the monetary account's currency.",
          "readOnly": true,
          "type": "object"
        },
        "amount_converted": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the transaction in local currency.",
          "readOnly": true,
          "type": "object"
        },
        "amount_fee": {
          "$ref": "#/definitions/Amount",
          "description": "The fee amount as charged by the merchant, if applicable.",
          "readOnly": true,
          "type": "object"
        },
        "amount_local": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the transaction in local currency.",
          "readOnly": true,
          "type": "object"
        },
        "amount_original_billing": {
          "$ref": "#/definitions/Amount",
          "description": "The original amount in the monetary account's currency.",
          "readOnly": true,
          "type": "object"
        },
        "amount_original_local": {
          "$ref": "#/definitions/Amount",
          "description": "The original amount in local currency.",
          "readOnly": true,
          "type": "object"
        },
        "applied_limit": {
          "description": "The type of the limit applied to validate if this MasterCardAction was within the spending limits. The returned string matches the limit types as defined in the card endpoint.",
          "readOnly": true,
          "type": "string"
        },
        "authorisation_status": {
          "description": "The status in the authorisation process.",
          "readOnly": true,
          "type": "string"
        },
        "authorisation_type": {
          "description": "The type of transaction that was delivered using the card.",
          "readOnly": true,
          "type": "string"
        },
        "card_authorisation_id_response": {
          "description": "The response code by which authorised transaction can be identified as authorised by bunq.",
          "readOnly": true,
          "type": "string"
        },
        "card_id": {
          "description": "The id of the card this action links to.",
          "readOnly": true,
          "type": "integer"
        },
        "city": {
          "description": "The city where the message originates from as announced by the terminal.",
          "readOnly": true,
          "type": "string"
        },
        "clearing_expiry_time": {
          "description": "The time when the processing of the clearing is expired, refunding the authorisation.",
          "readOnly": true,
          "type": "string"
        },
        "clearing_status": {
          "description": "The clearing status of the authorisation. Can be 'PENDING', 'FIRST_PRESENTMENT_COMPLETE' or 'REFUND_LENIENCY'.",
          "readOnly": true,
          "type": "string"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account label of the counterparty.",
          "readOnly": true,
          "type": "object"
        },
        "decision": {
          "description": "Why the transaction was denied, if it was denied, or just ALLOWED.",
          "readOnly": true,
          "type": "string"
        },
        "decision_description": {
          "description": "Empty if allowed, otherwise a textual explanation of why it was denied.",
          "readOnly": true,
          "type": "string"
        },
        "decision_description_translated": {
          "description": "Empty if allowed, otherwise a textual explanation of why it was denied in user's language.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description for this transaction to display.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the MastercardAction.",
          "readOnly": true,
          "type": "integer"
        },
        "label_card": {
          "$ref": "#/definitions/LabelCard",
          "description": "The label of the card.",
          "readOnly": true,
          "type": "object"
        },
        "maturity_date": {
          "description": "The maturity date.",
          "readOnly": true,
          "type": "string"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account this action links to.",
          "readOnly": true,
          "type": "integer"
        },
        "pan_entry_mode_user": {
          "description": "The type of entry mode the user used. Can be 'ATM', 'ICC', 'MAGNETIC_STRIPE' or 'E_COMMERCE'.",
          "readOnly": true,
          "type": "string"
        },
        "payment_status": {
          "description": "The payment status of the transaction. For example PAYMENT_SUCCESSFUL, for a successful payment.",
          "readOnly": true,
          "type": "string"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "reservation_expiry_time": {
          "description": "If this is a reservation, the moment the reservation will expire.",
          "readOnly": true,
          "type": "string"
        },
        "secure_code_id": {
          "description": "The secure code id for this mastercard action or null.",
          "readOnly": true,
          "type": "integer"
        },
        "settlement_status": {
          "description": "The setlement status in the authorisation process.",
          "readOnly": true,
          "type": "string"
        },
        "token_status": {
          "description": "If this is a tokenisation action, this shows the status of the token.",
          "readOnly": true,
          "type": "string"
        },
        "wallet_provider_id": {
          "description": "The ID of the wallet provider as defined by MasterCard. 420 = bunq Android app with Tap&Pay; 103 = Apple Pay.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "MasterCardActionRead": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account label of the account that this action is created for.",
          "readOnly": true,
          "type": "object"
        },
        "amount_billing": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the transaction in the monetary account's currency.",
          "readOnly": true,
          "type": "object"
        },
        "amount_converted": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the transaction in local currency.",
          "readOnly": true,
          "type": "object"
        },
        "amount_fee": {
          "$ref": "#/definitions/Amount",
          "description": "The fee amount as charged by the merchant, if applicable.",
          "readOnly": true,
          "type": "object"
        },
        "amount_local": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the transaction in local currency.",
          "readOnly": true,
          "type": "object"
        },
        "amount_original_billing": {
          "$ref": "#/definitions/Amount",
          "description": "The original amount in the monetary account's currency.",
          "readOnly": true,
          "type": "object"
        },
        "amount_original_local": {
          "$ref": "#/definitions/Amount",
          "description": "The original amount in local currency.",
          "readOnly": true,
          "type": "object"
        },
        "applied_limit": {
          "description": "The type of the limit applied to validate if this MasterCardAction was within the spending limits. The returned string matches the limit types as defined in the card endpoint.",
          "readOnly": true,
          "type": "string"
        },
        "authorisation_status": {
          "description": "The status in the authorisation process.",
          "readOnly": true,
          "type": "string"
        },
        "authorisation_type": {
          "description": "The type of transaction that was delivered using the card.",
          "readOnly": true,
          "type": "string"
        },
        "card_authorisation_id_response": {
          "description": "The response code by which authorised transaction can be identified as authorised by bunq.",
          "readOnly": true,
          "type": "string"
        },
        "card_id": {
          "description": "The id of the card this action links to.",
          "readOnly": true,
          "type": "integer"
        },
        "city": {
          "description": "The city where the message originates from as announced by the terminal.",
          "readOnly": true,
          "type": "string"
        },
        "clearing_expiry_time": {
          "description": "The time when the processing of the clearing is expired, refunding the authorisation.",
          "readOnly": true,
          "type": "string"
        },
        "clearing_status": {
          "description": "The clearing status of the authorisation. Can be 'PENDING', 'FIRST_PRESENTMENT_COMPLETE' or 'REFUND_LENIENCY'.",
          "readOnly": true,
          "type": "string"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account label of the counterparty.",
          "readOnly": true,
          "type": "object"
        },
        "decision": {
          "description": "Why the transaction was denied, if it was denied, or just ALLOWED.",
          "readOnly": true,
          "type": "string"
        },
        "decision_description": {
          "description": "Empty if allowed, otherwise a textual explanation of why it was denied.",
          "readOnly": true,
          "type": "string"
        },
        "decision_description_translated": {
          "description": "Empty if allowed, otherwise a textual explanation of why it was denied in user's language.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description for this transaction to display.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the MastercardAction.",
          "readOnly": true,
          "type": "integer"
        },
        "label_card": {
          "$ref": "#/definitions/LabelCard",
          "description": "The label of the card.",
          "readOnly": true,
          "type": "object"
        },
        "maturity_date": {
          "description": "The maturity date.",
          "readOnly": true,
          "type": "string"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account this action links to.",
          "readOnly": true,
          "type": "integer"
        },
        "pan_entry_mode_user": {
          "description": "The type of entry mode the user used. Can be 'ATM', 'ICC', 'MAGNETIC_STRIPE' or 'E_COMMERCE'.",
          "readOnly": true,
          "type": "string"
        },
        "payment_status": {
          "description": "The payment status of the transaction. For example PAYMENT_SUCCESSFUL, for a successful payment.",
          "readOnly": true,
          "type": "string"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "reservation_expiry_time": {
          "description": "If this is a reservation, the moment the reservation will expire.",
          "readOnly": true,
          "type": "string"
        },
        "secure_code_id": {
          "description": "The secure code id for this mastercard action or null.",
          "readOnly": true,
          "type": "integer"
        },
        "settlement_status": {
          "description": "The setlement status in the authorisation process.",
          "readOnly": true,
          "type": "string"
        },
        "token_status": {
          "description": "If this is a tokenisation action, this shows the status of the token.",
          "readOnly": true,
          "type": "string"
        },
        "wallet_provider_id": {
          "description": "The ID of the wallet provider as defined by MasterCard. 420 = bunq Android app with Tap&Pay; 103 = Apple Pay.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "MonetaryAccountBank": {
      "properties": {
        "avatar_uuid": {
          "description": "The UUID of the Avatar of the MonetaryAccountBank.",
          "readOnly": false,
          "type": "string"
        },
        "currency": {
          "description": "The currency of the MonetaryAccountBank as an ISO 4217 formatted currency code.",
          "readOnly": false,
          "type": "string"
        },
        "daily_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The daily spending limit Amount of the MonetaryAccountBank. Defaults to 1000 EUR. Currency must match the MonetaryAccountBank's currency. Limited to 10000 EUR.",
          "readOnly": false,
          "type": "object"
        },
        "description": {
          "description": "The description of the MonetaryAccountBank. Defaults to 'bunq account'.",
          "readOnly": false,
          "type": "string"
        },
        "display_name": {
          "description": "The legal name of the user / company using this monetary account.",
          "readOnly": false,
          "type": "string"
        },
        "reason": {
          "description": "The reason for voluntarily cancelling (closing) the MonetaryAccountBank, can only be OTHER. Should only be specified if updating the status to CANCELLED.",
          "readOnly": false,
          "type": "string"
        },
        "reason_description": {
          "description": "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountBank. Can be any user provided message. Should only be specified if updating the status to CANCELLED.",
          "readOnly": false,
          "type": "string"
        },
        "setting": {
          "$ref": "#/definitions/MonetaryAccountSetting",
          "description": "The settings of the MonetaryAccountBank.",
          "readOnly": false,
          "type": "object"
        },
        "status": {
          "description": "The status of the MonetaryAccountBank. Ignored in POST requests (always set to ACTIVE) can be CANCELLED or PENDING_REOPEN in PUT requests to cancel (close) or reopen the MonetaryAccountBank. When updating the status and/or sub_status no other fields can be updated in the same request (and vice versa).",
          "readOnly": false,
          "type": "string"
        },
        "sub_status": {
          "description": "The sub-status of the MonetaryAccountBank providing extra information regarding the status. Should be ignored for POST requests. In case of PUT requests with status CANCELLED it can only be REDEMPTION_VOLUNTARY, while with status PENDING_REOPEN it can only be NONE. When updating the status and/or sub_status no other fields can be updated in the same request (and vice versa).",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "currency"
      ],
      "type": "object"
    },
    "MonetaryAccountBankCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "MonetaryAccountBankListing": {
      "properties": {
        "alias": {
          "description": "The Aliases for the MonetaryAccountBank.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": true,
          "type": "array"
        },
        "all_auto_save_id": {
          "description": "The ids of the AutoSave.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": true,
          "type": "array"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The Avatar of the MonetaryAccountBank.",
          "readOnly": true,
          "type": "object"
        },
        "balance": {
          "$ref": "#/definitions/Amount",
          "description": "The current available balance Amount of the MonetaryAccountBank.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the MonetaryAccountBank's creation.",
          "readOnly": true,
          "type": "string"
        },
        "currency": {
          "description": "The currency of the MonetaryAccountBank as an ISO 4217 formatted currency code.",
          "readOnly": true,
          "type": "string"
        },
        "daily_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The daily spending limit Amount of the MonetaryAccountBank. Defaults to 1000 EUR. Currency must match the MonetaryAccountBank's currency. Limited to 10000 EUR.",
          "readOnly": true,
          "type": "object"
        },
        "description": {
          "description": "The description of the MonetaryAccountBank. Defaults to 'bunq account'.",
          "readOnly": true,
          "type": "string"
        },
        "display_name": {
          "description": "The legal name of the user / company using this monetary account.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the MonetaryAccountBank.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_profile": {
          "$ref": "#/definitions/MonetaryAccountProfile",
          "description": "The profile of the account.",
          "readOnly": true,
          "type": "object"
        },
        "overdraft_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The maximum Amount the MonetaryAccountBank can be 'in the red'.",
          "readOnly": true,
          "type": "object"
        },
        "public_uuid": {
          "description": "The MonetaryAccountBank's public UUID.",
          "readOnly": true,
          "type": "string"
        },
        "reason": {
          "description": "The reason for voluntarily cancelling (closing) the MonetaryAccountBank, can only be OTHER.",
          "readOnly": true,
          "type": "string"
        },
        "reason_description": {
          "description": "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountBank. Can be any user provided message.",
          "readOnly": true,
          "type": "string"
        },
        "setting": {
          "$ref": "#/definitions/MonetaryAccountSetting",
          "description": "The settings of the MonetaryAccountBank.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status of the MonetaryAccountBank. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The sub-status of the MonetaryAccountBank providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the MonetaryAccountBank's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_id": {
          "description": "The id of the User who owns the MonetaryAccountBank.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MonetaryAccountBankRead": {
      "properties": {
        "alias": {
          "description": "The Aliases for the MonetaryAccountBank.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": true,
          "type": "array"
        },
        "all_auto_save_id": {
          "description": "The ids of the AutoSave.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": true,
          "type": "array"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The Avatar of the MonetaryAccountBank.",
          "readOnly": true,
          "type": "object"
        },
        "balance": {
          "$ref": "#/definitions/Amount",
          "description": "The current available balance Amount of the MonetaryAccountBank.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the MonetaryAccountBank's creation.",
          "readOnly": true,
          "type": "string"
        },
        "currency": {
          "description": "The currency of the MonetaryAccountBank as an ISO 4217 formatted currency code.",
          "readOnly": true,
          "type": "string"
        },
        "daily_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The daily spending limit Amount of the MonetaryAccountBank. Defaults to 1000 EUR. Currency must match the MonetaryAccountBank's currency. Limited to 10000 EUR.",
          "readOnly": true,
          "type": "object"
        },
        "description": {
          "description": "The description of the MonetaryAccountBank. Defaults to 'bunq account'.",
          "readOnly": true,
          "type": "string"
        },
        "display_name": {
          "description": "The legal name of the user / company using this monetary account.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the MonetaryAccountBank.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_profile": {
          "$ref": "#/definitions/MonetaryAccountProfile",
          "description": "The profile of the account.",
          "readOnly": true,
          "type": "object"
        },
        "overdraft_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The maximum Amount the MonetaryAccountBank can be 'in the red'.",
          "readOnly": true,
          "type": "object"
        },
        "public_uuid": {
          "description": "The MonetaryAccountBank's public UUID.",
          "readOnly": true,
          "type": "string"
        },
        "reason": {
          "description": "The reason for voluntarily cancelling (closing) the MonetaryAccountBank, can only be OTHER.",
          "readOnly": true,
          "type": "string"
        },
        "reason_description": {
          "description": "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountBank. Can be any user provided message.",
          "readOnly": true,
          "type": "string"
        },
        "setting": {
          "$ref": "#/definitions/MonetaryAccountSetting",
          "description": "The settings of the MonetaryAccountBank.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status of the MonetaryAccountBank. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The sub-status of the MonetaryAccountBank providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the MonetaryAccountBank's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_id": {
          "description": "The id of the User who owns the MonetaryAccountBank.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MonetaryAccountBankUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "MonetaryAccountJoint": {
      "properties": {
        "alias": {
          "description": "The Aliases to add to MonetaryAccountJoint. Must all be confirmed first. Can mostly be ignored.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": false,
          "type": "array"
        },
        "all_co_owner": {
          "description": "The users the account will be joint with.",
          "items": {
            "$ref": "#/definitions/CoOwner"
          },
          "readOnly": false,
          "type": "array"
        },
        "avatar_uuid": {
          "description": "The UUID of the Avatar of the MonetaryAccountJoint.",
          "readOnly": false,
          "type": "string"
        },
        "currency": {
          "description": "The currency of the MonetaryAccountJoint as an ISO 4217 formatted currency code.",
          "readOnly": false,
          "type": "string"
        },
        "daily_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The daily spending limit Amount of the MonetaryAccountJoint. Defaults to 1000 EUR. Currency must match the MonetaryAccountJoint's currency. Limited to 10000 EUR.",
          "readOnly": false,
          "type": "object"
        },
        "description": {
          "description": "The description of the MonetaryAccountJoint. Defaults to 'bunq account'.",
          "readOnly": false,
          "type": "string"
        },
        "overdraft_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The maximum Amount the MonetaryAccountJoint can be 'in the red'. Must be 0 EUR or omitted.",
          "readOnly": false,
          "type": "object"
        },
        "reason": {
          "description": "The reason for voluntarily cancelling (closing) the MonetaryAccountJoint, can only be OTHER. Should only be specified if updating the status to CANCELLED.",
          "readOnly": false,
          "type": "string"
        },
        "reason_description": {
          "description": "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountJoint. Can be any user provided message. Should only be specified if updating the status to CANCELLED.",
          "readOnly": false,
          "type": "string"
        },
        "setting": {
          "$ref": "#/definitions/MonetaryAccountSetting",
          "description": "The settings of the MonetaryAccountJoint.",
          "readOnly": false,
          "type": "object"
        },
        "status": {
          "description": "The status of the MonetaryAccountJoint. Ignored in POST requests (always set to ACTIVE) can be CANCELLED or PENDING_REOPEN in PUT requests to cancel (close) or reopen the MonetaryAccountJoint. When updating the status and/or sub_status no other fields can be updated in the same request (and vice versa).",
          "readOnly": false,
          "type": "string"
        },
        "sub_status": {
          "description": "The sub-status of the MonetaryAccountJoint providing extra information regarding the status. Should be ignored for POST requests. In case of PUT requests with status CANCELLED it can only be REDEMPTION_VOLUNTARY, while with status PENDING_REOPEN it can only be NONE. When updating the status and/or sub_status no other fields can be updated in the same request (and vice versa).",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "currency",
        "all_co_owner"
      ],
      "type": "object"
    },
    "MonetaryAccountJointCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "MonetaryAccountJointListing": {
      "properties": {
        "alias": {
          "description": "The Aliases for the MonetaryAccountJoint.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": true,
          "type": "array"
        },
        "all_auto_save_id": {
          "description": "The ids of the AutoSave.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": true,
          "type": "array"
        },
        "all_co_owner": {
          "description": "The users the account will be joint with.",
          "items": {
            "$ref": "#/definitions/CoOwner"
          },
          "readOnly": true,
          "type": "array"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The Avatar of the MonetaryAccountJoint.",
          "readOnly": true,
          "type": "object"
        },
        "balance": {
          "$ref": "#/definitions/Amount",
          "description": "The current available balance Amount of the MonetaryAccountJoint.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the MonetaryAccountJoint's creation.",
          "readOnly": true,
          "type": "string"
        },
        "currency": {
          "description": "The currency of the MonetaryAccountJoint as an ISO 4217 formatted currency code.",
          "readOnly": true,
          "type": "string"
        },
        "daily_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The daily spending limit Amount of the MonetaryAccountJoint. Defaults to 1000 EUR. Currency must match the MonetaryAccountJoint's currency. Limited to 10000 EUR.",
          "readOnly": true,
          "type": "object"
        },
        "description": {
          "description": "The description of the MonetaryAccountJoint. Defaults to 'bunq account'.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the MonetaryAccountJoint.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_profile": {
          "$ref": "#/definitions/MonetaryAccountProfile",
          "description": "The profile of the account.",
          "readOnly": true,
          "type": "object"
        },
        "overdraft_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The maximum Amount the MonetaryAccountJoint can be 'in the red'.",
          "readOnly": true,
          "type": "object"
        },
        "public_uuid": {
          "description": "The MonetaryAccountJoint's public UUID.",
          "readOnly": true,
          "type": "string"
        },
        "reason": {
          "description": "The reason for voluntarily cancelling (closing) the MonetaryAccountJoint, can only be OTHER.",
          "readOnly": true,
          "type": "string"
        },
        "reason_description": {
          "description": "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountJoint. Can be any user provided message.",
          "readOnly": true,
          "type": "string"
        },
        "setting": {
          "$ref": "#/definitions/MonetaryAccountSetting",
          "description": "The settings of the MonetaryAccountJoint.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status of the MonetaryAccountJoint. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The sub-status of the MonetaryAccountJoint providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the MonetaryAccountJoint's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_id": {
          "description": "The id of the User who owns the MonetaryAccountJoint.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MonetaryAccountJointRead": {
      "properties": {
        "alias": {
          "description": "The Aliases for the MonetaryAccountJoint.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": true,
          "type": "array"
        },
        "all_auto_save_id": {
          "description": "The ids of the AutoSave.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": true,
          "type": "array"
        },
        "all_co_owner": {
          "description": "The users the account will be joint with.",
          "items": {
            "$ref": "#/definitions/CoOwner"
          },
          "readOnly": true,
          "type": "array"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The Avatar of the MonetaryAccountJoint.",
          "readOnly": true,
          "type": "object"
        },
        "balance": {
          "$ref": "#/definitions/Amount",
          "description": "The current available balance Amount of the MonetaryAccountJoint.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the MonetaryAccountJoint's creation.",
          "readOnly": true,
          "type": "string"
        },
        "currency": {
          "description": "The currency of the MonetaryAccountJoint as an ISO 4217 formatted currency code.",
          "readOnly": true,
          "type": "string"
        },
        "daily_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The daily spending limit Amount of the MonetaryAccountJoint. Defaults to 1000 EUR. Currency must match the MonetaryAccountJoint's currency. Limited to 10000 EUR.",
          "readOnly": true,
          "type": "object"
        },
        "description": {
          "description": "The description of the MonetaryAccountJoint. Defaults to 'bunq account'.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the MonetaryAccountJoint.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_profile": {
          "$ref": "#/definitions/MonetaryAccountProfile",
          "description": "The profile of the account.",
          "readOnly": true,
          "type": "object"
        },
        "overdraft_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The maximum Amount the MonetaryAccountJoint can be 'in the red'.",
          "readOnly": true,
          "type": "object"
        },
        "public_uuid": {
          "description": "The MonetaryAccountJoint's public UUID.",
          "readOnly": true,
          "type": "string"
        },
        "reason": {
          "description": "The reason for voluntarily cancelling (closing) the MonetaryAccountJoint, can only be OTHER.",
          "readOnly": true,
          "type": "string"
        },
        "reason_description": {
          "description": "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountJoint. Can be any user provided message.",
          "readOnly": true,
          "type": "string"
        },
        "setting": {
          "$ref": "#/definitions/MonetaryAccountSetting",
          "description": "The settings of the MonetaryAccountJoint.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status of the MonetaryAccountJoint. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The sub-status of the MonetaryAccountJoint providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the MonetaryAccountJoint's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_id": {
          "description": "The id of the User who owns the MonetaryAccountJoint.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MonetaryAccountJointUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "MonetaryAccountLight": {
      "properties": {
        "alias": {
          "description": "The Aliases for the MonetaryAccountLight.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": true,
          "type": "array"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The Avatar of the MonetaryAccountLight.",
          "readOnly": true,
          "type": "object"
        },
        "avatar_uuid": {
          "description": "The UUID of the Avatar of the MonetaryAccountLight.",
          "readOnly": false,
          "type": "string"
        },
        "balance": {
          "$ref": "#/definitions/Amount",
          "description": "The current available balance Amount of the MonetaryAccountLight.",
          "readOnly": true,
          "type": "object"
        },
        "balance_maximum": {
          "$ref": "#/definitions/Amount",
          "description": "The maximum balance Amount of the MonetaryAccountLight.",
          "readOnly": true,
          "type": "object"
        },
        "budget_month_maximum": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount of the monthly budget.",
          "readOnly": true,
          "type": "object"
        },
        "budget_month_used": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the monthly budget used.",
          "readOnly": true,
          "type": "object"
        },
        "budget_withdrawal_year_maximum": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount of the yearly withdrawal budget.",
          "readOnly": true,
          "type": "object"
        },
        "budget_withdrawal_year_used": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the yearly withdrawal budget used.",
          "readOnly": true,
          "type": "object"
        },
        "budget_year_maximum": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount of the yearly budget.",
          "readOnly": true,
          "type": "object"
        },
        "budget_year_used": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the yearly budget used.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the MonetaryAccountLight's creation.",
          "readOnly": true,
          "type": "string"
        },
        "currency": {
          "description": "The currency of the MonetaryAccountLight as an ISO 4217 formatted currency code.",
          "readOnly": false,
          "type": "string"
        },
        "daily_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The daily spending limit Amount of the MonetaryAccountLight. Defaults to 1000 EUR. Currency must match the MonetaryAccountLight's currency. Limited to 10000 EUR.",
          "readOnly": false,
          "type": "object"
        },
        "description": {
          "description": "The description of the MonetaryAccountLight. Defaults to 'bunq account'.",
          "readOnly": false,
          "type": "string"
        },
        "id": {
          "description": "The id of the MonetaryAccountLight.",
          "readOnly": true,
          "type": "integer"
        },
        "public_uuid": {
          "description": "The MonetaryAccountLight's public UUID.",
          "readOnly": true,
          "type": "string"
        },
        "reason": {
          "description": "The reason for voluntarily cancelling (closing) the MonetaryAccountBank, can only be OTHER.",
          "readOnly": false,
          "type": "string"
        },
        "reason_description": {
          "description": "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountBank. Can be any user provided message.",
          "readOnly": false,
          "type": "string"
        },
        "setting": {
          "$ref": "#/definitions/MonetaryAccountSetting",
          "description": "The settings of the MonetaryAccountLight.",
          "readOnly": false,
          "type": "object"
        },
        "status": {
          "description": "The status of the MonetaryAccountLight. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
          "readOnly": false,
          "type": "string"
        },
        "sub_status": {
          "description": "The sub-status of the MonetaryAccountLight providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
          "readOnly": false,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the MonetaryAccountLight's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_id": {
          "description": "The id of the User who owns the MonetaryAccountLight.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MonetaryAccountListing": {
      "properties": {
        "MonetaryAccountBank": {
          "$ref": "#/definitions/MonetaryAccountBank",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "MonetaryAccountJoint": {
          "$ref": "#/definitions/MonetaryAccountJoint",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "MonetaryAccountLight": {
          "$ref": "#/definitions/MonetaryAccountLight",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "MonetaryAccountSavings": {
          "$ref": "#/definitions/MonetaryAccountSavings",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "MonetaryAccountProfile": {
      "properties": {
        "profile_drain": {
          "$ref": "#/definitions/MonetaryAccountProfileDrain",
          "description": "The profile settings for moving excesses to a savings account",
          "readOnly": false,
          "type": "object"
        },
        "profile_fill": {
          "$ref": "#/definitions/MonetaryAccountProfileFill",
          "description": "The profile settings for triggering the fill of a monetary account.",
          "readOnly": false,
          "type": "object"
        }
      },
      "type": "object"
    },
    "MonetaryAccountProfileDrain": {
      "properties": {
        "balance_preferred": {
          "$ref": "#/definitions/Amount",
          "description": "The goal balance.",
          "readOnly": false,
          "type": "object"
        },
        "balance_threshold_high": {
          "$ref": "#/definitions/Amount",
          "description": "The high threshold balance.",
          "readOnly": false,
          "type": "object"
        },
        "savings_account_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The savings monetary account.",
          "readOnly": false,
          "type": "object"
        },
        "status": {
          "description": "The status of the profile.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "MonetaryAccountProfileFill": {
      "properties": {
        "balance_preferred": {
          "$ref": "#/definitions/Amount",
          "description": "The goal balance.",
          "readOnly": false,
          "type": "object"
        },
        "balance_threshold_low": {
          "$ref": "#/definitions/Amount",
          "description": "The low threshold balance.",
          "readOnly": false,
          "type": "object"
        },
        "issuer": {
          "$ref": "#/definitions/Issuer",
          "description": "The bank the fill is supposed to happen from, with BIC and bank name.",
          "readOnly": false,
          "type": "object"
        },
        "method_fill": {
          "description": "The method used to fill the monetary account. Currently only iDEAL is supported, and it is the default one.",
          "readOnly": false,
          "type": "string"
        },
        "status": {
          "description": "The status of the profile.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "MonetaryAccountRead": {
      "properties": {
        "MonetaryAccountBank": {
          "$ref": "#/definitions/MonetaryAccountBank",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "MonetaryAccountJoint": {
          "$ref": "#/definitions/MonetaryAccountJoint",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "MonetaryAccountLight": {
          "$ref": "#/definitions/MonetaryAccountLight",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "MonetaryAccountSavings": {
          "$ref": "#/definitions/MonetaryAccountSavings",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "MonetaryAccountSavings": {
      "properties": {
        "all_co_owner": {
          "description": "The users the account will be joint with.",
          "items": {
            "$ref": "#/definitions/CoOwner"
          },
          "readOnly": false,
          "type": "array"
        },
        "avatar_uuid": {
          "description": "The UUID of the Avatar of the MonetaryAccountSavings.",
          "readOnly": false,
          "type": "string"
        },
        "currency": {
          "description": "The currency of the MonetaryAccountSavings as an ISO 4217 formatted currency code.",
          "readOnly": false,
          "type": "string"
        },
        "daily_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The daily spending limit Amount of the MonetaryAccountSavings. Defaults to 1000 EUR. Currency must match the MonetaryAccountSavings's currency. Limited to 10000 EUR.",
          "readOnly": false,
          "type": "object"
        },
        "description": {
          "description": "The description of the MonetaryAccountSavings. Defaults to 'bunq account'.",
          "readOnly": false,
          "type": "string"
        },
        "reason": {
          "description": "The reason for voluntarily cancelling (closing) the MonetaryAccountSavings, can only be OTHER. Should only be specified if updating the status to CANCELLED.",
          "readOnly": false,
          "type": "string"
        },
        "reason_description": {
          "description": "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountSavings. Can be any user provided message. Should only be specified if updating the status to CANCELLED.",
          "readOnly": false,
          "type": "string"
        },
        "savings_goal": {
          "$ref": "#/definitions/Amount",
          "description": "The Savings Goal set for this MonetaryAccountSavings.",
          "readOnly": false,
          "type": "object"
        },
        "setting": {
          "$ref": "#/definitions/MonetaryAccountSetting",
          "description": "The settings of the MonetaryAccountSavings.",
          "readOnly": false,
          "type": "object"
        },
        "status": {
          "description": "The status of the MonetaryAccountSavings. Ignored in POST requests (always set to ACTIVE) can be CANCELLED or PENDING_REOPEN in PUT requests to cancel (close) or reopen the MonetaryAccountSavings. When updating the status and/or sub_status no other fields can be updated in the same request (and vice versa).",
          "readOnly": false,
          "type": "string"
        },
        "sub_status": {
          "description": "The sub-status of the MonetaryAccountSavings providing extra information regarding the status. Should be ignored for POST requests. In case of PUT requests with status CANCELLED it can only be REDEMPTION_VOLUNTARY, while with status PENDING_REOPEN it can only be NONE. When updating the status and/or sub_status no other fields can be updated in the same request (and vice versa).",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "currency"
      ],
      "type": "object"
    },
    "MonetaryAccountSavingsCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "MonetaryAccountSavingsListing": {
      "properties": {
        "alias": {
          "description": "The Aliases for the MonetaryAccountSavings.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": true,
          "type": "array"
        },
        "all_auto_save_id": {
          "description": "The ids of the AutoSave.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": true,
          "type": "array"
        },
        "all_co_owner": {
          "description": "The users the account will be joint with.",
          "items": {
            "$ref": "#/definitions/CoOwner"
          },
          "readOnly": true,
          "type": "array"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The Avatar of the MonetaryAccountSavings.",
          "readOnly": true,
          "type": "object"
        },
        "balance": {
          "$ref": "#/definitions/Amount",
          "description": "The current available balance Amount of the MonetaryAccountSavings.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the MonetaryAccountSavings's creation.",
          "readOnly": true,
          "type": "string"
        },
        "currency": {
          "description": "The currency of the MonetaryAccountSavings as an ISO 4217 formatted currency code.",
          "readOnly": true,
          "type": "string"
        },
        "daily_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The daily spending limit Amount of the MonetaryAccountSavings. Defaults to 1000 EUR. Currency must match the MonetaryAccountSavings's currency. Limited to 10000 EUR.",
          "readOnly": true,
          "type": "object"
        },
        "description": {
          "description": "The description of the MonetaryAccountSavings. Defaults to 'bunq account'.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the MonetaryAccountSavings.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_profile": {
          "$ref": "#/definitions/MonetaryAccountProfile",
          "description": "The profile of the account.",
          "readOnly": true,
          "type": "object"
        },
        "overdraft_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The maximum Amount the MonetaryAccountSavings can be 'in the red'. Must be 0 EUR or omitted.",
          "readOnly": true,
          "type": "object"
        },
        "public_uuid": {
          "description": "The MonetaryAccountSavings's public UUID.",
          "readOnly": true,
          "type": "string"
        },
        "reason": {
          "description": "The reason for voluntarily cancelling (closing) the MonetaryAccountSavings, can only be OTHER.",
          "readOnly": true,
          "type": "string"
        },
        "reason_description": {
          "description": "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountSavings. Can be any user provided message.",
          "readOnly": true,
          "type": "string"
        },
        "savings_goal": {
          "$ref": "#/definitions/Amount",
          "description": "The Savings Goal set for this MonetaryAccountSavings.",
          "readOnly": true,
          "type": "object"
        },
        "savings_goal_progress": {
          "description": "The progress in percentages for the Savings Goal set for this MonetaryAccountSavings.",
          "readOnly": true,
          "type": "integer"
        },
        "setting": {
          "$ref": "#/definitions/MonetaryAccountSetting",
          "description": "The settings of the MonetaryAccountSavings.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status of the MonetaryAccountSavings. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The sub-status of the MonetaryAccountSavings providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the MonetaryAccountSavings's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_id": {
          "description": "The id of the User who owns the MonetaryAccountSavings.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MonetaryAccountSavingsRead": {
      "properties": {
        "alias": {
          "description": "The Aliases for the MonetaryAccountSavings.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": true,
          "type": "array"
        },
        "all_auto_save_id": {
          "description": "The ids of the AutoSave.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": true,
          "type": "array"
        },
        "all_co_owner": {
          "description": "The users the account will be joint with.",
          "items": {
            "$ref": "#/definitions/CoOwner"
          },
          "readOnly": true,
          "type": "array"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The Avatar of the MonetaryAccountSavings.",
          "readOnly": true,
          "type": "object"
        },
        "balance": {
          "$ref": "#/definitions/Amount",
          "description": "The current available balance Amount of the MonetaryAccountSavings.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the MonetaryAccountSavings's creation.",
          "readOnly": true,
          "type": "string"
        },
        "currency": {
          "description": "The currency of the MonetaryAccountSavings as an ISO 4217 formatted currency code.",
          "readOnly": true,
          "type": "string"
        },
        "daily_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The daily spending limit Amount of the MonetaryAccountSavings. Defaults to 1000 EUR. Currency must match the MonetaryAccountSavings's currency. Limited to 10000 EUR.",
          "readOnly": true,
          "type": "object"
        },
        "description": {
          "description": "The description of the MonetaryAccountSavings. Defaults to 'bunq account'.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the MonetaryAccountSavings.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_profile": {
          "$ref": "#/definitions/MonetaryAccountProfile",
          "description": "The profile of the account.",
          "readOnly": true,
          "type": "object"
        },
        "overdraft_limit": {
          "$ref": "#/definitions/Amount",
          "description": "The maximum Amount the MonetaryAccountSavings can be 'in the red'. Must be 0 EUR or omitted.",
          "readOnly": true,
          "type": "object"
        },
        "public_uuid": {
          "description": "The MonetaryAccountSavings's public UUID.",
          "readOnly": true,
          "type": "string"
        },
        "reason": {
          "description": "The reason for voluntarily cancelling (closing) the MonetaryAccountSavings, can only be OTHER.",
          "readOnly": true,
          "type": "string"
        },
        "reason_description": {
          "description": "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountSavings. Can be any user provided message.",
          "readOnly": true,
          "type": "string"
        },
        "savings_goal": {
          "$ref": "#/definitions/Amount",
          "description": "The Savings Goal set for this MonetaryAccountSavings.",
          "readOnly": true,
          "type": "object"
        },
        "savings_goal_progress": {
          "description": "The progress in percentages for the Savings Goal set for this MonetaryAccountSavings.",
          "readOnly": true,
          "type": "integer"
        },
        "setting": {
          "$ref": "#/definitions/MonetaryAccountSetting",
          "description": "The settings of the MonetaryAccountSavings.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status of the MonetaryAccountSavings. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The sub-status of the MonetaryAccountSavings providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the MonetaryAccountSavings's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_id": {
          "description": "The id of the User who owns the MonetaryAccountSavings.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MonetaryAccountSavingsUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "MonetaryAccountSetting": {
      "properties": {
        "color": {
          "description": "The color chosen for the MonetaryAccount.",
          "readOnly": false,
          "type": "string"
        },
        "default_avatar_status": {
          "description": "The status of the avatar. Can be either AVATAR_DEFAULT, AVATAR_CUSTOM or AVATAR_UNDETERMINED.",
          "readOnly": false,
          "type": "string"
        },
        "icon": {
          "description": "The icon chosen for the MonetaryAccount.",
          "readOnly": false,
          "type": "string"
        },
        "restriction_chat": {
          "description": "The chat restriction. Possible values are ALLOW_INCOMING or BLOCK_INCOMING",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentBankSwitchServiceNetherlandsIncomingPayment": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentDelete": {
      "type": "object"
    },
    "NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentBunqMeFundraiserResult": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentBunqMeFundraiserResultCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentBunqMeFundraiserResultDelete": {
      "type": "object"
    },
    "NoteAttachmentBunqMeFundraiserResultListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentBunqMeFundraiserResultRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentBunqMeFundraiserResultUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentDraftPayment": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentDraftPaymentCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentDraftPaymentDelete": {
      "type": "object"
    },
    "NoteAttachmentDraftPaymentListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentDraftPaymentRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentDraftPaymentUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentIdealMerchantTransaction": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentIdealMerchantTransactionCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentIdealMerchantTransactionDelete": {
      "type": "object"
    },
    "NoteAttachmentIdealMerchantTransactionListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentIdealMerchantTransactionRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentIdealMerchantTransactionUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentMasterCardAction": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentMasterCardActionCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentMasterCardActionDelete": {
      "type": "object"
    },
    "NoteAttachmentMasterCardActionListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentMasterCardActionRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentMasterCardActionUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentPayment": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentPaymentBatch": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentPaymentBatchCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentPaymentBatchDelete": {
      "type": "object"
    },
    "NoteAttachmentPaymentBatchListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentPaymentBatchRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentPaymentBatchUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentPaymentCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentPaymentDelete": {
      "type": "object"
    },
    "NoteAttachmentPaymentListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentPaymentRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentPaymentUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentRequestInquiry": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentRequestInquiryBatch": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentRequestInquiryBatchCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentRequestInquiryBatchDelete": {
      "type": "object"
    },
    "NoteAttachmentRequestInquiryBatchListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentRequestInquiryBatchRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentRequestInquiryBatchUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentRequestInquiryCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentRequestInquiryDelete": {
      "type": "object"
    },
    "NoteAttachmentRequestInquiryListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentRequestInquiryRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentRequestInquiryUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentRequestResponse": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentRequestResponseCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentRequestResponseDelete": {
      "type": "object"
    },
    "NoteAttachmentRequestResponseListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentRequestResponseRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentRequestResponseUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentScheduleInstance": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentScheduleInstanceCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentScheduleInstanceDelete": {
      "type": "object"
    },
    "NoteAttachmentScheduleInstanceListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentScheduleInstanceRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentScheduleInstanceUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentSchedulePayment": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentSchedulePaymentBatch": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentSchedulePaymentBatchCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentSchedulePaymentBatchDelete": {
      "type": "object"
    },
    "NoteAttachmentSchedulePaymentBatchListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentSchedulePaymentBatchRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentSchedulePaymentBatchUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentSchedulePaymentCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentSchedulePaymentDelete": {
      "type": "object"
    },
    "NoteAttachmentSchedulePaymentListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentSchedulePaymentRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentSchedulePaymentUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentSofortMerchantTransaction": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentSofortMerchantTransactionCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentSofortMerchantTransactionDelete": {
      "type": "object"
    },
    "NoteAttachmentSofortMerchantTransactionListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentSofortMerchantTransactionRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentSofortMerchantTransactionUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentWhitelistResult": {
      "properties": {
        "attachment_id": {
          "description": "The reference to the uploaded file to attach to this note.",
          "readOnly": false,
          "type": "integer"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "attachment_id"
      ],
      "type": "object"
    },
    "NoteAttachmentWhitelistResultCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteAttachmentWhitelistResultDelete": {
      "type": "object"
    },
    "NoteAttachmentWhitelistResultListing": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentWhitelistResultRead": {
      "properties": {
        "attachment": {
          "description": "The attachment attached to the note.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional description of the attachment.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttachmentWhitelistResultUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextBankSwitchServiceNetherlandsIncomingPayment": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextBankSwitchServiceNetherlandsIncomingPaymentCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextBankSwitchServiceNetherlandsIncomingPaymentDelete": {
      "type": "object"
    },
    "NoteTextBankSwitchServiceNetherlandsIncomingPaymentListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextBankSwitchServiceNetherlandsIncomingPaymentRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextBankSwitchServiceNetherlandsIncomingPaymentUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextBunqMeFundraiserResult": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextBunqMeFundraiserResultCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextBunqMeFundraiserResultDelete": {
      "type": "object"
    },
    "NoteTextBunqMeFundraiserResultListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextBunqMeFundraiserResultRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextBunqMeFundraiserResultUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextDraftPayment": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextDraftPaymentCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextDraftPaymentDelete": {
      "type": "object"
    },
    "NoteTextDraftPaymentListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextDraftPaymentRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextDraftPaymentUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextIdealMerchantTransaction": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextIdealMerchantTransactionCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextIdealMerchantTransactionDelete": {
      "type": "object"
    },
    "NoteTextIdealMerchantTransactionListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextIdealMerchantTransactionRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextIdealMerchantTransactionUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextMasterCardAction": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextMasterCardActionCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextMasterCardActionDelete": {
      "type": "object"
    },
    "NoteTextMasterCardActionListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextMasterCardActionRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextMasterCardActionUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextPayment": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextPaymentBatch": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextPaymentBatchCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextPaymentBatchDelete": {
      "type": "object"
    },
    "NoteTextPaymentBatchListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextPaymentBatchRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextPaymentBatchUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextPaymentCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextPaymentDelete": {
      "type": "object"
    },
    "NoteTextPaymentListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextPaymentRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextPaymentUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextRequestInquiry": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextRequestInquiryBatch": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextRequestInquiryBatchCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextRequestInquiryBatchDelete": {
      "type": "object"
    },
    "NoteTextRequestInquiryBatchListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextRequestInquiryBatchRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextRequestInquiryBatchUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextRequestInquiryCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextRequestInquiryDelete": {
      "type": "object"
    },
    "NoteTextRequestInquiryListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextRequestInquiryRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextRequestInquiryUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextRequestResponse": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextRequestResponseCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextRequestResponseDelete": {
      "type": "object"
    },
    "NoteTextRequestResponseListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextRequestResponseRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextRequestResponseUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextScheduleInstance": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextScheduleInstanceCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextScheduleInstanceDelete": {
      "type": "object"
    },
    "NoteTextScheduleInstanceListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextScheduleInstanceRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextScheduleInstanceUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextSchedulePayment": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextSchedulePaymentBatch": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextSchedulePaymentBatchCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextSchedulePaymentBatchDelete": {
      "type": "object"
    },
    "NoteTextSchedulePaymentBatchListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextSchedulePaymentBatchRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextSchedulePaymentBatchUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextSchedulePaymentCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextSchedulePaymentDelete": {
      "type": "object"
    },
    "NoteTextSchedulePaymentListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextSchedulePaymentRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextSchedulePaymentUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextSofortMerchantTransaction": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextSofortMerchantTransactionCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextSofortMerchantTransactionDelete": {
      "type": "object"
    },
    "NoteTextSofortMerchantTransactionListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextSofortMerchantTransactionRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextSofortMerchantTransactionUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextWhitelistResult": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextWhitelistResultCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NoteTextWhitelistResultDelete": {
      "type": "object"
    },
    "NoteTextWhitelistResultListing": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextWhitelistResultRead": {
      "properties": {
        "content": {
          "description": "The content of the note.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "readOnly": true,
          "type": "integer"
        },
        "label_user_creator": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user who created this note.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteTextWhitelistResultUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NotificationFilter": {
      "properties": {
        "category": {
          "description": "The notification category that will match this notification filter. Possible choices are BILLING, CARD_TRANSACTION_FAILED, CARD_TRANSACTION_SUCCESSFUL, CHAT, DRAFT_PAYMENT, IDEAL, SOFORT, MONETARY_ACCOUNT_PROFILE, MUTATION, PAYMENT, PROMOTION, REQUEST, SCHEDULE_RESULT, SCHEDULE_STATUS, SHARE, SUPPORT, TAB_RESULT, USER_APPROVAL.",
          "readOnly": false,
          "type": "string"
        },
        "notification_delivery_method": {
          "description": "The delivery method via which notifications that match this notification filter will be delivered. Possible choices are PUSH for delivery via push notification and URL for delivery via URL callback.",
          "readOnly": false,
          "type": "string"
        },
        "notification_target": {
          "description": "The target of notifications that match this notification filter. For URL notification filters this is the URL to which the callback will be made. For PUSH notifications filters this should always be null.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NotificationFilterPush": {
      "properties": {
        "category": {
          "description": "The notification category that will match this notification filter.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NotificationFilterPushUser": {
      "properties": {
        "notification_filters": {
          "description": "The types of notifications that will result in a push notification for this user.",
          "items": {
            "$ref": "#/definitions/NotificationFilterPush"
          },
          "readOnly": false,
          "type": "array"
        }
      },
      "type": "object"
    },
    "NotificationFilterPushUserCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NotificationFilterPushUserListing": {
      "properties": {
        "notification_filters": {
          "description": "The types of notifications that will result in a push notification for this user.",
          "items": {
            "$ref": "#/definitions/NotificationFilterPush"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "NotificationFilterUrl": {
      "properties": {
        "category": {
          "description": "The notification category that will match this notification filter.",
          "readOnly": false,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the NotificationFilterUrl's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the NotificationFilterUrl.",
          "readOnly": true,
          "type": "integer"
        },
        "notification_target": {
          "description": "The URL to which the callback should be made.",
          "readOnly": false,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the NotificationFilterUrl's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NotificationFilterUrlMonetaryAccount": {
      "properties": {
        "notification_filters": {
          "description": "The types of notifications that will result in a url notification for this monetary account.",
          "items": {
            "$ref": "#/definitions/NotificationFilterUrl"
          },
          "readOnly": false,
          "type": "array"
        }
      },
      "type": "object"
    },
    "NotificationFilterUrlMonetaryAccountCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NotificationFilterUrlMonetaryAccountListing": {
      "properties": {
        "notification_filters": {
          "description": "The types of notifications that will result in a url notification for this monetary account.",
          "items": {
            "$ref": "#/definitions/NotificationFilterUrl"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "NotificationFilterUrlUser": {
      "properties": {
        "notification_filters": {
          "description": "The types of notifications that will result in a url notification for this user.",
          "items": {
            "$ref": "#/definitions/NotificationFilterUrl"
          },
          "readOnly": false,
          "type": "array"
        }
      },
      "type": "object"
    },
    "NotificationFilterUrlUserCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "NotificationFilterUrlUserListing": {
      "properties": {
        "notification_filters": {
          "description": "The types of notifications that will result in a url notification for this user.",
          "items": {
            "$ref": "#/definitions/NotificationFilterUrl"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "OauthCallbackUrl": {
      "properties": {
        "url": {
          "description": "The URL for this callback.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "type": "object"
    },
    "OauthCallbackUrlCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "OauthCallbackUrlDelete": {
      "type": "object"
    },
    "OauthCallbackUrlListing": {
      "properties": {
        "url": {
          "description": "The URL for this callback.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthCallbackUrlRead": {
      "properties": {
        "url": {
          "description": "The URL for this callback.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthCallbackUrlUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "OauthClient": {
      "properties": {
        "status": {
          "description": "The status of the Oauth Client, can be ACTIVE or CANCELLED.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthClientCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "OauthClientListing": {
      "properties": {
        "callback_url": {
          "description": "The callback URLs which are bound to this Oauth Client",
          "items": {
            "$ref": "#/definitions/OauthCallbackUrl"
          },
          "readOnly": true,
          "type": "array"
        },
        "client_id": {
          "description": "The Client ID associated with this Oauth Client",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "Id of the client.",
          "readOnly": true,
          "type": "integer"
        },
        "secret": {
          "description": "Secret associated with this Oauth Client",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the pack group, can be ACTIVE, CANCELLED or CANCELLED_PENDING.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthClientRead": {
      "properties": {
        "callback_url": {
          "description": "The callback URLs which are bound to this Oauth Client",
          "items": {
            "$ref": "#/definitions/OauthCallbackUrl"
          },
          "readOnly": true,
          "type": "array"
        },
        "client_id": {
          "description": "The Client ID associated with this Oauth Client",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "Id of the client.",
          "readOnly": true,
          "type": "integer"
        },
        "secret": {
          "description": "Secret associated with this Oauth Client",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the pack group, can be ACTIVE, CANCELLED or CANCELLED_PENDING.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthClientUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "Payment": {
      "properties": {
        "address_billing": {
          "$ref": "#/definitions/Address",
          "description": "A billing Address provided with the Payment, currently unused.",
          "readOnly": true,
          "type": "object"
        },
        "address_shipping": {
          "$ref": "#/definitions/Address",
          "description": "A shipping Address provided with the Payment, currently unused.",
          "readOnly": true,
          "type": "object"
        },
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of 'this' (party) side of the Payment.",
          "readOnly": true,
          "type": "object"
        },
        "allow_bunqto": {
          "description": "Whether or not sending a bunq.to payment is allowed.",
          "readOnly": false,
          "type": "boolean"
        },
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The Amount transferred by the Payment. Will be negative for outgoing Payments and positive for incoming Payments (relative to the MonetaryAccount indicated by monetary_account_id).",
          "readOnly": false,
          "type": "object"
        },
        "attachment": {
          "description": "The Attachments attached to the Payment.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": false,
          "type": "array"
        },
        "balance_after_mutation": {
          "$ref": "#/definitions/Amount",
          "description": "The new balance of the monetary account after the mutation.",
          "readOnly": true,
          "type": "object"
        },
        "batch_id": {
          "description": "The id of the PaymentBatch if this Payment was part of one.",
          "readOnly": true,
          "type": "integer"
        },
        "bunqto_expiry": {
          "description": "When bunq.to payment is about to expire.",
          "readOnly": true,
          "type": "string"
        },
        "bunqto_share_url": {
          "description": "The status of the bunq.to payment.",
          "readOnly": true,
          "type": "string"
        },
        "bunqto_status": {
          "description": "The status of the bunq.to payment.",
          "readOnly": true,
          "type": "string"
        },
        "bunqto_sub_status": {
          "description": "The sub status of the bunq.to payment.",
          "readOnly": true,
          "type": "string"
        },
        "bunqto_time_responded": {
          "description": "The timestamp of when the bunq.to payment was responded to.",
          "readOnly": true,
          "type": "string"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of the other (counterparty) side of the Payment.",
          "readOnly": false,
          "type": "object"
        },
        "created": {
          "description": "The timestamp when the Payment was done.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description for the Payment. Maximum 140 characters for Payments to external IBANs, 9000 characters for Payments to only other bunq MonetaryAccounts.",
          "readOnly": false,
          "type": "string"
        },
        "geolocation": {
          "$ref": "#/definitions/Geolocation",
          "description": "The Geolocation where the Payment was done from.",
          "readOnly": true,
          "type": "object"
        },
        "id": {
          "description": "The id of the created Payment.",
          "readOnly": true,
          "type": "integer"
        },
        "merchant_reference": {
          "description": "Optional data included with the Payment specific to the merchant.",
          "readOnly": false,
          "type": "string"
        },
        "monetary_account_id": {
          "description": "The id of the MonetaryAccount the Payment was made to or from (depending on whether this is an incoming or outgoing Payment).",
          "readOnly": true,
          "type": "integer"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "scheduled_id": {
          "description": "The id of the JobScheduled if the Payment was scheduled.",
          "readOnly": true,
          "type": "integer"
        },
        "sub_type": {
          "description": "The sub-type of the Payment, can be PAYMENT, WITHDRAWAL, REVERSAL, REQUEST, BILLING, SCT, SDD or NLO.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of Payment, can be BUNQ, EBA_SCT, EBA_SDD, IDEAL, SWIFT or FIS (card).",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the Payment was last updated (will be updated when chat messages are received).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentAutoAllocate": {
      "properties": {
        "definition": {
          "description": "The definition of how the money should be allocated.",
          "items": {
            "$ref": "#/definitions/PaymentAutoAllocateDefinition"
          },
          "readOnly": false,
          "type": "array"
        },
        "payment_id": {
          "description": "The payment that should be used to define the triggers for the payment auto allocate.",
          "readOnly": false,
          "type": "integer"
        },
        "type": {
          "description": "Whether a payment should be sorted ONCE or RECURRING.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "payment_id",
        "type",
        "definition"
      ],
      "type": "object"
    },
    "PaymentAutoAllocateCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentAutoAllocateDefinition": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The amount to allocate.",
          "readOnly": false,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/Pointer",
          "description": "The alias of the party we are allocating the money to.",
          "readOnly": false,
          "type": "object"
        },
        "created": {
          "description": "The timestamp when the PaymentAutoAllocateDefinition was created.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description for the payment.",
          "readOnly": false,
          "type": "string"
        },
        "fraction": {
          "description": "The percentage of the triggering payment's amount to allocate.",
          "readOnly": false,
          "type": "integer"
        },
        "id": {
          "description": "The id of the PaymentAutoAllocateDefinition.",
          "readOnly": true,
          "type": "integer"
        },
        "type": {
          "description": "The type of definition.",
          "readOnly": false,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the PaymentAutoAllocateDefinition was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "PaymentAutoAllocateDefinitionListing": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The amount to allocate.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/Pointer",
          "description": "The alias of the party we are allocating the money to.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp when the PaymentAutoAllocateDefinition was created.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description for the payment.",
          "readOnly": true,
          "type": "string"
        },
        "fraction": {
          "description": "The percentage of the triggering payment's amount to allocate.",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "The id of the PaymentAutoAllocateDefinition.",
          "readOnly": true,
          "type": "integer"
        },
        "updated": {
          "description": "The timestamp when the PaymentAutoAllocateDefinition was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentAutoAllocateDelete": {
      "type": "object"
    },
    "PaymentAutoAllocateInstanceListing": {
      "properties": {
        "created": {
          "description": "The timestamp when the PaymentAutoAllocateInstance was created.",
          "readOnly": true,
          "type": "string"
        },
        "error_message": {
          "description": "The error message, if the payment auto allocating failed.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "readOnly": true,
          "type": "array"
        },
        "id": {
          "description": "The id of the PaymentAutoAllocateInstance.",
          "readOnly": true,
          "type": "integer"
        },
        "payment_auto_allocate_id": {
          "description": "The ID of the payment auto allocate this instance belongs to.",
          "readOnly": true,
          "type": "integer"
        },
        "payment_batch": {
          "$ref": "#/definitions/PaymentBatch",
          "description": "The payment batch allocating all the payments.",
          "readOnly": true,
          "type": "object"
        },
        "payment_id": {
          "description": "The ID of the payment that triggered the allocating of the payments.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the payment auto allocate instance. SUCCEEDED or FAILED.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the PaymentAutoAllocateInstance was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentAutoAllocateInstanceRead": {
      "properties": {
        "created": {
          "description": "The timestamp when the PaymentAutoAllocateInstance was created.",
          "readOnly": true,
          "type": "string"
        },
        "error_message": {
          "description": "The error message, if the payment auto allocating failed.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "readOnly": true,
          "type": "array"
        },
        "id": {
          "description": "The id of the PaymentAutoAllocateInstance.",
          "readOnly": true,
          "type": "integer"
        },
        "payment_auto_allocate_id": {
          "description": "The ID of the payment auto allocate this instance belongs to.",
          "readOnly": true,
          "type": "integer"
        },
        "payment_batch": {
          "$ref": "#/definitions/PaymentBatch",
          "description": "The payment batch allocating all the payments.",
          "readOnly": true,
          "type": "object"
        },
        "payment_id": {
          "description": "The ID of the payment that triggered the allocating of the payments.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the payment auto allocate instance. SUCCEEDED or FAILED.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the PaymentAutoAllocateInstance was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentAutoAllocateListing": {
      "properties": {
        "created": {
          "description": "The timestamp when the PaymentAutoAllocate was created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the PaymentAutoAllocate.",
          "readOnly": true,
          "type": "integer"
        },
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The payment that was used to define the triggers for this payment auto allocate.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status.",
          "readOnly": true,
          "type": "string"
        },
        "trigger_amount": {
          "$ref": "#/definitions/Amount",
          "description": "The amount on which this payment auto allocate will be triggered.",
          "readOnly": true,
          "type": "object"
        },
        "type": {
          "description": "The type.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the PaymentAutoAllocate was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentAutoAllocateRead": {
      "properties": {
        "created": {
          "description": "The timestamp when the PaymentAutoAllocate was created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the PaymentAutoAllocate.",
          "readOnly": true,
          "type": "integer"
        },
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The payment that was used to define the triggers for this payment auto allocate.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status.",
          "readOnly": true,
          "type": "string"
        },
        "trigger_amount": {
          "$ref": "#/definitions/Amount",
          "description": "The amount on which this payment auto allocate will be triggered.",
          "readOnly": true,
          "type": "object"
        },
        "type": {
          "description": "The type.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the PaymentAutoAllocate was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentAutoAllocateUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentAutoAllocateUserListing": {
      "properties": {
        "PaymentAutoAllocate": {
          "$ref": "#/definitions/PaymentAutoAllocate",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentBatch": {
      "properties": {
        "payments": {
          "$ref": "#/definitions/PaymentBatchAnchoredPayment",
          "description": "The list of mutations that were made.",
          "readOnly": false,
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentBatchAnchoredPayment": {
      "properties": {
        "Payment": {
          "description": "",
          "items": {
            "$ref": "#/definitions/Payment"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "PaymentBatchCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentBatchListing": {
      "properties": {
        "payments": {
          "$ref": "#/definitions/PaymentBatchAnchoredPayment",
          "description": "The list of mutations that were made.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentBatchRead": {
      "properties": {
        "payments": {
          "$ref": "#/definitions/PaymentBatchAnchoredPayment",
          "description": "The list of mutations that were made.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentBatchUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentCreate": {
      "properties": {
        "id": {
          "description": "The id of the created Payment.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PaymentListing": {
      "properties": {
        "address_billing": {
          "$ref": "#/definitions/Address",
          "description": "A billing Address provided with the Payment, currently unused.",
          "readOnly": true,
          "type": "object"
        },
        "address_shipping": {
          "$ref": "#/definitions/Address",
          "description": "A shipping Address provided with the Payment, currently unused.",
          "readOnly": true,
          "type": "object"
        },
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of 'this' (party) side of the Payment.",
          "readOnly": true,
          "type": "object"
        },
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The Amount transferred by the Payment. Will be negative for outgoing Payments and positive for incoming Payments (relative to the MonetaryAccount indicated by monetary_account_id).",
          "readOnly": true,
          "type": "object"
        },
        "attachment": {
          "description": "The Attachments attached to the Payment.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "balance_after_mutation": {
          "$ref": "#/definitions/Amount",
          "description": "The new balance of the monetary account after the mutation.",
          "readOnly": true,
          "type": "object"
        },
        "batch_id": {
          "description": "The id of the PaymentBatch if this Payment was part of one.",
          "readOnly": true,
          "type": "integer"
        },
        "bunqto_expiry": {
          "description": "When bunq.to payment is about to expire.",
          "readOnly": true,
          "type": "string"
        },
        "bunqto_share_url": {
          "description": "The status of the bunq.to payment.",
          "readOnly": true,
          "type": "string"
        },
        "bunqto_status": {
          "description": "The status of the bunq.to payment.",
          "readOnly": true,
          "type": "string"
        },
        "bunqto_sub_status": {
          "description": "The sub status of the bunq.to payment.",
          "readOnly": true,
          "type": "string"
        },
        "bunqto_time_responded": {
          "description": "The timestamp of when the bunq.to payment was responded to.",
          "readOnly": true,
          "type": "string"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of the other (counterparty) side of the Payment.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp when the Payment was done.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description for the Payment. Maximum 140 characters for Payments to external IBANs, 9000 characters for Payments to only other bunq MonetaryAccounts.",
          "readOnly": true,
          "type": "string"
        },
        "geolocation": {
          "$ref": "#/definitions/Geolocation",
          "description": "The Geolocation where the Payment was done from.",
          "readOnly": true,
          "type": "object"
        },
        "id": {
          "description": "The id of the created Payment.",
          "readOnly": true,
          "type": "integer"
        },
        "merchant_reference": {
          "description": "Optional data included with the Payment specific to the merchant.",
          "readOnly": true,
          "type": "string"
        },
        "monetary_account_id": {
          "description": "The id of the MonetaryAccount the Payment was made to or from (depending on whether this is an incoming or outgoing Payment).",
          "readOnly": true,
          "type": "integer"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "scheduled_id": {
          "description": "The id of the JobScheduled if the Payment was scheduled.",
          "readOnly": true,
          "type": "integer"
        },
        "sub_type": {
          "description": "The sub-type of the Payment, can be PAYMENT, WITHDRAWAL, REVERSAL, REQUEST, BILLING, SCT, SDD or NLO.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of Payment, can be BUNQ, EBA_SCT, EBA_SDD, IDEAL, SWIFT or FIS (card).",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the Payment was last updated (will be updated when chat messages are received).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentRead": {
      "properties": {
        "address_billing": {
          "$ref": "#/definitions/Address",
          "description": "A billing Address provided with the Payment, currently unused.",
          "readOnly": true,
          "type": "object"
        },
        "address_shipping": {
          "$ref": "#/definitions/Address",
          "description": "A shipping Address provided with the Payment, currently unused.",
          "readOnly": true,
          "type": "object"
        },
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of 'this' (party) side of the Payment.",
          "readOnly": true,
          "type": "object"
        },
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The Amount transferred by the Payment. Will be negative for outgoing Payments and positive for incoming Payments (relative to the MonetaryAccount indicated by monetary_account_id).",
          "readOnly": true,
          "type": "object"
        },
        "attachment": {
          "description": "The Attachments attached to the Payment.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": true,
          "type": "array"
        },
        "balance_after_mutation": {
          "$ref": "#/definitions/Amount",
          "description": "The new balance of the monetary account after the mutation.",
          "readOnly": true,
          "type": "object"
        },
        "batch_id": {
          "description": "The id of the PaymentBatch if this Payment was part of one.",
          "readOnly": true,
          "type": "integer"
        },
        "bunqto_expiry": {
          "description": "When bunq.to payment is about to expire.",
          "readOnly": true,
          "type": "string"
        },
        "bunqto_share_url": {
          "description": "The status of the bunq.to payment.",
          "readOnly": true,
          "type": "string"
        },
        "bunqto_status": {
          "description": "The status of the bunq.to payment.",
          "readOnly": true,
          "type": "string"
        },
        "bunqto_sub_status": {
          "description": "The sub status of the bunq.to payment.",
          "readOnly": true,
          "type": "string"
        },
        "bunqto_time_responded": {
          "description": "The timestamp of when the bunq.to payment was responded to.",
          "readOnly": true,
          "type": "string"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of the other (counterparty) side of the Payment.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp when the Payment was done.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description for the Payment. Maximum 140 characters for Payments to external IBANs, 9000 characters for Payments to only other bunq MonetaryAccounts.",
          "readOnly": true,
          "type": "string"
        },
        "geolocation": {
          "$ref": "#/definitions/Geolocation",
          "description": "The Geolocation where the Payment was done from.",
          "readOnly": true,
          "type": "object"
        },
        "id": {
          "description": "The id of the created Payment.",
          "readOnly": true,
          "type": "integer"
        },
        "merchant_reference": {
          "description": "Optional data included with the Payment specific to the merchant.",
          "readOnly": true,
          "type": "string"
        },
        "monetary_account_id": {
          "description": "The id of the MonetaryAccount the Payment was made to or from (depending on whether this is an incoming or outgoing Payment).",
          "readOnly": true,
          "type": "integer"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "scheduled_id": {
          "description": "The id of the JobScheduled if the Payment was scheduled.",
          "readOnly": true,
          "type": "integer"
        },
        "sub_type": {
          "description": "The sub-type of the Payment, can be PAYMENT, WITHDRAWAL, REVERSAL, REQUEST, BILLING, SCT, SDD or NLO.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of Payment, can be BUNQ, EBA_SCT, EBA_SDD, IDEAL, SWIFT or FIS (card).",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the Payment was last updated (will be updated when chat messages are received).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentServiceProviderCredential": {
      "properties": {
        "client_payment_service_provider_certificate": {
          "description": "Payment Services Directive 2 compatible QSEAL certificate",
          "readOnly": false,
          "type": "string"
        },
        "client_payment_service_provider_certificate_chain": {
          "description": "Intermediate and root certificate belonging to the provided certificate.",
          "readOnly": false,
          "type": "string"
        },
        "client_public_key_signature": {
          "description": "The Base64 encoded signature of the public key provided during installation and with the installation token appended as a nonce. Signed with the private key belonging to the QSEAL certificate.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "client_payment_service_provider_certificate",
        "client_payment_service_provider_certificate_chain",
        "client_public_key_signature"
      ],
      "type": "object"
    },
    "PaymentServiceProviderCredentialCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentServiceProviderCredentialRead": {
      "properties": {
        "created": {
          "description": "The timestamp of the credential object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "expiry_time": {
          "description": "When the status is PENDING_FIRST_USE: when the credential expires.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the credential.",
          "readOnly": true,
          "type": "integer"
        },
        "permitted_device": {
          "$ref": "#/definitions/PermittedDevice",
          "description": "When the status is ACTIVE: the details of the device that may use the credential.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status of the credential.",
          "readOnly": true,
          "type": "string"
        },
        "token_value": {
          "description": "When the status is PENDING_FIRST_USE: the value of the token.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the credential object's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentServiceProviderDraftPayment": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The Amount to transfer with the Payment. Must be bigger than 0.",
          "readOnly": false,
          "type": "object"
        },
        "counterparty_iban": {
          "description": "The IBAN of the counterparty.",
          "readOnly": false,
          "type": "string"
        },
        "counterparty_name": {
          "description": "The name of the counterparty.",
          "readOnly": false,
          "type": "string"
        },
        "description": {
          "description": "Description of the payment.",
          "readOnly": false,
          "type": "string"
        },
        "sender_iban": {
          "description": "The IBAN of the sender.",
          "readOnly": false,
          "type": "string"
        },
        "sender_name": {
          "description": "The name of the sender.",
          "readOnly": false,
          "type": "string"
        },
        "status": {
          "description": "The new status of the Draft Payment. Can only be set to REJECTED or CANCELLED by update.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "sender_iban",
        "counterparty_iban",
        "counterparty_name",
        "description",
        "amount"
      ],
      "type": "object"
    },
    "PaymentServiceProviderDraftPaymentCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentServiceProviderDraftPaymentListing": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the draft payment",
          "readOnly": true,
          "type": "object"
        },
        "receiver_iban": {
          "description": "The sender IBAN.",
          "readOnly": true,
          "type": "string"
        },
        "sender_iban": {
          "description": "The sender IBAN.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the draft payment",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentServiceProviderDraftPaymentRead": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the draft payment",
          "readOnly": true,
          "type": "object"
        },
        "receiver_iban": {
          "description": "The sender IBAN.",
          "readOnly": true,
          "type": "string"
        },
        "sender_iban": {
          "description": "The sender IBAN.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the draft payment",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentServiceProviderDraftPaymentUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "PermittedDevice": {
      "properties": {
        "description": {
          "description": "The description of the device that may use the credential.",
          "readOnly": true,
          "type": "string"
        },
        "ip": {
          "description": "The IP address of the device that may use the credential.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PermittedIp": {
      "properties": {
        "ip": {
          "description": "The IP address.",
          "readOnly": false,
          "type": "string"
        },
        "status": {
          "description": "The status of the IP. May be \"ACTIVE\" or \"INACTIVE\". It is only possible to make requests from \"ACTIVE\" IP addresses. Only \"ACTIVE\" IPs will be billed.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "ip"
      ],
      "type": "object"
    },
    "PermittedIpCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "PermittedIpListing": {
      "properties": {
        "ip": {
          "description": "The IP address.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the IP. May be \"ACTIVE\" or \"INACTIVE\". It is only possible to make requests from \"ACTIVE\" IP addresses. Only \"ACTIVE\" IPs will be billed.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PermittedIpRead": {
      "properties": {
        "ip": {
          "description": "The IP address.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the IP. May be \"ACTIVE\" or \"INACTIVE\". It is only possible to make requests from \"ACTIVE\" IP addresses. Only \"ACTIVE\" IPs will be billed.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PermittedIpUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "Pointer": {
      "properties": {
        "name": {
          "description": "The alias name.",
          "readOnly": false,
          "type": "string"
        },
        "type": {
          "description": "The alias type, can be: EMAIL|PHONE_NUMBER|IBAN.",
          "readOnly": false,
          "type": "string"
        },
        "value": {
          "description": "The alias value.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Registry": {
      "properties": {
        "currency": {
          "description": "The currency for the Registry as an ISO 4217 formatted currency code.",
          "readOnly": false,
          "type": "string"
        },
        "description": {
          "description": "A description about the Registry.",
          "readOnly": false,
          "type": "string"
        },
        "last_registry_entry_seen_id": {
          "description": "The id of the last RegistryEntry that the user has seen.",
          "readOnly": false,
          "type": "integer"
        },
        "memberships": {
          "description": "New list of memberships.",
          "items": {
            "$ref": "#/definitions/RegistryMembership"
          },
          "readOnly": false,
          "type": "array"
        },
        "memberships_previous": {
          "description": "Previous list of memberships.",
          "items": {
            "$ref": "#/definitions/RegistryMembership"
          },
          "readOnly": false,
          "type": "array"
        },
        "previous_updated_timestamp": {
          "description": "The previous updated timestamp that you received for this Registry.",
          "readOnly": false,
          "type": "string"
        },
        "status": {
          "description": "The status of the Registry.",
          "readOnly": false,
          "type": "string"
        },
        "title": {
          "description": "The title of the Registry.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "currency"
      ],
      "type": "object"
    },
    "RegistryCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RegistryDelete": {
      "type": "object"
    },
    "RegistryEntry": {
      "properties": {
        "alias_owner": {
          "$ref": "#/definitions/Pointer",
          "description": "The Alias of the party we are allocating money for.",
          "readOnly": false,
          "type": "object"
        },
        "allocations": {
          "description": "An array of AllocationItems.",
          "items": {
            "$ref": "#/definitions/AllocationItem"
          },
          "readOnly": false,
          "type": "array"
        },
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The Amount of the RegistryEntry.",
          "readOnly": false,
          "type": "object"
        },
        "attachment": {
          "description": "The attachments attached to the payment.",
          "items": {
            "$ref": "#/definitions/RegistryEntryAttachment"
          },
          "readOnly": false,
          "type": "array"
        },
        "description": {
          "description": "A description about the RegistryEntry.",
          "readOnly": false,
          "type": "string"
        },
        "object_reference": {
          "$ref": "#/definitions/RegistryEntryReference",
          "description": "The object linked to the RegistryEntry.",
          "readOnly": false,
          "type": "object"
        }
      },
      "required": [
        "amount",
        "allocations"
      ],
      "type": "object"
    },
    "RegistryEntryAttachment": {
      "properties": {
        "id": {
          "description": "The id of the attachment.",
          "readOnly": false,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account to which the attachment belongs.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RegistryEntryCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RegistryEntryDelete": {
      "type": "object"
    },
    "RegistryEntryListing": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The LabelUser with the public information of the party of this RegistryEntry.",
          "readOnly": true,
          "type": "object"
        },
        "allocations": {
          "description": "An array of AllocationItems.",
          "items": {
            "$ref": "#/definitions/AllocationItem"
          },
          "readOnly": true,
          "type": "array"
        },
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The Amount of the RegistryEntry.",
          "readOnly": true,
          "type": "object"
        },
        "attachment": {
          "description": "The attachments attached to the payment.",
          "items": {
            "$ref": "#/definitions/RegistryEntryAttachment"
          },
          "readOnly": true,
          "type": "array"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The LabelUser with the public information of the counter party of this RegistryEntry.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the MonetaryAccountBank's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "A description about the RegistryEntry.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the RegistryEntry.",
          "readOnly": true,
          "type": "integer"
        },
        "membership_created": {
          "$ref": "#/definitions/RegistryMembership",
          "description": "The membership of the creator.",
          "readOnly": true,
          "type": "object"
        },
        "membership_owned": {
          "$ref": "#/definitions/RegistryMembership",
          "description": "The membership of the owner.",
          "readOnly": true,
          "type": "object"
        },
        "registry_id": {
          "description": "The id of the Registry.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the RegistryEntry.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The RegistryEntry type. AUTO if created by Auto Slice, MANUAL for manually added entries.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the MonetaryAccountBank's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The LabelUser with the public information of the User that created the RegistryEntry.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RegistryEntryRead": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The LabelUser with the public information of the party of this RegistryEntry.",
          "readOnly": true,
          "type": "object"
        },
        "allocations": {
          "description": "An array of AllocationItems.",
          "items": {
            "$ref": "#/definitions/AllocationItem"
          },
          "readOnly": true,
          "type": "array"
        },
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The Amount of the RegistryEntry.",
          "readOnly": true,
          "type": "object"
        },
        "attachment": {
          "description": "The attachments attached to the payment.",
          "items": {
            "$ref": "#/definitions/RegistryEntryAttachment"
          },
          "readOnly": true,
          "type": "array"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The LabelUser with the public information of the counter party of this RegistryEntry.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the MonetaryAccountBank's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "A description about the RegistryEntry.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the RegistryEntry.",
          "readOnly": true,
          "type": "integer"
        },
        "membership_created": {
          "$ref": "#/definitions/RegistryMembership",
          "description": "The membership of the creator.",
          "readOnly": true,
          "type": "object"
        },
        "membership_owned": {
          "$ref": "#/definitions/RegistryMembership",
          "description": "The membership of the owner.",
          "readOnly": true,
          "type": "object"
        },
        "registry_id": {
          "description": "The id of the Registry.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the RegistryEntry.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The RegistryEntry type. AUTO if created by Auto Slice, MANUAL for manually added entries.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the MonetaryAccountBank's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The LabelUser with the public information of the User that created the RegistryEntry.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RegistryEntryReference": {
      "properties": {
        "id": {
          "description": "The ID of the object that will be used for the RegistryEntry.",
          "readOnly": false,
          "type": "integer"
        },
        "type": {
          "description": "The object type that will be linked to the RegistryEntry.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegistryEntryUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RegistryListing": {
      "properties": {
        "created": {
          "description": "The timestamp of the Registry's creation.",
          "readOnly": true,
          "type": "string"
        },
        "currency": {
          "description": "The currency for the Registry as an ISO 4217 formatted currency code.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the Registry.",
          "readOnly": true,
          "type": "integer"
        },
        "is_previously_settled": {
          "description": "Whether the Registry has previously been settled.",
          "readOnly": true,
          "type": "boolean"
        },
        "memberships": {
          "description": "List of memberships to replace the current one.",
          "items": {
            "$ref": "#/definitions/RegistryMembership"
          },
          "readOnly": true,
          "type": "array"
        },
        "registry_auto_add_card_transaction_enabled_id": {
          "description": "The ID of the registry that currently has auto_add_card_transaction set to ALL.",
          "readOnly": true,
          "type": "integer"
        },
        "setting": {
          "$ref": "#/definitions/RegistrySetting",
          "description": "The settings for this Registry.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status of the Registry.",
          "readOnly": true,
          "type": "string"
        },
        "title": {
          "description": "The title of the Registry.",
          "readOnly": true,
          "type": "string"
        },
        "total_amount_spent": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount spent in this Registry since the last settlement.",
          "readOnly": true,
          "type": "object"
        },
        "unseen_entries_count": {
          "description": "The number of RegistryEntries in this Registry that the user has not seen.",
          "readOnly": true,
          "type": "integer"
        },
        "updated": {
          "description": "The timestamp of the Registry's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegistryMembership": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount of the user who belongs to this RegistryMembership.",
          "readOnly": false,
          "type": "object"
        },
        "balance": {
          "$ref": "#/definitions/Amount",
          "description": "The balance of this RegistryMembership.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status of the RegistryMembership.",
          "readOnly": false,
          "type": "string"
        },
        "total_amount_spent": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount spent of this RegistryMembership.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RegistryRead": {
      "properties": {
        "created": {
          "description": "The timestamp of the Registry's creation.",
          "readOnly": true,
          "type": "string"
        },
        "currency": {
          "description": "The currency for the Registry as an ISO 4217 formatted currency code.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the Registry.",
          "readOnly": true,
          "type": "integer"
        },
        "is_previously_settled": {
          "description": "Whether the Registry has previously been settled.",
          "readOnly": true,
          "type": "boolean"
        },
        "memberships": {
          "description": "List of memberships to replace the current one.",
          "items": {
            "$ref": "#/definitions/RegistryMembership"
          },
          "readOnly": true,
          "type": "array"
        },
        "registry_auto_add_card_transaction_enabled_id": {
          "description": "The ID of the registry that currently has auto_add_card_transaction set to ALL.",
          "readOnly": true,
          "type": "integer"
        },
        "setting": {
          "$ref": "#/definitions/RegistrySetting",
          "description": "The settings for this Registry.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status of the Registry.",
          "readOnly": true,
          "type": "string"
        },
        "title": {
          "description": "The title of the Registry.",
          "readOnly": true,
          "type": "string"
        },
        "total_amount_spent": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount spent in this Registry since the last settlement.",
          "readOnly": true,
          "type": "object"
        },
        "unseen_entries_count": {
          "description": "The number of RegistryEntries in this Registry that the user has not seen.",
          "readOnly": true,
          "type": "integer"
        },
        "updated": {
          "description": "The timestamp of the Registry's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegistrySetting": {
      "properties": {
        "auto_add_card_transaction": {
          "description": "The setting for for adding automatically card transactions to the registry.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "auto_add_card_transaction"
      ],
      "type": "object"
    },
    "RegistrySettingRead": {
      "properties": {
        "auto_add_card_transaction": {
          "description": "The setting for for adding automatically card transactions to the registry.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegistrySettingUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RegistrySettlement": {
      "type": "object"
    },
    "RegistrySettlementCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RegistrySettlementItem": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The amount of the RegistrySettlementItem.",
          "readOnly": true,
          "type": "object"
        },
        "membership_paying": {
          "$ref": "#/definitions/RegistryMembership",
          "description": "The membership of the user that has to pay.",
          "readOnly": true,
          "type": "object"
        },
        "membership_receiving": {
          "$ref": "#/definitions/RegistryMembership",
          "description": "The membership of the user that will receive money.",
          "readOnly": true,
          "type": "object"
        },
        "paying_user_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount of the user that has to pay the request.",
          "readOnly": true,
          "type": "object"
        },
        "receiving_user_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount of the user that will receive the amount.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RegistrySettlementListing": {
      "properties": {
        "created": {
          "description": "The timestamp of the RegistrySettlement's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the RegistrySettlement.",
          "readOnly": true,
          "type": "integer"
        },
        "items": {
          "description": "List of RegistrySettlementItems",
          "items": {
            "$ref": "#/definitions/RegistrySettlementItem"
          },
          "readOnly": true,
          "type": "array"
        },
        "membership_settled": {
          "$ref": "#/definitions/RegistryMembership",
          "description": "The membership of the user that has settled the registry.",
          "readOnly": true,
          "type": "object"
        },
        "number_of_entries": {
          "description": "The number of RegistryEntry's associated with this RegistrySettlement.",
          "readOnly": true,
          "type": "integer"
        },
        "settled_by_alias": {
          "$ref": "#/definitions/RegistryMembership",
          "description": "The membership of the user that settled the Registry.",
          "readOnly": true,
          "type": "object"
        },
        "settlement_time": {
          "description": "The timestamp of the Registry's settlement.",
          "readOnly": true,
          "type": "string"
        },
        "total_amount_spent": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount spent for the RegistrySettlement.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the RegistrySettlement's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegistrySettlementPendingListing": {
      "properties": {
        "items": {
          "description": "List of RegistrySettlementItems",
          "items": {
            "$ref": "#/definitions/RegistrySettlementItem"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "RegistrySettlementRead": {
      "properties": {
        "created": {
          "description": "The timestamp of the RegistrySettlement's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the RegistrySettlement.",
          "readOnly": true,
          "type": "integer"
        },
        "items": {
          "description": "List of RegistrySettlementItems",
          "items": {
            "$ref": "#/definitions/RegistrySettlementItem"
          },
          "readOnly": true,
          "type": "array"
        },
        "membership_settled": {
          "$ref": "#/definitions/RegistryMembership",
          "description": "The membership of the user that has settled the registry.",
          "readOnly": true,
          "type": "object"
        },
        "number_of_entries": {
          "description": "The number of RegistryEntry's associated with this RegistrySettlement.",
          "readOnly": true,
          "type": "integer"
        },
        "settled_by_alias": {
          "$ref": "#/definitions/RegistryMembership",
          "description": "The membership of the user that settled the Registry.",
          "readOnly": true,
          "type": "object"
        },
        "settlement_time": {
          "description": "The timestamp of the Registry's settlement.",
          "readOnly": true,
          "type": "string"
        },
        "total_amount_spent": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount spent for the RegistrySettlement.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the RegistrySettlement's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegistryUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RelationUser": {
      "properties": {
        "counter_label_user": {
          "$ref": "#/definitions/LabelUser",
          "description": "The counter user's label.",
          "readOnly": true,
          "type": "object"
        },
        "counter_user_id": {
          "description": "The counter user's ID.",
          "readOnly": true,
          "type": "string"
        },
        "label_user": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user's label.",
          "readOnly": true,
          "type": "object"
        },
        "relationship": {
          "description": "The requested relation type.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The request's status, only for UPDATE.",
          "readOnly": true,
          "type": "string"
        },
        "user_id": {
          "description": "The user's ID.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RequestInquiry": {
      "properties": {
        "address_billing": {
          "$ref": "#/definitions/Address",
          "description": "The billing address provided by the accepting user if an address was requested.",
          "readOnly": true,
          "type": "object"
        },
        "address_shipping": {
          "$ref": "#/definitions/Address",
          "description": "The shipping address provided by the accepting user if an address was requested.",
          "readOnly": true,
          "type": "object"
        },
        "allow_amount_higher": {
          "description": "[DEPRECATED] Whether or not the accepting user can choose to accept with a higher amount than requested. Defaults to false.",
          "readOnly": false,
          "type": "boolean"
        },
        "allow_amount_lower": {
          "description": "[DEPRECATED] Whether or not the accepting user can choose to accept with a lower amount than requested. Defaults to false.",
          "readOnly": false,
          "type": "boolean"
        },
        "allow_bunqme": {
          "description": "Whether or not sending a bunq.me request is allowed.",
          "readOnly": false,
          "type": "boolean"
        },
        "amount_inquired": {
          "$ref": "#/definitions/Amount",
          "description": "The requested amount.",
          "readOnly": false,
          "type": "object"
        },
        "amount_responded": {
          "$ref": "#/definitions/Amount",
          "description": "The responded amount.",
          "readOnly": true,
          "type": "object"
        },
        "attachment": {
          "description": "The attachments attached to the payment.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": false,
          "type": "array"
        },
        "batch_id": {
          "description": "The id of the batch if the request was part of a batch.",
          "readOnly": true,
          "type": "integer"
        },
        "bunqme_share_url": {
          "description": "The url that points to the bunq.me request.",
          "readOnly": true,
          "type": "string"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount the money was requested from.",
          "readOnly": false,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the payment request's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the inquiry.",
          "readOnly": false,
          "type": "string"
        },
        "event_id": {
          "description": "The ID of the associated event if the request was made using 'split the bill'.",
          "readOnly": false,
          "type": "integer"
        },
        "geolocation": {
          "$ref": "#/definitions/Geolocation",
          "description": "The geolocation where the payment was done.",
          "readOnly": true,
          "type": "object"
        },
        "id": {
          "description": "The id of the created RequestInquiry.",
          "readOnly": true,
          "type": "integer"
        },
        "merchant_reference": {
          "description": "The client's custom reference that was attached to the request and the mutation.",
          "readOnly": false,
          "type": "string"
        },
        "minimum_age": {
          "description": "The minimum age the user accepting the RequestInquiry must have.",
          "readOnly": false,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account the request response applies to.",
          "readOnly": true,
          "type": "integer"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to after accepting or rejecting the Request.",
          "readOnly": false,
          "type": "string"
        },
        "reference_split_the_bill": {
          "$ref": "#/definitions/RequestReferenceSplitTheBillAnchorObject",
          "description": "The reference to the object used for split the bill. Can be Payment, PaymentBatch, ScheduleInstance, RequestResponse and MasterCardAction",
          "readOnly": true,
          "type": "object"
        },
        "require_address": {
          "description": "Whether or not an address must be provided on accept.",
          "readOnly": false,
          "type": "string"
        },
        "scheduled_id": {
          "description": "The id of the scheduled job if the request was scheduled.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the request.",
          "readOnly": false,
          "type": "string"
        },
        "time_expiry": {
          "description": "The timestamp of when the payment request expired.",
          "readOnly": true,
          "type": "string"
        },
        "time_responded": {
          "description": "The timestamp of when the payment request was responded to.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the payment request's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label that's displayed to the counterparty with the mutation. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "user_alias_revoked": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label that's displayed to the counterparty with the mutation. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "want_tip": {
          "description": "[DEPRECATED] Whether or not the accepting user can give an extra tip on top of the requested Amount. Defaults to false.",
          "readOnly": false,
          "type": "boolean"
        }
      },
      "required": [
        "allow_bunqme"
      ],
      "type": "object"
    },
    "RequestInquiryBatch": {
      "properties": {
        "event_id": {
          "description": "The ID of the associated event if the request batch was made using 'split the bill'.",
          "readOnly": false,
          "type": "integer"
        },
        "reference_split_the_bill": {
          "$ref": "#/definitions/RequestReferenceSplitTheBillAnchorObject",
          "description": "The reference to the object used for split the bill. Can be Payment, PaymentBatch, ScheduleInstance, RequestResponse and MasterCardAction",
          "readOnly": true,
          "type": "object"
        },
        "request_inquiries": {
          "description": "The list of requests that were made.",
          "items": {
            "$ref": "#/definitions/RequestInquiry"
          },
          "readOnly": false,
          "type": "array"
        },
        "status": {
          "description": "The status of the request.",
          "readOnly": false,
          "type": "string"
        },
        "total_amount_inquired": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount originally inquired for this batch.",
          "readOnly": false,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RequestInquiryBatchCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RequestInquiryBatchListing": {
      "properties": {
        "reference_split_the_bill": {
          "$ref": "#/definitions/RequestReferenceSplitTheBillAnchorObject",
          "description": "The reference to the object used for split the bill. Can be Payment, PaymentBatch, ScheduleInstance, RequestResponse and MasterCardAction",
          "readOnly": true,
          "type": "object"
        },
        "request_inquiries": {
          "description": "The list of requests that were made.",
          "items": {
            "$ref": "#/definitions/RequestInquiry"
          },
          "readOnly": true,
          "type": "array"
        },
        "total_amount_inquired": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount originally inquired for this batch.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RequestInquiryBatchRead": {
      "properties": {
        "reference_split_the_bill": {
          "$ref": "#/definitions/RequestReferenceSplitTheBillAnchorObject",
          "description": "The reference to the object used for split the bill. Can be Payment, PaymentBatch, ScheduleInstance, RequestResponse and MasterCardAction",
          "readOnly": true,
          "type": "object"
        },
        "request_inquiries": {
          "description": "The list of requests that were made.",
          "items": {
            "$ref": "#/definitions/RequestInquiry"
          },
          "readOnly": true,
          "type": "array"
        },
        "total_amount_inquired": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount originally inquired for this batch.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RequestInquiryBatchUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RequestInquiryCreate": {
      "properties": {
        "id": {
          "description": "The id of the created RequestInquiry.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RequestInquiryListing": {
      "properties": {
        "address_billing": {
          "$ref": "#/definitions/Address",
          "description": "The billing address provided by the accepting user if an address was requested.",
          "readOnly": true,
          "type": "object"
        },
        "address_shipping": {
          "$ref": "#/definitions/Address",
          "description": "The shipping address provided by the accepting user if an address was requested.",
          "readOnly": true,
          "type": "object"
        },
        "amount_inquired": {
          "$ref": "#/definitions/Amount",
          "description": "The requested amount.",
          "readOnly": true,
          "type": "object"
        },
        "amount_responded": {
          "$ref": "#/definitions/Amount",
          "description": "The responded amount.",
          "readOnly": true,
          "type": "object"
        },
        "attachment": {
          "description": "The attachments attached to the payment.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": true,
          "type": "array"
        },
        "batch_id": {
          "description": "The id of the batch if the request was part of a batch.",
          "readOnly": true,
          "type": "integer"
        },
        "bunqme_share_url": {
          "description": "The url that points to the bunq.me request.",
          "readOnly": true,
          "type": "string"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount the money was requested from.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the payment request's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the inquiry.",
          "readOnly": true,
          "type": "string"
        },
        "geolocation": {
          "$ref": "#/definitions/Geolocation",
          "description": "The geolocation where the payment was done.",
          "readOnly": true,
          "type": "object"
        },
        "id": {
          "description": "The id of the created RequestInquiry.",
          "readOnly": true,
          "type": "integer"
        },
        "merchant_reference": {
          "description": "The client's custom reference that was attached to the request and the mutation.",
          "readOnly": true,
          "type": "string"
        },
        "minimum_age": {
          "description": "The minimum age the user accepting the RequestInquiry must have.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account the request response applies to.",
          "readOnly": true,
          "type": "integer"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to after accepting or rejecting the Request.",
          "readOnly": true,
          "type": "string"
        },
        "reference_split_the_bill": {
          "$ref": "#/definitions/RequestReferenceSplitTheBillAnchorObject",
          "description": "The reference to the object used for split the bill. Can be Payment, PaymentBatch, ScheduleInstance, RequestResponse and MasterCardAction",
          "readOnly": true,
          "type": "object"
        },
        "require_address": {
          "description": "Whether or not an address must be provided on accept.",
          "readOnly": true,
          "type": "string"
        },
        "scheduled_id": {
          "description": "The id of the scheduled job if the request was scheduled.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the request.",
          "readOnly": true,
          "type": "string"
        },
        "time_expiry": {
          "description": "The timestamp of when the payment request expired.",
          "readOnly": true,
          "type": "string"
        },
        "time_responded": {
          "description": "The timestamp of when the payment request was responded to.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the payment request's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label that's displayed to the counterparty with the mutation. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "user_alias_revoked": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label that's displayed to the counterparty with the mutation. Includes user.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RequestInquiryRead": {
      "properties": {
        "address_billing": {
          "$ref": "#/definitions/Address",
          "description": "The billing address provided by the accepting user if an address was requested.",
          "readOnly": true,
          "type": "object"
        },
        "address_shipping": {
          "$ref": "#/definitions/Address",
          "description": "The shipping address provided by the accepting user if an address was requested.",
          "readOnly": true,
          "type": "object"
        },
        "amount_inquired": {
          "$ref": "#/definitions/Amount",
          "description": "The requested amount.",
          "readOnly": true,
          "type": "object"
        },
        "amount_responded": {
          "$ref": "#/definitions/Amount",
          "description": "The responded amount.",
          "readOnly": true,
          "type": "object"
        },
        "attachment": {
          "description": "The attachments attached to the payment.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": true,
          "type": "array"
        },
        "batch_id": {
          "description": "The id of the batch if the request was part of a batch.",
          "readOnly": true,
          "type": "integer"
        },
        "bunqme_share_url": {
          "description": "The url that points to the bunq.me request.",
          "readOnly": true,
          "type": "string"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount the money was requested from.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the payment request's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the inquiry.",
          "readOnly": true,
          "type": "string"
        },
        "geolocation": {
          "$ref": "#/definitions/Geolocation",
          "description": "The geolocation where the payment was done.",
          "readOnly": true,
          "type": "object"
        },
        "id": {
          "description": "The id of the created RequestInquiry.",
          "readOnly": true,
          "type": "integer"
        },
        "merchant_reference": {
          "description": "The client's custom reference that was attached to the request and the mutation.",
          "readOnly": true,
          "type": "string"
        },
        "minimum_age": {
          "description": "The minimum age the user accepting the RequestInquiry must have.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account the request response applies to.",
          "readOnly": true,
          "type": "integer"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to after accepting or rejecting the Request.",
          "readOnly": true,
          "type": "string"
        },
        "reference_split_the_bill": {
          "$ref": "#/definitions/RequestReferenceSplitTheBillAnchorObject",
          "description": "The reference to the object used for split the bill. Can be Payment, PaymentBatch, ScheduleInstance, RequestResponse and MasterCardAction",
          "readOnly": true,
          "type": "object"
        },
        "require_address": {
          "description": "Whether or not an address must be provided on accept.",
          "readOnly": true,
          "type": "string"
        },
        "scheduled_id": {
          "description": "The id of the scheduled job if the request was scheduled.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the request.",
          "readOnly": true,
          "type": "string"
        },
        "time_expiry": {
          "description": "The timestamp of when the payment request expired.",
          "readOnly": true,
          "type": "string"
        },
        "time_responded": {
          "description": "The timestamp of when the payment request was responded to.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the payment request's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label that's displayed to the counterparty with the mutation. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "user_alias_revoked": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label that's displayed to the counterparty with the mutation. Includes user.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RequestInquiryReference": {
      "properties": {
        "id": {
          "description": "The id of the request inquiry (batch).",
          "readOnly": true,
          "type": "integer"
        },
        "type": {
          "description": "The type of request inquiry. Can be RequestInquiry or RequestInquiryBatch.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RequestInquiryUpdate": {
      "properties": {
        "address_billing": {
          "$ref": "#/definitions/Address",
          "description": "The billing address provided by the accepting user if an address was requested.",
          "readOnly": true,
          "type": "object"
        },
        "address_shipping": {
          "$ref": "#/definitions/Address",
          "description": "The shipping address provided by the accepting user if an address was requested.",
          "readOnly": true,
          "type": "object"
        },
        "amount_inquired": {
          "$ref": "#/definitions/Amount",
          "description": "The requested amount.",
          "readOnly": true,
          "type": "object"
        },
        "amount_responded": {
          "$ref": "#/definitions/Amount",
          "description": "The responded amount.",
          "readOnly": true,
          "type": "object"
        },
        "attachment": {
          "description": "The attachments attached to the payment.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": true,
          "type": "array"
        },
        "batch_id": {
          "description": "The id of the batch if the request was part of a batch.",
          "readOnly": true,
          "type": "integer"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount the money was requested from.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the payment request's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the inquiry.",
          "readOnly": true,
          "type": "string"
        },
        "geolocation": {
          "$ref": "#/definitions/Geolocation",
          "description": "The geolocation where the payment was done.",
          "readOnly": true,
          "type": "object"
        },
        "id": {
          "description": "The id of the payment request.",
          "readOnly": true,
          "type": "integer"
        },
        "merchant_reference": {
          "description": "The client's custom reference that was attached to the request and the mutation.",
          "readOnly": true,
          "type": "string"
        },
        "minimum_age": {
          "description": "The minimum age the user accepting the RequestInquiry must have.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account the request response applies to.",
          "readOnly": true,
          "type": "integer"
        },
        "reference_split_the_bill": {
          "$ref": "#/definitions/RequestReferenceSplitTheBillAnchorObject",
          "description": "The reference to the object used for split the bill. Can be Payment, PaymentBatch, ScheduleInstance, RequestResponse and MasterCardAction",
          "readOnly": true,
          "type": "object"
        },
        "require_address": {
          "description": "Whether or not an address must be provided on accept.",
          "readOnly": true,
          "type": "string"
        },
        "scheduled_id": {
          "description": "The id of the scheduled job if the request was scheduled.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the request.",
          "readOnly": true,
          "type": "string"
        },
        "time_expiry": {
          "description": "The timestamp of when the payment request expired.",
          "readOnly": true,
          "type": "string"
        },
        "time_responded": {
          "description": "The timestamp of when the payment request was responded to.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the payment request's last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label that's displayed to the counterparty with the mutation. Includes user.",
          "readOnly": true,
          "type": "object"
        },
        "user_alias_revoked": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label that's displayed to the counterparty with the mutation. Includes user.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RequestReferenceSplitTheBillAnchorObject": {
      "properties": {
        "BillingInvoice": {
          "$ref": "#/definitions/Invoice",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "DraftPayment": {
          "$ref": "#/definitions/DraftPayment",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "MasterCardAction": {
          "$ref": "#/definitions/MasterCardAction",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "Payment": {
          "$ref": "#/definitions/Payment",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "PaymentBatch": {
          "$ref": "#/definitions/PaymentBatch",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "RequestResponse": {
          "$ref": "#/definitions/RequestResponse",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "ScheduleInstance": {
          "$ref": "#/definitions/ScheduleInstance",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "TabResultResponse": {
          "$ref": "#/definitions/TabResultResponse",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "TransferwisePayment": {
          "$ref": "#/definitions/TransferwiseTransfer",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "WhitelistResult": {
          "$ref": "#/definitions/WhitelistResult",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RequestResponse": {
      "properties": {
        "address_billing": {
          "$ref": "#/definitions/Address",
          "description": "The billing address provided by the accepting user if an address was requested.",
          "readOnly": false,
          "type": "object"
        },
        "address_shipping": {
          "$ref": "#/definitions/Address",
          "description": "The shipping address provided by the accepting user if an address was requested.",
          "readOnly": false,
          "type": "object"
        },
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount this RequestResponse was received on.",
          "readOnly": true,
          "type": "object"
        },
        "amount_inquired": {
          "$ref": "#/definitions/Amount",
          "description": "The requested Amount.",
          "readOnly": true,
          "type": "object"
        },
        "amount_responded": {
          "$ref": "#/definitions/Amount",
          "description": "The Amount the RequestResponse was accepted with.",
          "readOnly": false,
          "type": "object"
        },
        "attachment": {
          "description": "The Attachments attached to the RequestResponse.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "readOnly": true,
          "type": "array"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount that is requesting money with this RequestResponse.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp when the Request Response was created.",
          "readOnly": true,
          "type": "string"
        },
        "credit_scheme_identifier": {
          "description": "The credit scheme id provided by the counterparty for DIRECT_DEBIT inquiries.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description for the RequestResponse provided by the requesting party. Maximum 9000 characters.",
          "readOnly": true,
          "type": "string"
        },
        "eligible_whitelist_id": {
          "description": "The whitelist id for this action or null.",
          "readOnly": true,
          "type": "integer"
        },
        "geolocation": {
          "$ref": "#/definitions/Geolocation",
          "description": "The Geolocation where the RequestResponse was created.",
          "readOnly": true,
          "type": "object"
        },
        "id": {
          "description": "The id of the Request Response.",
          "readOnly": true,
          "type": "integer"
        },
        "mandate_identifier": {
          "description": "The mandate id provided by the counterparty for DIRECT_DEBIT inquiries.",
          "readOnly": true,
          "type": "string"
        },
        "minimum_age": {
          "description": "The minimum age the user accepting the RequestResponse must have.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the MonetaryAccount the RequestResponse was received on.",
          "readOnly": true,
          "type": "integer"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to after accepting or rejecting the Request.",
          "readOnly": true,
          "type": "string"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "require_address": {
          "description": "Whether or not an address must be provided on accept.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the RequestResponse. Can be ACCEPTED, PENDING, REJECTED, REFUND_REQUESTED, REFUNDED or REVOKED.",
          "readOnly": false,
          "type": "string"
        },
        "sub_type": {
          "description": "The subtype of the RequestInquiry. Can be ONCE or RECURRING for DIRECT_DEBIT RequestInquiries and NONE for all other.",
          "readOnly": true,
          "type": "string"
        },
        "time_expiry": {
          "description": "The timestamp of when the RequestResponse expired or will expire.",
          "readOnly": true,
          "type": "string"
        },
        "time_refund_requested": {
          "description": "The timestamp of when a refund request for the RequestResponse was claimed.",
          "readOnly": true,
          "type": "string"
        },
        "time_refunded": {
          "description": "The timestamp of when the RequestResponse was refunded.",
          "readOnly": true,
          "type": "string"
        },
        "time_responded": {
          "description": "The timestamp of when the RequestResponse was responded to.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the RequestInquiry. Can be DIRECT_DEBIT, DIRECT_DEBIT_B2B, IDEAL, SOFORT or INTERNAL.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the Request Response was last updated (will be updated when chat messages are received).",
          "readOnly": true,
          "type": "string"
        },
        "user_refund_requested": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user that requested the refund.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RequestResponseListing": {
      "properties": {
        "address_billing": {
          "$ref": "#/definitions/Address",
          "description": "The billing address provided by the accepting user if an address was requested.",
          "readOnly": true,
          "type": "object"
        },
        "address_shipping": {
          "$ref": "#/definitions/Address",
          "description": "The shipping address provided by the accepting user if an address was requested.",
          "readOnly": true,
          "type": "object"
        },
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount this RequestResponse was received on.",
          "readOnly": true,
          "type": "object"
        },
        "amount_inquired": {
          "$ref": "#/definitions/Amount",
          "description": "The requested Amount.",
          "readOnly": true,
          "type": "object"
        },
        "amount_responded": {
          "$ref": "#/definitions/Amount",
          "description": "The Amount the RequestResponse was accepted with.",
          "readOnly": true,
          "type": "object"
        },
        "attachment": {
          "description": "The Attachments attached to the RequestResponse.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "readOnly": true,
          "type": "array"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount that is requesting money with this RequestResponse.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp when the Request Response was created.",
          "readOnly": true,
          "type": "string"
        },
        "credit_scheme_identifier": {
          "description": "The credit scheme id provided by the counterparty for DIRECT_DEBIT inquiries.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description for the RequestResponse provided by the requesting party. Maximum 9000 characters.",
          "readOnly": true,
          "type": "string"
        },
        "eligible_whitelist_id": {
          "description": "The whitelist id for this action or null.",
          "readOnly": true,
          "type": "integer"
        },
        "geolocation": {
          "$ref": "#/definitions/Geolocation",
          "description": "The Geolocation where the RequestResponse was created.",
          "readOnly": true,
          "type": "object"
        },
        "id": {
          "description": "The id of the Request Response.",
          "readOnly": true,
          "type": "integer"
        },
        "mandate_identifier": {
          "description": "The mandate id provided by the counterparty for DIRECT_DEBIT inquiries.",
          "readOnly": true,
          "type": "string"
        },
        "minimum_age": {
          "description": "The minimum age the user accepting the RequestResponse must have.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the MonetaryAccount the RequestResponse was received on.",
          "readOnly": true,
          "type": "integer"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to after accepting or rejecting the Request.",
          "readOnly": true,
          "type": "string"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "require_address": {
          "description": "Whether or not an address must be provided on accept.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the RequestResponse. Can be ACCEPTED, PENDING, REJECTED, REFUND_REQUESTED, REFUNDED or REVOKED.",
          "readOnly": true,
          "type": "string"
        },
        "sub_type": {
          "description": "The subtype of the RequestInquiry. Can be ONCE or RECURRING for DIRECT_DEBIT RequestInquiries and NONE for all other.",
          "readOnly": true,
          "type": "string"
        },
        "time_expiry": {
          "description": "The timestamp of when the RequestResponse expired or will expire.",
          "readOnly": true,
          "type": "string"
        },
        "time_refund_requested": {
          "description": "The timestamp of when a refund request for the RequestResponse was claimed.",
          "readOnly": true,
          "type": "string"
        },
        "time_refunded": {
          "description": "The timestamp of when the RequestResponse was refunded.",
          "readOnly": true,
          "type": "string"
        },
        "time_responded": {
          "description": "The timestamp of when the RequestResponse was responded to.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the RequestInquiry. Can be DIRECT_DEBIT, DIRECT_DEBIT_B2B, IDEAL, SOFORT or INTERNAL.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the Request Response was last updated (will be updated when chat messages are received).",
          "readOnly": true,
          "type": "string"
        },
        "user_refund_requested": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user that requested the refund.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RequestResponseRead": {
      "properties": {
        "address_billing": {
          "$ref": "#/definitions/Address",
          "description": "The billing address provided by the accepting user if an address was requested.",
          "readOnly": true,
          "type": "object"
        },
        "address_shipping": {
          "$ref": "#/definitions/Address",
          "description": "The shipping address provided by the accepting user if an address was requested.",
          "readOnly": true,
          "type": "object"
        },
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount this RequestResponse was received on.",
          "readOnly": true,
          "type": "object"
        },
        "amount_inquired": {
          "$ref": "#/definitions/Amount",
          "description": "The requested Amount.",
          "readOnly": true,
          "type": "object"
        },
        "amount_responded": {
          "$ref": "#/definitions/Amount",
          "description": "The Amount the RequestResponse was accepted with.",
          "readOnly": true,
          "type": "object"
        },
        "attachment": {
          "description": "The Attachments attached to the RequestResponse.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "readOnly": true,
          "type": "array"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount that is requesting money with this RequestResponse.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp when the Request Response was created.",
          "readOnly": true,
          "type": "string"
        },
        "credit_scheme_identifier": {
          "description": "The credit scheme id provided by the counterparty for DIRECT_DEBIT inquiries.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description for the RequestResponse provided by the requesting party. Maximum 9000 characters.",
          "readOnly": true,
          "type": "string"
        },
        "eligible_whitelist_id": {
          "description": "The whitelist id for this action or null.",
          "readOnly": true,
          "type": "integer"
        },
        "geolocation": {
          "$ref": "#/definitions/Geolocation",
          "description": "The Geolocation where the RequestResponse was created.",
          "readOnly": true,
          "type": "object"
        },
        "id": {
          "description": "The id of the Request Response.",
          "readOnly": true,
          "type": "integer"
        },
        "mandate_identifier": {
          "description": "The mandate id provided by the counterparty for DIRECT_DEBIT inquiries.",
          "readOnly": true,
          "type": "string"
        },
        "minimum_age": {
          "description": "The minimum age the user accepting the RequestResponse must have.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the MonetaryAccount the RequestResponse was received on.",
          "readOnly": true,
          "type": "integer"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to after accepting or rejecting the Request.",
          "readOnly": true,
          "type": "string"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "require_address": {
          "description": "Whether or not an address must be provided on accept.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the RequestResponse. Can be ACCEPTED, PENDING, REJECTED, REFUND_REQUESTED, REFUNDED or REVOKED.",
          "readOnly": true,
          "type": "string"
        },
        "sub_type": {
          "description": "The subtype of the RequestInquiry. Can be ONCE or RECURRING for DIRECT_DEBIT RequestInquiries and NONE for all other.",
          "readOnly": true,
          "type": "string"
        },
        "time_expiry": {
          "description": "The timestamp of when the RequestResponse expired or will expire.",
          "readOnly": true,
          "type": "string"
        },
        "time_refund_requested": {
          "description": "The timestamp of when a refund request for the RequestResponse was claimed.",
          "readOnly": true,
          "type": "string"
        },
        "time_refunded": {
          "description": "The timestamp of when the RequestResponse was refunded.",
          "readOnly": true,
          "type": "string"
        },
        "time_responded": {
          "description": "The timestamp of when the RequestResponse was responded to.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the RequestInquiry. Can be DIRECT_DEBIT, DIRECT_DEBIT_B2B, IDEAL, SOFORT or INTERNAL.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp when the Request Response was last updated (will be updated when chat messages are received).",
          "readOnly": true,
          "type": "string"
        },
        "user_refund_requested": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user that requested the refund.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RequestResponseUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "RewardListing": {
      "properties": {
        "amount_reward": {
          "$ref": "#/definitions/Amount",
          "description": "The amount that will be/was awarded as reward for the reward.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The alias of the other user eligible for the reward award.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The time the reward was created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the reward.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The subStatus of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The time the reward was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RewardRead": {
      "properties": {
        "amount_reward": {
          "$ref": "#/definitions/Amount",
          "description": "The amount that will be/was awarded as reward for the reward.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The alias of the other user eligible for the reward award.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The time the reward was created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the reward.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The subStatus of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The time the reward was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RewardRecipient": {
      "properties": {
        "amount_reward": {
          "$ref": "#/definitions/Amount",
          "description": "The amount that will be/was awarded as reward for the reward.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The alias of the other user eligible for the reward award.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The time the reward was created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the reward.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The subStatus of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The time the reward was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RewardRecipientListing": {
      "properties": {
        "amount_reward": {
          "$ref": "#/definitions/Amount",
          "description": "The amount that will be/was awarded as reward for the reward.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The alias of the other user eligible for the reward award.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The time the reward was created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the reward.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The subStatus of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The time the reward was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RewardRecipientRead": {
      "properties": {
        "amount_reward": {
          "$ref": "#/definitions/Amount",
          "description": "The amount that will be/was awarded as reward for the reward.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The alias of the other user eligible for the reward award.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The time the reward was created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the reward.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The subStatus of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The time the reward was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RewardSender": {
      "properties": {
        "amount_reward": {
          "$ref": "#/definitions/Amount",
          "description": "The amount that will be/was awarded as reward for the reward.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The alias of the other user eligible for the reward award.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The time the reward was created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the reward.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The subStatus of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The time the reward was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RewardSenderListing": {
      "properties": {
        "amount_reward": {
          "$ref": "#/definitions/Amount",
          "description": "The amount that will be/was awarded as reward for the reward.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The alias of the other user eligible for the reward award.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The time the reward was created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the reward.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The subStatus of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The time the reward was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RewardSenderRead": {
      "properties": {
        "amount_reward": {
          "$ref": "#/definitions/Amount",
          "description": "The amount that will be/was awarded as reward for the reward.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The alias of the other user eligible for the reward award.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The time the reward was created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the reward.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The subStatus of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the reward.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The time the reward was last updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SandboxUserCompany": {
      "type": "object"
    },
    "SandboxUserCompanyCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "SandboxUserPerson": {
      "type": "object"
    },
    "SandboxUserPersonCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "Schedule": {
      "properties": {
        "object": {
          "$ref": "#/definitions/ScheduleAnchorObject",
          "description": "The scheduled object. (Payment, PaymentBatch)",
          "readOnly": true,
          "type": "object"
        },
        "recurrence_size": {
          "description": "The schedule recurrence size. For example size 4 and unit WEEKLY means the recurrence is every 4 weeks.",
          "readOnly": false,
          "type": "integer"
        },
        "recurrence_unit": {
          "description": "The schedule recurrence unit, options: ONCE, HOURLY, DAILY, WEEKLY, MONTHLY, YEARLY",
          "readOnly": false,
          "type": "string"
        },
        "status": {
          "description": "The schedule status, options: ACTIVE, FINISHED, CANCELLED.",
          "readOnly": true,
          "type": "string"
        },
        "time_end": {
          "description": "The schedule end time (UTC).",
          "readOnly": false,
          "type": "string"
        },
        "time_start": {
          "description": "The schedule start time (UTC).",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScheduleAnchorObject": {
      "properties": {
        "Payment": {
          "$ref": "#/definitions/Payment",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "PaymentBatch": {
          "$ref": "#/definitions/PaymentBatch",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ScheduleInstance": {
      "properties": {
        "error_message": {
          "description": "The message when the scheduled instance has run and failed due to user error.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "readOnly": true,
          "type": "array"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "result_object": {
          "$ref": "#/definitions/ScheduleInstanceAnchorObject",
          "description": "The result object of this schedule instance. (Payment, PaymentBatch)",
          "readOnly": true,
          "type": "object"
        },
        "scheduled_object": {
          "$ref": "#/definitions/ScheduleAnchorObject",
          "description": "The scheduled object. (Payment, PaymentBatch)",
          "readOnly": true,
          "type": "object"
        },
        "state": {
          "description": "The state of the scheduleInstance. (FINISHED_SUCCESSFULLY, RETRY, FAILED_USER_ERROR)",
          "readOnly": false,
          "type": "string"
        },
        "time_end": {
          "description": "The schedule end time (UTC).",
          "readOnly": true,
          "type": "string"
        },
        "time_start": {
          "description": "The schedule start time (UTC).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScheduleInstanceAnchorObject": {
      "properties": {
        "Payment": {
          "$ref": "#/definitions/Payment",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "PaymentBatch": {
          "$ref": "#/definitions/PaymentBatch",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ScheduleInstanceListing": {
      "properties": {
        "error_message": {
          "description": "The message when the scheduled instance has run and failed due to user error.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "readOnly": true,
          "type": "array"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "result_object": {
          "$ref": "#/definitions/ScheduleInstanceAnchorObject",
          "description": "The result object of this schedule instance. (Payment, PaymentBatch)",
          "readOnly": true,
          "type": "object"
        },
        "scheduled_object": {
          "$ref": "#/definitions/ScheduleAnchorObject",
          "description": "The scheduled object. (Payment, PaymentBatch)",
          "readOnly": true,
          "type": "object"
        },
        "state": {
          "description": "The state of the scheduleInstance. (FINISHED_SUCCESSFULLY, RETRY, FAILED_USER_ERROR)",
          "readOnly": true,
          "type": "string"
        },
        "time_end": {
          "description": "The schedule end time (UTC).",
          "readOnly": true,
          "type": "string"
        },
        "time_start": {
          "description": "The schedule start time (UTC).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScheduleInstanceRead": {
      "properties": {
        "error_message": {
          "description": "The message when the scheduled instance has run and failed due to user error.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "readOnly": true,
          "type": "array"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "result_object": {
          "$ref": "#/definitions/ScheduleInstanceAnchorObject",
          "description": "The result object of this schedule instance. (Payment, PaymentBatch)",
          "readOnly": true,
          "type": "object"
        },
        "scheduled_object": {
          "$ref": "#/definitions/ScheduleAnchorObject",
          "description": "The scheduled object. (Payment, PaymentBatch)",
          "readOnly": true,
          "type": "object"
        },
        "state": {
          "description": "The state of the scheduleInstance. (FINISHED_SUCCESSFULLY, RETRY, FAILED_USER_ERROR)",
          "readOnly": true,
          "type": "string"
        },
        "time_end": {
          "description": "The schedule end time (UTC).",
          "readOnly": true,
          "type": "string"
        },
        "time_start": {
          "description": "The schedule start time (UTC).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScheduleInstanceUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ScheduleListing": {
      "properties": {
        "object": {
          "$ref": "#/definitions/ScheduleAnchorObject",
          "description": "The scheduled object. (Payment, PaymentBatch)",
          "readOnly": true,
          "type": "object"
        },
        "recurrence_size": {
          "description": "The schedule recurrence size. For example size 4 and unit WEEKLY means the recurrence is every 4 weeks.",
          "readOnly": true,
          "type": "integer"
        },
        "recurrence_unit": {
          "description": "The schedule recurrence unit, options: ONCE, HOURLY, DAILY, WEEKLY, MONTHLY, YEARLY",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The schedule status, options: ACTIVE, FINISHED, CANCELLED.",
          "readOnly": true,
          "type": "string"
        },
        "time_end": {
          "description": "The schedule end time (UTC).",
          "readOnly": true,
          "type": "string"
        },
        "time_start": {
          "description": "The schedule start time (UTC).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SchedulePayment": {
      "properties": {
        "payment": {
          "$ref": "#/definitions/SchedulePaymentEntry",
          "description": "The payment details.",
          "readOnly": false,
          "type": "object"
        },
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule details.",
          "readOnly": false,
          "type": "object"
        },
        "status": {
          "description": "The schedule status, options: ACTIVE, FINISHED, CANCELLED.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SchedulePaymentBatch": {
      "properties": {
        "payments": {
          "description": "The payment details.",
          "items": {
            "$ref": "#/definitions/SchedulePaymentEntry"
          },
          "readOnly": false,
          "type": "array"
        },
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule details.",
          "readOnly": false,
          "type": "object"
        }
      },
      "type": "object"
    },
    "SchedulePaymentBatchCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "SchedulePaymentBatchDelete": {
      "type": "object"
    },
    "SchedulePaymentBatchUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "SchedulePaymentCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "SchedulePaymentDelete": {
      "type": "object"
    },
    "SchedulePaymentEntry": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of 'this' (party) side of the Payment.",
          "readOnly": true,
          "type": "object"
        },
        "allow_bunqto": {
          "description": "Whether or not sending a bunq.to payment is allowed.",
          "readOnly": false,
          "type": "boolean"
        },
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The Amount transferred by the Payment. Will be negative for outgoing Payments and positive for incoming Payments (relative to the MonetaryAccount indicated by monetary_account_id).",
          "readOnly": false,
          "type": "object"
        },
        "attachment": {
          "description": "The Attachments attached to the Payment.",
          "items": {
            "$ref": "#/definitions/AttachmentMonetaryAccountPayment"
          },
          "readOnly": false,
          "type": "array"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of the other (counterparty) side of the Payment.",
          "readOnly": false,
          "type": "object"
        },
        "description": {
          "description": "The description for the Payment. Maximum 140 characters for Payments to external IBANs, 9000 characters for Payments to only other bunq MonetaryAccounts.",
          "readOnly": false,
          "type": "string"
        },
        "merchant_reference": {
          "description": "Optional data included with the Payment specific to the merchant.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SchedulePaymentListing": {
      "properties": {
        "payment": {
          "$ref": "#/definitions/SchedulePaymentEntry",
          "description": "The payment details.",
          "readOnly": true,
          "type": "object"
        },
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule details.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The schedule status, options: ACTIVE, FINISHED, CANCELLED.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SchedulePaymentRead": {
      "properties": {
        "payment": {
          "$ref": "#/definitions/SchedulePaymentEntry",
          "description": "The payment details.",
          "readOnly": true,
          "type": "object"
        },
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule details.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The schedule status, options: ACTIVE, FINISHED, CANCELLED.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SchedulePaymentUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ScheduleRead": {
      "properties": {
        "object": {
          "$ref": "#/definitions/ScheduleAnchorObject",
          "description": "The scheduled object. (Payment, PaymentBatch)",
          "readOnly": true,
          "type": "object"
        },
        "recurrence_size": {
          "description": "The schedule recurrence size. For example size 4 and unit WEEKLY means the recurrence is every 4 weeks.",
          "readOnly": true,
          "type": "integer"
        },
        "recurrence_unit": {
          "description": "The schedule recurrence unit, options: ONCE, HOURLY, DAILY, WEEKLY, MONTHLY, YEARLY",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The schedule status, options: ACTIVE, FINISHED, CANCELLED.",
          "readOnly": true,
          "type": "string"
        },
        "time_end": {
          "description": "The schedule end time (UTC).",
          "readOnly": true,
          "type": "string"
        },
        "time_start": {
          "description": "The schedule start time (UTC).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScheduleUserListing": {
      "type": "object"
    },
    "SessionDelete": {
      "type": "object"
    },
    "SessionServer": {
      "properties": {
        "secret": {
          "description": "The API key of the user you want to login. If your API key has not been used before, it will be bound to the ip address of this DeviceServer.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "secret"
      ],
      "type": "object"
    },
    "SessionServerCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The Id object of the created Session.",
          "readOnly": true,
          "type": "object"
        },
        "Token": {
          "$ref": "#/definitions/SessionServerToken",
          "description": "The token object of this Session.",
          "readOnly": true,
          "type": "object"
        },
        "UserApiKey": {
          "$ref": "#/definitions/UserApiKey",
          "description": "The UserApiKey object that is logged in with this Session.",
          "readOnly": true,
          "type": "object"
        },
        "UserCompany": {
          "$ref": "#/definitions/UserCompany",
          "description": "The UserCompany object that is logged in with this Session.",
          "readOnly": true,
          "type": "object"
        },
        "UserPaymentServiceProvider": {
          "$ref": "#/definitions/UserPaymentServiceProvider",
          "description": "The UserPaymentServiceProvider object that is logged in with this Session.",
          "readOnly": true,
          "type": "object"
        },
        "UserPerson": {
          "$ref": "#/definitions/UserPerson",
          "description": "The UserPerson object that is logged in with this Session.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "SessionServerToken": {
      "properties": {
        "id": {
          "description": "The id of the Token.",
          "readOnly": true,
          "type": "integer"
        },
        "token": {
          "description": "The Session token is the token the client has to provide in the \"X-Bunq-Client-Authentication\" header for each API call that requires a Session (only the creation of a Installation and DeviceServer don't require a Session).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShareDetail": {
      "properties": {
        "draft_payment": {
          "$ref": "#/definitions/ShareDetailDraftPayment",
          "description": "The share details for a draft payment share. In the response 'draft_payment' is replaced by 'ShareDetailDraftPayment'.",
          "readOnly": false,
          "type": "object"
        },
        "payment": {
          "$ref": "#/definitions/ShareDetailPayment",
          "description": "The share details for a payment share. In the response 'payment' is replaced by 'ShareDetailPayment'.",
          "readOnly": false,
          "type": "object"
        },
        "read_only": {
          "$ref": "#/definitions/ShareDetailReadOnly",
          "description": "The share details for viewing a share. In the response 'read_only' is replaced by 'ShareDetailReadOnly'.",
          "readOnly": false,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ShareDetailDraftPayment": {
      "properties": {
        "make_draft_payments": {
          "description": "If set to true, the invited user will be able to make draft payments from the shared account.",
          "readOnly": false,
          "type": "boolean"
        },
        "view_balance": {
          "description": "If set to true, the invited user will be able to view the account balance.",
          "readOnly": false,
          "type": "boolean"
        },
        "view_new_events": {
          "description": "If set to true, the invited user will be able to view events starting from the time the share became active.",
          "readOnly": false,
          "type": "boolean"
        },
        "view_old_events": {
          "description": "If set to true, the invited user will be able to view events from before the share was active.",
          "readOnly": false,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ShareDetailPayment": {
      "properties": {
        "budget": {
          "$ref": "#/definitions/BudgetRestriction",
          "description": "The budget restriction.",
          "readOnly": false,
          "type": "object"
        },
        "make_draft_payments": {
          "description": "If set to true, the invited user will be able to make draft payments from the shared account.",
          "readOnly": false,
          "type": "boolean"
        },
        "make_payments": {
          "description": "If set to true, the invited user will be able to make payments from the shared account.",
          "readOnly": false,
          "type": "boolean"
        },
        "view_balance": {
          "description": "If set to true, the invited user will be able to view the account balance.",
          "readOnly": false,
          "type": "boolean"
        },
        "view_new_events": {
          "description": "If set to true, the invited user will be able to view events starting from the time the share became active.",
          "readOnly": false,
          "type": "boolean"
        },
        "view_old_events": {
          "description": "If set to true, the invited user will be able to view events from before the share was active.",
          "readOnly": false,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ShareDetailReadOnly": {
      "properties": {
        "view_balance": {
          "description": "If set to true, the invited user will be able to view the account balance.",
          "readOnly": false,
          "type": "boolean"
        },
        "view_new_events": {
          "description": "If set to true, the invited user will be able to view events starting from the time the share became active.",
          "readOnly": false,
          "type": "boolean"
        },
        "view_old_events": {
          "description": "If set to true, the invited user will be able to view events from before the share was active.",
          "readOnly": false,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ShareInviteBankInquiryBatch": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of this share invite inquiry batch.",
          "readOnly": true,
          "type": "object"
        },
        "share_invite_bank_inquiries": {
          "description": "The list of share invite bank inquiries that were made.",
          "items": {
            "$ref": "#/definitions/ShareInviteMonetaryAccountInquiry"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "ShareInviteMonetaryAccountAmountUsedDelete": {
      "type": "object"
    },
    "ShareInviteMonetaryAccountInquiry": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The label of the monetary account that's being shared.",
          "readOnly": true,
          "type": "object"
        },
        "counter_user_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user to share with.",
          "readOnly": false,
          "type": "object"
        },
        "draft_share_invite_bank_id": {
          "description": "The id of the draft share invite bank.",
          "readOnly": false,
          "type": "integer"
        },
        "end_date": {
          "description": "The expiration date of this share.",
          "readOnly": false,
          "type": "string"
        },
        "id": {
          "description": "The id of the newly created share invite.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account the share applies to.",
          "readOnly": true,
          "type": "integer"
        },
        "relationship": {
          "description": "The relationship: COMPANY_DIRECTOR, COMPANY_EMPLOYEE, etc",
          "readOnly": false,
          "type": "string"
        },
        "share_detail": {
          "$ref": "#/definitions/ShareDetail",
          "description": "The share details. Only one of these objects is returned.",
          "readOnly": false,
          "type": "object"
        },
        "share_type": {
          "description": "The share type, either STANDARD or MUTUAL.",
          "readOnly": false,
          "type": "string"
        },
        "start_date": {
          "description": "The start date of this share.",
          "readOnly": false,
          "type": "string"
        },
        "status": {
          "description": "The status of the share. Can be PENDING, REVOKED (the user deletes the share inquiry before it's accepted), ACCEPTED, CANCELLED (the user deletes an active share) or CANCELLATION_PENDING, CANCELLATION_ACCEPTED, CANCELLATION_REJECTED (for canceling mutual connects)",
          "readOnly": false,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user who created the share.",
          "readOnly": true,
          "type": "object"
        },
        "user_alias_revoked": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user who revoked the share.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ShareInviteMonetaryAccountInquiryCreate": {
      "properties": {
        "id": {
          "description": "The id of the newly created share invite.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ShareInviteMonetaryAccountInquiryListing": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The label of the monetary account that's being shared.",
          "readOnly": true,
          "type": "object"
        },
        "counter_user_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user to share with.",
          "readOnly": true,
          "type": "object"
        },
        "draft_share_invite_bank_id": {
          "description": "The id of the draft share invite bank.",
          "readOnly": true,
          "type": "integer"
        },
        "end_date": {
          "description": "The expiration date of this share.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the newly created share invite.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account the share applies to.",
          "readOnly": true,
          "type": "integer"
        },
        "relationship": {
          "description": "The relationship: COMPANY_DIRECTOR, COMPANY_EMPLOYEE, etc",
          "readOnly": true,
          "type": "string"
        },
        "share_detail": {
          "$ref": "#/definitions/ShareDetail",
          "description": "The share details. Only one of these objects is returned.",
          "readOnly": true,
          "type": "object"
        },
        "share_type": {
          "description": "The share type, either STANDARD or MUTUAL.",
          "readOnly": true,
          "type": "string"
        },
        "start_date": {
          "description": "The start date of this share.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the share. Can be PENDING, REVOKED (the user deletes the share inquiry before it's accepted), ACCEPTED, CANCELLED (the user deletes an active share) or CANCELLATION_PENDING, CANCELLATION_ACCEPTED, CANCELLATION_REJECTED (for canceling mutual connects)",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user who created the share.",
          "readOnly": true,
          "type": "object"
        },
        "user_alias_revoked": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user who revoked the share.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ShareInviteMonetaryAccountInquiryRead": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The label of the monetary account that's being shared.",
          "readOnly": true,
          "type": "object"
        },
        "counter_user_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user to share with.",
          "readOnly": true,
          "type": "object"
        },
        "draft_share_invite_bank_id": {
          "description": "The id of the draft share invite bank.",
          "readOnly": true,
          "type": "integer"
        },
        "end_date": {
          "description": "The expiration date of this share.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the newly created share invite.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account the share applies to.",
          "readOnly": true,
          "type": "integer"
        },
        "relationship": {
          "description": "The relationship: COMPANY_DIRECTOR, COMPANY_EMPLOYEE, etc",
          "readOnly": true,
          "type": "string"
        },
        "share_detail": {
          "$ref": "#/definitions/ShareDetail",
          "description": "The share details. Only one of these objects is returned.",
          "readOnly": true,
          "type": "object"
        },
        "share_type": {
          "description": "The share type, either STANDARD or MUTUAL.",
          "readOnly": true,
          "type": "string"
        },
        "start_date": {
          "description": "The start date of this share.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the share. Can be PENDING, REVOKED (the user deletes the share inquiry before it's accepted), ACCEPTED, CANCELLED (the user deletes an active share) or CANCELLATION_PENDING, CANCELLATION_ACCEPTED, CANCELLATION_REJECTED (for canceling mutual connects)",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user who created the share.",
          "readOnly": true,
          "type": "object"
        },
        "user_alias_revoked": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user who revoked the share.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ShareInviteMonetaryAccountInquiryUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ShareInviteMonetaryAccountResponse": {
      "properties": {
        "card_id": {
          "description": "The card to link to the shared monetary account. Used only if share_detail is ShareDetailCardPayment.",
          "readOnly": false,
          "type": "integer"
        },
        "counter_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account and user who created the share.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the ShareInviteBankResponse creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of this share. It is basically the monetary account description.",
          "readOnly": true,
          "type": "string"
        },
        "draft_share_invite_bank_id": {
          "description": "The id of the draft share invite bank.",
          "readOnly": true,
          "type": "integer"
        },
        "end_date": {
          "description": "The expiration date of this share.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the ShareInviteBankResponse.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account the ACCEPTED share applies to. null otherwise.",
          "readOnly": true,
          "type": "integer"
        },
        "relation_user": {
          "$ref": "#/definitions/RelationUser",
          "description": "All of the relation users towards this MA.",
          "readOnly": true,
          "type": "object"
        },
        "share_detail": {
          "$ref": "#/definitions/ShareDetail",
          "description": "The share details.",
          "readOnly": true,
          "type": "object"
        },
        "share_type": {
          "description": "The share type, either STANDARD or MUTUAL.",
          "readOnly": true,
          "type": "string"
        },
        "start_date": {
          "description": "The start date of this share.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the share. Can be PENDING, REVOKED (the user deletes the share inquiry before it's accepted), ACCEPTED, CANCELLED (the user deletes an active share) or CANCELLATION_PENDING, CANCELLATION_ACCEPTED, CANCELLATION_REJECTED (for canceling mutual connects)",
          "readOnly": false,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the ShareInviteBankResponse last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_cancelled": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user who cancelled the share if it has been revoked or rejected.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ShareInviteMonetaryAccountResponseListing": {
      "properties": {
        "counter_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account and user who created the share.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the ShareInviteBankResponse creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of this share. It is basically the monetary account description.",
          "readOnly": true,
          "type": "string"
        },
        "draft_share_invite_bank_id": {
          "description": "The id of the draft share invite bank.",
          "readOnly": true,
          "type": "integer"
        },
        "end_date": {
          "description": "The expiration date of this share.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the ShareInviteBankResponse.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account the ACCEPTED share applies to. null otherwise.",
          "readOnly": true,
          "type": "integer"
        },
        "relation_user": {
          "$ref": "#/definitions/RelationUser",
          "description": "All of the relation users towards this MA.",
          "readOnly": true,
          "type": "object"
        },
        "share_detail": {
          "$ref": "#/definitions/ShareDetail",
          "description": "The share details.",
          "readOnly": true,
          "type": "object"
        },
        "share_type": {
          "description": "The share type, either STANDARD or MUTUAL.",
          "readOnly": true,
          "type": "string"
        },
        "start_date": {
          "description": "The start date of this share.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the share. Can be PENDING, REVOKED (the user deletes the share inquiry before it's accepted), ACCEPTED, CANCELLED (the user deletes an active share) or CANCELLATION_PENDING, CANCELLATION_ACCEPTED, CANCELLATION_REJECTED (for canceling mutual connects)",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the ShareInviteBankResponse last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_cancelled": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user who cancelled the share if it has been revoked or rejected.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ShareInviteMonetaryAccountResponseRead": {
      "properties": {
        "counter_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The monetary account and user who created the share.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the ShareInviteBankResponse creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of this share. It is basically the monetary account description.",
          "readOnly": true,
          "type": "string"
        },
        "draft_share_invite_bank_id": {
          "description": "The id of the draft share invite bank.",
          "readOnly": true,
          "type": "integer"
        },
        "end_date": {
          "description": "The expiration date of this share.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the ShareInviteBankResponse.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account the ACCEPTED share applies to. null otherwise.",
          "readOnly": true,
          "type": "integer"
        },
        "relation_user": {
          "$ref": "#/definitions/RelationUser",
          "description": "All of the relation users towards this MA.",
          "readOnly": true,
          "type": "object"
        },
        "share_detail": {
          "$ref": "#/definitions/ShareDetail",
          "description": "The share details.",
          "readOnly": true,
          "type": "object"
        },
        "share_type": {
          "description": "The share type, either STANDARD or MUTUAL.",
          "readOnly": true,
          "type": "string"
        },
        "start_date": {
          "description": "The start date of this share.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the share. Can be PENDING, REVOKED (the user deletes the share inquiry before it's accepted), ACCEPTED, CANCELLED (the user deletes an active share) or CANCELLATION_PENDING, CANCELLATION_ACCEPTED, CANCELLATION_REJECTED (for canceling mutual connects)",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the ShareInviteBankResponse last update.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_cancelled": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user who cancelled the share if it has been revoked or rejected.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "ShareInviteMonetaryAccountResponseUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "SofortMerchantTransaction": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the monetary account to add money to.",
          "readOnly": true,
          "type": "object"
        },
        "amount_guaranteed": {
          "$ref": "#/definitions/Amount",
          "description": "In case of a successful transaction, the amount of money that will be transferred.",
          "readOnly": true,
          "type": "object"
        },
        "amount_requested": {
          "$ref": "#/definitions/Amount",
          "description": "The requested amount of money to add.",
          "readOnly": false,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the monetary account the money comes from.",
          "readOnly": true,
          "type": "object"
        },
        "error_message": {
          "description": "The error message of the transaction.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "readOnly": true,
          "type": "array"
        },
        "issuer": {
          "description": "The BIC of the issuer.",
          "readOnly": false,
          "type": "string"
        },
        "issuer_authentication_url": {
          "description": "The URL to visit to ",
          "readOnly": true,
          "type": "string"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account this sofort merchant transaction links to.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the transaction.",
          "readOnly": true,
          "type": "string"
        },
        "transaction_identifier": {
          "description": "The 'transaction ID' of the Sofort transaction.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SofortMerchantTransactionListing": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the monetary account to add money to.",
          "readOnly": true,
          "type": "object"
        },
        "amount_guaranteed": {
          "$ref": "#/definitions/Amount",
          "description": "In case of a successful transaction, the amount of money that will be transferred.",
          "readOnly": true,
          "type": "object"
        },
        "amount_requested": {
          "$ref": "#/definitions/Amount",
          "description": "The requested amount of money to add.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the monetary account the money comes from.",
          "readOnly": true,
          "type": "object"
        },
        "error_message": {
          "description": "The error message of the transaction.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "readOnly": true,
          "type": "array"
        },
        "issuer": {
          "description": "The BIC of the issuer.",
          "readOnly": true,
          "type": "string"
        },
        "issuer_authentication_url": {
          "description": "The URL to visit to ",
          "readOnly": true,
          "type": "string"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account this sofort merchant transaction links to.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the transaction.",
          "readOnly": true,
          "type": "string"
        },
        "transaction_identifier": {
          "description": "The 'transaction ID' of the Sofort transaction.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SofortMerchantTransactionRead": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the monetary account to add money to.",
          "readOnly": true,
          "type": "object"
        },
        "amount_guaranteed": {
          "$ref": "#/definitions/Amount",
          "description": "In case of a successful transaction, the amount of money that will be transferred.",
          "readOnly": true,
          "type": "object"
        },
        "amount_requested": {
          "$ref": "#/definitions/Amount",
          "description": "The requested amount of money to add.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the monetary account the money comes from.",
          "readOnly": true,
          "type": "object"
        },
        "error_message": {
          "description": "The error message of the transaction.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "readOnly": true,
          "type": "array"
        },
        "issuer": {
          "description": "The BIC of the issuer.",
          "readOnly": true,
          "type": "string"
        },
        "issuer_authentication_url": {
          "description": "The URL to visit to ",
          "readOnly": true,
          "type": "string"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account this sofort merchant transaction links to.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the transaction.",
          "readOnly": true,
          "type": "string"
        },
        "transaction_identifier": {
          "description": "The 'transaction ID' of the Sofort transaction.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Tab": {
      "properties": {
        "TabUsageMultiple": {
          "$ref": "#/definitions/TabUsageMultiple",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "TabUsageSingle": {
          "$ref": "#/definitions/TabUsageSingle",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TabAttachmentTabContentListing": {
      "type": "object"
    },
    "TabAttachmentTabRead": {
      "properties": {
        "attachment": {
          "$ref": "#/definitions/Attachment",
          "description": "The attachment.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the attachment's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the attachment.",
          "readOnly": true,
          "type": "integer"
        },
        "updated": {
          "description": "The timestamp of the attachment's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TabItem": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The money amount of the item.",
          "readOnly": true,
          "type": "object"
        },
        "avatar_attachment": {
          "$ref": "#/definitions/AttachmentPublic",
          "description": "A struct with an AttachmentPublic UUID that used as an avatar for the TabItem.",
          "readOnly": true,
          "type": "object"
        },
        "description": {
          "description": "The item's brief description.",
          "readOnly": true,
          "type": "string"
        },
        "ean_code": {
          "description": "The item's EAN code.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the tab item.",
          "readOnly": true,
          "type": "integer"
        },
        "quantity": {
          "description": "The quantity of the item. Formatted as a number containing up to 15 digits, up to 15 decimals and using a dot.",
          "readOnly": true,
          "type": "string"
        },
        "tab_attachment": {
          "description": "A list of AttachmentTab attached to the TabItem.",
          "items": {
            "$ref": "#/definitions/AttachmentTab"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "TabItemShop": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The money amount of the TabItem.",
          "readOnly": false,
          "type": "object"
        },
        "avatar_attachment": {
          "$ref": "#/definitions/AttachmentPublic",
          "description": "A struct with an AttachmentPublic UUID that used as an avatar for the TabItem.",
          "readOnly": true,
          "type": "object"
        },
        "avatar_attachment_uuid": {
          "description": "An AttachmentPublic UUID that used as an avatar for the TabItem.",
          "readOnly": false,
          "type": "string"
        },
        "description": {
          "description": "The TabItem's brief description.",
          "readOnly": false,
          "type": "string"
        },
        "ean_code": {
          "description": "The TabItem's EAN code.",
          "readOnly": false,
          "type": "string"
        },
        "id": {
          "description": "The id of the created TabItem.",
          "readOnly": true,
          "type": "integer"
        },
        "quantity": {
          "description": "The quantity of the TabItem.",
          "readOnly": false,
          "type": "integer"
        },
        "tab_attachment": {
          "description": "A list of AttachmentTab attached to the TabItem.",
          "items": {
            "$ref": "#/definitions/AttachmentTab"
          },
          "readOnly": false,
          "type": "array"
        }
      },
      "type": "object"
    },
    "TabItemShopBatch": {
      "properties": {
        "tab_items": {
          "description": "The list of tab items we want to create in a single batch. Limited to 50 items per batch.",
          "items": {
            "$ref": "#/definitions/TabItemShop"
          },
          "readOnly": false,
          "type": "array"
        }
      },
      "required": [
        "tab_items"
      ],
      "type": "object"
    },
    "TabItemShopBatchCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TabItemShopCreate": {
      "properties": {
        "id": {
          "description": "The id of the created TabItem.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "TabItemShopDelete": {
      "type": "object"
    },
    "TabItemShopListing": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The money amount of the TabItem.",
          "readOnly": true,
          "type": "object"
        },
        "avatar_attachment": {
          "$ref": "#/definitions/AttachmentPublic",
          "description": "A struct with an AttachmentPublic UUID that used as an avatar for the TabItem.",
          "readOnly": true,
          "type": "object"
        },
        "description": {
          "description": "The TabItem's brief description.",
          "readOnly": true,
          "type": "string"
        },
        "ean_code": {
          "description": "The TabItem's EAN code.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the created TabItem.",
          "readOnly": true,
          "type": "integer"
        },
        "quantity": {
          "description": "The quantity of the TabItem.",
          "readOnly": true,
          "type": "integer"
        },
        "tab_attachment": {
          "description": "A list of AttachmentTab attached to the TabItem.",
          "items": {
            "$ref": "#/definitions/AttachmentTab"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "TabItemShopRead": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount",
          "description": "The money amount of the TabItem.",
          "readOnly": true,
          "type": "object"
        },
        "avatar_attachment": {
          "$ref": "#/definitions/AttachmentPublic",
          "description": "A struct with an AttachmentPublic UUID that used as an avatar for the TabItem.",
          "readOnly": true,
          "type": "object"
        },
        "description": {
          "description": "The TabItem's brief description.",
          "readOnly": true,
          "type": "string"
        },
        "ean_code": {
          "description": "The TabItem's EAN code.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the created TabItem.",
          "readOnly": true,
          "type": "integer"
        },
        "quantity": {
          "description": "The quantity of the TabItem.",
          "readOnly": true,
          "type": "integer"
        },
        "tab_attachment": {
          "description": "A list of AttachmentTab attached to the TabItem.",
          "items": {
            "$ref": "#/definitions/AttachmentTab"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "TabItemShopUpdate": {
      "properties": {
        "id": {
          "description": "The id of the modified TabItem.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "TabListing": {
      "properties": {
        "TabUsageMultiple": {
          "$ref": "#/definitions/TabUsageMultiple",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "TabUsageSingle": {
          "$ref": "#/definitions/TabUsageSingle",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TabQrCodeContentListing": {
      "type": "object"
    },
    "TabRead": {
      "properties": {
        "TabUsageMultiple": {
          "$ref": "#/definitions/TabUsageMultiple",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "TabUsageSingle": {
          "$ref": "#/definitions/TabUsageSingle",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TabResultInquiry": {
      "properties": {
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The payment made for the Tab.",
          "readOnly": true,
          "type": "object"
        },
        "tab": {
          "$ref": "#/definitions/Tab",
          "description": "The Tab details.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TabResultInquiryListing": {
      "properties": {
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The payment made for the Tab.",
          "readOnly": true,
          "type": "object"
        },
        "tab": {
          "$ref": "#/definitions/Tab",
          "description": "The Tab details.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TabResultInquiryRead": {
      "properties": {
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The payment made for the Tab.",
          "readOnly": true,
          "type": "object"
        },
        "tab": {
          "$ref": "#/definitions/Tab",
          "description": "The Tab details.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TabResultResponse": {
      "properties": {
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The payment made for the Tab.",
          "readOnly": true,
          "type": "object"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "tab": {
          "$ref": "#/definitions/Tab",
          "description": "The Tab details.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TabResultResponseListing": {
      "properties": {
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The payment made for the Tab.",
          "readOnly": true,
          "type": "object"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "tab": {
          "$ref": "#/definitions/Tab",
          "description": "The Tab details.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TabResultResponseRead": {
      "properties": {
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The payment made for the Tab.",
          "readOnly": true,
          "type": "object"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "tab": {
          "$ref": "#/definitions/Tab",
          "description": "The Tab details.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TabTextWaitingScreen": {
      "properties": {
        "description": {
          "description": "Tab text",
          "readOnly": false,
          "type": "string"
        },
        "language": {
          "description": "Language of tab text",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TabUsageMultiple": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the party that owns this tab.",
          "readOnly": true,
          "type": "object"
        },
        "allow_amount_higher": {
          "description": "[DEPRECATED] Whether or not a higher amount can be paid.",
          "readOnly": false,
          "type": "boolean"
        },
        "allow_amount_lower": {
          "description": "[DEPRECATED] Whether or not a lower amount can be paid.",
          "readOnly": false,
          "type": "boolean"
        },
        "amount_total": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount of the Tab.",
          "readOnly": false,
          "type": "object"
        },
        "cash_register_location": {
          "$ref": "#/definitions/Geolocation",
          "description": "The location of the cash register that created this tab.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the Tab's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the TabUsageMultiple. Maximum 9000 characters.",
          "readOnly": false,
          "type": "string"
        },
        "expiration": {
          "description": "The moment when this Tab expires.",
          "readOnly": false,
          "type": "string"
        },
        "minimum_age": {
          "description": "The minimum age of the user paying the Tab.",
          "readOnly": false,
          "type": "boolean"
        },
        "qr_code_token": {
          "description": "The token used to redirect mobile devices directly to the bunq app. Because they can't scan a QR code.",
          "readOnly": true,
          "type": "string"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to after paying the Tab.",
          "readOnly": false,
          "type": "string"
        },
        "require_address": {
          "description": "Whether or not an billing and shipping address must be provided when paying the Tab.",
          "readOnly": false,
          "type": "string"
        },
        "status": {
          "description": "The status of the Tab. Can be OPEN, PAYABLE or CLOSED.",
          "readOnly": false,
          "type": "string"
        },
        "tab_attachment": {
          "description": "An array of attachments that describe the tab. Viewable through the GET /tab/{tabid}/attachment/{attachmentid}/content endpoint.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": false,
          "type": "array"
        },
        "tab_item": {
          "description": "The tab items of this tab.",
          "items": {
            "$ref": "#/definitions/TabItem"
          },
          "readOnly": true,
          "type": "array"
        },
        "tab_url": {
          "description": "The URL redirecting user to the tab payment in the bunq app. Only works on mobile devices.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the Tab's last update.",
          "readOnly": true,
          "type": "string"
        },
        "uuid": {
          "description": "The uuid of the created TabUsageMultiple.",
          "readOnly": true,
          "type": "string"
        },
        "visibility": {
          "$ref": "#/definitions/TabVisibility",
          "description": "The visibility of a Tab. A Tab can be visible trough NearPay, the QR code of the CashRegister and its own QR code.",
          "readOnly": false,
          "type": "object"
        },
        "want_tip": {
          "description": "[DEPRECATED] Whether or not the user paying the Tab should be asked if he wants to give a tip. When want_tip is set to true, allow_amount_higher must also be set to true and allow_amount_lower must be false.",
          "readOnly": false,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TabUsageMultipleCreate": {
      "properties": {
        "uuid": {
          "description": "The uuid of the created TabUsageMultiple.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TabUsageMultipleDelete": {
      "type": "object"
    },
    "TabUsageMultipleListing": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the party that owns this tab.",
          "readOnly": true,
          "type": "object"
        },
        "amount_total": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount of the Tab.",
          "readOnly": true,
          "type": "object"
        },
        "cash_register_location": {
          "$ref": "#/definitions/Geolocation",
          "description": "The location of the cash register that created this tab.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the Tab's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the TabUsageMultiple. Maximum 9000 characters.",
          "readOnly": true,
          "type": "string"
        },
        "expiration": {
          "description": "The moment when this Tab expires.",
          "readOnly": true,
          "type": "string"
        },
        "minimum_age": {
          "description": "The minimum age of the user paying the Tab.",
          "readOnly": true,
          "type": "boolean"
        },
        "qr_code_token": {
          "description": "The token used to redirect mobile devices directly to the bunq app. Because they can't scan a QR code.",
          "readOnly": true,
          "type": "string"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to after paying the Tab.",
          "readOnly": true,
          "type": "string"
        },
        "require_address": {
          "description": "Whether or not an billing and shipping address must be provided when paying the Tab.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the Tab. Can be OPEN, PAYABLE or CLOSED.",
          "readOnly": true,
          "type": "string"
        },
        "tab_attachment": {
          "description": "An array of attachments that describe the tab. Viewable through the GET /tab/{tabid}/attachment/{attachmentid}/content endpoint.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": true,
          "type": "array"
        },
        "tab_item": {
          "description": "The tab items of this tab.",
          "items": {
            "$ref": "#/definitions/TabItem"
          },
          "readOnly": true,
          "type": "array"
        },
        "tab_url": {
          "description": "The URL redirecting user to the tab payment in the bunq app. Only works on mobile devices.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the Tab's last update.",
          "readOnly": true,
          "type": "string"
        },
        "uuid": {
          "description": "The uuid of the created TabUsageMultiple.",
          "readOnly": true,
          "type": "string"
        },
        "visibility": {
          "$ref": "#/definitions/TabVisibility",
          "description": "The visibility of a Tab. A Tab can be visible trough NearPay, the QR code of the CashRegister and its own QR code.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TabUsageMultipleRead": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the party that owns this tab.",
          "readOnly": true,
          "type": "object"
        },
        "amount_total": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount of the Tab.",
          "readOnly": true,
          "type": "object"
        },
        "cash_register_location": {
          "$ref": "#/definitions/Geolocation",
          "description": "The location of the cash register that created this tab.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the Tab's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the TabUsageMultiple. Maximum 9000 characters.",
          "readOnly": true,
          "type": "string"
        },
        "expiration": {
          "description": "The moment when this Tab expires.",
          "readOnly": true,
          "type": "string"
        },
        "minimum_age": {
          "description": "The minimum age of the user paying the Tab.",
          "readOnly": true,
          "type": "boolean"
        },
        "qr_code_token": {
          "description": "The token used to redirect mobile devices directly to the bunq app. Because they can't scan a QR code.",
          "readOnly": true,
          "type": "string"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to after paying the Tab.",
          "readOnly": true,
          "type": "string"
        },
        "require_address": {
          "description": "Whether or not an billing and shipping address must be provided when paying the Tab.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the Tab. Can be OPEN, PAYABLE or CLOSED.",
          "readOnly": true,
          "type": "string"
        },
        "tab_attachment": {
          "description": "An array of attachments that describe the tab. Viewable through the GET /tab/{tabid}/attachment/{attachmentid}/content endpoint.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": true,
          "type": "array"
        },
        "tab_item": {
          "description": "The tab items of this tab.",
          "items": {
            "$ref": "#/definitions/TabItem"
          },
          "readOnly": true,
          "type": "array"
        },
        "tab_url": {
          "description": "The URL redirecting user to the tab payment in the bunq app. Only works on mobile devices.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the Tab's last update.",
          "readOnly": true,
          "type": "string"
        },
        "uuid": {
          "description": "The uuid of the created TabUsageMultiple.",
          "readOnly": true,
          "type": "string"
        },
        "visibility": {
          "$ref": "#/definitions/TabVisibility",
          "description": "The visibility of a Tab. A Tab can be visible trough NearPay, the QR code of the CashRegister and its own QR code.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TabUsageMultipleUpdate": {
      "properties": {
        "uuid": {
          "description": "The uuid of the modified TabUsageMultiple.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TabUsageSingle": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the party that owns this tab.",
          "readOnly": true,
          "type": "object"
        },
        "allow_amount_higher": {
          "description": "[DEPRECATED] Whether or not a higher amount can be paid.",
          "readOnly": false,
          "type": "boolean"
        },
        "allow_amount_lower": {
          "description": "[DEPRECATED] Whether or not a lower amount can be paid.",
          "readOnly": false,
          "type": "boolean"
        },
        "amount_paid": {
          "$ref": "#/definitions/Amount",
          "description": "The amount that has been paid for this Tab.",
          "readOnly": true,
          "type": "object"
        },
        "amount_total": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount of the Tab.",
          "readOnly": false,
          "type": "object"
        },
        "cash_register_location": {
          "$ref": "#/definitions/Geolocation",
          "description": "The location of the cash register that created this tab.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the Tab's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the TabUsageMultiple. Maximum 9000 characters.",
          "readOnly": false,
          "type": "string"
        },
        "expiration": {
          "description": "The moment when this Tab expires.",
          "readOnly": false,
          "type": "string"
        },
        "merchant_reference": {
          "description": "The merchant reference of the Tab, as defined by the owner.",
          "readOnly": false,
          "type": "string"
        },
        "minimum_age": {
          "description": "The minimum age of the user paying the Tab.",
          "readOnly": false,
          "type": "boolean"
        },
        "qr_code_token": {
          "description": "The token used to redirect mobile devices directly to the bunq app. Because they can't scan a QR code.",
          "readOnly": true,
          "type": "string"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to after paying the Tab.",
          "readOnly": false,
          "type": "string"
        },
        "require_address": {
          "description": "Whether or not an billing and shipping address must be provided when paying the Tab.",
          "readOnly": false,
          "type": "string"
        },
        "status": {
          "description": "The status of the Tab. Can be OPEN, WAITING_FOR_PAYMENT, PAID or CANCELED.",
          "readOnly": false,
          "type": "string"
        },
        "tab_attachment": {
          "description": "An array of attachments that describe the tab. Uploaded through the POST /user/{userid}/attachment-tab endpoint.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": false,
          "type": "array"
        },
        "tab_item": {
          "description": "The tab items of this tab.",
          "items": {
            "$ref": "#/definitions/TabItem"
          },
          "readOnly": true,
          "type": "array"
        },
        "tab_url": {
          "description": "The URL redirecting user to the tab payment in the bunq app. Only works on mobile devices.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the Tab's last update.",
          "readOnly": true,
          "type": "string"
        },
        "uuid": {
          "description": "The uuid of the created TabUsageSingle.",
          "readOnly": true,
          "type": "string"
        },
        "visibility": {
          "$ref": "#/definitions/TabVisibility",
          "description": "The visibility of a Tab. A Tab can be visible trough NearPay, the QR code of the CashRegister and its own QR code.",
          "readOnly": false,
          "type": "object"
        },
        "want_tip": {
          "description": "[DEPRECATED] Whether or not the user paying the Tab should be asked if he wants to give a tip. When want_tip is set to true, allow_amount_higher must also be set to true and allow_amount_lower must be false.",
          "readOnly": false,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TabUsageSingleCreate": {
      "properties": {
        "uuid": {
          "description": "The uuid of the created TabUsageSingle.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TabUsageSingleDelete": {
      "type": "object"
    },
    "TabUsageSingleListing": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the party that owns this tab.",
          "readOnly": true,
          "type": "object"
        },
        "amount_paid": {
          "$ref": "#/definitions/Amount",
          "description": "The amount that has been paid for this Tab.",
          "readOnly": true,
          "type": "object"
        },
        "amount_total": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount of the Tab.",
          "readOnly": true,
          "type": "object"
        },
        "cash_register_location": {
          "$ref": "#/definitions/Geolocation",
          "description": "The location of the cash register that created this tab.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the Tab's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the TabUsageMultiple. Maximum 9000 characters.",
          "readOnly": true,
          "type": "string"
        },
        "expiration": {
          "description": "The moment when this Tab expires.",
          "readOnly": true,
          "type": "string"
        },
        "merchant_reference": {
          "description": "The merchant reference of the Tab, as defined by the owner.",
          "readOnly": true,
          "type": "string"
        },
        "minimum_age": {
          "description": "The minimum age of the user paying the Tab.",
          "readOnly": true,
          "type": "boolean"
        },
        "qr_code_token": {
          "description": "The token used to redirect mobile devices directly to the bunq app. Because they can't scan a QR code.",
          "readOnly": true,
          "type": "string"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to after paying the Tab.",
          "readOnly": true,
          "type": "string"
        },
        "require_address": {
          "description": "Whether or not an billing and shipping address must be provided when paying the Tab.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the Tab. Can be OPEN, WAITING_FOR_PAYMENT, PAID or CANCELED.",
          "readOnly": true,
          "type": "string"
        },
        "tab_attachment": {
          "description": "An array of attachments that describe the tab. Uploaded through the POST /user/{userid}/attachment-tab endpoint.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": true,
          "type": "array"
        },
        "tab_item": {
          "description": "The tab items of this tab.",
          "items": {
            "$ref": "#/definitions/TabItem"
          },
          "readOnly": true,
          "type": "array"
        },
        "tab_url": {
          "description": "The URL redirecting user to the tab payment in the bunq app. Only works on mobile devices.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the Tab's last update.",
          "readOnly": true,
          "type": "string"
        },
        "uuid": {
          "description": "The uuid of the created TabUsageSingle.",
          "readOnly": true,
          "type": "string"
        },
        "visibility": {
          "$ref": "#/definitions/TabVisibility",
          "description": "The visibility of a Tab. A Tab can be visible trough NearPay, the QR code of the CashRegister and its own QR code.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TabUsageSingleRead": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The alias of the party that owns this tab.",
          "readOnly": true,
          "type": "object"
        },
        "amount_paid": {
          "$ref": "#/definitions/Amount",
          "description": "The amount that has been paid for this Tab.",
          "readOnly": true,
          "type": "object"
        },
        "amount_total": {
          "$ref": "#/definitions/Amount",
          "description": "The total amount of the Tab.",
          "readOnly": true,
          "type": "object"
        },
        "cash_register_location": {
          "$ref": "#/definitions/Geolocation",
          "description": "The location of the cash register that created this tab.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the Tab's creation.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the TabUsageMultiple. Maximum 9000 characters.",
          "readOnly": true,
          "type": "string"
        },
        "expiration": {
          "description": "The moment when this Tab expires.",
          "readOnly": true,
          "type": "string"
        },
        "merchant_reference": {
          "description": "The merchant reference of the Tab, as defined by the owner.",
          "readOnly": true,
          "type": "string"
        },
        "minimum_age": {
          "description": "The minimum age of the user paying the Tab.",
          "readOnly": true,
          "type": "boolean"
        },
        "qr_code_token": {
          "description": "The token used to redirect mobile devices directly to the bunq app. Because they can't scan a QR code.",
          "readOnly": true,
          "type": "string"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to after paying the Tab.",
          "readOnly": true,
          "type": "string"
        },
        "require_address": {
          "description": "Whether or not an billing and shipping address must be provided when paying the Tab.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the Tab. Can be OPEN, WAITING_FOR_PAYMENT, PAID or CANCELED.",
          "readOnly": true,
          "type": "string"
        },
        "tab_attachment": {
          "description": "An array of attachments that describe the tab. Uploaded through the POST /user/{userid}/attachment-tab endpoint.",
          "items": {
            "$ref": "#/definitions/BunqId"
          },
          "readOnly": true,
          "type": "array"
        },
        "tab_item": {
          "description": "The tab items of this tab.",
          "items": {
            "$ref": "#/definitions/TabItem"
          },
          "readOnly": true,
          "type": "array"
        },
        "tab_url": {
          "description": "The URL redirecting user to the tab payment in the bunq app. Only works on mobile devices.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the Tab's last update.",
          "readOnly": true,
          "type": "string"
        },
        "uuid": {
          "description": "The uuid of the created TabUsageSingle.",
          "readOnly": true,
          "type": "string"
        },
        "visibility": {
          "$ref": "#/definitions/TabVisibility",
          "description": "The visibility of a Tab. A Tab can be visible trough NearPay, the QR code of the CashRegister and its own QR code.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TabUsageSingleUpdate": {
      "properties": {
        "uuid": {
          "description": "The uuid of the modified TabUsageSingle.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TabVisibility": {
      "properties": {
        "cash_register_qr_code": {
          "description": "When true the tab will be linked to the ACTIVE cash registers QR code.",
          "readOnly": false,
          "type": "boolean"
        },
        "location": {
          "$ref": "#/definitions/Geolocation",
          "description": "The location of the Tab in NearPay.",
          "readOnly": false,
          "type": "object"
        },
        "tab_qr_code": {
          "description": "When true the tab will be visible through its own QR code. Use ../tab/{tab-id}/qr-code-content to get the raw content of this QR code",
          "readOnly": false,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TaxResident": {
      "properties": {
        "country": {
          "description": "The country of the tax number.",
          "readOnly": false,
          "type": "string"
        },
        "status": {
          "description": "The status of the tax number. Either CONFIRMED or UNCONFIRMED.",
          "readOnly": false,
          "type": "string"
        },
        "tax_number": {
          "description": "The tax number.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TokenQrRequestIdeal": {
      "properties": {
        "token": {
          "description": "The token passed from a site or read from a QR code.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "token"
      ],
      "type": "object"
    },
    "TokenQrRequestIdealCreate": {
      "properties": {
        "address_billing": {
          "$ref": "#/definitions/Address",
          "description": "The billing address provided by the accepting user if an address was requested.",
          "readOnly": true,
          "type": "object"
        },
        "address_shipping": {
          "$ref": "#/definitions/Address",
          "description": "The shipping address provided by the accepting user if an address was requested.",
          "readOnly": true,
          "type": "object"
        },
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount this RequestResponse was received on.",
          "readOnly": true,
          "type": "object"
        },
        "amount_inquired": {
          "$ref": "#/definitions/Amount",
          "description": "The requested Amount.",
          "readOnly": true,
          "type": "object"
        },
        "amount_responded": {
          "$ref": "#/definitions/Amount",
          "description": "The Amount the RequestResponse was accepted with.",
          "readOnly": true,
          "type": "object"
        },
        "attachment": {
          "description": "The Attachments attached to the RequestResponse.",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "readOnly": true,
          "type": "array"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount with the public information of the MonetaryAccount that is requesting money with this RequestResponse.",
          "readOnly": true,
          "type": "object"
        },
        "description": {
          "description": "The description for the RequestResponse provided by the requesting party. Maximum 9000 characters.",
          "readOnly": true,
          "type": "string"
        },
        "eligible_whitelist_id": {
          "description": "The whitelist id for this action or null.",
          "readOnly": true,
          "type": "integer"
        },
        "geolocation": {
          "$ref": "#/definitions/Geolocation",
          "description": "The Geolocation where the RequestResponse was created.",
          "readOnly": true,
          "type": "object"
        },
        "id": {
          "description": "The id of the RequestResponse.",
          "readOnly": true,
          "type": "integer"
        },
        "minimum_age": {
          "description": "The minimum age the user accepting the RequestResponse must have.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_id": {
          "description": "The id of the MonetaryAccount the RequestResponse was received on.",
          "readOnly": true,
          "type": "integer"
        },
        "redirect_url": {
          "description": "The URL which the user is sent to after accepting or rejecting the Request.",
          "readOnly": true,
          "type": "string"
        },
        "require_address": {
          "description": "Whether or not an address must be provided on accept.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the created RequestResponse. Can only be PENDING.",
          "readOnly": true,
          "type": "string"
        },
        "sub_type": {
          "description": "The subtype of the RequestResponse. Can be only be NONE.",
          "readOnly": true,
          "type": "string"
        },
        "time_expiry": {
          "description": "The timestamp of when the RequestResponse expired or will expire.",
          "readOnly": true,
          "type": "string"
        },
        "time_responded": {
          "description": "The timestamp of when the RequestResponse was responded to.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the RequestResponse. Can be only be IDEAL.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TokenQrRequestSofort": {
      "properties": {
        "token": {
          "description": "The token passed from a site or read from a QR code.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "token"
      ],
      "type": "object"
    },
    "TokenQrRequestSofortCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransferwiseAccountQuote": {
      "properties": {
        "country": {
          "description": "The country of the receiving account.",
          "readOnly": false,
          "type": "string"
        },
        "detail": {
          "description": "The fields which were specified as \"required\" and have since been filled by the user. Always provide the full list.",
          "items": {
            "$ref": "#/definitions/TransferwiseRequirementField"
          },
          "readOnly": false,
          "type": "array"
        },
        "name_account_holder": {
          "description": "The name of the account holder.",
          "readOnly": false,
          "type": "string"
        },
        "type": {
          "description": "The chosen recipient account type. The possible options are provided dynamically in the response endpoint.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "name_account_holder",
        "type"
      ],
      "type": "object"
    },
    "TransferwiseAccountQuoteCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransferwiseAccountQuoteDelete": {
      "type": "object"
    },
    "TransferwiseAccountQuoteListing": {
      "properties": {
        "account_id": {
          "description": "Transferwise's id of the account.",
          "readOnly": true,
          "type": "string"
        },
        "account_number": {
          "description": "The account number.",
          "readOnly": true,
          "type": "string"
        },
        "bank_code": {
          "description": "The bank code.",
          "readOnly": true,
          "type": "string"
        },
        "country": {
          "description": "The country of the account.",
          "readOnly": true,
          "type": "string"
        },
        "currency": {
          "description": "The currency the account.",
          "readOnly": true,
          "type": "string"
        },
        "name_account_holder": {
          "description": "The name of the account holder.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferwiseAccountQuoteRead": {
      "properties": {
        "account_id": {
          "description": "Transferwise's id of the account.",
          "readOnly": true,
          "type": "string"
        },
        "account_number": {
          "description": "The account number.",
          "readOnly": true,
          "type": "string"
        },
        "bank_code": {
          "description": "The bank code.",
          "readOnly": true,
          "type": "string"
        },
        "country": {
          "description": "The country of the account.",
          "readOnly": true,
          "type": "string"
        },
        "currency": {
          "description": "The currency the account.",
          "readOnly": true,
          "type": "string"
        },
        "name_account_holder": {
          "description": "The name of the account holder.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferwiseAccountRequirement": {
      "properties": {
        "country": {
          "description": "The country of the receiving account.",
          "readOnly": false,
          "type": "string"
        },
        "detail": {
          "description": "The fields which were specified as \"required\" and have since been filled by the user. Always provide the full list.",
          "items": {
            "$ref": "#/definitions/TransferwiseRequirementField"
          },
          "readOnly": false,
          "type": "array"
        },
        "name_account_holder": {
          "description": "The name of the account holder.",
          "readOnly": false,
          "type": "string"
        },
        "type": {
          "description": "The chosen recipient account type. The possible options are provided dynamically in the response endpoint.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "name_account_holder",
        "type"
      ],
      "type": "object"
    },
    "TransferwiseAccountRequirementCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransferwiseAccountRequirementListing": {
      "properties": {
        "fields": {
          "description": "The fields which the user needs to fill.",
          "items": {
            "$ref": "#/definitions/TransferwiseRequirementField"
          },
          "readOnly": true,
          "type": "array"
        },
        "label": {
          "description": "The label of the possible recipient account type to show to the user.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "A possible recipient account type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferwiseCurrencyListing": {
      "properties": {
        "country": {
          "description": "The country code associated with the currency.",
          "readOnly": true,
          "type": "string"
        },
        "currency": {
          "description": "The currency code.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The currency name.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferwiseQuote": {
      "properties": {
        "amount_fee": {
          "$ref": "#/definitions/Amount",
          "description": "The fee amount.",
          "readOnly": true,
          "type": "object"
        },
        "amount_source": {
          "$ref": "#/definitions/Amount",
          "description": "The source amount.",
          "readOnly": false,
          "type": "object"
        },
        "amount_target": {
          "$ref": "#/definitions/Amount",
          "description": "The target amount.",
          "readOnly": false,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the quote's creation.",
          "readOnly": true,
          "type": "string"
        },
        "currency_source": {
          "description": "The source currency.",
          "readOnly": false,
          "type": "string"
        },
        "currency_target": {
          "description": "The target currency.",
          "readOnly": false,
          "type": "string"
        },
        "id": {
          "description": "The id of the quote.",
          "readOnly": true,
          "type": "integer"
        },
        "quote_id": {
          "description": "The quote id Transferwise needs.",
          "readOnly": true,
          "type": "string"
        },
        "rate": {
          "description": "The rate.",
          "readOnly": true,
          "type": "string"
        },
        "time_delivery_estimate": {
          "description": "The estimated delivery time.",
          "readOnly": true,
          "type": "string"
        },
        "time_expiry": {
          "description": "The expiration timestamp of the quote.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the quote's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "currency_source",
        "currency_target"
      ],
      "type": "object"
    },
    "TransferwiseQuoteCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransferwiseQuoteRead": {
      "properties": {
        "amount_fee": {
          "$ref": "#/definitions/Amount",
          "description": "The fee amount.",
          "readOnly": true,
          "type": "object"
        },
        "amount_source": {
          "$ref": "#/definitions/Amount",
          "description": "The source amount.",
          "readOnly": true,
          "type": "object"
        },
        "amount_target": {
          "$ref": "#/definitions/Amount",
          "description": "The target amount.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the quote's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the quote.",
          "readOnly": true,
          "type": "integer"
        },
        "quote_id": {
          "description": "The quote id Transferwise needs.",
          "readOnly": true,
          "type": "string"
        },
        "rate": {
          "description": "The rate.",
          "readOnly": true,
          "type": "string"
        },
        "time_delivery_estimate": {
          "description": "The estimated delivery time.",
          "readOnly": true,
          "type": "string"
        },
        "time_expiry": {
          "description": "The expiration timestamp of the quote.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the quote's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferwiseQuoteTemporary": {
      "properties": {
        "amount_source": {
          "$ref": "#/definitions/Amount",
          "description": "The source amount. Required if target amount is left empty.",
          "readOnly": false,
          "type": "object"
        },
        "amount_target": {
          "$ref": "#/definitions/Amount",
          "description": "The target amount. Required if source amount is left empty.",
          "readOnly": false,
          "type": "object"
        },
        "currency_source": {
          "description": "The source currency.",
          "readOnly": false,
          "type": "string"
        },
        "currency_target": {
          "description": "The target currency.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "currency_source",
        "currency_target"
      ],
      "type": "object"
    },
    "TransferwiseQuoteTemporaryCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransferwiseQuoteTemporaryRead": {
      "properties": {
        "amount_source": {
          "$ref": "#/definitions/Amount",
          "description": "The source amount.",
          "readOnly": true,
          "type": "object"
        },
        "amount_target": {
          "$ref": "#/definitions/Amount",
          "description": "The target amount.",
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "description": "The timestamp of the note's creation.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the quote.",
          "readOnly": true,
          "type": "integer"
        },
        "quote_id": {
          "description": "The quote id Transferwise needs. Will always be null for temporary quotes.",
          "readOnly": true,
          "type": "string"
        },
        "rate": {
          "description": "The rate.",
          "readOnly": true,
          "type": "string"
        },
        "time_expiry": {
          "description": "The expiration timestamp of the quote. Will always be null for temporary quotes.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the note's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferwiseRequirementField": {
      "properties": {
        "group": {
          "$ref": "#/definitions/TransferwiseRequirementFieldGroup",
          "description": "The field group.",
          "readOnly": true,
          "type": "object"
        },
        "key": {
          "description": "The name of the required field.",
          "readOnly": false,
          "type": "string"
        },
        "name": {
          "description": "The descriptive label of the field.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "The value of the required field.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "key",
        "value"
      ],
      "type": "object"
    },
    "TransferwiseRequirementFieldGroup": {
      "properties": {
        "display_format": {
          "description": "Formatting mask to guide user input.",
          "readOnly": true,
          "type": "string"
        },
        "example": {
          "description": "An example value for this field.",
          "readOnly": true,
          "type": "string"
        },
        "key": {
          "description": "The key of the field. This is the value to send as input.",
          "readOnly": true,
          "type": "string"
        },
        "max_length": {
          "description": "The maximum length of the field's value.",
          "readOnly": true,
          "type": "string"
        },
        "min_length": {
          "description": "The minimum length of the field's value.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The field name.",
          "readOnly": true,
          "type": "string"
        },
        "refresh_requirements_on_change": {
          "description": "Indicates that any changes in this field affect the requirements, if this field is changed, the requirements endpoint must be called again to recheck if there are any additional requirements.",
          "readOnly": true,
          "type": "boolean"
        },
        "required": {
          "description": "Whether or not the field is required.",
          "readOnly": true,
          "type": "boolean"
        },
        "type": {
          "description": "The field's input type: \"text\", \"select\" or \"radio\".",
          "readOnly": true,
          "type": "string"
        },
        "validation_async": {
          "$ref": "#/definitions/TransferwiseRequirementFieldGroupValidationAsync",
          "description": "Details of an endpoint which may be used to validate the user input.",
          "readOnly": true,
          "type": "object"
        },
        "validation_regexp": {
          "description": "A regular expression which may be used to validate the user input.",
          "readOnly": true,
          "type": "string"
        },
        "values_allowed": {
          "$ref": "#/definitions/TransferwiseRequirementFieldGroupValuesAllowed",
          "description": "Shows which values are allowed for fields of type \"select\" or \"radio\".",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransferwiseRequirementFieldGroupValidationAsync": {
      "properties": {
        "params": {
          "$ref": "#/definitions/TransferwiseRequirementFieldGroupValidationAsyncParams",
          "description": "The parameters to send when validating user input.",
          "readOnly": true,
          "type": "object"
        },
        "url": {
          "description": "The url to be used to validate user input.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferwiseRequirementFieldGroupValidationAsyncParams": {
      "properties": {
        "key": {
          "description": "The parameter key.",
          "readOnly": true,
          "type": "string"
        },
        "parameter_name": {
          "description": "The parameter label.",
          "readOnly": true,
          "type": "string"
        },
        "required": {
          "description": "Shows whether the parameter is required or not.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TransferwiseRequirementFieldGroupValuesAllowed": {
      "properties": {
        "key": {
          "description": "The key.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The label.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferwiseTransfer": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of 'this' (party) side of the Payment.",
          "readOnly": true,
          "type": "object"
        },
        "amount_source": {
          "$ref": "#/definitions/Amount",
          "description": "The source amount.",
          "readOnly": true,
          "type": "object"
        },
        "amount_target": {
          "$ref": "#/definitions/Amount",
          "description": "The target amount.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of the other (counterparty) side of the Payment.",
          "readOnly": true,
          "type": "object"
        },
        "monetary_account_id": {
          "description": "The id of the monetary account the payment should be made from.",
          "readOnly": false,
          "type": "string"
        },
        "pay_in_reference": {
          "description": "The Pay-In reference of the payment.",
          "readOnly": true,
          "type": "string"
        },
        "quote": {
          "$ref": "#/definitions/TransferwiseQuote",
          "description": "The quote details used to created the payment.",
          "readOnly": true,
          "type": "object"
        },
        "rate": {
          "description": "The rate of the payment.",
          "readOnly": true,
          "type": "string"
        },
        "recipient_id": {
          "description": "The id of the target account.",
          "readOnly": false,
          "type": "string"
        },
        "reference": {
          "description": "The reference of the payment.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status.",
          "readOnly": true,
          "type": "string"
        },
        "status_transferwise": {
          "description": "The status as Transferwise reports it.",
          "readOnly": true,
          "type": "string"
        },
        "status_transferwise_issue": {
          "description": "A status to indicatie if Transferwise has an issue with this payment and requires more information.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The subStatus.",
          "readOnly": true,
          "type": "string"
        },
        "time_delivery_estimate": {
          "description": "The estimated delivery time.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "monetary_account_id",
        "recipient_id"
      ],
      "type": "object"
    },
    "TransferwiseTransferCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransferwiseTransferListing": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of 'this' (party) side of the Payment.",
          "readOnly": true,
          "type": "object"
        },
        "amount_source": {
          "$ref": "#/definitions/Amount",
          "description": "The source amount.",
          "readOnly": true,
          "type": "object"
        },
        "amount_target": {
          "$ref": "#/definitions/Amount",
          "description": "The target amount.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of the other (counterparty) side of the Payment.",
          "readOnly": true,
          "type": "object"
        },
        "pay_in_reference": {
          "description": "The Pay-In reference of the payment.",
          "readOnly": true,
          "type": "string"
        },
        "quote": {
          "$ref": "#/definitions/TransferwiseQuote",
          "description": "The quote details used to created the payment.",
          "readOnly": true,
          "type": "object"
        },
        "rate": {
          "description": "The rate of the payment.",
          "readOnly": true,
          "type": "string"
        },
        "reference": {
          "description": "The reference of the payment.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status.",
          "readOnly": true,
          "type": "string"
        },
        "status_transferwise": {
          "description": "The status as Transferwise reports it.",
          "readOnly": true,
          "type": "string"
        },
        "status_transferwise_issue": {
          "description": "A status to indicatie if Transferwise has an issue with this payment and requires more information.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The subStatus.",
          "readOnly": true,
          "type": "string"
        },
        "time_delivery_estimate": {
          "description": "The estimated delivery time.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferwiseTransferRead": {
      "properties": {
        "alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of 'this' (party) side of the Payment.",
          "readOnly": true,
          "type": "object"
        },
        "amount_source": {
          "$ref": "#/definitions/Amount",
          "description": "The source amount.",
          "readOnly": true,
          "type": "object"
        },
        "amount_target": {
          "$ref": "#/definitions/Amount",
          "description": "The target amount.",
          "readOnly": true,
          "type": "object"
        },
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The LabelMonetaryAccount containing the public information of the other (counterparty) side of the Payment.",
          "readOnly": true,
          "type": "object"
        },
        "pay_in_reference": {
          "description": "The Pay-In reference of the payment.",
          "readOnly": true,
          "type": "string"
        },
        "quote": {
          "$ref": "#/definitions/TransferwiseQuote",
          "description": "The quote details used to created the payment.",
          "readOnly": true,
          "type": "object"
        },
        "rate": {
          "description": "The rate of the payment.",
          "readOnly": true,
          "type": "string"
        },
        "reference": {
          "description": "The reference of the payment.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status.",
          "readOnly": true,
          "type": "string"
        },
        "status_transferwise": {
          "description": "The status as Transferwise reports it.",
          "readOnly": true,
          "type": "string"
        },
        "status_transferwise_issue": {
          "description": "A status to indicatie if Transferwise has an issue with this payment and requires more information.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The subStatus.",
          "readOnly": true,
          "type": "string"
        },
        "time_delivery_estimate": {
          "description": "The estimated delivery time.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferwiseTransferRequirement": {
      "properties": {
        "detail": {
          "description": "The fields which were specified as \"required\" and have since been filled by the user. Always provide the full list.",
          "items": {
            "$ref": "#/definitions/TransferwiseRequirementField"
          },
          "readOnly": false,
          "type": "array"
        },
        "recipient_id": {
          "description": "The id of the target account.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "recipient_id"
      ],
      "type": "object"
    },
    "TransferwiseTransferRequirementCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransferwiseUser": {
      "properties": {
        "oauth_code": {
          "description": "The OAuth code returned by Transferwise we should be using to gain access to the user's Transferwise account.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferwiseUserCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransferwiseUserListing": {
      "properties": {
        "created": {
          "description": "The timestamp of the TransferwiseUser's creation.",
          "readOnly": true,
          "type": "string"
        },
        "email": {
          "description": "The email the user is registered with at TransferWise.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the TransferwiseUser.",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "The name the user is registered with at TransferWise.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the TransferwiseUser's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TreeProgressListing": {
      "properties": {
        "label_user": {
          "$ref": "#/definitions/LabelUser",
          "description": "The label of the user the progress belongs to.",
          "readOnly": true,
          "type": "object"
        },
        "number_of_tree": {
          "description": "The number of trees this user and all users have planted.",
          "readOnly": true,
          "type": "integer"
        },
        "progress_tree_next": {
          "description": "The progress towards the next tree.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Ubo": {
      "properties": {
        "date_of_birth": {
          "description": "The date of birth of the ultimate beneficiary owner.",
          "readOnly": false,
          "type": "string"
        },
        "name": {
          "description": "The name of the ultimate beneficiary owner.",
          "readOnly": false,
          "type": "string"
        },
        "nationality": {
          "description": "The nationality of the ultimate beneficiary owner.",
          "readOnly": false,
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserApiKey": {
      "properties": {
        "created": {
          "description": "The timestamp of the user object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "granted_by_user": {
          "$ref": "#/definitions/UserApiKeyAnchoredUser",
          "description": "The user who granted access.",
          "readOnly": true,
          "type": "object"
        },
        "id": {
          "description": "The id of the user.",
          "readOnly": true,
          "type": "integer"
        },
        "requested_by_user": {
          "$ref": "#/definitions/UserApiKeyAnchoredUser",
          "description": "The user who requested access.",
          "readOnly": true,
          "type": "object"
        },
        "updated": {
          "description": "The timestamp of the user object's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserApiKeyAnchoredUser": {
      "properties": {
        "UserCompany": {
          "$ref": "#/definitions/UserCompany",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "UserPaymentServiceProvider": {
          "$ref": "#/definitions/UserPaymentServiceProvider",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "UserPerson": {
          "$ref": "#/definitions/UserPerson",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserCompany": {
      "properties": {
        "address_main": {
          "$ref": "#/definitions/Address",
          "description": "The company's main address.",
          "readOnly": false,
          "type": "object"
        },
        "address_postal": {
          "$ref": "#/definitions/Address",
          "description": "The company's postal address.",
          "readOnly": false,
          "type": "object"
        },
        "alias": {
          "description": "The aliases of the account.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": true,
          "type": "array"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The company's avatar.",
          "readOnly": true,
          "type": "object"
        },
        "avatar_uuid": {
          "description": "The public UUID of the company's avatar.",
          "readOnly": false,
          "type": "string"
        },
        "billing_contract": {
          "description": "The subscription of the company.",
          "items": {
            "$ref": "#/definitions/BillingContractSubscription"
          },
          "readOnly": true,
          "type": "array"
        },
        "chamber_of_commerce_number": {
          "description": "The company's chamber of commerce number.",
          "readOnly": false,
          "type": "string"
        },
        "counter_bank_iban": {
          "description": "The company's other bank account IBAN, through which we verify it.",
          "readOnly": true,
          "type": "string"
        },
        "country": {
          "description": "The country as an ISO 3166-1 alpha-2 country code.",
          "readOnly": false,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the company object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "The customer profile of the company.",
          "readOnly": true,
          "type": "object"
        },
        "customer_limit": {
          "$ref": "#/definitions/CustomerLimit",
          "description": "The customer limits of the company.",
          "readOnly": true,
          "type": "object"
        },
        "daily_limit_without_confirmation_login": {
          "$ref": "#/definitions/Amount",
          "description": "The amount the company can pay in the session without asking for credentials.",
          "readOnly": false,
          "type": "object"
        },
        "deny_reason": {
          "description": "The user deny reason.",
          "readOnly": true,
          "type": "string"
        },
        "director_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The existing bunq alias for the company's primary director.",
          "readOnly": true,
          "type": "object"
        },
        "directors": {
          "description": "The existing bunq aliases for the company's directors.",
          "items": {
            "$ref": "#/definitions/LabelUser"
          },
          "readOnly": true,
          "type": "array"
        },
        "display_name": {
          "description": "The company's display name.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the modified company.",
          "readOnly": true,
          "type": "integer"
        },
        "language": {
          "description": "The person's preferred language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
          "readOnly": false,
          "type": "string"
        },
        "legal_form": {
          "description": "The company's legal form.",
          "readOnly": false,
          "type": "string"
        },
        "name": {
          "description": "The company name.",
          "readOnly": false,
          "type": "string"
        },
        "notification_filters": {
          "description": "The types of notifications that will result in a push notification or URL callback for this UserCompany.",
          "items": {
            "$ref": "#/definitions/NotificationFilter"
          },
          "readOnly": true,
          "type": "array"
        },
        "public_nick_name": {
          "description": "The company's public nick name.",
          "readOnly": false,
          "type": "string"
        },
        "public_uuid": {
          "description": "The company's public UUID.",
          "readOnly": true,
          "type": "string"
        },
        "region": {
          "description": "The person's preferred region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
          "readOnly": false,
          "type": "string"
        },
        "relations": {
          "description": "The relations for this user.",
          "items": {
            "$ref": "#/definitions/RelationUser"
          },
          "readOnly": true,
          "type": "array"
        },
        "sector_of_industry": {
          "description": "The sector of industry.",
          "readOnly": true,
          "type": "string"
        },
        "session_timeout": {
          "description": "The setting for the session timeout of the company in seconds.",
          "readOnly": false,
          "type": "integer"
        },
        "status": {
          "description": "The user status. Can be: ACTIVE, SIGNUP, RECOVERY.",
          "readOnly": false,
          "type": "string"
        },
        "sub_status": {
          "description": "The user sub-status. Can be: NONE, FACE_RESET, APPROVAL, APPROVAL_DIRECTOR, APPROVAL_PARENT, APPROVAL_SUPPORT, COUNTER_IBAN, IDEAL or SUBMIT.",
          "readOnly": false,
          "type": "string"
        },
        "type_of_business_entity": {
          "description": "The type of business entity.",
          "readOnly": true,
          "type": "string"
        },
        "ubo": {
          "description": "The names of the company's ultimate beneficiary owners. Minimum zero, maximum four.",
          "items": {
            "$ref": "#/definitions/Ubo"
          },
          "readOnly": false,
          "type": "array"
        },
        "updated": {
          "description": "The timestamp of the company object's last update.",
          "readOnly": true,
          "type": "string"
        },
        "version_terms_of_service": {
          "description": "The version of the terms of service accepted by the user.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserCompanyNameListing": {
      "properties": {
        "name_array": {
          "description": "All known (trade) names for a user company.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "UserCompanyRead": {
      "properties": {
        "address_main": {
          "$ref": "#/definitions/Address",
          "description": "The company's main address.",
          "readOnly": true,
          "type": "object"
        },
        "address_postal": {
          "$ref": "#/definitions/Address",
          "description": "The company's postal address.",
          "readOnly": true,
          "type": "object"
        },
        "alias": {
          "description": "The aliases of the account.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": true,
          "type": "array"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The company's avatar.",
          "readOnly": true,
          "type": "object"
        },
        "billing_contract": {
          "description": "The subscription of the company.",
          "items": {
            "$ref": "#/definitions/BillingContractSubscription"
          },
          "readOnly": true,
          "type": "array"
        },
        "chamber_of_commerce_number": {
          "description": "The company's chamber of commerce number.",
          "readOnly": true,
          "type": "string"
        },
        "counter_bank_iban": {
          "description": "The company's other bank account IBAN, through which we verify it.",
          "readOnly": true,
          "type": "string"
        },
        "country": {
          "description": "The country as an ISO 3166-1 alpha-2 country code.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the company object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "The customer profile of the company.",
          "readOnly": true,
          "type": "object"
        },
        "customer_limit": {
          "$ref": "#/definitions/CustomerLimit",
          "description": "The customer limits of the company.",
          "readOnly": true,
          "type": "object"
        },
        "daily_limit_without_confirmation_login": {
          "$ref": "#/definitions/Amount",
          "description": "The amount the company can pay in the session without asking for credentials.",
          "readOnly": true,
          "type": "object"
        },
        "deny_reason": {
          "description": "The user deny reason.",
          "readOnly": true,
          "type": "string"
        },
        "director_alias": {
          "$ref": "#/definitions/LabelUser",
          "description": "The existing bunq alias for the company's primary director.",
          "readOnly": true,
          "type": "object"
        },
        "directors": {
          "description": "The existing bunq aliases for the company's directors.",
          "items": {
            "$ref": "#/definitions/LabelUser"
          },
          "readOnly": true,
          "type": "array"
        },
        "display_name": {
          "description": "The company's display name.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the modified company.",
          "readOnly": true,
          "type": "integer"
        },
        "language": {
          "description": "The person's preferred language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
          "readOnly": true,
          "type": "string"
        },
        "legal_form": {
          "description": "The company's legal form.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The company name.",
          "readOnly": true,
          "type": "string"
        },
        "notification_filters": {
          "description": "The types of notifications that will result in a push notification or URL callback for this UserCompany.",
          "items": {
            "$ref": "#/definitions/NotificationFilter"
          },
          "readOnly": true,
          "type": "array"
        },
        "public_nick_name": {
          "description": "The company's public nick name.",
          "readOnly": true,
          "type": "string"
        },
        "public_uuid": {
          "description": "The company's public UUID.",
          "readOnly": true,
          "type": "string"
        },
        "region": {
          "description": "The person's preferred region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
          "readOnly": true,
          "type": "string"
        },
        "relations": {
          "description": "The relations for this user.",
          "items": {
            "$ref": "#/definitions/RelationUser"
          },
          "readOnly": true,
          "type": "array"
        },
        "sector_of_industry": {
          "description": "The sector of industry.",
          "readOnly": true,
          "type": "string"
        },
        "session_timeout": {
          "description": "The setting for the session timeout of the company in seconds.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The user status. Can be: ACTIVE, SIGNUP, RECOVERY.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The user sub-status. Can be: NONE, FACE_RESET, APPROVAL, APPROVAL_DIRECTOR, APPROVAL_PARENT, APPROVAL_SUPPORT, COUNTER_IBAN, IDEAL or SUBMIT.",
          "readOnly": true,
          "type": "string"
        },
        "type_of_business_entity": {
          "description": "The type of business entity.",
          "readOnly": true,
          "type": "string"
        },
        "ubo": {
          "description": "The names of the company's ultimate beneficiary owners. Minimum zero, maximum four.",
          "items": {
            "$ref": "#/definitions/Ubo"
          },
          "readOnly": true,
          "type": "array"
        },
        "updated": {
          "description": "The timestamp of the company object's last update.",
          "readOnly": true,
          "type": "string"
        },
        "version_terms_of_service": {
          "description": "The version of the terms of service accepted by the user.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserCompanyUpdate": {
      "properties": {
        "id": {
          "description": "The id of the modified company.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "UserCredentialPasswordIpListing": {
      "properties": {
        "created": {
          "description": "The timestamp of the credential object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "expiry_time": {
          "description": "When the status is PENDING_FIRST_USE: when the credential expires.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the credential.",
          "readOnly": true,
          "type": "integer"
        },
        "permitted_device": {
          "$ref": "#/definitions/PermittedDevice",
          "description": "When the status is ACTIVE: the details of the device that may use the credential.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status of the credential.",
          "readOnly": true,
          "type": "string"
        },
        "token_value": {
          "description": "When the status is PENDING_FIRST_USE: the value of the token.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the credential object's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserCredentialPasswordIpRead": {
      "properties": {
        "created": {
          "description": "The timestamp of the credential object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "expiry_time": {
          "description": "When the status is PENDING_FIRST_USE: when the credential expires.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the credential.",
          "readOnly": true,
          "type": "integer"
        },
        "permitted_device": {
          "$ref": "#/definitions/PermittedDevice",
          "description": "When the status is ACTIVE: the details of the device that may use the credential.",
          "readOnly": true,
          "type": "object"
        },
        "status": {
          "description": "The status of the credential.",
          "readOnly": true,
          "type": "string"
        },
        "token_value": {
          "description": "When the status is PENDING_FIRST_USE: the value of the token.",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the credential object's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserLegalNameListing": {
      "properties": {
        "legal_names": {
          "description": "All legal names that can be used by the user",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "UserLight": {
      "properties": {
        "address_main": {
          "$ref": "#/definitions/Address",
          "description": "The user's main address.",
          "readOnly": false,
          "type": "object"
        },
        "address_postal": {
          "$ref": "#/definitions/Address",
          "description": "The user's postal address.",
          "readOnly": false,
          "type": "object"
        },
        "alias": {
          "description": "The aliases of the user.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": true,
          "type": "array"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The user's avatar.",
          "readOnly": true,
          "type": "object"
        },
        "avatar_uuid": {
          "description": "The public UUID of the user's avatar.",
          "readOnly": false,
          "type": "string"
        },
        "country_of_birth": {
          "description": "The user's country of birth. Formatted as a SO 3166-1 alpha-2 country code.",
          "readOnly": false,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the user object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "daily_limit_without_confirmation_login": {
          "$ref": "#/definitions/Amount",
          "description": "The amount the user can pay in the session without asking for credentials.",
          "readOnly": false,
          "type": "object"
        },
        "date_of_birth": {
          "description": "The user's date of birth. Accepts ISO8601 date formats.",
          "readOnly": false,
          "type": "string"
        },
        "deny_reason": {
          "description": "The user deny reason.",
          "readOnly": true,
          "type": "string"
        },
        "display_name": {
          "description": "The display name for the user.",
          "readOnly": true,
          "type": "string"
        },
        "document_back_attachment_id": {
          "description": "The reference to the uploaded picture/scan of the back side of the identification document.",
          "readOnly": false,
          "type": "integer"
        },
        "document_country_of_issuance": {
          "description": "The country which issued the identification document the user registered with.",
          "readOnly": false,
          "type": "string"
        },
        "document_front_attachment_id": {
          "description": "The reference to the uploaded picture/scan of the front side of the identification document.",
          "readOnly": false,
          "type": "integer"
        },
        "document_number": {
          "description": "The identification document number the user registered with.",
          "readOnly": false,
          "type": "string"
        },
        "document_type": {
          "description": "The type of identification document the user registered with.",
          "readOnly": false,
          "type": "string"
        },
        "first_name": {
          "description": "The user's first name.",
          "readOnly": false,
          "type": "string"
        },
        "gender": {
          "description": "The user's gender. Can be MALE, FEMALE or UNKNOWN.",
          "readOnly": false,
          "type": "string"
        },
        "id": {
          "description": "The id of the user.",
          "readOnly": true,
          "type": "integer"
        },
        "language": {
          "description": "The user's preferred language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
          "readOnly": false,
          "type": "string"
        },
        "last_name": {
          "description": "The user's last name.",
          "readOnly": false,
          "type": "string"
        },
        "legal_guardian_alias": {
          "$ref": "#/definitions/Pointer",
          "description": "The legal guardian of the user. Required for minors.",
          "readOnly": false,
          "type": "object"
        },
        "legal_name": {
          "description": "The user's legal name.",
          "readOnly": true,
          "type": "string"
        },
        "middle_name": {
          "description": "The user's middle name.",
          "readOnly": false,
          "type": "string"
        },
        "nationality": {
          "description": "The user's nationality. Formatted as a SO 3166-1 alpha-2 country code.",
          "readOnly": false,
          "type": "string"
        },
        "notification_filters": {
          "description": "The types of notifications that will result in a push notification or URL callback for this UserLight.",
          "items": {
            "$ref": "#/definitions/NotificationFilter"
          },
          "readOnly": true,
          "type": "array"
        },
        "place_of_birth": {
          "description": "The user's place of birth.",
          "readOnly": false,
          "type": "string"
        },
        "public_nick_name": {
          "description": "The public nick name for the user.",
          "readOnly": false,
          "type": "string"
        },
        "public_uuid": {
          "description": "The user's public UUID.",
          "readOnly": true,
          "type": "string"
        },
        "region": {
          "description": "The user's preferred region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
          "readOnly": false,
          "type": "string"
        },
        "relations": {
          "description": "The relations for this user.",
          "items": {
            "$ref": "#/definitions/RelationUser"
          },
          "readOnly": true,
          "type": "array"
        },
        "session_timeout": {
          "description": "The setting for the session timeout of the user in seconds.",
          "readOnly": false,
          "type": "integer"
        },
        "social_security_number": {
          "description": "The user's social security number.",
          "readOnly": false,
          "type": "string"
        },
        "status": {
          "description": "The user status. The user status. Can be: ACTIVE, BLOCKED, SIGNUP, DENIED or ABORTED.",
          "readOnly": false,
          "type": "string"
        },
        "sub_status": {
          "description": "The user sub-status. Can be: NONE, FACE_RESET, APPROVAL, APPROVAL_PARENT, AWAITING_PARENT, APPROVAL_SUPPORT, COUNTER_IBAN, IDEAL or SUBMIT.",
          "readOnly": false,
          "type": "string"
        },
        "tax_resident": {
          "description": "The user's tax residence numbers for different countries.",
          "items": {
            "$ref": "#/definitions/TaxResident"
          },
          "readOnly": false,
          "type": "array"
        },
        "updated": {
          "description": "The timestamp of the user object's last update.",
          "readOnly": true,
          "type": "string"
        },
        "version_terms_of_service": {
          "description": "The version of the terms of service accepted by the user.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserListing": {
      "properties": {
        "UserApiKey": {
          "$ref": "#/definitions/UserApiKey",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "UserCompany": {
          "$ref": "#/definitions/UserCompany",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "UserLight": {
          "$ref": "#/definitions/UserLight",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "UserPaymentServiceProvider": {
          "$ref": "#/definitions/UserPaymentServiceProvider",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "UserPerson": {
          "$ref": "#/definitions/UserPerson",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserPaymentServiceProvider": {
      "properties": {
        "alias": {
          "description": "The aliases of the user.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": true,
          "type": "array"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The user's avatar.",
          "readOnly": true,
          "type": "object"
        },
        "certificate_distinguished_name": {
          "description": "The distinguished name from the certificate used to identify this user.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the user object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "display_name": {
          "description": "The display name for the provider.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the user.",
          "readOnly": true,
          "type": "integer"
        },
        "language": {
          "description": "The provider's language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
          "readOnly": true,
          "type": "string"
        },
        "public_nick_name": {
          "description": "The public nick name for the provider.",
          "readOnly": true,
          "type": "string"
        },
        "public_uuid": {
          "description": "The providers's public UUID.",
          "readOnly": true,
          "type": "string"
        },
        "region": {
          "description": "The provider's region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
          "readOnly": true,
          "type": "string"
        },
        "session_timeout": {
          "description": "The setting for the session timeout of the user in seconds.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The user status. The user status. Can be: ACTIVE, BLOCKED or DENIED.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The user sub-status. Can be: NONE",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the user object's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserPaymentServiceProviderRead": {
      "properties": {
        "alias": {
          "description": "The aliases of the user.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": true,
          "type": "array"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The user's avatar.",
          "readOnly": true,
          "type": "object"
        },
        "certificate_distinguished_name": {
          "description": "The distinguished name from the certificate used to identify this user.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the user object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "display_name": {
          "description": "The display name for the provider.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the user.",
          "readOnly": true,
          "type": "integer"
        },
        "language": {
          "description": "The provider's language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
          "readOnly": true,
          "type": "string"
        },
        "public_nick_name": {
          "description": "The public nick name for the provider.",
          "readOnly": true,
          "type": "string"
        },
        "public_uuid": {
          "description": "The providers's public UUID.",
          "readOnly": true,
          "type": "string"
        },
        "region": {
          "description": "The provider's region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
          "readOnly": true,
          "type": "string"
        },
        "session_timeout": {
          "description": "The setting for the session timeout of the user in seconds.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The user status. The user status. Can be: ACTIVE, BLOCKED or DENIED.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The user sub-status. Can be: NONE",
          "readOnly": true,
          "type": "string"
        },
        "updated": {
          "description": "The timestamp of the user object's last update.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserPerson": {
      "properties": {
        "address_main": {
          "$ref": "#/definitions/Address",
          "description": "The person's main address.",
          "readOnly": false,
          "type": "object"
        },
        "address_postal": {
          "$ref": "#/definitions/Address",
          "description": "The person's postal address.",
          "readOnly": false,
          "type": "object"
        },
        "alias": {
          "description": "The aliases of the user.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": true,
          "type": "array"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The user's avatar.",
          "readOnly": true,
          "type": "object"
        },
        "avatar_uuid": {
          "description": "The public UUID of the user's avatar.",
          "readOnly": false,
          "type": "string"
        },
        "country_of_birth": {
          "description": "The person's country of birth. Formatted as a SO 3166-1 alpha-2 country code.",
          "readOnly": false,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the person object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "daily_limit_without_confirmation_login": {
          "$ref": "#/definitions/Amount",
          "description": "The amount the user can pay in the session without asking for credentials.",
          "readOnly": false,
          "type": "object"
        },
        "date_of_birth": {
          "description": "The person's date of birth. Accepts ISO8601 date formats.",
          "readOnly": false,
          "type": "string"
        },
        "display_name": {
          "description": "The display name for the person.",
          "readOnly": false,
          "type": "string"
        },
        "document_back_attachment_id": {
          "description": "The reference to the uploaded picture/scan of the back side of the identification document.",
          "readOnly": false,
          "type": "integer"
        },
        "document_country_of_issuance": {
          "description": "The country which issued the identification document the person registered with.",
          "readOnly": false,
          "type": "string"
        },
        "document_front_attachment_id": {
          "description": "The reference to the uploaded picture/scan of the front side of the identification document.",
          "readOnly": false,
          "type": "integer"
        },
        "document_number": {
          "description": "The identification document number the person registered with.",
          "readOnly": false,
          "type": "string"
        },
        "document_type": {
          "description": "The type of identification document the person registered with.",
          "readOnly": false,
          "type": "string"
        },
        "first_name": {
          "description": "The person's first name.",
          "readOnly": false,
          "type": "string"
        },
        "gender": {
          "description": "The person's gender. Can be MALE, FEMALE or UNKNOWN.",
          "readOnly": false,
          "type": "string"
        },
        "id": {
          "description": "The id of the modified person object.",
          "readOnly": true,
          "type": "integer"
        },
        "language": {
          "description": "The person's preferred language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
          "readOnly": false,
          "type": "string"
        },
        "last_name": {
          "description": "The person's last name.",
          "readOnly": false,
          "type": "string"
        },
        "legal_guardian_alias": {
          "$ref": "#/definitions/Pointer",
          "description": "The legal guardian of the user. Required for minors.",
          "readOnly": false,
          "type": "object"
        },
        "legal_name": {
          "description": "The person's legal name.",
          "readOnly": true,
          "type": "string"
        },
        "middle_name": {
          "description": "The person's middle name.",
          "readOnly": false,
          "type": "string"
        },
        "nationality": {
          "description": "The person's nationality. Formatted as a SO 3166-1 alpha-2 country code.",
          "readOnly": false,
          "type": "string"
        },
        "notification_filters": {
          "description": "The types of notifications that will result in a push notification or URL callback for this UserPerson.",
          "items": {
            "$ref": "#/definitions/NotificationFilter"
          },
          "readOnly": true,
          "type": "array"
        },
        "place_of_birth": {
          "description": "The person's place of birth.",
          "readOnly": false,
          "type": "string"
        },
        "public_nick_name": {
          "description": "The public nick name for the person.",
          "readOnly": false,
          "type": "string"
        },
        "public_uuid": {
          "description": "The person's public UUID.",
          "readOnly": true,
          "type": "string"
        },
        "region": {
          "description": "The person's preferred region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
          "readOnly": false,
          "type": "string"
        },
        "relations": {
          "description": "The relations for this user.",
          "items": {
            "$ref": "#/definitions/RelationUser"
          },
          "readOnly": true,
          "type": "array"
        },
        "session_timeout": {
          "description": "The setting for the session timeout of the user in seconds.",
          "readOnly": false,
          "type": "integer"
        },
        "status": {
          "description": "The user status. The user status. Can be: ACTIVE, BLOCKED, SIGNUP, RECOVERY, DENIED or ABORTED.",
          "readOnly": false,
          "type": "string"
        },
        "sub_status": {
          "description": "The user sub-status. Can be: NONE, FACE_RESET, APPROVAL, APPROVAL_DIRECTOR, APPROVAL_PARENT, APPROVAL_SUPPORT, COUNTER_IBAN, IDEAL or SUBMIT.",
          "readOnly": false,
          "type": "string"
        },
        "tax_resident": {
          "description": "The user's tax residence numbers for different countries.",
          "items": {
            "$ref": "#/definitions/TaxResident"
          },
          "readOnly": false,
          "type": "array"
        },
        "updated": {
          "description": "The timestamp of the person object's last update.",
          "readOnly": true,
          "type": "string"
        },
        "version_terms_of_service": {
          "description": "The version of the terms of service accepted by the user.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "avatar_uuid",
        "document_type",
        "document_number",
        "document_country_of_issuance",
        "document_front_attachment_id",
        "legal_guardian_alias"
      ],
      "type": "object"
    },
    "UserPersonRead": {
      "properties": {
        "address_main": {
          "$ref": "#/definitions/Address",
          "description": "The person's main address.",
          "readOnly": true,
          "type": "object"
        },
        "address_postal": {
          "$ref": "#/definitions/Address",
          "description": "The person's postal address.",
          "readOnly": true,
          "type": "object"
        },
        "alias": {
          "description": "The aliases of the user.",
          "items": {
            "$ref": "#/definitions/Pointer"
          },
          "readOnly": true,
          "type": "array"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "The user's avatar.",
          "readOnly": true,
          "type": "object"
        },
        "country_of_birth": {
          "description": "The person's country of birth. Formatted as a SO 3166-1 alpha-2 country code.",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "description": "The timestamp of the person object's creation.",
          "readOnly": true,
          "type": "string"
        },
        "daily_limit_without_confirmation_login": {
          "$ref": "#/definitions/Amount",
          "description": "The amount the user can pay in the session without asking for credentials.",
          "readOnly": true,
          "type": "object"
        },
        "date_of_birth": {
          "description": "The person's date of birth. Accepts ISO8601 date formats.",
          "readOnly": true,
          "type": "string"
        },
        "display_name": {
          "description": "The display name for the person.",
          "readOnly": true,
          "type": "string"
        },
        "first_name": {
          "description": "The person's first name.",
          "readOnly": true,
          "type": "string"
        },
        "gender": {
          "description": "The person's gender. Can be MALE, FEMALE or UNKNOWN.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The id of the modified person object.",
          "readOnly": true,
          "type": "integer"
        },
        "language": {
          "description": "The person's preferred language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
          "readOnly": true,
          "type": "string"
        },
        "last_name": {
          "description": "The person's last name.",
          "readOnly": true,
          "type": "string"
        },
        "legal_name": {
          "description": "The person's legal name.",
          "readOnly": true,
          "type": "string"
        },
        "middle_name": {
          "description": "The person's middle name.",
          "readOnly": true,
          "type": "string"
        },
        "nationality": {
          "description": "The person's nationality. Formatted as a SO 3166-1 alpha-2 country code.",
          "readOnly": true,
          "type": "string"
        },
        "notification_filters": {
          "description": "The types of notifications that will result in a push notification or URL callback for this UserPerson.",
          "items": {
            "$ref": "#/definitions/NotificationFilter"
          },
          "readOnly": true,
          "type": "array"
        },
        "place_of_birth": {
          "description": "The person's place of birth.",
          "readOnly": true,
          "type": "string"
        },
        "public_nick_name": {
          "description": "The public nick name for the person.",
          "readOnly": true,
          "type": "string"
        },
        "public_uuid": {
          "description": "The person's public UUID.",
          "readOnly": true,
          "type": "string"
        },
        "region": {
          "description": "The person's preferred region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
          "readOnly": true,
          "type": "string"
        },
        "relations": {
          "description": "The relations for this user.",
          "items": {
            "$ref": "#/definitions/RelationUser"
          },
          "readOnly": true,
          "type": "array"
        },
        "session_timeout": {
          "description": "The setting for the session timeout of the user in seconds.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The user status. The user status. Can be: ACTIVE, BLOCKED, SIGNUP, RECOVERY, DENIED or ABORTED.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The user sub-status. Can be: NONE, FACE_RESET, APPROVAL, APPROVAL_DIRECTOR, APPROVAL_PARENT, APPROVAL_SUPPORT, COUNTER_IBAN, IDEAL or SUBMIT.",
          "readOnly": true,
          "type": "string"
        },
        "tax_resident": {
          "description": "The user's tax residence numbers for different countries.",
          "items": {
            "$ref": "#/definitions/TaxResident"
          },
          "readOnly": true,
          "type": "array"
        },
        "updated": {
          "description": "The timestamp of the person object's last update.",
          "readOnly": true,
          "type": "string"
        },
        "version_terms_of_service": {
          "description": "The version of the terms of service accepted by the user.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserPersonUpdate": {
      "properties": {
        "id": {
          "description": "The id of the modified person object.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "UserRead": {
      "properties": {
        "UserApiKey": {
          "$ref": "#/definitions/UserApiKey",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "UserCompany": {
          "$ref": "#/definitions/UserCompany",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "UserLight": {
          "$ref": "#/definitions/UserLight",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "UserPaymentServiceProvider": {
          "$ref": "#/definitions/UserPaymentServiceProvider",
          "description": "",
          "readOnly": true,
          "type": "object"
        },
        "UserPerson": {
          "$ref": "#/definitions/UserPerson",
          "description": "",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "Whitelist": {
      "type": "object"
    },
    "WhitelistResult": {
      "properties": {
        "error_message": {
          "description": "The message when the whitelist result has failed due to user error.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "readOnly": true,
          "type": "array"
        },
        "id": {
          "description": "The ID of the whitelist entry.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_paying_id": {
          "description": "The account from which payments will be deducted when a transaction is matched with this whitelist.",
          "readOnly": true,
          "type": "integer"
        },
        "object": {
          "$ref": "#/definitions/WhitelistResultViewAnchoredObject",
          "description": "The details of the external object the event was created for.",
          "readOnly": true,
          "type": "object"
        },
        "request_reference_split_the_bill": {
          "description": "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
          "items": {
            "$ref": "#/definitions/RequestInquiryReference"
          },
          "readOnly": true,
          "type": "array"
        },
        "status": {
          "description": "The status of the WhitelistResult.",
          "readOnly": true,
          "type": "string"
        },
        "sub_status": {
          "description": "The subStatus of the WhitelistResult.",
          "readOnly": true,
          "type": "string"
        },
        "whitelist": {
          "$ref": "#/definitions/Whitelist",
          "description": "The corresponding whitelist.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "WhitelistResultViewAnchoredObject": {
      "properties": {
        "draftPayment": {
          "$ref": "#/definitions/DraftPayment",
          "description": "The DraftPayment object",
          "readOnly": true,
          "type": "object"
        },
        "id": {
          "description": "The ID of the whitelist entry.",
          "readOnly": true,
          "type": "integer"
        },
        "requestResponse": {
          "$ref": "#/definitions/RequestResponse",
          "description": "The RequestResponse object",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "WhitelistSdd": {
      "properties": {
        "maximum_amount_per_month": {
          "$ref": "#/definitions/Amount",
          "description": "The maximum amount of money that is allowed to be deducted based on the whitelist.",
          "readOnly": false,
          "type": "object"
        },
        "monetary_account_paying_id": {
          "description": "ID of the monetary account of which you want to pay from.",
          "readOnly": false,
          "type": "integer"
        },
        "request_id": {
          "description": "ID of the request for which you want to whitelist the originating SDD.",
          "readOnly": false,
          "type": "integer"
        }
      },
      "required": [
        "monetary_account_paying_id",
        "request_id",
        "maximum_amount_per_month"
      ],
      "type": "object"
    },
    "WhitelistSddCreate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "WhitelistSddDelete": {
      "type": "object"
    },
    "WhitelistSddListing": {
      "properties": {
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The account to which payments will be paid.",
          "readOnly": true,
          "type": "object"
        },
        "credit_scheme_identifier": {
          "description": "The credit scheme ID provided by the counterparty.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the whitelist entry.",
          "readOnly": true,
          "type": "integer"
        },
        "mandate_identifier": {
          "description": "The mandate ID provided by the counterparty.",
          "readOnly": true,
          "type": "string"
        },
        "maximum_amount_per_month": {
          "$ref": "#/definitions/Amount",
          "description": "The monthly maximum amount that can be deducted from the target account.",
          "readOnly": true,
          "type": "object"
        },
        "monetary_account_incoming_id": {
          "description": "The account to which payments will come in before possibly being 'redirected' by the whitelist.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_paying_id": {
          "description": "The account from which payments will be deducted when a transaction is matched with this whitelist.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the whitelist.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the SDD whitelist, can be CORE or B2B.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user who created the whitelist entry.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "WhitelistSddRead": {
      "properties": {
        "counterparty_alias": {
          "$ref": "#/definitions/LabelMonetaryAccount",
          "description": "The account to which payments will be paid.",
          "readOnly": true,
          "type": "object"
        },
        "credit_scheme_identifier": {
          "description": "The credit scheme ID provided by the counterparty.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the whitelist entry.",
          "readOnly": true,
          "type": "integer"
        },
        "mandate_identifier": {
          "description": "The mandate ID provided by the counterparty.",
          "readOnly": true,
          "type": "string"
        },
        "maximum_amount_per_month": {
          "$ref": "#/definitions/Amount",
          "description": "The monthly maximum amount that can be deducted from the target account.",
          "readOnly": true,
          "type": "object"
        },
        "monetary_account_incoming_id": {
          "description": "The account to which payments will come in before possibly being 'redirected' by the whitelist.",
          "readOnly": true,
          "type": "integer"
        },
        "monetary_account_paying_id": {
          "description": "The account from which payments will be deducted when a transaction is matched with this whitelist.",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "The status of the whitelist.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the SDD whitelist, can be CORE or B2B.",
          "readOnly": true,
          "type": "string"
        },
        "user_alias_created": {
          "$ref": "#/definitions/LabelUser",
          "description": "The user who created the whitelist entry.",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "WhitelistSddUpdate": {
      "properties": {
        "Id": {
          "$ref": "#/definitions/BunqId",
          "description": "The id of the created item",
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    }
  },
  "tags": [
    {
      "description": "",
      "name": "amount-used"
    },
    {
      "description": "",
      "name": "attachment"
    },
    {
      "description": "",
      "name": "attachment-public"
    },
    {
      "description": "",
      "name": "attachment-tab"
    },
    {
      "description": "",
      "name": "avatar"
    },
    {
      "description": "",
      "name": "billing-contract-subscription"
    },
    {
      "description": "",
      "name": "bunqme-fundraiser-profile"
    },
    {
      "description": "",
      "name": "bunqme-fundraiser-result"
    },
    {
      "description": "",
      "name": "bunqme-tab"
    },
    {
      "description": "",
      "name": "bunqme-tab-result-response"
    },
    {
      "description": "",
      "name": "callback-url"
    },
    {
      "description": "",
      "name": "card"
    },
    {
      "description": "",
      "name": "card-batch"
    },
    {
      "description": "",
      "name": "card-credit"
    },
    {
      "description": "",
      "name": "card-debit"
    },
    {
      "description": "",
      "name": "card-name"
    },
    {
      "description": "",
      "name": "cash-register"
    },
    {
      "description": "",
      "name": "certificate-pinned"
    },
    {
      "description": "",
      "name": "company"
    },
    {
      "description": "",
      "name": "confirmation-of-funds"
    },
    {
      "description": "",
      "name": "content"
    },
    {
      "description": "",
      "name": "credential-password-ip"
    },
    {
      "description": "",
      "name": "customer-statement"
    },
    {
      "description": "",
      "name": "definition"
    },
    {
      "description": "",
      "name": "device"
    },
    {
      "description": "",
      "name": "device-server"
    },
    {
      "description": "",
      "name": "draft-payment"
    },
    {
      "description": "",
      "name": "draft-share-invite-bank"
    },
    {
      "description": "",
      "name": "event"
    },
    {
      "description": "",
      "name": "export-annual-overview"
    },
    {
      "description": "",
      "name": "export-rib"
    },
    {
      "description": "",
      "name": "feature-announcement"
    },
    {
      "description": "",
      "name": "generated-cvc2"
    },
    {
      "description": "",
      "name": "ideal-merchant-transaction"
    },
    {
      "description": "",
      "name": "insights"
    },
    {
      "description": "",
      "name": "insights-search"
    },
    {
      "description": "",
      "name": "installation"
    },
    {
      "description": "",
      "name": "instance"
    },
    {
      "description": "",
      "name": "invoice"
    },
    {
      "description": "",
      "name": "ip"
    },
    {
      "description": "",
      "name": "legal-name"
    },
    {
      "description": "",
      "name": "limit"
    },
    {
      "description": "",
      "name": "mastercard-action"
    },
    {
      "description": "",
      "name": "mastercard-action-green-aggregation"
    },
    {
      "description": "",
      "name": "monetary-account"
    },
    {
      "description": "",
      "name": "monetary-account-bank"
    },
    {
      "description": "",
      "name": "monetary-account-joint"
    },
    {
      "description": "",
      "name": "monetary-account-savings"
    },
    {
      "description": "",
      "name": "name"
    },
    {
      "description": "",
      "name": "note-attachment"
    },
    {
      "description": "",
      "name": "note-text"
    },
    {
      "description": "",
      "name": "notification-filter-push"
    },
    {
      "description": "",
      "name": "notification-filter-url"
    },
    {
      "description": "",
      "name": "oauth-client"
    },
    {
      "description": "",
      "name": "payment"
    },
    {
      "description": "",
      "name": "payment-auto-allocate"
    },
    {
      "description": "",
      "name": "payment-batch"
    },
    {
      "description": "",
      "name": "payment-service-provider-credential"
    },
    {
      "description": "",
      "name": "payment-service-provider-draft-payment"
    },
    {
      "description": "",
      "name": "pdf-content"
    },
    {
      "description": "",
      "name": "qr-code"
    },
    {
      "description": "",
      "name": "qr-code-content"
    },
    {
      "description": "",
      "name": "registry"
    },
    {
      "description": "",
      "name": "registry-entry"
    },
    {
      "description": "",
      "name": "registry-setting"
    },
    {
      "description": "",
      "name": "registry-settlement"
    },
    {
      "description": "",
      "name": "registry-settlement-pending"
    },
    {
      "description": "",
      "name": "replace"
    },
    {
      "description": "",
      "name": "request-inquiry"
    },
    {
      "description": "",
      "name": "request-inquiry-batch"
    },
    {
      "description": "",
      "name": "request-response"
    },
    {
      "description": "",
      "name": "reward"
    },
    {
      "description": "",
      "name": "reward-recipient"
    },
    {
      "description": "",
      "name": "reward-sender"
    },
    {
      "description": "",
      "name": "sandbox-user-company"
    },
    {
      "description": "",
      "name": "sandbox-user-person"
    },
    {
      "description": "",
      "name": "schedule"
    },
    {
      "description": "",
      "name": "schedule-instance"
    },
    {
      "description": "",
      "name": "schedule-payment"
    },
    {
      "description": "",
      "name": "schedule-payment-batch"
    },
    {
      "description": "",
      "name": "server-public-key"
    },
    {
      "description": "",
      "name": "session"
    },
    {
      "description": "",
      "name": "session-server"
    },
    {
      "description": "",
      "name": "share-invite-monetary-account-inquiry"
    },
    {
      "description": "",
      "name": "share-invite-monetary-account-response"
    },
    {
      "description": "",
      "name": "sofort-merchant-transaction"
    },
    {
      "description": "",
      "name": "statement"
    },
    {
      "description": "",
      "name": "switch-service-payment"
    },
    {
      "description": "",
      "name": "tab"
    },
    {
      "description": "",
      "name": "tab-item"
    },
    {
      "description": "",
      "name": "tab-item-batch"
    },
    {
      "description": "",
      "name": "tab-result-inquiry"
    },
    {
      "description": "",
      "name": "tab-result-response"
    },
    {
      "description": "",
      "name": "tab-usage-multiple"
    },
    {
      "description": "",
      "name": "tab-usage-single"
    },
    {
      "description": "",
      "name": "token-qr-request-ideal"
    },
    {
      "description": "",
      "name": "token-qr-request-sofort"
    },
    {
      "description": "",
      "name": "transferwise-currency"
    },
    {
      "description": "",
      "name": "transferwise-quote"
    },
    {
      "description": "",
      "name": "transferwise-quote-temporary"
    },
    {
      "description": "",
      "name": "transferwise-recipient"
    },
    {
      "description": "",
      "name": "transferwise-recipient-requirement"
    },
    {
      "description": "",
      "name": "transferwise-transfer"
    },
    {
      "description": "",
      "name": "transferwise-transfer-requirement"
    },
    {
      "description": "",
      "name": "transferwise-user"
    },
    {
      "description": "",
      "name": "tree-progress"
    },
    {
      "description": "",
      "name": "user"
    },
    {
      "description": "",
      "name": "user-company"
    },
    {
      "description": "",
      "name": "user-payment-service-provider"
    },
    {
      "description": "",
      "name": "user-person"
    },
    {
      "description": "",
      "name": "whitelist-sdd"
    }
  ],
  "x-components": {
    "parameters": {
      "Cache-Control": {
        "description": "The standard HTTP Cache-Control header is required for all signed requests.",
        "in": "header",
        "name": "Cache-Control",
        "required": false,
        "type": "string"
      },
      "User-Agent": {
        "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
        "in": "header",
        "name": "User-Agent",
        "required": true,
        "type": "string"
      },
      "X-Bunq-Attachment-Description": {
        "description": "This header should be used when uploading an Attachment's content to give it a description.",
        "in": "header",
        "name": "X-Bunq-Attachment-Description",
        "schema": {
          "type": "string"
        }
      },
      "X-Bunq-Client-Authentication": {
        "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
        "in": "header",
        "name": "X-Bunq-Client-Authentication",
        "required": true,
        "type": "string"
      },
      "X-Bunq-Client-Request-Id": {
        "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
        "in": "header",
        "name": "X-Bunq-Client-Request-Id",
        "required": false,
        "type": "string"
      },
      "X-Bunq-Client-Signature": {
        "description": "The signature header is required for some API calls. See the signing page for details on how to create this signature.",
        "in": "header",
        "name": "X-Bunq-Client-Signature",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "X-Bunq-Geolocation": {
        "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
        "in": "header",
        "name": "X-Bunq-Geolocation",
        "required": false,
        "type": "string"
      },
      "X-Bunq-Language": {
        "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
        "in": "header",
        "name": "X-Bunq-Language",
        "required": false,
        "type": "string"
      },
      "X-Bunq-Region": {
        "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
        "in": "header",
        "name": "X-Bunq-Region",
        "required": false,
        "type": "string"
      }
    },
    "responses": {
      "GenericError": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "Error": {
                  "$ref": "#/definitions/Error"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "This is how the error response looks like for 4XX response codes",
        "headers": {
          "X-Bunq-Client-Request-Id": {
            "$ref": "#/x-components/headers/X-Bunq-Client-Request-Id"
          },
          "X-Bunq-Client-Response-Id": {
            "$ref": "#/x-components/headers/X-Bunq-Client-Response-Id"
          },
          "X-Bunq-Server-Signature": {
            "$ref": "#/x-components/headers/X-Bunq-Server-Signature"
          }
        }
      }
    },
    "headers": {
      "X-Bunq-Client-Request-Id": {
        "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "X-Bunq-Client-Response-Id": {
        "description": "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
        "schema": {
          "type": "string"
        }
      },
      "X-Bunq-Server-Signature": {
        "description": "The server's signature for this response. See the signing page for details on how to verify this signature.",
        "schema": {
          "type": "string"
        }
      }
    }
  }
}