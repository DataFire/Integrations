{
  "swagger": "2.0",
  "info": {
    "description": "Build applications using the world's most powerful imagery",
    "title": "Getty Images",
    "version": "3",
    "x-apisguru-categories": [
      "media"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/http_developers.gettyimages.com_images_getty-api-logo.jpg"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://api.gettyimages.com/swagger/v3/swagger.json",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "gettyimages.com",
    "x-datafire": {
      "name": "gettyimages",
      "type": "openapi"
    }
  },
  "paths": {
    "/v3/affiliates/search/images": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "query",
            "name": "phrase",
            "type": "string"
          },
          {
            "enum": [
              "photography",
              "vector"
            ],
            "in": "query",
            "name": "style",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AffiliateImageSearchResponse"
            }
          }
        },
        "tags": [
          "AffiliateSearch"
        ]
      }
    },
    "/v3/affiliates/search/videos": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "in": "query",
            "name": "phrase",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AffiliateVideoSearchResponse"
            }
          }
        },
        "tags": [
          "AffiliateSearch"
        ]
      }
    },
    "/v3/artists/images": {
      "get": {
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "Name of artist for desired images",
            "in": "query",
            "name": "artist_name",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Comma separated list of fields. Allows restricting which fields are returned. If no fields are selected, the summary_set of fields are returned.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/ArtistsImageSearchFieldValues"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Identifies page to return. Default page is 1.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Specifies page size. Default page_size is 10, maximum page_size is 100.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Artists"
        ],
        "summary": "Search for images by a photographer"
      }
    },
    "/v3/artists/videos": {
      "get": {
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "Name of artist for desired images",
            "in": "query",
            "name": "artist_name",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Comma separated list of fields. Allows restricting which fields are returned. If no fields are selected, the summary_set of fields are returned.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/ArtistsVideoSearchFieldValues"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Identifies page to return. Default page is 1.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Specifies page size. Default page_size is 10, maximum page_size is 100.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Artists"
        ],
        "summary": "Search for videos by a photographer"
      }
    },
    "/v3/asset-changes/change-sets": {
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies the id of the channel for the asset data. Valid channel ids can be found in the results of the Get Partner Channel query.",
            "format": "int32",
            "in": "query",
            "name": "channel_id",
            "type": "integer"
          },
          {
            "description": "Specifies the number of assets to return. The default is 10; maximum is 500.",
            "format": "int32",
            "in": "query",
            "name": "batch_size",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - Channel contains unconfirmed asset change notifications",
            "schema": {
              "$ref": "#/definitions/AssetChanges"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AssetChanges"
            }
          },
          "400": {
            "description": "InvalidChannelIdException"
          },
          "403": {
            "description": "Your access token does not authorize access to this resource"
          },
          "404": {
            "description": "The channel you specified does not exist"
          }
        },
        "tags": [
          "AssetChanges"
        ],
        "description": "# Asset Changes\n\nGet notifications about new, updated or deleted assets.\n\n##  Quickstart\n\nYou'll need an API key and an access token to use this resource. \n\nNotifications older than 60 days will be removed from partner channels.\n",
        "summary": "Get asset change notifications."
      }
    },
    "/v3/asset-changes/change-sets/{change-set-id}": {
      "delete": {
        "parameters": [
          {
            "description": "Specify the change-set-id associated with a transaction resource whose receipt you want to confirm.",
            "format": "int64",
            "in": "path",
            "name": "change-set-id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "InvalidChangeSetId"
          },
          "403": {
            "description": "Your access token does not authorize access to this resource"
          },
          "404": {
            "description": "Transaction was not found"
          }
        },
        "tags": [
          "AssetChanges"
        ],
        "description": "# Delete Asset Changes\n\nConfirm asset changes acknowledges receipt of asset changes (from the PUT asset changes endpoint).\n\n##  Quickstart\n\nYou'll need an API key and an access token to use this resource.\n",
        "summary": "Confirm asset change notifications."
      }
    },
    "/v3/asset-changes/channels": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Channel"
              },
              "type": "array"
            }
          },
          "403": {
            "description": "UnauthorizedToAccessResource"
          },
          "404": {
            "description": "ChannelsNotFound"
          }
        },
        "tags": [
          "AssetChanges"
        ],
        "description": "# Get Partner Channels\n\nRetrieves the channel data for the partner. This data can be used to populate the channel_id parameter in the Put Asset Changes query.\n\n##  Quickstart\n\nYou'll need an API key and an access token to use this resource.\n\nPartners who have a channel that has been removed should contact their sales representative to be set up again.\n\n",
        "summary": "Get a list of asset change notification channels."
      }
    },
    "/v3/asset-licensing/{assetId}": {
      "post": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "Getty Images assetId - examples 520621493, 112301284",
            "in": "path",
            "name": "assetId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Structure that specifies an array of LicenseTypes (Multiseat, Unlimited, Resale, Indemnification) to acquire,\r\n            and whether or not to use Team Credits. Authenticated User must have access to Team Credits if UseTeamCredits is set to \"true\".",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AcquireAssetLicensesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssetLicensingResponse"
            }
          },
          "400": {
            "description": "InvalidRequest"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "402": {
            "description": "NotEnoughCreditsForPurchase"
          },
          "404": {
            "description": "StandardLicenseNotFound"
          }
        },
        "tags": [
          "AssetLicensing"
        ],
        "summary": "Endpoint for acquiring extended licenses with iStock credits for an asset."
      }
    },
    "/v3/boards": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 1,
            "description": "Request results starting at a page number (default is 1).",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "description": "Search for boards the user owns or has been invited to as an editor.",
            "enum": [
              "owned",
              "invited"
            ],
            "in": "query",
            "name": "board_relationship",
            "type": "string"
          },
          {
            "description": "Sort the list of boards by last update date or name. Defaults to date_last_updated_descending.",
            "enum": [
              "date_last_updated_descending",
              "date_last_updated_ascending",
              "name_ascending",
              "name_decending"
            ],
            "in": "query",
            "name": "sort_order",
            "type": "string"
          },
          {
            "default": 30,
            "description": "Request number of boards to return in each page. (default is 30).",
            "format": "int32",
            "in": "query",
            "name": "pageSize",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BoardList"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Boards"
        ],
        "summary": "Get all boards that the user participates in"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specify a name and description of the board to create (name is required).",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BoardInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/BoardCreated"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Boards"
        ],
        "summary": "Create a new board"
      }
    },
    "/v3/boards/{board_id}": {
      "delete": {
        "parameters": [
          {
            "description": "Specify the board to delete.",
            "in": "path",
            "name": "board_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "InsufficientAccess"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "tags": [
          "Boards"
        ],
        "summary": "Delete a board"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Retrieve details for a specific board.",
            "in": "path",
            "name": "board_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BoardDetail"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "tags": [
          "Boards"
        ],
        "summary": "Get assets and metadata for a specific board"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specify the board to update.",
            "in": "path",
            "name": "board_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specify a new name and description for the board (name is required).",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BoardInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Updated"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "InsufficientAccess"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "tags": [
          "Boards"
        ],
        "summary": "Update a board"
      }
    },
    "/v3/boards/{board_id}/assets": {
      "delete": {
        "parameters": [
          {
            "description": "Specify the board to remove assets from.",
            "in": "path",
            "name": "board_id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "List the assets to be removed from the board.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "asset_ids",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "InsufficientAccess"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "tags": [
          "Boards"
        ],
        "summary": "Remove assets from a board"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specify the board to add assets to.",
            "in": "path",
            "name": "board_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "List assets to add to the board.",
            "in": "body",
            "name": "body",
            "schema": {
              "description": "List assets to add to the board.",
              "items": {
                "$ref": "#/definitions/BoardAsset"
              },
              "type": "array",
              "x-nullable": true
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AddBoardAssetsResult"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "InsufficientAccess"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "tags": [
          "Boards"
        ],
        "summary": "Add assets to a board"
      }
    },
    "/v3/boards/{board_id}/assets/{asset_id}": {
      "delete": {
        "parameters": [
          {
            "description": "Specify the board to remove an asset from.",
            "in": "path",
            "name": "board_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specify the asset to remove from the board.",
            "in": "path",
            "name": "asset_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "InsufficientAccess"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "tags": [
          "Boards"
        ],
        "summary": "Remove an asset from a board"
      },
      "put": {
        "parameters": [
          {
            "description": "Specify the board to add an asset to.",
            "in": "path",
            "name": "board_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specify the asset to add to the board. If it is already in the board's asset collection, no action is taken.",
            "in": "path",
            "name": "asset_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "AssetNotFound"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "tags": [
          "Boards"
        ],
        "summary": "Add an asset to a board"
      }
    },
    "/v3/boards/{board_id}/comments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specify the board to retrieve comments from.",
            "in": "path",
            "name": "board_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CommentsList"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "tags": [
          "Boards"
        ],
        "summary": "Get comments from a board"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specify the board to add a comment to.",
            "in": "path",
            "name": "board_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Comment to be added to the board.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CommentRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CommentCreated"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "InsufficientAccess"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "tags": [
          "Boards"
        ],
        "summary": "Add a comment to a board"
      }
    },
    "/v3/boards/{board_id}/comments/{comment_id}": {
      "delete": {
        "parameters": [
          {
            "description": "Specify the board containing the comment to delete.",
            "in": "path",
            "name": "board_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specify the comment to delete.",
            "in": "path",
            "name": "comment_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "CommentDeleted"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "InsufficientAccess"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "tags": [
          "Boards"
        ],
        "summary": "Delete a comment from a board"
      }
    },
    "/v3/collections": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionsList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Collections"
        ],
        "description": "Use this endpoint to retrieve collections associated with your Getty Images account. To browse available collections see our [Image collections page]( http://www.gettyimages.com/creative-images/collections).\n\nYou'll need an API key and access token to use this resource.\n",
        "summary": "Gets collections applicable for the customer."
      }
    },
    "/v3/countries": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CountriesList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Countries"
        ],
        "description": "Returns a list of country objects that contains country name, two letter ISO abbreviation and three letter ISO abbreviation.\n\nYou'll need an API key and access token to use this resource.\n",
        "summary": "Gets countries codes and names."
      }
    },
    "/v3/customers/current": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerInfoResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "503": {
            "description": "ServiceUnavailable"
          }
        },
        "tags": [
          "Customers"
        ],
        "description": "Returns the first, middle and last name of the authenticated user.\n\nYou'll need an API key and access token to use this resource.\n\t\nPlease consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens.\n",
        "summary": "Returns information about the current user."
      }
    },
    "/v3/downloads": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "If specified, selects assets downloaded on or after this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD). \r\nAny hour, minute, second values in the request are not used, unless useTimePart parameter is included.\r\nDate/times in the response are UTC. Default is 30 days prior to date_to",
            "format": "date-time",
            "in": "query",
            "name": "date_from",
            "type": "string"
          },
          {
            "description": "If specified, selects assets downloaded on or before this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD)\r\nAny hour, minute, second values in the request are not used, unless useTimePart parameter is included.\r\nDate/times in the response are UTC. Default is current date or 30 days after specified start date, whichever one is earlier.",
            "format": "date-time",
            "in": "query",
            "name": "date_to",
            "type": "string"
          },
          {
            "default": false,
            "description": "If specified, time values provided with date_to or date_from will be used. Time values should be appended to the date value in ISO 8601 format\r\ni.e.: 2019-09-19T19:30:37 or 2019-09-19 19:30:37.  Time zone can be specified as optional.\r\nDefault value is false",
            "in": "query",
            "name": "use_time",
            "type": "boolean"
          },
          {
            "default": 1,
            "description": "Identifies page to return. Default is 1.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 30,
            "description": "Specifies page size. Default is 30, maximum page_size is 100.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          },
          {
            "enum": [
              "easyaccess",
              "editorialsubscription",
              "imagepack",
              "premiumaccess",
              "royaltyfreesubscription"
            ],
            "in": "query",
            "name": "product_type",
            "type": "string"
          },
          {
            "default": false,
            "description": "If specified, returns the list of previously downloaded images for all users in your company. Your account must be enabled for this functionality. Contact your Getty Images account rep for more information. Default is false.",
            "in": "query",
            "name": "company_downloads",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetDownloadsResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "Downloads"
        ],
        "description": "Returns information about a customer's previously downloaded assets.\n\nYou'll need an API key and access token to use this resource.\n \n\n\n\t\nThis endpoint requires being a Getty Images customer to limit your results to only assets that you have a license to use, \nyou need to also include an authorization token in the header of your request. \nPlease consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens.\n",
        "summary": "Returns information about a customer's downloaded assets."
      }
    },
    "/v3/downloads/images/{id}": {
      "post": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "<remarks>\r\n                    Id of image to download.\r\n                </remarks>",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "<remarks>\r\n                    Specifies whether to auto-download the image. If true is specified, a 303 SeeOther status is returned with a\r\n                    Location header set to the location of the image.\r\n                    If false is specified, the download URI will be returned in the response message.\r\n                </remarks>",
            "in": "query",
            "name": "auto_download",
            "type": "boolean"
          },
          {
            "enum": [
              "eps",
              "jpg"
            ],
            "in": "query",
            "name": "file_type",
            "type": "string"
          },
          {
            "description": "<remarks>\r\n                    Specifies the pixel height of the particular image to download.\r\n                    Available heights can be found in the images/{ids} response for the specific image.\r\n                    If left blank, it will return the largest available size.\r\n                </remarks>",
            "in": "query",
            "name": "height",
            "type": "string"
          },
          {
            "description": "<remarks>\r\n                    Identifier of the instance for the selected product offering type.\r\n                </remarks>",
            "format": "int32",
            "in": "query",
            "name": "product_id",
            "type": "integer"
          },
          {
            "enum": [
              "easyaccess",
              "editorialsubscription",
              "imagepack",
              "premiumaccess",
              "royaltyfreesubscription"
            ],
            "in": "query",
            "name": "product_type",
            "type": "string"
          },
          {
            "default": false,
            "description": "Specifies whether to download the image with iStock Team Credits. Only applicable to iStock API keys authenticated with a user that has Team Credits. Blank is the same as False.",
            "in": "query",
            "name": "use_team_credits",
            "type": "boolean"
          },
          {
            "description": "<remarks>\r\n                    Additional information required from specific customers when downloading. \r\n                    Only users who have been set up with a project code by Getty Images Sales need to use this field.\r\n                </remarks>",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PremiumAccessDownloadData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "303": {
            "description": "See Other"
          },
          "400": {
            "description": "MissingRequiredQueryParameters"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "404": {
            "description": "ImageNotFound"
          }
        },
        "tags": [
          "Downloads"
        ],
        "description": "Use this endpoint to generate download URLs and related data for images you are authorized to download.\n\nMost product offerings have enforced periodic download limits such as monthly, weekly, and daily. When this operation executes, the count of allowed downloads is decremented by one for the product offering. Once the download limit is reached for a given product offering, no further downloads may be requested for that product offering until the next download period.\n\nThe download limit for a given download period is covered in your product agreement established with Getty Images.\n\nYou'll need an API key and a [Resource Owner Grant or Implicit Grant](http://developers.gettyimages.com/en/authorization-faq.html) access token to use this resource.\n\n## Auto Downloads\nThe `auto_download` request query parameter specifies whether to automatically download the image.\n\nIf the `auto_download` request query parameter is set to _true_, the API will return an HTTP status code 303 *See Other*. Your client code will need to process this response and redirect to the URI specified in the *Location* header to enable you to automatically download the file. The redirection workflow follows the [HTTP 1.1 protocol](https://tools.ietf.org/html/rfc7231#section-6.4.4).\n\nClient Request:\n\n```\nhttps://api.gettyimages.com/v3/downloads/images/[asset_id]?auto_download=true\n```\n\nServer Response:\n\n```\nHTTP/1.1 303 See Other\nLocation: https://delivery.gettyimages.com/...\n```\n\nIf the `auto_download` request query parameter is set to false, the API will return a HTTP status code 200, along with the URI in the response body which can be used to download the image. \n\nClient Request:\n\n```\nhttps://api.gettyimages.com/v3/downloads/images/[asset_id]?auto_download=false\n```\n\nServer Response:\n\n```\nHTTP/1.1 200 OK\n{\n\t\"uri\": \"https://delivery.gettyimages.com/...\"\n}\n```\n## Downloading Via the Returned URI\n\nThe URI returned by this call should be considered opaque and the format could change at any time.\nIn order to get the filename, length or file type, the response headers must be inspected. An example\nresponse follows:\n\n```\ncontent-length: 33959979\ncontent-type: image/jpeg\ncontent-disposition: attachment; filename=GettyImages-1167612765.jpg\n```\n\nThe `content-disposition` header must be parsed to get a usable filename.\n\n",
        "summary": "Download an image"
      }
    },
    "/v3/downloads/videos/{id}": {
      "post": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "<remarks>\r\n                    Id of video to download.\r\n                </remarks>",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "<remarks>\r\n                    Specifies whether to auto-download the video. If true is specified, a 303 SeeOther status is returned with a\r\n                    Location header set to the location of the video.\r\n                    If false is specified, the download URI will be returned in the response message.\r\n                </remarks>",
            "in": "query",
            "name": "auto_download",
            "type": "boolean"
          },
          {
            "description": "Specifies the size to be downloaded.",
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "description": "<remarks>\r\n                    Identifier of the instance for the selected product offering type.\r\n                </remarks>",
            "format": "int32",
            "in": "query",
            "name": "product_id",
            "type": "integer"
          },
          {
            "description": "Specifies whether to download the image with iStock Team Credits. Only applicable to iStock API keys authenticated with a user that has Team Credits. Blank is the same as False.",
            "in": "query",
            "name": "use_team_credits",
            "type": "boolean"
          },
          {
            "description": "<remarks>\r\n                    Additional information required from specific customers when downloading. \r\n                    Only users who have been set up with a project code by Getty Images Sales need to use this field.\r\n                </remarks>",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PremiumAccessDownloadData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "303": {
            "description": "See Other"
          },
          "400": {
            "description": "MissingRequiredQueryParameters"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "404": {
            "description": "VideoNotFound"
          }
        },
        "tags": [
          "Downloads"
        ],
        "description": "Use this endpoint to generate download URLs and related data for videos you are authorized to download.\n\nMost product offerings have enforced periodic download limits such as monthly, weekly, and daily. When this operation executes, the count of allowed downloads is decremented by one for the product offering. Once the download limit is reached for a given product offering, no further downloads may be requested for that product offering until the next download period.\n\nThe download limit for a given download period is covered in your product agreement established with Getty Images.\n\nYou'll need an API key and a [Resource Owner Grant or Implicit Grant](http://developers.gettyimages.com/en/authorization-faq.html) access token to use this resource.\n\n## Auto Downloads\nThe `auto_download` request query parameter specifies whether to automatically download the video.\n\nIf the `auto_download` request query parameter is set to _true_, the API will return an HTTP status code 303 *See Other*. Your client code will need to process this response and redirect to the URI specified in the *Location* header to enable you to automatically download the file. The redirection workflow follows the [HTTP 1.1 protocol](https://tools.ietf.org/html/rfc7231#section-6.4.4).\n\nClient Request:\n\n```\nhttps://api.gettyimages.com/v3/downloads/videos/[asset_id]?auto_download=true\n```\n\nServer Response:\n\n```\nHTTP/1.1 303 See Other\nLocation: https://delivery.gettyimages.com/...\n```\n\nIf the `auto_download` request query parameter is set to false, the API will return a HTTP status code 200, along with the URI in the response body which can be used to download the video. \n\nClient Request:\n\n```\nhttps://api.gettyimages.com/v3/downloads/videos/[asset_id]?auto_download=false\n```\n\nServer Response:\n\n```\nHTTP/1.1 200 OK\n{\n\t\"uri\": \"https://delivery.gettyimages.com/...\"\n}\n```\n\n## Downloading Via the Returned URI\n\nThe URI returned by this call should be considered opaque and the format could change at any time.\nIn order to get the filename, length or file type, the response headers must be inspected. An example\nresponse follows:\n\n```\ncontent-length: 283925783\ncontent-type: video/quicktime\ncontent-disposition: attachment; filename=GettyImages-690773579.mov\n```\n\nThe `content-disposition` header must be parsed to get a usable filename.\n",
        "summary": "Download a video"
      }
    },
    "/v3/events": {
      "get": {
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma separated list of event ids.",
            "in": "query",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "name": "ids",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma separated list of fields to return in the response.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/EventDetailFieldValues"
            },
            "name": "fields",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "EventNotFound"
          }
        },
        "tags": [
          "Events"
        ],
        "description": "This endpoint returns the detailed event metadata for all specified events. Getty Images news, sports and entertainment photographers and\nvideographers cover editorially relevant events occurring around the world.  All images or video clips produced in association with \nan event, are assigned the same EventID. EventIDs are part of the meta-data returned in SearchForImages Results. Only content \nproduced under a Getty Images brand name (Getty Images News, Getty Images Sports, Getty Images Entertainment, Film Magic, Wire Image) \nwill be consistently assigned an EventID. The Event framework may also be used to group similar content, such as \n\"Hats from the Royal Wedding\" or \"Odd-ballOffbeat images of the week\". \n\nYou'll need an API key and access token to use this resource.\n",
        "summary": "Get metadata for multiple events"
      }
    },
    "/v3/events/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "An event id.",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma separated list of fields to return in the response.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/EventDetailFieldValues"
            },
            "name": "fields",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "EventNotFound"
          }
        },
        "tags": [
          "Events"
        ],
        "description": "This endpoint returns the detailed event metadata for a specified event. Getty Images news, sports and entertainment \nphotographers and videographers cover editorially relevant events occurring around the world.  \nAll images or video clips produced in association with an event, are assigned the same EventID. \nEventIDs are part of the meta-data returned in SearchForImages Results. Only content produced under a Getty Images \nbrand name (Getty Images News, Getty Images Sports, Getty Images Entertainment, Film Magic, Wire Image) will be \nconsistently assigned an EventID. The Event framework may also be used to group similar content, such as \n\"Hats from the Royal Wedding\" or \"Odd-ballOffbeat images of the week\". \n\nYou'll need an API key and access token to use this resource.\n",
        "summary": "Get metadata for a single event"
      }
    },
    "/v3/images": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies one or more image ids to return. Use comma delimiter when requesting multiple ids.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "ids",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies fields to return. Defaults to 'summary_set'. NOTE: Bytes returned by 'download_sizes' field are estimates.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/ImageDetailFieldValues"
            },
            "name": "fields",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImagesDetailResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "404": {
            "description": "ImageNotFound"
          },
          "500": {
            "description": "InvalidIStockCollection"
          }
        },
        "tags": [
          "Images"
        ],
        "description": "This endpoint returns the detailed image metadata for all specified images.\n\nYou'll need an API key and access token to use this resource.\n\n## Working with Fields Sets\n\nFields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:\n\n#### Summary Fields Set\n\nThe **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build \nsearch response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.\n\n```\n{\n    \"images\":\n    [\n        \"artist\",\n        \"asset_family\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"license_model\",\n        \"max_dimensions\",\n        \"title\"\n    ]\n}\n```\n\n#### Detail Fields Set\n\nThe **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a \ndetailed view of images. The following fields are provided for every image in your result set when you include **detail_set** in your request.\n\n```\n{\n    \"images\":\n    [\n        \"allowed_use\",\n        \"artist\", \n        \"artist_title\", \n        \"asset_family\",\n        \"call_for_image\",\n        \"caption\", \n        \"city\",\n        \"collection_code\",\n        \"collection_id\", \n        \"collection_name\",\n        \"color_type\", \n        \"copyright\", \n        \"country\", \n        \"credit_line\", \n        \"date_created\", \n        \"date_submitted\",\n        \"download_sizes\", \n        \"editorial_segments\",\n        \"event_ids\",\n        \"graphical_style\",\n        \"license_model\",\n        \"max_dimensions\",\n        \"orientation\",\n        \"product_types\",\n        \"quality_rank\",\n        \"referral_destinations\",\n        \"state_province\", \n        \"title\"\n    ]\n}\n```\n\n#### Display Fields Set\n\nThe **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution\nfiles that are most frequently used to build a UI displaying search results. The following fields are provided for every image \nin your result set when you include **display_set** in your request.\n\n```\n{\n    \"images\":\n    [\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n    ]\n}\n```\n\n## Request Usage Considerations\n\n- Specifying the \"entity_details\" response field can have significant performance implications. The field should be used only when necessary.\n",
        "summary": "Get metadata for multiple images by supplying multiple image ids"
      }
    },
    "/v3/images/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "An image id. For more than one image please use the /v3/images endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies fields to return. Defaults to 'summary_set'. NOTE: Bytes returned by 'download_sizes' field are estimates.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/ImageDetailFieldValues"
            },
            "name": "fields",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImagesDetailResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "404": {
            "description": "ImageNotFound"
          },
          "500": {
            "description": "InvalidIStockCollection"
          }
        },
        "tags": [
          "Images"
        ],
        "description": "This endpoint returns the detailed image metadata for a specified image.\n\nYou'll need an API key and access token to use this resource. \n \n## Working with Fields Sets\n\nFields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:\n\n#### Summary Fields Set\n\nThe **summary_set** query string parameter fields value represents a small batch of metadata fields that\nare often used to build search response results. The following fields are provided for every image in your\nresult set when you include **summary_set** in your request.\n\n```\n{\n    \"images\":\n    [\n        \"artist\",\n        \"asset_family\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"license_model\",\n        \"max_dimensions\",\n        \"title\"\n    ]\n}\n```\n\n#### Detail Fields Set\n\nThe **detail_set** query string parameter fields value represents a large batch of metadata fields that are \noften used to build a detailed view of images. The following fields are provided for every image in your \nresult set when you include **detail_set** in your request.\n\n```\n{\n    \"images\":\n    [\n        \"allowed_use\",\n        \"artist\", \n        \"artist_title\", \n        \"asset_family\",\n        \"call_for_image\",\n        \"caption\", \n        \"city\",\n        \"collection_code\",\n        \"collection_id\", \n        \"collection_name\",\n        \"color_type\", \n        \"copyright\", \n        \"country\", \n        \"credit_line\", \n        \"date_created\", \n        \"date_submitted\",\n        \"download_sizes\", \n        \"editorial_segments\",\n        \"event_ids\",\n        \"graphical_style\",\n        \"license_model\",\n        \"max_dimensions\",\n        \"orientation\",\n        \"product_types\",\n        \"quality_rank\",\n        \"referral_destinations\",\n        \"state_province\", \n        \"title\"\n    ]\n}\n```\n\n#### Display Fields Set\n\nThe **display_set** query string parameter fields value represents the fields that provide you with URLs for the low\nresolution files that are most frequently used to build a UI displaying search results. The following fields are provided \nfor every image in your result set when you include **display_set** in your request.\n\n```\n{\n    \"images\":\n    [\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n    ]\n}\n```\n\n## Request Usage Considerations\n\n- Specifying the \"entity_details\" response field can have significant performance implications. The field should be used only when necessary.\n",
        "summary": "Get metadata for a single image by supplying one image id"
      }
    },
    "/v3/images/{id}/downloadhistory": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "An image id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "If specified, returns the list of previously downloaded images for all users in your company.\r\n            Your account must be enabled for this functionality. Contact your Getty Images account rep for more information. Default is false.",
            "in": "query",
            "name": "company_downloads",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssetDownloadHistoryResults"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "404": {
            "description": "ImageNotFound"
          },
          "500": {
            "description": "InvalidIStockCollection"
          }
        },
        "tags": [
          "Images"
        ],
        "description": "",
        "summary": "Returns information about a customer's download history for a specific asset"
      }
    },
    "/v3/images/{id}/same-series": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "Identifies an existing image",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/ImagesFieldValues"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Identifies page to return. Default is 1.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 30,
            "description": "Specifies page size. Default is 30, maximum page_size is 100.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImageSearchItemSearchResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "404": {
            "description": "ImageNotFound"
          },
          "500": {
            "description": "InvalidIStockCollection"
          }
        },
        "tags": [
          "Images"
        ],
        "description": "This endpoint will provide the list of images, if any exist, from the same series as the specified creative asset id. These images are typically from the same photo shoot. This functionality will not work for editorial assets.\n\nYou'll need an API key and access token to use this resource.\n\n## Working with Fields Sets\n\nFields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:\n\n#### Summary Fields Set\n\nThe **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build\nsearch response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.\n\n```\n{\n    \"images\":\n    [\n        \"asset_family\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n        \"license_model\",\n        \"max_dimensions\",\n        \"title\"\n    ]\n}\n```\n\n#### Detail Fields Set\n\nThe **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a \ndetailed view of images. The following fields are provided for every image in your result set when you include **detail_set** in your request.\n\n```\n{\n    \"images\":\n    [\n        \"allowed_use\",\n        \"artist\",\n        \"asset_family\",\n        \"call_for_image\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"copyright\",\n        \"date_created\",\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"editorial_segments\",\n        \"event_ids\",\n        \"graphical_style\",\n        \"license_model\",\n        \"max_dimensions\",\n        \"orientation\",\n        \"product_types\",\n        \"quality_rank\",\n        \"referral_destinations\",\n        \"title\"\n    ]\n}\n```\n\n#### Display Fields Set\n\nThe **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files \nthat are most frequently used to build a UI displaying search results. The following fields are provided for every image in your result\nset when you include **display_set** in your request.\n\n```\n{\n    \"images\":\n    [\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n    ]\n}\n```",
        "summary": "Retrieve creative images from the same series"
      }
    },
    "/v3/images/{id}/similar": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "Identifies an existing image",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/ImagesFieldValues"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Identifies page to return. Default is 1.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 30,
            "description": "Specifies page size. Default is 30, maximum page_size is 100.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImageSearchItemSearchResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "404": {
            "description": "ImageNotFound"
          },
          "500": {
            "description": "InvalidIStockCollection"
          }
        },
        "tags": [
          "Images"
        ],
        "description": "This endpoint will provide a list of images that are similar to the specified asset id.\n\nYou'll need an API key and access token to use this resource.\n\n## Working with Fields Sets\n\nFields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:\n\n#### Summary Fields Set\n\nThe **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build\nsearch response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.\n\n```\n{\n    \"images\":\n    [\n        \"asset_family\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n        \"license_model\",\n        \"max_dimensions\",\n        \"title\"\n    ]\n}\n```\n\n#### Detail Fields Set\n\nThe **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a \ndetailed view of images. The following fields are provided for every image in your result set when you include **detail_set** in your request.\n\n```\n{\n    \"images\":\n    [\n        \"allowed_use\",\n        \"artist\",\n        \"asset_family\",\n        \"call_for_image\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"copyright\",\n        \"date_created\",\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"editorial_segments\",\n        \"event_ids\",\n        \"graphical_style\",\n        \"license_model\",\n        \"max_dimensions\",\n        \"orientation\",\n        \"product_types\",\n        \"quality_rank\",\n        \"referral_destinations\",\n        \"title\"\n    ]\n}\n```\n\n#### Display Fields Set\n\nThe **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files \nthat are most frequently used to build a UI displaying search results. The following fields are provided for every image in your result\nset when you include **display_set** in your request.\n\n```\n{\n    \"images\":\n    [\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n    ]\n}\n```",
        "summary": "Retrieve similar images"
      }
    },
    "/v3/orders/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "An order id.",
            "format": "int32",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrderDetail"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "NoAccessToOrderMetadata"
          },
          "404": {
            "description": "OrderNotFound"
          }
        },
        "tags": [
          "Orders"
        ],
        "description": "This endpoint returns detailed order metadata for a specified order.\nUse of this endpoint requires configuration changes to your API key. \n\nYou'll need an API key and access token to use this resource.",
        "summary": "Get order metadata"
      }
    },
    "/v3/products": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Comma separated list of fields. Allows product download requirements to be returned.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/ProductFieldValues"
            },
            "name": "fields",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductsResult"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "CreditPack"
          }
        },
        "tags": [
          "Products"
        ],
        "description": "This endpoint returns all products available to the username used during authentication. As such, this endpoint requires the use of\na fully authorized access_token. The product data can then be used as search filters, restricting results to images from a specific product.\n\nYou'll need an API key and access token to use this resource.\n",
        "summary": "Get Products"
      }
    },
    "/v3/purchased-assets": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "If specified, retrieves previous purchases on or before this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD).",
            "format": "date-time",
            "in": "query",
            "name": "date_to",
            "type": "string"
          },
          {
            "default": 1,
            "description": "Identifies page to return. Default is 1.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 75,
            "description": "Specifies page size. Default is 75, maximum page_size is 100.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          },
          {
            "description": "If specified, retrieves previous purchases on or after this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD).",
            "format": "date-time",
            "in": "query",
            "name": "date_from",
            "type": "string"
          },
          {
            "default": false,
            "description": "If specified, returns the list of previously purchased assets for all users in your company. Your account must be enabled for this functionality. Contact your Getty Images account rep for more information. Default is false.",
            "in": "query",
            "name": "company_purchases",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PreviousAssetPurchases"
            }
          },
          "400": {
            "description": "PageNumberLessThanOne"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "InsufficientPermissions"
          }
        },
        "tags": [
          "Purchases"
        ],
        "description": "This endpoint returns a list of all assets purchased on gettyimages.com by the username used for authentication. \nUse of this endpoint requires configuration changes to your API key. Please contact your sales representative\nto learn more.\n\nYou'll need an API key and access token to use this resource.\n",
        "summary": "Get Previously Purchased Images and Video"
      }
    },
    "/v3/search/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "enum": [
              "archival",
              "entertainment",
              "news",
              "publicity",
              "royalty",
              "sport"
            ],
            "in": "query",
            "name": "editorial_segment",
            "type": "string"
          },
          {
            "description": "Filters to events that start on or after this date. Use ISO 8601 format (e.g., 1999-12-31). Defaults to UTC unless otherwise specified.",
            "format": "date-time",
            "in": "query",
            "name": "date_from",
            "type": "string"
          },
          {
            "description": "Filters to events that start on or before this date. Use ISO 8601 format (e.g., 1999-12-31). Defaults to UTC unless otherwise specified.",
            "format": "date-time",
            "in": "query",
            "name": "date_to",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies fields to return. Default set is 'id','name','start_date'.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/EventFieldValues"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Request results starting at a page number (default is 1, maximum is 50).",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 30,
            "description": "Request number of images to return in each page.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          },
          {
            "default": "",
            "description": "Filters to events related to this phrase",
            "in": "query",
            "name": "phrase",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventsSearchResult"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          }
        },
        "tags": [
          "Search"
        ],
        "description": "Use this endpoint to search Getty Images news, sports and entertainment events. Getty Images photographers and videographers cover editorially relevant events occurring around the world.  All images or video clips produced in association with an event, are assigned the same EventID. EventIDs are part of the meta-data returned in Search Results. Only content produced under a Getty Images brand name (Getty Images News, Getty Images Sports, Getty Images Entertainment, Film Magic, Wire Image) will be consistently assigned an EventID. The Event framework may also be used to group similar content, such as \"Hats from the Royal Wedding\" or \"Odd-ballOffbeat images of the week\".   \n\nYou'll need an API key and access token to use this resource.\n\n\nYou can show different information in the response by specifying values on the \"fields\" parameter (see details below).\nYou can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.\n",
        "summary": "Search for events"
      }
    },
    "/v3/search/images": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on the age of individuals in an image.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/AgeOfPeopleFilterType"
            },
            "name": "age_of_people",
            "type": "array"
          },
          {
            "description": "Search for images by specific artists (free-text, comma-separated list of artists).",
            "in": "query",
            "name": "artists",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter by collection codes (comma-separated list). Include or exclude based on collections_filter_type.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "collection_codes",
            "type": "array"
          },
          {
            "enum": [
              "include",
              "exclude"
            ],
            "in": "query",
            "name": "collections_filter_type",
            "type": "string"
          },
          {
            "description": "Filter based on predominant color in an image. Use 6 character hexidecimal format (e.g., #002244). Note: when specified, results will not contain editorial images.",
            "in": "query",
            "name": "color",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on image composition.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/CompositionsFilterType"
            },
            "name": "compositions",
            "type": "array"
          },
          {
            "description": "Filters based on which product the asset will download against.\r\n                    Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.\r\n                    If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on. \r\n                    For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234. \r\n                    Product ID can be obtained from the GET /products response.",
            "in": "query",
            "name": "download_product",
            "type": "string"
          },
          {
            "description": "Restrict search results to embeddable images. The default is false.",
            "in": "query",
            "name": "embed_content_only",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on specific events",
            "in": "query",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "name": "event_ids",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter search results based on the ethnicity of individuals in an image.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/EthnicityFilterType"
            },
            "name": "ethnicity",
            "type": "array"
          },
          {
            "description": "Excludes images containing nudity. The default is false.",
            "in": "query",
            "name": "exclude_nudity",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/ImagesFieldValues"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Return only images having a specific file type.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/SearchFileType"
            },
            "name": "file_types",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on graphical style of the image.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/GraphicalStyle"
            },
            "name": "graphical_styles",
            "type": "array"
          },
          {
            "enum": [
              "include",
              "exclude"
            ],
            "in": "query",
            "name": "graphical_styles_filter_type",
            "type": "string"
          },
          {
            "default": false,
            "description": "Specifies whether or not to include related searches in the response. The default is false.",
            "in": "query",
            "name": "include_related_searches",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
            "in": "query",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "name": "keyword_ids",
            "type": "array"
          },
          {
            "enum": [
              "x_small",
              "small",
              "medium",
              "large",
              "x_large",
              "xx_large",
              "vector"
            ],
            "in": "query",
            "name": "minimum_size",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on the number of people in the image.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/NumberOfPeopleFilterType"
            },
            "name": "number_of_people",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Return only images with selected aspect ratios.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/OrientationRequest"
            },
            "name": "orientations",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Request results starting at a page number (default is 1).",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 30,
            "description": "Request number of images to return in each page.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          },
          {
            "description": "Search images using a search phrase.",
            "in": "query",
            "name": "phrase",
            "type": "string"
          },
          {
            "enum": [
              "best_match",
              "most_popular",
              "newest",
              "random"
            ],
            "in": "query",
            "name": "sort_order",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Return only images associated with specific people (using a comma-delimited list).",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "specific_people",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImageSearchItemSearchResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          }
        },
        "tags": [
          "Search"
        ],
        "description": "Use this endpoint to search over a blend of our contemporary stock photos, illustrations, archival images, editorial photos, illustrations and archival images. Because this draws from such a large diversity of content, the results will not be as relevant as when the more specific Creative or Editorial endpoints are used. Additionally, the response time for this endpoint is slower compared to that for Creative and Editorial-specific endpoints. For these reasons, it is highly recommended that those endpoints are used instead of this blended endpoint.\n\nYou'll need an API key and access token to use this resource.\n\nYou can show different information in the response by specifying values on the \"fields\" parameter (see details below).\nYou can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.<br>\nTo include your API token in the search request, add it to the headers as a Bearer token (example in curl):\n\n\t-H \"Authorization: Bearer <your-token>\"\n\n## Working with Fields Sets\n\nFields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:\n\n#### Summary Fields Set\n\nThe **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.\n\n```\n{\n    \"images\": \n    [\n        \"asset_family\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"license_model\",\n        \"max_dimensions\",\n        \"title\"\n    ]\n}\n```\n\n#### Detail Fields Set\n\nThe **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of images. \nThe following fields are provided for every image in your result set when you include **detail_set** in your request.\n\n```\n{\n    \"images\": \n    [\n        \"allowed_use\",\n        \"artist\",\n        \"asset_family\",\n        \"call_for_image\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"copyright\",\n        \"date_created\",\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"editorial_segments\",\n        \"event_ids\",\n        \"graphical_style\",\n        \"license_model\",\n        \"max_dimensions\",\n        \"orientation\",\n        \"product_types\",\n        \"quality_rank\",\n        \"referral_destinations\",\n        \"title\"\n    ]\n]\n```\n\n#### Display Fields Set\n\nThe **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most \nfrequently used to build a UI displaying search results. The following fields are provided for every image in your result set when you include **display_set**\nin your request.\n\n```\n{\n    \"images\": \n    [\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n    ]\n}\n```\n\n## Request Usage Considerations\n\n- Specifying the \"entity_details\" response field can have significant performance implications. The field should be used only when necessary.\n",
        "summary": "Search for both creative and editorial images"
      }
    },
    "/v3/search/images/creative": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on the age of individuals in an image.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/AgeOfPeopleFilterType"
            },
            "name": "age_of_people",
            "type": "array"
          },
          {
            "description": "Search for images by specific artists (free-text, comma-separated list of artists).",
            "in": "query",
            "name": "artists",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter by collection codes (comma-separated list). Include or exclude based on collections_filter_type.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "collection_codes",
            "type": "array"
          },
          {
            "enum": [
              "include",
              "exclude"
            ],
            "in": "query",
            "name": "collections_filter_type",
            "type": "string"
          },
          {
            "description": "Filter based on predominant color in an image. Use 6 character hexidecimal format (e.g., #002244).",
            "in": "query",
            "name": "color",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on image composition.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/CompositionsFilterType"
            },
            "name": "compositions",
            "type": "array"
          },
          {
            "description": "Filters based on which product the asset will download against.\r\n                    Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.\r\n                    If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on. \r\n                    For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234. \r\n                    Product ID can be obtained from the GET /products response.",
            "in": "query",
            "name": "download_product",
            "type": "string"
          },
          {
            "description": "Restrict search results to embeddable images. The default is false.",
            "in": "query",
            "name": "embed_content_only",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter search results based on the ethnicity of individuals in an image.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/EthnicityFilterType"
            },
            "name": "ethnicity",
            "type": "array"
          },
          {
            "description": "Excludes images containing nudity. The default is false.",
            "in": "query",
            "name": "exclude_nudity",
            "type": "boolean"
          },
          {
            "description": "Exclude images that are only available for editorial (non-commercial) use. Default value is false.",
            "in": "query",
            "name": "exclude_editorial_use_only",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/CreativeImagesFieldValues"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Return only images having a specific file type.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/SearchFileType"
            },
            "name": "file_types",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on graphical style of the image.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/GraphicalStyle"
            },
            "name": "graphical_styles",
            "type": "array"
          },
          {
            "enum": [
              "include",
              "exclude"
            ],
            "in": "query",
            "name": "graphical_styles_filter_type",
            "type": "string"
          },
          {
            "default": false,
            "description": "Specifies whether or not to include related searches in the response. The default is false.",
            "in": "query",
            "name": "include_related_searches",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
            "in": "query",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "name": "keyword_ids",
            "type": "array"
          },
          {
            "enum": [
              "x_small",
              "small",
              "medium",
              "large",
              "x_large",
              "xx_large",
              "vector"
            ],
            "in": "query",
            "name": "minimum_size",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on the number of people in the image.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/NumberOfPeopleFilterType"
            },
            "name": "number_of_people",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Return only images with selected aspect ratios.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/OrientationRequest"
            },
            "name": "orientations",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Request results starting at a page number (default is 1).",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 30,
            "description": "Request number of images to return in each page.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          },
          {
            "default": "",
            "description": "Search images using a search phrase.",
            "in": "query",
            "name": "phrase",
            "type": "string"
          },
          {
            "enum": [
              "best_match",
              "most_popular",
              "newest",
              "random"
            ],
            "in": "query",
            "name": "sort_order",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.\r\n                   The include_facets parameter must be set to \"true\" for facets to be returned.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/CreateImageSearchFacetsFields"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "description": "Specifies whether or not to include facets in the result set. Default is \"false\".",
            "in": "query",
            "name": "include_facets",
            "type": "boolean"
          },
          {
            "description": "Specifies the maximum number of facets to return per type. Default is 300.",
            "format": "int32",
            "in": "query",
            "name": "facet_max_count",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreativeImageSearchResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "500": {
            "description": "InvalidIStockCollection"
          }
        },
        "tags": [
          "Search"
        ],
        "description": "Use this endpoint to search our contemporary stock photos, illustrations and archival images.\n\nYou'll need an API key and access token to use this resource.\n \nYou can show different information in the response by specifying values on the \"fields\" parameter (see details below).\nYou can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.\n\n## Working with Fields Sets\n\nFields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:\n\n#### Summary Fields Set\n\nThe **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to \nbuild search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.\n\n```\n{\n    \"images\": \n    [\n        \"asset_family\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"license_model\",\n        \"max_dimensions\",\n        \"title\"\n    ]\n}\n```\n\n#### Detail Fields Set\n\nThe **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to \nbuild a detailed view of images. The following fields are provided for every image in your result set when you include **detail_set** in your request.\n\n```\n{\n    \"images\": \n    [\n        \"allowed_use\",\n        \"artist\",\n        \"asset_family\",\n        \"call_for_image\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"copyright\",\n        \"date_created\",\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"editorial_segments\",\n        \"event_ids\",\n        \"graphical_style\",\n        \"license_model\",\n        \"max_dimensions\",\n        \"orientation\",\n        \"product_types\",\n        \"quality_rank\",\n        \"referral_destinations\",\n        \"title\"\n    ]\n]\n```\n\n#### Display Fields Set\n\nThe **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution\nfiles that are most frequently used to build a UI displaying search results. The following fields are provided for every image \nin your result set when you include **display_set** in your request.\n\n```Go\n{\n    \"images\": \n    [\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n    ]\n}\n```\n",
        "summary": "Search for creative images only"
      }
    },
    "/v3/search/images/creative/by-image": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "Specifies the location of the image to use in the search.",
            "in": "query",
            "name": "image_url",
            "type": "string"
          },
          {
            "description": "CURRENTLY HAS NO EFFECT",
            "in": "query",
            "name": "image_fingerprint",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/CreativeImagesFieldValues"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter images to those from one of your product types. \r\n                    Allowed values are easyaccess, imagepack, premiumaccess and royaltyfreesubscription. \r\n                    If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on. \r\n                    For example, some users may have more than one premiumaccess product, so the product_types value would be premiumaccess:1234. \r\n                    Product ID can be obtained from the GET /products response.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "product_types",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Request results starting at a page number (default is 1).",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 30,
            "description": "Request number of images to return in each page.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.\r\n                    The include_facets parameter must be set to \"true\" for facets to be returned.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/CreateImageSearchFacetsFields"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "description": "Specifies the maximum number of facets to return per type. Default is 300.",
            "format": "int32",
            "in": "query",
            "name": "facet_max_count",
            "type": "integer"
          },
          {
            "description": "Specifies whether or not to include facets in the result set. Default is \"false\".",
            "in": "query",
            "name": "include_facets",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchByImageResourceResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "500": {
            "description": "InvalidIStockCollection"
          }
        },
        "tags": [
          "Search"
        ],
        "description": "Allows searching for similar creative images by passing the URL to an existing image.\n\nBefore calling the search by image endpoint, an image must be uploaded to a specific AWS S3 bucket. The bucket name is `search-by-image.s3.amazonaws.com`.\nFor example, using cURL:\n```sh\ncurl -i -X PUT https://search-by-image.s3.amazonaws.com/my-test-image.jpg -H \"Content-Type: image/jpeg\" --data-binary \"@testimage.jpg\"\n```\n\nUploads can be overwritten if the names are the same, so using a prefix like the API Key, application name or company name is recommended. Uploads will expire from the bucket after 24 hours.\n\nOnce the image has been uploaded, use the full URL in the `image_url` parameter, e.g. `image_url=https://search-by-image.s3.amazonaws.com/my-test-image.jpg`.\n\n<!-- TODO/HACK from https://app.clickup.com/t/8mfmv3 - Uncomment this if image_fingerprint ever comes back to be useful -->\n<!-- Subsequent searches for the same image can be executed using the `image_fingerprint` that is returned by the initial search. -->\n",
        "summary": "Search for creative images based on url"
      }
    },
    "/v3/search/images/editorial": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on the age of individuals in an image.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/AgeOfPeopleFilterType"
            },
            "name": "age_of_people",
            "type": "array"
          },
          {
            "description": "Search for images by specific artists (free-text, comma-separated list of artists).",
            "in": "query",
            "name": "artists",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter by collections (comma-separated list of collection codes). Include or exclude based on collections_filter_type.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "collection_codes",
            "type": "array"
          },
          {
            "enum": [
              "include",
              "exclude"
            ],
            "in": "query",
            "name": "collections_filter_type",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on image composition.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/CompositionsFilterType"
            },
            "name": "compositions",
            "type": "array"
          },
          {
            "description": "Filters based on which product the asset will download against.\r\n                    Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.\r\n                    If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on. \r\n                    For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234. \r\n                    Product ID can be obtained from the GET /products response.",
            "in": "query",
            "name": "download_product",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Return only events with a matching editorial segment.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/EditorialSegmentContract"
            },
            "name": "editorial_segments",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "specify linked data entity uri.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "entity_uris",
            "type": "array"
          },
          {
            "description": "Restrict search results to embeddable images. The default is false.",
            "in": "query",
            "name": "embed_content_only",
            "type": "boolean"
          },
          {
            "description": "Return only images that are created on or after this date. Use ISO 8601 format (e.g., 1999-12-31).",
            "format": "date-time",
            "in": "query",
            "name": "date_from",
            "type": "string"
          },
          {
            "description": "Return only images that are created on or before this date. Use ISO 8601 format (e.g., 1999-12-31).",
            "format": "date-time",
            "in": "query",
            "name": "date_to",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on specific events",
            "in": "query",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "name": "event_ids",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter search results based on the ethnicity of individuals in an image.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/EthnicityFilterType"
            },
            "name": "ethnicity",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/EditorialImagesFieldValues"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Return only images having a specific file type.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/SearchFileType"
            },
            "name": "file_types",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on graphical style of the image.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/EditorialGraphicalStyle"
            },
            "name": "graphical_styles",
            "type": "array"
          },
          {
            "enum": [
              "include",
              "exclude"
            ],
            "in": "query",
            "name": "graphical_styles_filter_type",
            "type": "string"
          },
          {
            "default": false,
            "description": "Specifies whether or not to include related searches in the response. The default is false.",
            "in": "query",
            "name": "include_related_searches",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
            "in": "query",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "name": "keyword_ids",
            "type": "array"
          },
          {
            "enum": [
              "x_small",
              "small",
              "medium",
              "large",
              "x_large",
              "xx_large",
              "vector"
            ],
            "in": "query",
            "name": "minimum_size",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on the number of people in the image.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/NumberOfPeopleFilterType"
            },
            "name": "number_of_people",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Return only images with selected aspect ratios.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/OrientationRequest"
            },
            "name": "orientations",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Request results starting at a page number (default is 1).",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 30,
            "description": "Request number of images to return in each page.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          },
          {
            "description": "Search images using a search phrase.",
            "in": "query",
            "name": "phrase",
            "type": "string"
          },
          {
            "enum": [
              "best_match",
              "most_popular",
              "newest",
              "oldest",
              "random"
            ],
            "in": "query",
            "name": "sort_order",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Return only images associated with specific people (using a comma-delimited list).",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "specific_people",
            "type": "array"
          },
          {
            "description": "Filter search results based on minimum quality ranking. Possible values 1, 2, 3 with 1 being best.",
            "format": "int32",
            "in": "query",
            "name": "minimum_quality_rank",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.\r\n                   The include_facets parameter must be set to \"true\" for facets to be returned.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/EditorialImageSearchFacetsFields"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "description": "Specifies whether or not to include facets in the result set. Default is \"false\".",
            "in": "query",
            "name": "include_facets",
            "type": "boolean"
          },
          {
            "description": "Specifies the maximum number of facets to return per type. Default is 300.",
            "format": "int32",
            "in": "query",
            "name": "facet_max_count",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EditorialImageSearchResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          }
        },
        "tags": [
          "Search"
        ],
        "description": "Use this endpoint to search our editorial stock photos, illustrations and archival images.  Editorial images represent newsworthy events or illustrate matters of general interest, such as news, sport and entertainment and are generally intended for editorial use.\n\nYou'll need an API key and access token to use this resource.\n\nYou can show different information in the response by specifying values on the \"fields\" parameter (see details below).\nYou can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.\nTo include your API token in the search request, add it to the headers as a Bearer token (example in curl):\n\n\t-H \"Authorization: Bearer <your-token>\"\n\n## Working with Fields Sets\n\nFields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:\n\n#### Summary Fields Set\n\nThe **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.\n\n```\n{\n    \"images\": \n    [\n        \"asset_family\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"license_model\",\n        \"max_dimensions\",\n        \"title\"\n    ]\n}\n```\n\n#### Detail Fields Set\n\nThe **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of images. The following fields are provided for every image in your result set when you include **detail_set** in your request.\n\n```\n{\n    \"images\": \n    [\n        \"allowed_use\",\n        \"artist\",\n        \"asset_family\",\n        \"call_for_image\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"copyright\",\n        \"date_created\",\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"editorial_segments\",\n        \"event_ids\",\n        \"graphical_style\",\n        \"license_model\",\n        \"max_dimensions\",\n        \"orientation\",\n        \"product_types\",\n        \"quality_rank\",\n        \"referral_destinations\",\n        \"title\"\n    ]\n]\n```\n\n#### Display Fields Set\n\nThe **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every image in your result set when you include **display_set** in your request.\n\n```\n{\n    \"images\": \n    [\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n    ]\n}\n```\n\n## Request Usage Considerations\n\n- Specifying the \"entity_details\" response field can have significant performance implications. The field should be used only when necessary.\n",
        "summary": "Search for editorial images only"
      }
    },
    "/v3/search/videos/creative": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Provides filtering according to the age of individuals in a video.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/AgeOfPeopleFilterType"
            },
            "name": "age_of_people",
            "type": "array"
          },
          {
            "description": "Search for images by specific artists (free-text, comma-separated list of artists).",
            "in": "query",
            "name": "artists",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Provides filtering by collection code.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "collection_codes",
            "type": "array"
          },
          {
            "enum": [
              "include",
              "exclude"
            ],
            "in": "query",
            "name": "collections_filter_type",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on video composition.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/CompositionsFilterType"
            },
            "name": "compositions",
            "type": "array"
          },
          {
            "description": "Filters based on which product the asset will download against.\r\n                    Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.\r\n                    If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on. \r\n                    For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234. \r\n                    Product ID can be obtained from the GET /products response.",
            "in": "query",
            "name": "download_product",
            "type": "string"
          },
          {
            "enum": [
              "sd",
              "hd",
              "4k",
              "hd_web"
            ],
            "in": "query",
            "name": "format_available",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Provides filtering by video frame rate (frames/second).",
            "in": "query",
            "items": {
              "$ref": "#/definitions/VideoFrameRates"
            },
            "name": "frame_rates",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/CreativeVideosFieldValues"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on image technique.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/ImageTechniquesFilterType"
            },
            "name": "image_techniques",
            "type": "array"
          },
          {
            "default": false,
            "description": "Specifies whether or not to include related searches in the response. The default is false.",
            "in": "query",
            "name": "include_related_searches",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
            "in": "query",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "name": "keyword_ids",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies the video licensing model(s).",
            "in": "query",
            "items": {
              "$ref": "#/definitions/LicenseModelVideoRequest"
            },
            "name": "license_models",
            "type": "array"
          },
          {
            "default": 0,
            "description": "Provides filtering by minimum length of video clip, in seconds",
            "format": "int32",
            "in": "query",
            "name": "min_clip_length",
            "type": "integer"
          },
          {
            "default": 0,
            "description": "Provides filtering by maximum length of video, in seconds",
            "format": "int32",
            "in": "query",
            "name": "max_clip_length",
            "type": "integer"
          },
          {
            "default": 1,
            "description": "Identifies page to return. Default is 1.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 30,
            "description": "Specifies page size. Default is 30, maximum page_size is 100.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          },
          {
            "default": "",
            "description": "Free-text search query.",
            "in": "query",
            "name": "phrase",
            "type": "string"
          },
          {
            "enum": [
              "best_match",
              "most_popular",
              "newest",
              "random"
            ],
            "in": "query",
            "name": "sort_order",
            "type": "string"
          },
          {
            "enum": [
              "release_not_important",
              "fully_released"
            ],
            "in": "query",
            "name": "release_status",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.\r\n                   The include_facets parameter must be set to \"true\" for facets to be returned.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/CreateVideoSearchFacetsFields"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "description": "Specifies the maximum number of facets to return per type. Default is 300.",
            "format": "int32",
            "in": "query",
            "name": "facet_max_count",
            "type": "integer"
          },
          {
            "description": "Specifies whether or not to include facets in the result set. Default is \"false\".",
            "in": "query",
            "name": "include_facets",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on viewpoint.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/ViewpointsFilterType"
            },
            "name": "viewpoints",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreativeVideoSearchResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "500": {
            "description": "InvalidIStockCollection"
          }
        },
        "tags": [
          "Search"
        ],
        "description": "Use this endpoint to search premium stock video, from archival film to contemporary 4K and HD footage.\n\nYou'll need an API key and access token to use this resource.\n\nYou can show different information in the response by specifying values on the \"fields\" parameter (see details below).\nYou can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without\nbeing logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only \nassets that you have a license to use, you need to also include an authorization token in the header of your request.\nPlease consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens.\n\n## Working with Fields Sets\n\nFields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:\n\n#### Summary Fields Set\n\nThe **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search\nresponse results. The following fields are provided for every video in your result set when you include **summary_set** in your request.\n\n```\n{\n    \"videos\": \n    [\n        \"asset_family\", \n        \"caption\",\n        \"collection_code\",\n        \"collection_name\",\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"license_model\",\n        \"title\"\n    ]\n}\n```\n\n#### Detail Fields Set\n\nThe **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a \ndetailed view of videos. The following fields are provided for every video in your result set when you include **detail_set** in your request.\n\n```\n{\n    \"videos\": \n    [\n        \"allowed_use\",\n        \"artist\",\n        \"asset_family\", \n\t\t\"call_for_image\",\n        \"caption\", \n        \"clip_length\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\", \n        \"color_type\",\n        \"copyright\",\n        \"date_created\",\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"era\",\n        \"license_model\",\n        \"mastered_to\",\n        \"originally_shot_on\",\n        \"product_types\",\n        \"shot_speed\",\n        \"source\",\n        \"title\"\n    ]\n}\n```\n\n#### Display Fields Set\n\nThe **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files \nthat are most frequently used to build a UI displaying search results. The following fields are provided for every video in your result \nset when you include **display_set** in your request.\n\n```\n{\n    \"videos\":\n    [\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n    ]\n}\n```",
        "summary": "Search for creative videos"
      }
    },
    "/v3/search/videos/editorial": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Provides filtering according to the age of individuals in a video.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/AgeOfPeopleFilterType"
            },
            "name": "age_of_people",
            "type": "array"
          },
          {
            "description": "Search for images by specific artists (free-text, comma-separated list of artists).",
            "in": "query",
            "name": "artists",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Provides filtering by collection code.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "collection_codes",
            "type": "array"
          },
          {
            "enum": [
              "include",
              "exclude"
            ],
            "in": "query",
            "name": "collections_filter_type",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on video composition.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/CompositionsFilterType"
            },
            "name": "compositions",
            "type": "array"
          },
          {
            "description": "Filters based on which product the asset will download against.\r\n                    Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.\r\n                    If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on. \r\n                    For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234. \r\n                    Product ID can be obtained from the GET /products response.",
            "in": "query",
            "name": "download_product",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Allows filtering by types of video.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/EditorialVideoType"
            },
            "name": "editorial_video_types",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "specify link data entity uri.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "entity_uris",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Allows filtering by specific peoples' names.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "specific_people",
            "type": "array"
          },
          {
            "enum": [
              "sd",
              "hd",
              "4k",
              "hd_web"
            ],
            "in": "query",
            "name": "format_available",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Provides filtering by video frame rate (frames/second).",
            "in": "query",
            "items": {
              "$ref": "#/definitions/VideoFrameRates"
            },
            "name": "frame_rates",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/VideosFieldValues"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on image technique.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/ImageTechniquesFilterType"
            },
            "name": "image_techniques",
            "type": "array"
          },
          {
            "default": false,
            "description": "Specifies whether or not to include related searches in the response. The default is false.",
            "in": "query",
            "name": "include_related_searches",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
            "in": "query",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "name": "keyword_ids",
            "type": "array"
          },
          {
            "default": 0,
            "description": "Provides filtering by minimum length of video clip, in seconds",
            "format": "int32",
            "in": "query",
            "name": "min_clip_length",
            "type": "integer"
          },
          {
            "default": 0,
            "description": "Provides filtering by maximum length of video clip, in seconds",
            "format": "int32",
            "in": "query",
            "name": "max_clip_length",
            "type": "integer"
          },
          {
            "default": 1,
            "description": "Identifies page to return. Default is 1.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 30,
            "description": "Specifies page size. Default is 30, maximum page_size is 100.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          },
          {
            "default": "",
            "description": "Free-text search query.",
            "in": "query",
            "name": "phrase",
            "type": "string"
          },
          {
            "enum": [
              "best_match",
              "most_popular",
              "newest",
              "oldest",
              "random"
            ],
            "in": "query",
            "name": "sort_order",
            "type": "string"
          },
          {
            "enum": [
              "release_not_important",
              "fully_released"
            ],
            "in": "query",
            "name": "release_status",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.\r\n                   The include_facets parameter must be set to \"true\" for facets to be returned.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/EditorialVideoSearchFacetsFields"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "description": "Specifies whether or not to include facets in the result set. Default is \"false\".",
            "in": "query",
            "name": "include_facets",
            "type": "boolean"
          },
          {
            "description": "Specifies the maximum number of facets to return per type. Default is 300.",
            "format": "int32",
            "in": "query",
            "name": "facet_max_count",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter based on viewpoint.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/ViewpointsFilterType"
            },
            "name": "viewpoints",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EditorialVideoSearchResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          }
        },
        "tags": [
          "Search"
        ],
        "description": "Use this endpoint to search current and archival video clips of celebrities, newsmakers, and events.\n\nYou'll need an API key and access token to use this resource.\n\nYou can show different information in the response by specifying values on the \"fields\" parameter (see details below).\nYou can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.\n\n## Working with Fields Sets\n\nFields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:\n\n#### Summary Fields Set\n\nThe **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every video in your result set when you include **summary_set** in your request.\n\n```\n{\n    \"videos\": \n    [\n        \"asset_family\", \n        \"caption\",\n        \"collection_code\",\n        \"collection_name\",\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"license_model\",\n        \"title\"\n    ]\n}\n```\n\n#### Detail Fields Set\n\nThe **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of videos. The following fields are provided for every video in your result set when you include **detail_set** in your request.\n\n```\n{\n    \"videos\": \n    [\n        \"allowed_use\",\n        \"artist\",\n        \"asset_family\", \n\t\t\"call_for_image\",\n        \"caption\", \n        \"clip_length\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\", \n        \"color_type\",\n        \"copyright\",\n        \"date_created\",\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"era\",\n        \"license_model\",\n        \"mastered_to\",\n        \"originally_shot_on\",\n        \"product_types\",\n        \"shot_speed\",\n        \"source\",\n        \"title\"\n    ]\n}\n```\n\n#### Display Fields Set\n\nThe **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every video in your result set when you include **display_set** in your request.\n\n```\n{\n    \"videos\":\n    [\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n    ]\n}\n```\n\n## Request Usage Considerations\n\n- Specifying the \"entity_details\" response field can have significant performance implications. The field should be used only when necessary.\n",
        "summary": "Search for editorial videos"
      }
    },
    "/v3/usage-batches/{id}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies a unique batch transaction id to identify the report.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies up to 1000 sets of asset Id, usage count, and date of use to submit usages for. \r\n            Note that all asset Ids specified must be valid or the operation will fail causing no usages to be recorded. \r\n            All dates must be on or before this date and the format should be ISO 8601 (ex: YYYY-MM-DD), time is not needed.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/report_usage_batch_request"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success - All usages reported were successfully recorded.",
            "schema": {
              "$ref": "#/definitions/report_usage_batch_response"
            }
          },
          "400": {
            "description": "InvalidRequest - The content of the request was invalid. Most commonly this is due to either too many assets specified, no assets or invalid JSON."
          },
          "401": {
            "description": "AuthorizationTokenRequired - Authorization token was missing or not valid."
          },
          "403": {
            "description": "UnauthorizedToReportUsage"
          },
          "409": {
            "description": "TransactionIdDuplicated"
          }
        },
        "tags": [
          "Usage"
        ],
        "description": "# Report Usage\n\nUse this endpoint to report the usages of a set of assets. The count of assets submitted in a single batch to this endpoint is limited to 1000. Note that all asset Ids specified must be valid or the operation will fail causing no usages to be recorded. In this case, you will need to remove the invalid asset Ids from the query request and re-submit the query.\n\n##  Quickstart\n\nYou'll need an API key and a [Resource Owner Grant](http://developers.gettyimages.com/en/authorization-faq.html) access token to use this resource.\nPlease see our [Getting Started](http://developers.gettyimages.com/en/getting-started.html) page for more information on how to sign up for an API key. \n\n_Note_: Date of use can be in any unambiguous date format.\n",
        "summary": "Report usage of assets via a batch format."
      }
    },
    "/v3/videos": {
      "get": {
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies one or more video ids to return. Use comma delimiter when requesting multiple ids.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "ids",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/VideoDetailFieldValues"
            },
            "name": "fields",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "404": {
            "description": "VideosNotFound"
          },
          "500": {
            "description": "InvalidIStockCollection"
          }
        },
        "tags": [
          "Videos"
        ],
        "description": "Use this endpoint to return detailed video metadata for all the specified video ids.\n\nYou'll need an API key and access token to use this resource.\n\nYou can show different information in the response by specifying values on the \"fields\" parameter (see details below).\nYou can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.\n\n## Working with Fields Sets\n\nFields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:\n\n#### Summary Fields Set\n\nThe **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every video in your result set when you include **summary_set** in your request.\n\n```\n{\n    \"videos\": \n    [\n        \"asset_family\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_name\",\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"license_model\",\n        \"title\"\n    ]\n}\n```\n\n#### Detail Fields Set\n\nThe **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of videos. The following fields are provided for every video in your result set when you include **detail_set** in your request.\n\n```\n{\n    \"videos\": \n    [\n        \"allowed_use\",\n        \"artist\",\n        \"asset_family\",\n\t\t\"call_for_image\",\n        \"caption\",\n        \"clip_length\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"color_type\",\n        \"copyright\",\n        \"date_created\",\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"download_sizes\",\n        \"era\",\n        \"license_model\",\n        \"mastered_to\",\n        \"originally_shot_on\",\n        \"product_types\",\n        \"shot_speed\",\n        \"source\",\n        \"title\"\n    ]\n}\n```\n\n#### Display Fields Set\n\nThe **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every video in your result set when you include **display_set** in your request.\n\n```\n{\n    \"videos\":\n    [\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n    ]\n}\n```\n\n## Request Usage Considerations\n\n- Specifying the \"entity_details\" response field can have significant performance implications. The field should be used only when necessary.\n",
        "summary": "Get metadata for multiple videos by supplying multiple video ids"
      }
    },
    "/v3/videos/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "A video id. For more than one video please use the /v3/video endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "comma delimited list of fields to retrieve for the video",
            "in": "query",
            "items": {
              "$ref": "#/definitions/VideoDetailFieldValues"
            },
            "name": "fields",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "404": {
            "description": "VideosNotFound"
          },
          "500": {
            "description": "InvalidIStockCollection"
          }
        },
        "tags": [
          "Videos"
        ],
        "description": "Use this endpoint to return detailed video metadata for the specified video id.\n\nYou'll need an API key and access token to use this resource.\n\nYou can show different information in the response by specifying values on the \"fields\" parameter (see details below).\nYou can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.\n\n## Working with Fields Sets\n\nFields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:\n\n#### Summary Fields Set\n\nThe **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every video in your result set when you include **summary_set** in your request.\n\n```\n{\n    \"videos\":\n    [\n        \"asset_family\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_name\",\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"license_model\",\n        \"title\"\n    ]\n}\n```\n\n#### Detail Fields Set\n\nThe **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of videos. The following fields are provided for every video in your result set when you include **detail_set** in your request.\n\n```\n{\n    \"videos\":\n    [\n        \"allowed_use\",\n        \"artist\",\n        \"asset_family\",\n\t\t\"call_for_image\",\n        \"caption\",\n        \"clip_length\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"color_type\",\n        \"copyright\",\n        \"date_created\",\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"download_sizes\",\n        \"era\",\n        \"license_model\",\n        \"mastered_to\",\n        \"originally_shot_on\",\n        \"product_types\",\n        \"shot_speed\",\n        \"source\",\n        \"title\"\n    ]\n}\n```\n\n#### Display Fields Set\n\nThe **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every video in your result set when you include **display_set** in your request.\n\n```\n{\n    \"videos\":\n    [\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n    ]\n}\n```\n\n## Request Usage Considerations\n\n- Specifying the \"entity_details\" response field can have significant performance implications. The field should be used only when necessary.\n",
        "summary": "Get metadata for a single video by supplying one video id"
      }
    },
    "/v3/videos/{id}/downloadhistory": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "An image id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "If specified, returns the list of previously downloaded images for all users in your company.\r\n            Your account must be enabled for this functionality. Contact your Getty Images account rep for more information. Default is false.",
            "in": "query",
            "name": "company_downloads",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssetDownloadHistoryResults"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "404": {
            "description": "VideosNotFound"
          },
          "500": {
            "description": "InvalidIStockCollection"
          }
        },
        "tags": [
          "Videos"
        ],
        "description": "",
        "summary": "Returns information about a customer's download history for a specific asset"
      }
    },
    "/v3/videos/{id}/same-series": {
      "get": {
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "Identifies an existing video",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/VideosFieldValues"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Identifies page to return. Default is 1.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 30,
            "description": "Specifies page size. Default is 30, maximum page_size is 100.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "404": {
            "description": "VideosNotFound"
          },
          "500": {
            "description": "InvalidIStockCollection"
          }
        },
        "tags": [
          "Videos"
        ],
        "description": "This endpoint will provide the list of videos, if any exist, from the same series as the specified creative asset id. These images are typically from the same photo shoot. This functionality will not work for editorial assets.\n\nYou'll need an API key and access token to use this resource.\n\n## Working with Fields Sets\n\nFields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:\n\n#### Summary Fields Set\n\nThe **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every video in your result set when you include **summary_set** in your request.\n\n```\n{\n    \"videos\":\n    [\n        \"asset_family\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_name\",\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"license_model\",\n        \"title\"\n    ]\n}\n```\n\n#### Detail Fields Set\n\nThe **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of videos. The following fields are provided for every video in your result set when you include **detail_set** in your request.\n\n```\n{\n    \"videos\":\n    [\n        \"allowed_use\",\n        \"artist\",\n        \"asset_family\",\n\t\t\"call_for_image\",\n        \"caption\",\n        \"clip_length\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"color_type\",\n        \"copyright\",\n        \"date_created\",\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"download_sizes\",\n        \"era\",\n        \"license_model\",\n        \"mastered_to\",\n        \"originally_shot_on\",\n        \"product_types\",\n        \"shot_speed\",\n        \"source\",\n        \"title\"\n    ]\n}\n```\n\n#### Display Fields Set\n\nThe **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every video in your result set when you include **display_set** in your request.\n\n```\n{\n    \"videos\":\n    [\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n    ]\n}\n```",
        "summary": "Retrieve creative videos from the same series"
      }
    },
    "/v3/videos/{id}/similar": {
      "get": {
        "parameters": [
          {
            "description": "Provide a header to specify the language of result values. Supported values: en-GB, de, nl, fr, en-US, it, ja, pt-PT, es, sv, ko (creative assets only), pl (creative assets only), pt-BR, zh-HK (creative assets only), zh-TW (creative assets only), ru (creative assets only), tr.",
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          },
          {
            "description": "A video id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "comma delimited list of fields to retrive for the videos",
            "in": "query",
            "items": {
              "$ref": "#/definitions/VideosFieldValues"
            },
            "name": "fields",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Identifies page to return. Default is 1.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 30,
            "description": "Specifies page size. Default is 30, maximum page_size is 100.",
            "format": "int32",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "404": {
            "description": "VideosNotFound"
          },
          "500": {
            "description": "InvalidIStockCollection"
          }
        },
        "tags": [
          "Videos"
        ],
        "description": "This endpoint will provide a list of videos that are similar to the specified asset id.\n\nYou'll need an API key and access token to use this resource.\n\n## Working with Fields Sets\n\nFields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:\n\n#### Summary Fields Set\n\nThe **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every video in your result set when you include **summary_set** in your request.\n\n```\n{\n    \"videos\": \n    [\n        \"asset_family\",\n        \"caption\",\n        \"collection_code\",\n        \"collection_name\",\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"license_model\",\n        \"title\"\n    ]\n}\n```\n\n#### Detail Fields Set\n\nThe **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of videos. The following fields are provided for every video in your result set when you include **detail_set** in your request.\n\n```\n{\n    \"videos\": \n    [\n        \"allowed_use\",\n        \"artist\",\n        \"asset_family\",\n\t\t\"call_for_image\",\n        \"caption\",\n        \"clip_length\",\n        \"collection_code\",\n        \"collection_id\",\n        \"collection_name\",\n        \"color_type\",\n        \"copyright\",\n        \"date_created\",\n        \"display_sizes\":\n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ],\n        \"download_sizes\",\n        \"era\",\n        \"license_model\",\n        \"mastered_to\",\n        \"originally_shot_on\",\n        \"product_types\",\n        \"shot_speed\",\n        \"source\",\n        \"title\"\n    ]\n}\n```\n\n#### Display Fields Set\n\nThe **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every video in your result set when you include **display_set** in your request.\n\n```\n{\n    \"videos\":\n    [\n        \"display_sizes\": \n        [\n            {\n                \"name\": \"comp\"\n            },\n            {\n                \"name\": \"preview\"\n            },\n            {\n                \"name\": \"thumb\"\n            }\n        ]\n    ]\n}\n```",
        "summary": "Retrieve similar videos"
      }
    }
  },
  "definitions": {
    "AcquireAssetLicensesRequest": {
      "additionalProperties": false,
      "properties": {
        "LicenseTypes": {
          "items": {
            "$ref": "#/definitions/ExtendedLicenses"
          },
          "type": "array"
        },
        "UseTeamCredits": {
          "description": "Defaults to false.",
          "type": "boolean"
        }
      },
      "required": [
        "LicenseTypes"
      ],
      "type": "object"
    },
    "AddBoardAssetsResult": {
      "additionalProperties": false,
      "properties": {
        "assets_added": {
          "items": {
            "$ref": "#/definitions/BoardAsset"
          },
          "type": "array",
          "x-nullable": true
        },
        "assets_not_added": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "AffiliateImage": {
      "additionalProperties": false,
      "properties": {
        "caption": {
          "type": "string",
          "x-nullable": true
        },
        "destination_url": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "preview_urls": {
          "$ref": "#/definitions/AffiliateImageUrls"
        },
        "title": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "AffiliateImageSearchResponse": {
      "additionalProperties": false,
      "properties": {
        "auto_corrections": {
          "$ref": "#/definitions/AutoCorrections"
        },
        "images": {
          "items": {
            "$ref": "#/definitions/AffiliateImage"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "AffiliateImageUrls": {
      "additionalProperties": false,
      "properties": {
        "large": {
          "type": "string",
          "x-nullable": true
        },
        "large_height": {
          "format": "int32",
          "type": "integer"
        },
        "large_width": {
          "format": "int32",
          "type": "integer"
        },
        "medium": {
          "type": "string",
          "x-nullable": true
        },
        "medium_height": {
          "format": "int32",
          "type": "integer"
        },
        "medium_width": {
          "format": "int32",
          "type": "integer"
        },
        "small": {
          "type": "string",
          "x-nullable": true
        },
        "small_height": {
          "format": "int32",
          "type": "integer"
        },
        "small_width": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AffiliateSearchStyle": {
      "enum": [
        "photography",
        "vector"
      ],
      "type": "string"
    },
    "AffiliateVideo": {
      "additionalProperties": false,
      "properties": {
        "caption": {
          "type": "string",
          "x-nullable": true
        },
        "clip_length": {
          "type": "string",
          "x-nullable": true
        },
        "destination_url": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "preview_urls": {
          "$ref": "#/definitions/AffiliateVideoUrls"
        },
        "title": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "AffiliateVideoSearchResponse": {
      "additionalProperties": false,
      "properties": {
        "auto_corrections": {
          "$ref": "#/definitions/AutoCorrections"
        },
        "videos": {
          "items": {
            "$ref": "#/definitions/AffiliateVideo"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "AffiliateVideoUrls": {
      "additionalProperties": false,
      "properties": {
        "large_motion": {
          "type": "string",
          "x-nullable": true
        },
        "large_still": {
          "type": "string",
          "x-nullable": true
        },
        "medium_still": {
          "type": "string",
          "x-nullable": true
        },
        "small_motion": {
          "type": "string",
          "x-nullable": true
        },
        "small_still": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "AgeOfPeopleFilterType": {
      "enum": [
        "newborn",
        "baby",
        "child",
        "teenager",
        "young_adult",
        "adult",
        "adults_only",
        "mature_adult",
        "senior_adult",
        "0-1_months",
        "2-5_months",
        "6-11_months",
        "12-17_months",
        "18-23_months",
        "2-3_years",
        "4-5_years",
        "6-7_years",
        "8-9_years",
        "10-11_years",
        "12-13_years",
        "14-15_years",
        "16-17_years",
        "18-19_years",
        "20-24_years",
        "20-29_years",
        "25-29_years",
        "30-34_years",
        "30-39_years",
        "35-39_years",
        "40-44_years",
        "40-49_years",
        "45-49_years",
        "50-54_years",
        "50-59_years",
        "55-59_years",
        "60-64_years",
        "60-69_years",
        "65-69_years",
        "70-79_years",
        "80-89_years",
        "90_plus_years",
        "100_over"
      ],
      "type": "string"
    },
    "AllowedUse": {
      "additionalProperties": false,
      "properties": {
        "how_can_i_use_it": {
          "description": "Indicates how the asset can be used",
          "type": "string",
          "x-nullable": true
        },
        "release_info": {
          "description": "Indicates release status",
          "type": "string",
          "x-nullable": true
        },
        "usage_restrictions": {
          "description": "Indicates asset usage restriction, if any",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Artist": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "ArtistsImageSearchFieldValues": {
      "enum": [
        "id",
        "allowed_use",
        "alternative_ids",
        "artist",
        "asset_family",
        "asset_type",
        "call_for_image",
        "caption",
        "collection_id",
        "collection_code",
        "collection_name",
        "comp",
        "copyright",
        "date_created",
        "date_submitted",
        "detail_set",
        "display_set",
        "editorial_segments",
        "event_ids",
        "graphical_style",
        "high_res_comp",
        "keywords",
        "license_model",
        "max_dimensions",
        "mid_res_comp",
        "orientation",
        "preview",
        "product_types",
        "quality_rank",
        "referral_destinations",
        "summary_set",
        "thumb",
        "title"
      ],
      "type": "string"
    },
    "ArtistsVideoSearchFieldValues": {
      "enum": [
        "id",
        "allowed_use",
        "alternative_ids",
        "artist",
        "asset_family",
        "asset_type",
        "call_for_image",
        "caption",
        "clip_length",
        "collection_id",
        "collection_code",
        "collection_name",
        "comp",
        "copyright",
        "date_created",
        "date_submitted",
        "detail_set",
        "display_set",
        "editorial_segments",
        "event_ids",
        "graphical_style",
        "high_res_comp",
        "keywords",
        "license_model",
        "max_dimensions",
        "mid_res_comp",
        "orientation",
        "preview",
        "product_types",
        "quality_rank",
        "referral_destinations",
        "summary_set",
        "thumb",
        "title"
      ],
      "type": "string"
    },
    "Asset": {
      "additionalProperties": false,
      "properties": {
        "asset_type": {
          "type": "string",
          "x-nullable": true
        },
        "date_added": {
          "format": "date-time",
          "type": "string"
        },
        "display_sizes": {
          "items": {
            "$ref": "#/definitions/DisplaySize"
          },
          "type": "array",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "AssetChanges": {
      "additionalProperties": false,
      "properties": {
        "change_set_id": {
          "description": "Contains the identifier for the change-set resource. Passed into ConfirmAssetChanges requests to confirm receipt of the asset changes in the response.",
          "type": "string",
          "x-nullable": true
        },
        "changed_assets": {
          "description": "Contains a list of ChangedAssetList results for the query.",
          "items": {
            "$ref": "#/definitions/ChangedAssetDetail"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "AssetDownloadHistoryResults": {
      "additionalProperties": false,
      "properties": {
        "downloads": {
          "additionalProperties": false,
          "type": "object",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "AssetFamily": {
      "enum": [
        "NotSet",
        "Editorial",
        "Creative",
        "Both"
      ],
      "type": "string"
    },
    "AssetIdFromOrder": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "AssetLicenseName": {
      "enum": [
        "Standard",
        "Multiseat",
        "Unlimited",
        "Resale",
        "Indemnification"
      ],
      "type": "string"
    },
    "AssetLicensingResponse": {
      "additionalProperties": false,
      "properties": {
        "AcquiredLicenses": {
          "items": {
            "$ref": "#/definitions/AssetLicenseName"
          },
          "type": "array",
          "x-nullable": true
        },
        "CreditsUsed": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AssetType": {
      "enum": [
        "NotSet",
        "Image",
        "Film",
        "Music"
      ],
      "type": "string"
    },
    "AutoCorrections": {
      "additionalProperties": false,
      "properties": {
        "phrase": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "BlendedImageSortOrder": {
      "enum": [
        "best_match",
        "most_popular",
        "newest",
        "random"
      ],
      "type": "string"
    },
    "BoardAsset": {
      "additionalProperties": false,
      "properties": {
        "asset_id": {
          "type": "string"
        }
      },
      "required": [
        "asset_id"
      ],
      "type": "object"
    },
    "BoardCommentPermissions": {
      "additionalProperties": false,
      "properties": {
        "can_add_comment": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BoardCreated": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "BoardDetail": {
      "additionalProperties": false,
      "properties": {
        "asset_count": {
          "format": "int32",
          "type": "integer"
        },
        "assets": {
          "items": {
            "$ref": "#/definitions/Asset"
          },
          "type": "array",
          "x-nullable": true
        },
        "comment_count": {
          "format": "int32",
          "type": "integer"
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "date_last_updated": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "permissions": {
          "$ref": "#/definitions/BoardPermissions"
        }
      },
      "type": "object"
    },
    "BoardInfo": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "BoardList": {
      "additionalProperties": false,
      "properties": {
        "board_count": {
          "format": "int32",
          "type": "integer"
        },
        "boards": {
          "items": {
            "$ref": "#/definitions/BoardListBoard"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "BoardListBoard": {
      "additionalProperties": false,
      "properties": {
        "asset_count": {
          "format": "int32",
          "type": "integer"
        },
        "board_relationship": {
          "type": "string",
          "x-nullable": true
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "date_last_updated": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "hero_asset": {
          "$ref": "#/definitions/Asset"
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "BoardPermissions": {
      "additionalProperties": false,
      "properties": {
        "can_add_assets": {
          "type": "boolean"
        },
        "can_delete_board": {
          "type": "boolean"
        },
        "can_invite_to_board": {
          "type": "boolean"
        },
        "can_remove_assets": {
          "type": "boolean"
        },
        "can_update_description": {
          "type": "boolean"
        },
        "can_update_name": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BoardRelationship": {
      "enum": [
        "owned",
        "invited"
      ],
      "type": "string"
    },
    "BoardSortOrder": {
      "enum": [
        "date_last_updated_descending",
        "date_last_updated_ascending",
        "name_ascending",
        "name_decending"
      ],
      "type": "string"
    },
    "ChangedAssetDetail": {
      "additionalProperties": false,
      "properties": {
        "asset_changed_utc_datetime": {
          "description": "Contains the date of the asset change.",
          "format": "date-time",
          "type": "string"
        },
        "asset_lifecycle": {
          "description": "Contains the type of change this asset change is. (i.e. \"New,\" \"Updated\" or \"Deleted\")",
          "type": "string",
          "x-nullable": true
        },
        "asset_type": {
          "description": "Contains the type of asset this asset change is (i.e. \"Image\").",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Contains the Id for the asset change.",
          "type": "string",
          "x-nullable": true
        },
        "uri": {
          "description": "Contains the asset download URL for assets with an AssetLifecycle of \"New.\"",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Channel": {
      "additionalProperties": false,
      "properties": {
        "AssetChangeType": {
          "type": "string",
          "x-nullable": true
        },
        "AssetFamily": {
          "$ref": "#/definitions/AssetFamily"
        },
        "AssetType": {
          "$ref": "#/definitions/AssetType"
        },
        "ChannelId": {
          "format": "int32",
          "type": "integer"
        },
        "CreateDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Metadata": {
          "type": "string",
          "x-nullable": true
        },
        "NotificationCount": {
          "format": "int32",
          "type": "integer"
        },
        "OldestChangeNotificationDateUtc": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Collaborator": {
      "additionalProperties": false,
      "properties": {
        "first_name": {
          "type": "string",
          "x-nullable": true
        },
        "last_name": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Collection": {
      "additionalProperties": false,
      "properties": {
        "asset_family": {
          "type": "string",
          "x-nullable": true
        },
        "code": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "license_model": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "product_types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "CollectionsFilterType": {
      "enum": [
        "include",
        "exclude"
      ],
      "type": "string"
    },
    "CollectionsList": {
      "additionalProperties": false,
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/Collection"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Comment": {
      "additionalProperties": false,
      "properties": {
        "created_by": {
          "$ref": "#/definitions/Collaborator"
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "permissions": {
          "$ref": "#/definitions/CommentPermissions"
        },
        "text": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "CommentCreated": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "CommentPermissions": {
      "additionalProperties": false,
      "properties": {
        "can_delete_comment": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CommentRequest": {
      "additionalProperties": false,
      "properties": {
        "text": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "CommentsList": {
      "additionalProperties": false,
      "properties": {
        "comments": {
          "items": {
            "$ref": "#/definitions/Comment"
          },
          "type": "array",
          "x-nullable": true
        },
        "permissions": {
          "$ref": "#/definitions/BoardCommentPermissions"
        }
      },
      "type": "object"
    },
    "CompositionsFilterType": {
      "enum": [
        "abstract",
        "candid",
        "close_up",
        "copy_space",
        "cut_out",
        "full_frame",
        "full_length",
        "headshot",
        "looking_at_camera",
        "macro",
        "portrait",
        "sparse",
        "still_life",
        "three_quarter_length",
        "waist_up"
      ],
      "type": "string"
    },
    "Contributor": {
      "additionalProperties": false,
      "description": "Contributor information for an image or video",
      "properties": {
        "display_name": {
          "description": "The contributor's display name",
          "type": "string",
          "x-nullable": true
        },
        "member_name": {
          "description": "The contributor's member name",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "CountriesList": {
      "additionalProperties": false,
      "properties": {
        "countries": {
          "items": {
            "$ref": "#/definitions/Country"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Country": {
      "additionalProperties": false,
      "properties": {
        "iso_alpha_2": {
          "type": "string",
          "x-nullable": true
        },
        "iso_alpha_3": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "CreateImageSearchFacetsFields": {
      "enum": [
        "artists",
        "locations"
      ],
      "type": "string"
    },
    "CreateVideoSearchFacetsFields": {
      "enum": [
        "artists",
        "locations"
      ],
      "type": "string"
    },
    "CreativeImageSearchResults": {
      "additionalProperties": false,
      "properties": {
        "auto_corrections": {
          "$ref": "#/definitions/AutoCorrections"
        },
        "images": {
          "items": {
            "$ref": "#/definitions/ImageSearchItemCreative"
          },
          "type": "array",
          "x-nullable": true
        },
        "related_searches": {
          "items": {
            "$ref": "#/definitions/RelatedSearch"
          },
          "type": "array",
          "x-nullable": true
        },
        "result_count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CreativeImageSortOrder": {
      "enum": [
        "best_match",
        "most_popular",
        "newest",
        "random"
      ],
      "type": "string"
    },
    "CreativeImagesFieldValues": {
      "enum": [
        "allowed_use",
        "alternative_ids",
        "artist",
        "asset_family",
        "call_for_image",
        "caption",
        "collection_code",
        "collection_id",
        "collection_name",
        "color_type",
        "comp",
        "copyright",
        "date_camera_shot",
        "date_created",
        "date_submitted",
        "detail_set",
        "display_set",
        "download_product",
        "download_sizes",
        "graphical_style",
        "id",
        "istock_collection",
        "keywords",
        "largest_downloads",
        "license_model",
        "max_dimensions",
        "orientation",
        "preview",
        "product_types",
        "quality_rank",
        "referral_destinations",
        "summary_set",
        "thumb",
        "title",
        "uri_oembed"
      ],
      "type": "string"
    },
    "CreativeVideoSearchResults": {
      "additionalProperties": false,
      "properties": {
        "auto_corrections": {
          "$ref": "#/definitions/AutoCorrections"
        },
        "facets": {
          "$ref": "#/definitions/SearchFacetsResponse"
        },
        "related_searches": {
          "items": {
            "$ref": "#/definitions/RelatedSearch"
          },
          "type": "array",
          "x-nullable": true
        },
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "videos": {
          "items": {
            "$ref": "#/definitions/VideoSearchItem"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "CreativeVideoSortOrder": {
      "enum": [
        "best_match",
        "most_popular",
        "newest",
        "random"
      ],
      "type": "string"
    },
    "CreativeVideosFieldValues": {
      "enum": [
        "allowed_use",
        "artist",
        "asset_family",
        "call_for_image",
        "caption",
        "clip_length",
        "collection_code",
        "collection_id",
        "collection_name",
        "color_type",
        "comp",
        "copyright",
        "date_created",
        "date_submitted",
        "detail_set",
        "display_set",
        "download_product",
        "download_sizes",
        "era",
        "id",
        "istock_collection",
        "keywords",
        "largest_downloads",
        "license_model",
        "mastered_to",
        "originally_shot_on",
        "object_name",
        "preview",
        "product_types",
        "referral_destinations",
        "shot_speed",
        "source",
        "summary_set",
        "thumb",
        "title"
      ],
      "type": "string"
    },
    "CuratedSet": {
      "additionalProperties": false,
      "properties": {
        "assets": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "date_created": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "date_last_updated": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "hero_image_uri": {
          "type": "string",
          "x-nullable": true
        },
        "keywords": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "set_id": {
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "CustomerInfoResponse": {
      "additionalProperties": false,
      "properties": {
        "first_name": {
          "type": "string",
          "x-nullable": true
        },
        "last_name": {
          "type": "string",
          "x-nullable": true
        },
        "middle_name": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Dimensions": {
      "additionalProperties": false,
      "properties": {
        "dpi": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "width": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "DisplaySize": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "uri": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Download": {
      "additionalProperties": false,
      "properties": {
        "agreement_name": {
          "type": "string",
          "x-nullable": true
        },
        "product_id": {
          "type": "string",
          "x-nullable": true
        },
        "product_type": {
          "type": "string",
          "x-nullable": true
        },
        "uri": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "DownloadDetails": {
      "additionalProperties": false,
      "properties": {
        "download_notes": {
          "type": "string",
          "x-nullable": true
        },
        "project_code": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "DownloadFileType": {
      "enum": [
        "eps",
        "jpg"
      ],
      "type": "string"
    },
    "DownloadRequirements": {
      "additionalProperties": false,
      "properties": {
        "is_note_required": {
          "type": "boolean"
        },
        "is_project_code_required": {
          "type": "boolean"
        },
        "project_codes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "EditorialGraphicalStyle": {
      "enum": [
        "photography",
        "illustration",
        "vector"
      ],
      "type": "string"
    },
    "EditorialImageSearchFacetsFields": {
      "enum": [
        "artists",
        "events",
        "locations",
        "specific_people"
      ],
      "type": "string"
    },
    "EditorialImageSearchResults": {
      "additionalProperties": false,
      "properties": {
        "images": {
          "items": {
            "$ref": "#/definitions/ImageSearchItemEditorial"
          },
          "type": "array",
          "x-nullable": true
        },
        "related_searches": {
          "items": {
            "$ref": "#/definitions/RelatedSearch"
          },
          "type": "array",
          "x-nullable": true
        },
        "result_count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "EditorialImagesFieldValues": {
      "enum": [
        "allowed_use",
        "alternative_ids",
        "artist",
        "asset_family",
        "call_for_image",
        "caption",
        "collection_code",
        "collection_id",
        "collection_name",
        "color_type",
        "comp",
        "copyright",
        "date_camera_shot",
        "date_created",
        "date_submitted",
        "detail_set",
        "display_set",
        "download_product",
        "download_sizes",
        "editorial_segments",
        "editorial_source",
        "entity_details",
        "event_ids",
        "graphical_style",
        "id",
        "keywords",
        "largest_downloads",
        "license_model",
        "max_dimensions",
        "orientation",
        "people",
        "preview",
        "product_types",
        "quality_rank",
        "referral_destinations",
        "summary_set",
        "thumb",
        "title",
        "uri_oembed"
      ],
      "type": "string"
    },
    "EditorialSegmentContract": {
      "enum": [
        "archival",
        "entertainment",
        "news",
        "publicity",
        "royalty",
        "sport"
      ],
      "type": "string"
    },
    "EditorialSource": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "EditorialVideoSearchFacetsFields": {
      "enum": [
        "artists",
        "events",
        "locations",
        "specific_people"
      ],
      "type": "string"
    },
    "EditorialVideoSearchResults": {
      "additionalProperties": false,
      "properties": {
        "facets": {
          "$ref": "#/definitions/SearchFacetsResponse"
        },
        "related_searches": {
          "items": {
            "$ref": "#/definitions/RelatedSearch"
          },
          "type": "array",
          "x-nullable": true
        },
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "videos": {
          "items": {
            "$ref": "#/definitions/VideoSearchItem"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "EditorialVideoType": {
      "enum": [
        "raw",
        "produced"
      ],
      "type": "string"
    },
    "Entertainment": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "EthnicityFilterType": {
      "enum": [
        "black",
        "caucasian",
        "east_asian",
        "hispanic_latino",
        "japanese",
        "middle_eastern",
        "mixed_race_person",
        "multiethnic_group",
        "native_american_first_nations",
        "pacific_islander",
        "south_asian",
        "southeast_asian"
      ],
      "type": "string"
    },
    "Event": {
      "additionalProperties": false,
      "properties": {
        "child_event_count": {
          "format": "int32",
          "type": "integer"
        },
        "editorial_segments": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "hero_image": {
          "$ref": "#/definitions/HeroImage"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "image_count": {
          "format": "int32",
          "type": "integer"
        },
        "location": {
          "$ref": "#/definitions/LocationEvent"
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "start_date": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "EventDetailFieldValues": {
      "enum": [
        "id",
        "child_event_count",
        "editorial_segments",
        "hero_image",
        "image_count",
        "location",
        "name",
        "start_date",
        "type"
      ],
      "type": "string"
    },
    "EventFieldValues": {
      "enum": [
        "id",
        "child_event_count",
        "editorial_segments",
        "hero_image",
        "image_count",
        "keywords",
        "location",
        "name",
        "start_date",
        "type"
      ],
      "type": "string"
    },
    "EventsSearchResult": {
      "additionalProperties": false,
      "properties": {
        "events": {
          "items": {
            "$ref": "#/definitions/Event"
          },
          "type": "array",
          "x-nullable": true
        },
        "result_count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ExtendedLicenses": {
      "enum": [
        "Multiseat",
        "Unlimited",
        "Resale",
        "Indemnification"
      ],
      "type": "string"
    },
    "FacetEvent": {
      "additionalProperties": false,
      "properties": {
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "GetDownloadsResponse": {
      "additionalProperties": false,
      "properties": {
        "downloads": {
          "items": {
            "$ref": "#/definitions/HistoricalDownload"
          },
          "type": "array",
          "x-nullable": true
        },
        "result_count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GraphicalStyle": {
      "enum": [
        "fine_art",
        "illustration",
        "photography",
        "vector"
      ],
      "type": "string"
    },
    "GraphicalStylesFilterType": {
      "enum": [
        "include",
        "exclude"
      ],
      "type": "string"
    },
    "HeroImage": {
      "additionalProperties": false,
      "properties": {
        "display_sizes": {
          "items": {
            "$ref": "#/definitions/HeroImageDisplaySize"
          },
          "type": "array",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "HeroImageDisplaySize": {
      "additionalProperties": false,
      "properties": {
        "is_watermarked": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "uri": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "HistoricalDownload": {
      "additionalProperties": false,
      "properties": {
        "agreement_name": {
          "type": "string",
          "x-nullable": true
        },
        "asset_type": {
          "type": "string",
          "x-nullable": true
        },
        "date_downloaded": {
          "format": "date-time",
          "type": "string"
        },
        "dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "download_details": {
          "$ref": "#/definitions/DownloadDetails"
        },
        "download_source": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "product_id": {
          "format": "int32",
          "type": "integer"
        },
        "product_type": {
          "type": "string",
          "x-nullable": true
        },
        "size_name": {
          "type": "string",
          "x-nullable": true
        },
        "thumb_uri": {
          "type": "string",
          "x-nullable": true
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      },
      "type": "object"
    },
    "IStockLicense": {
      "additionalProperties": false,
      "properties": {
        "credits": {
          "format": "int32",
          "type": "integer"
        },
        "license_type": {
          "$ref": "#/definitions/AssetLicenseName"
        }
      },
      "type": "object"
    },
    "ImageDetailFieldValues": {
      "enum": [
        "allowed_use",
        "alternative_ids",
        "artist",
        "artist_title",
        "asset_family",
        "call_for_image",
        "caption",
        "city",
        "collection_code",
        "collection_id",
        "collection_name",
        "color_type",
        "comp",
        "copyright",
        "country",
        "credit_line",
        "date_camera_shot",
        "date_created",
        "date_submitted",
        "detail_set",
        "display_set",
        "download_sizes",
        "download_product",
        "downloads",
        "editorial_segments",
        "editorial_source",
        "entity_details",
        "event_ids",
        "graphical_style",
        "id",
        "istock_collection",
        "istock_licenses",
        "keywords",
        "largest_downloads",
        "license_model",
        "links",
        "max_dimensions",
        "object_name",
        "orientation",
        "people",
        "preview",
        "product_types",
        "quality_rank",
        "referral_destinations",
        "state_province",
        "summary_set",
        "thumb",
        "title",
        "uri_oembed"
      ],
      "type": "string"
    },
    "ImageSearchItem": {
      "additionalProperties": false,
      "properties": {
        "allowed_use": {
          "$ref": "#/definitions/AllowedUse"
        },
        "alternative_ids": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "x-nullable": true
        },
        "artist": {
          "type": "string",
          "x-nullable": true
        },
        "asset_family": {
          "type": "string",
          "x-nullable": true
        },
        "call_for_image": {
          "type": "boolean"
        },
        "caption": {
          "type": "string",
          "x-nullable": true
        },
        "collection_code": {
          "type": "string",
          "x-nullable": true
        },
        "collection_id": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "collection_name": {
          "type": "string",
          "x-nullable": true
        },
        "color_type": {
          "type": "string",
          "x-nullable": true
        },
        "copyright": {
          "type": "string",
          "x-nullable": true
        },
        "date_camera_shot": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "date_created": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "display_sizes": {
          "items": {
            "$ref": "#/definitions/ImageSearchItemDisplaySize"
          },
          "type": "array",
          "x-nullable": true
        },
        "download_product": {
          "type": "string",
          "x-nullable": true
        },
        "editorial_segments": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "event_ids": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array",
          "x-nullable": true
        },
        "graphical_style": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "istock_licenses": {
          "items": {
            "$ref": "#/definitions/IStockLicense"
          },
          "type": "array",
          "x-nullable": true
        },
        "keywords": {
          "items": {
            "$ref": "#/definitions/Keyword"
          },
          "type": "array",
          "x-nullable": true
        },
        "largest_downloads": {
          "items": {
            "$ref": "#/definitions/Download"
          },
          "type": "array",
          "x-nullable": true
        },
        "license_model": {
          "type": "string",
          "x-nullable": true
        },
        "max_dimensions": {
          "$ref": "#/definitions/MaxDimensions"
        },
        "orientation": {
          "type": "string",
          "x-nullable": true
        },
        "people": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "product_types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "quality_rank": {
          "format": "int32",
          "type": "integer"
        },
        "referral_destinations": {
          "items": {
            "$ref": "#/definitions/ReferralDestination"
          },
          "type": "array",
          "x-nullable": true
        },
        "title": {
          "type": "string",
          "x-nullable": true
        },
        "uri_oembed": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "ImageSearchItemCreative": {
      "additionalProperties": false,
      "properties": {
        "allowed_use": {
          "$ref": "#/definitions/AllowedUse"
        },
        "alternative_ids": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "x-nullable": true
        },
        "artist": {
          "type": "string",
          "x-nullable": true
        },
        "asset_family": {
          "type": "string",
          "x-nullable": true
        },
        "call_for_image": {
          "type": "boolean"
        },
        "caption": {
          "type": "string",
          "x-nullable": true
        },
        "collection_code": {
          "type": "string",
          "x-nullable": true
        },
        "collection_id": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "collection_name": {
          "type": "string",
          "x-nullable": true
        },
        "color_type": {
          "type": "string",
          "x-nullable": true
        },
        "copyright": {
          "type": "string",
          "x-nullable": true
        },
        "date_camera_shot": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "date_created": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "display_sizes": {
          "items": {
            "$ref": "#/definitions/ImageSearchItemDisplaySize"
          },
          "type": "array",
          "x-nullable": true
        },
        "download_product": {
          "type": "string",
          "x-nullable": true
        },
        "graphical_style": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "keywords": {
          "items": {
            "$ref": "#/definitions/Keyword"
          },
          "type": "array",
          "x-nullable": true
        },
        "largest_downloads": {
          "items": {
            "$ref": "#/definitions/Download"
          },
          "type": "array",
          "x-nullable": true
        },
        "license_model": {
          "type": "string",
          "x-nullable": true
        },
        "max_dimensions": {
          "$ref": "#/definitions/MaxDimensions"
        },
        "orientation": {
          "type": "string",
          "x-nullable": true
        },
        "quality_rank": {
          "format": "int32",
          "type": "integer"
        },
        "referral_destinations": {
          "items": {
            "$ref": "#/definitions/ReferralDestination"
          },
          "type": "array",
          "x-nullable": true
        },
        "title": {
          "type": "string",
          "x-nullable": true
        },
        "uri_oembed": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "ImageSearchItemDisplaySize": {
      "additionalProperties": false,
      "properties": {
        "is_watermarked": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "uri": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "ImageSearchItemEditorial": {
      "additionalProperties": false,
      "properties": {
        "allowed_use": {
          "$ref": "#/definitions/AllowedUse"
        },
        "alternative_ids": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "x-nullable": true
        },
        "artist": {
          "type": "string",
          "x-nullable": true
        },
        "asset_family": {
          "type": "string",
          "x-nullable": true
        },
        "call_for_image": {
          "type": "boolean"
        },
        "caption": {
          "type": "string",
          "x-nullable": true
        },
        "collection_code": {
          "type": "string",
          "x-nullable": true
        },
        "collection_id": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "collection_name": {
          "type": "string",
          "x-nullable": true
        },
        "color_type": {
          "type": "string",
          "x-nullable": true
        },
        "copyright": {
          "type": "string",
          "x-nullable": true
        },
        "date_camera_shot": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "date_created": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "display_sizes": {
          "items": {
            "$ref": "#/definitions/ImageSearchItemDisplaySize"
          },
          "type": "array",
          "x-nullable": true
        },
        "download_product": {
          "type": "string",
          "x-nullable": true
        },
        "editorial_segments": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "editorial_source": {
          "$ref": "#/definitions/EditorialSource"
        },
        "event_ids": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array",
          "x-nullable": true
        },
        "graphical_style": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "keywords": {
          "items": {
            "$ref": "#/definitions/Keyword"
          },
          "type": "array",
          "x-nullable": true
        },
        "largest_downloads": {
          "items": {
            "$ref": "#/definitions/Download"
          },
          "type": "array",
          "x-nullable": true
        },
        "license_model": {
          "type": "string",
          "x-nullable": true
        },
        "max_dimensions": {
          "$ref": "#/definitions/MaxDimensions"
        },
        "orientation": {
          "type": "string",
          "x-nullable": true
        },
        "people": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "product_types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "quality_rank": {
          "format": "int32",
          "type": "integer"
        },
        "referral_destinations": {
          "items": {
            "$ref": "#/definitions/ReferralDestination"
          },
          "type": "array",
          "x-nullable": true
        },
        "title": {
          "type": "string",
          "x-nullable": true
        },
        "uri_oembed": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "ImageSearchItemSearchResults": {
      "additionalProperties": false,
      "properties": {
        "images": {
          "items": {
            "$ref": "#/definitions/ImageSearchItem"
          },
          "type": "array",
          "x-nullable": true
        },
        "related_searches": {
          "items": {
            "$ref": "#/definitions/RelatedSearch"
          },
          "type": "array",
          "x-nullable": true
        },
        "result_count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ImageTechniquesFilterType": {
      "enum": [
        "realtime",
        "time_lapse",
        "slow_motion",
        "color",
        "black_and_white",
        "animation",
        "selective_focus"
      ],
      "type": "string"
    },
    "ImagesDetailResults": {
      "additionalProperties": false,
      "properties": {
        "images": {
          "additionalProperties": false,
          "type": "object",
          "x-nullable": true
        },
        "images_not_found": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "ImagesFieldValues": {
      "enum": [
        "accessrestriction",
        "allowed_use",
        "alternative_ids",
        "artist",
        "asset_family",
        "call_for_image",
        "caption",
        "collection_code",
        "collection_id",
        "collection_name",
        "color_type",
        "comp",
        "copyright",
        "date_camera_shot",
        "date_created",
        "date_submitted",
        "detail_set",
        "display_set",
        "download_product",
        "download_sizes",
        "editorial_segments",
        "editorial_source",
        "entity_details",
        "event_ids",
        "graphical_style",
        "id",
        "istock_collection",
        "keywords",
        "largest_downloads",
        "license_model",
        "max_dimensions",
        "orientation",
        "people",
        "preview",
        "product_types",
        "quality_rank",
        "referral_destinations",
        "summary_set",
        "thumb",
        "title",
        "uri_oembed"
      ],
      "type": "string"
    },
    "Keyword": {
      "additionalProperties": false,
      "properties": {
        "entity_types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "entity_uris": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "keyword_id": {
          "type": "string",
          "x-nullable": true
        },
        "relevance": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "text": {
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "LicenseModelImageRequest": {
      "enum": [
        "rightsmanaged",
        "royaltyfree"
      ],
      "type": "string"
    },
    "LicenseModelVideoRequest": {
      "enum": [
        "rightsready",
        "royaltyfree"
      ],
      "type": "string"
    },
    "Links": {
      "additionalProperties": false,
      "properties": {
        "invitation": {
          "type": "string",
          "x-nullable": true
        },
        "share": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Location": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "LocationEvent": {
      "additionalProperties": false,
      "properties": {
        "city": {
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "type": "string",
          "x-nullable": true
        },
        "state_province": {
          "type": "string",
          "x-nullable": true
        },
        "venue": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "LogLevel": {
      "enum": [
        "Trace",
        "Debug",
        "Information",
        "Warning",
        "Error",
        "Critical",
        "None"
      ],
      "type": "string"
    },
    "MaxDimensions": {
      "additionalProperties": false,
      "properties": {
        "height": {
          "format": "int32",
          "type": "integer"
        },
        "width": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MemcachedLogEntry": {
      "additionalProperties": false,
      "properties": {
        "ExceptionMessage": {
          "type": "string",
          "x-nullable": true
        },
        "LogLevel": {
          "$ref": "#/definitions/LogLevel"
        },
        "Message": {
          "type": "string",
          "x-nullable": true
        },
        "Time": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NumberOfPeopleFilterType": {
      "enum": [
        "none",
        "one",
        "two",
        "group"
      ],
      "type": "string"
    },
    "OrderDetail": {
      "additionalProperties": false,
      "properties": {
        "assets": {
          "items": {
            "$ref": "#/definitions/AssetIdFromOrder"
          },
          "type": "array",
          "x-nullable": true
        },
        "end_client": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "invoice_number": {
          "type": "string",
          "x-nullable": true
        },
        "notes": {
          "$ref": "#/definitions/OrderNotes"
        },
        "order_date": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderNotes": {
      "additionalProperties": false,
      "properties": {
        "licensee_name": {
          "type": "string",
          "x-nullable": true
        },
        "ordered_by": {
          "type": "string",
          "x-nullable": true
        },
        "project_title": {
          "type": "string",
          "x-nullable": true
        },
        "purchase_order_number": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "OrientationRequest": {
      "enum": [
        "horizontal",
        "vertical",
        "square",
        "panoramic_horizontal",
        "panoramic_vertical"
      ],
      "type": "string"
    },
    "OverageDetails": {
      "additionalProperties": false,
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "limit": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "overages_reached": {
          "type": "boolean",
          "x-nullable": true
        },
        "remaining": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "PremiumAccessDownloadData": {
      "additionalProperties": false,
      "properties": {
        "download_notes": {
          "type": "string",
          "x-nullable": true
        },
        "project_code": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "PreviousAssetPurchase": {
      "additionalProperties": false,
      "properties": {
        "asset_id": {
          "type": "string",
          "x-nullable": true
        },
        "asset_type": {
          "type": "string",
          "x-nullable": true
        },
        "date_purchased": {
          "format": "date-time",
          "type": "string"
        },
        "download_uri": {
          "type": "string",
          "x-nullable": true
        },
        "file_size_in_bytes": {
          "type": "string",
          "x-nullable": true
        },
        "license_model": {
          "type": "string",
          "x-nullable": true
        },
        "order_id": {
          "type": "string",
          "x-nullable": true
        },
        "purchased_by": {
          "type": "string",
          "x-nullable": true
        },
        "size_name": {
          "type": "string",
          "x-nullable": true
        },
        "thumb_uri": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "PreviousAssetPurchases": {
      "additionalProperties": false,
      "properties": {
        "previous_purchases": {
          "items": {
            "$ref": "#/definitions/PreviousAssetPurchase"
          },
          "type": "array",
          "x-nullable": true
        },
        "result_count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PreviousPurchase": {
      "additionalProperties": false,
      "properties": {
        "date_purchased": {
          "format": "date-time",
          "type": "string"
        },
        "image_id": {
          "type": "string",
          "x-nullable": true
        },
        "license_model": {
          "type": "string",
          "x-nullable": true
        },
        "order_id": {
          "type": "string",
          "x-nullable": true
        },
        "thumb_uri": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "PreviousPurchases": {
      "additionalProperties": false,
      "properties": {
        "previous_purchases": {
          "items": {
            "$ref": "#/definitions/PreviousPurchase"
          },
          "type": "array",
          "x-nullable": true
        },
        "result_count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Product": {
      "additionalProperties": false,
      "properties": {
        "agreement_name": {
          "type": "string",
          "x-nullable": true
        },
        "application_website": {
          "type": "string",
          "x-nullable": true
        },
        "credits_remaining": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "download_limit": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "download_limit_duration": {
          "type": "string",
          "x-nullable": true
        },
        "download_limit_reset_utc_date": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "download_requirements": {
          "$ref": "#/definitions/DownloadRequirements"
        },
        "downloads_remaining": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "expiration_utc_date": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "imagepack_resolution": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "overage": {
          "$ref": "#/definitions/OverageDetails"
        },
        "status": {
          "$ref": "#/definitions/ProductStatus"
        },
        "team_credits": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "type": {
          "$ref": "#/definitions/ProductTypeResponse"
        }
      },
      "type": "object"
    },
    "ProductFieldValues": {
      "enum": [
        "download_requirements"
      ],
      "type": "string"
    },
    "ProductStatus": {
      "enum": [
        "active",
        "inactive"
      ],
      "type": "string"
    },
    "ProductStatusRequest": {
      "enum": [
        "all",
        "active",
        "inactive"
      ],
      "type": "string"
    },
    "ProductTypeRequest": {
      "enum": [
        "easyaccess",
        "editorialsubscription",
        "imagepack",
        "premiumaccess",
        "royaltyfreesubscription"
      ],
      "type": "string"
    },
    "ProductTypeResponse": {
      "enum": [
        "easyaccess",
        "editorialsubscription",
        "imagepack",
        "premiumaccess",
        "royaltyfreesubscription",
        "creditpack"
      ],
      "type": "string"
    },
    "ProductsResult": {
      "additionalProperties": false,
      "properties": {
        "products": {
          "items": {
            "$ref": "#/definitions/Product"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "ReferralDestination": {
      "additionalProperties": false,
      "properties": {
        "site_name": {
          "type": "string",
          "x-nullable": true
        },
        "uri": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "RelatedSearch": {
      "additionalProperties": false,
      "properties": {
        "phrase": {
          "type": "string",
          "x-nullable": true
        },
        "url": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "ReleaseStatus": {
      "enum": [
        "release_not_important",
        "fully_released"
      ],
      "type": "string"
    },
    "SearchByImageResourceResults": {
      "additionalProperties": false,
      "properties": {
        "auto_corrections": {
          "$ref": "#/definitions/AutoCorrections"
        },
        "facets": {
          "$ref": "#/definitions/SearchFacetsResponse"
        },
        "image_fingerprint": {
          "type": "string",
          "x-nullable": true
        },
        "images": {
          "additionalProperties": false,
          "type": "object",
          "x-nullable": true
        },
        "related_searches": {
          "items": {
            "$ref": "#/definitions/RelatedSearch"
          },
          "type": "array",
          "x-deprecated": true,
          "x-nullable": true
        },
        "result_count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SearchFacetsResponse": {
      "additionalProperties": false,
      "properties": {
        "artists": {
          "items": {
            "$ref": "#/definitions/Artist"
          },
          "type": "array",
          "x-nullable": true
        },
        "entertainment": {
          "items": {
            "$ref": "#/definitions/Entertainment"
          },
          "type": "array",
          "x-nullable": true
        },
        "events": {
          "items": {
            "$ref": "#/definitions/FacetEvent"
          },
          "type": "array",
          "x-nullable": true
        },
        "locations": {
          "items": {
            "$ref": "#/definitions/Location"
          },
          "type": "array",
          "x-nullable": true
        },
        "specific_people": {
          "items": {
            "$ref": "#/definitions/SpecificPeople"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "SearchFileType": {
      "enum": [
        "eps",
        "jpg"
      ],
      "type": "string"
    },
    "SelfResult": {
      "additionalProperties": false,
      "properties": {
        "email": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "SortOrder": {
      "enum": [
        "best_match",
        "most_popular",
        "newest",
        "oldest",
        "random"
      ],
      "type": "string"
    },
    "SpecificPeople": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "TeeShirtSize": {
      "enum": [
        "x_small",
        "small",
        "medium",
        "large",
        "x_large",
        "xx_large",
        "vector"
      ],
      "type": "string"
    },
    "TerritoryRestriction": {
      "additionalProperties": false,
      "properties": {
        "country_code": {
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "User": {
      "additionalProperties": false,
      "properties": {
        "first_name": {
          "type": "string",
          "x-nullable": true
        },
        "last_name": {
          "type": "string",
          "x-nullable": true
        },
        "middle_name": {
          "type": "string",
          "x-nullable": true
        },
        "username": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "VideoDetailFieldValues": {
      "enum": [
        "id",
        "allowed_use",
        "artist",
        "asset_family",
        "call_for_image",
        "caption",
        "clip_length",
        "collection_code",
        "collection_id",
        "collection_name",
        "color_type",
        "copyright",
        "comp",
        "date_created",
        "date_submitted",
        "detail_set",
        "display_set",
        "download_sizes",
        "download_product",
        "downloads",
        "era",
        "editorial_segments",
        "entity_details",
        "keywords",
        "license_model",
        "mastered_to",
        "originally_shot_on",
        "object_name",
        "preview",
        "product_types",
        "referral_destinations",
        "shot_speed",
        "source",
        "summary_set",
        "thumb",
        "title",
        "istock_licenses",
        "istock_collection"
      ],
      "type": "string"
    },
    "VideoFormatsRequest": {
      "enum": [
        "sd",
        "hd",
        "4k",
        "hd_web"
      ],
      "type": "string"
    },
    "VideoFrameRates": {
      "enum": [
        "23.98",
        "24",
        "25",
        "29.97",
        "30",
        "50",
        "59.94",
        "60"
      ],
      "type": "string"
    },
    "VideoSearchItem": {
      "additionalProperties": false,
      "properties": {
        "allowed_use": {
          "$ref": "#/definitions/AllowedUse"
        },
        "artist": {
          "type": "string",
          "x-nullable": true
        },
        "asset_family": {
          "type": "string",
          "x-nullable": true
        },
        "caption": {
          "type": "string",
          "x-nullable": true
        },
        "clip_length": {
          "type": "string",
          "x-nullable": true
        },
        "collection_code": {
          "type": "string",
          "x-nullable": true
        },
        "collection_id": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "collection_name": {
          "type": "string",
          "x-nullable": true
        },
        "color_type": {
          "type": "string",
          "x-nullable": true
        },
        "copyright": {
          "type": "string",
          "x-nullable": true
        },
        "date_created": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "display_sizes": {
          "items": {
            "$ref": "#/definitions/VideoSearchItemDisplaySize"
          },
          "type": "array",
          "x-nullable": true
        },
        "download_product": {
          "type": "string",
          "x-nullable": true
        },
        "era": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "istock_licenses": {
          "items": {
            "$ref": "#/definitions/IStockLicense"
          },
          "type": "array",
          "x-nullable": true
        },
        "keywords": {
          "items": {
            "$ref": "#/definitions/Keyword"
          },
          "type": "array",
          "x-nullable": true
        },
        "largest_downloads": {
          "items": {
            "$ref": "#/definitions/Download"
          },
          "type": "array",
          "x-nullable": true
        },
        "license_model": {
          "type": "string",
          "x-nullable": true
        },
        "mastered_to": {
          "type": "string",
          "x-nullable": true
        },
        "originally_shot_on": {
          "type": "string",
          "x-nullable": true
        },
        "product_types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "referral_destinations": {
          "items": {
            "$ref": "#/definitions/ReferralDestination"
          },
          "type": "array",
          "x-nullable": true
        },
        "shot_speed": {
          "type": "string",
          "x-nullable": true
        },
        "source": {
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "VideoSearchItemDisplaySize": {
      "additionalProperties": false,
      "properties": {
        "aspect_ratio": {
          "type": "string",
          "x-nullable": true
        },
        "is_watermarked": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "uri": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "VideoSearchItemVideoSearchResults": {
      "additionalProperties": false,
      "properties": {
        "facets": {
          "$ref": "#/definitions/SearchFacetsResponse"
        },
        "related_searches": {
          "items": {
            "$ref": "#/definitions/RelatedSearch"
          },
          "type": "array",
          "x-nullable": true
        },
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "videos": {
          "items": {
            "$ref": "#/definitions/VideoSearchItem"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "VideosFieldValues": {
      "enum": [
        "allowed_use",
        "artist",
        "asset_family",
        "call_for_image",
        "caption",
        "clip_length",
        "collection_code",
        "collection_id",
        "collection_name",
        "color_type",
        "comp",
        "copyright",
        "date_created",
        "date_submitted",
        "detail_set",
        "display_set",
        "download_product",
        "download_sizes",
        "editorial_segments",
        "entity_details",
        "era",
        "id",
        "istock_collection",
        "keywords",
        "largest_downloads",
        "license_model",
        "mastered_to",
        "originally_shot_on",
        "object_name",
        "preview",
        "product_types",
        "referral_destinations",
        "shot_speed",
        "source",
        "summary_set",
        "thumb",
        "title",
        "istock_licenses"
      ],
      "type": "string"
    },
    "ViewpointsFilterType": {
      "enum": [
        "lockdown",
        "panning",
        "tracking_shot",
        "aerial_view",
        "high_angle_view",
        "low_angle_view",
        "tilt",
        "point_of_view"
      ],
      "type": "string"
    },
    "asset_usage": {
      "additionalProperties": false,
      "description": "Specifies the id, usage Quantity, and date of when an asset was used.",
      "properties": {
        "asset_id": {
          "description": "Specifies the Id of the asset that was used.",
          "type": "string",
          "x-nullable": true
        },
        "quantity": {
          "description": "Specifies the number of times the asset was used.",
          "format": "int32",
          "type": "integer"
        },
        "usage_date": {
          "description": "Identifies the date the asset was used, in ISO 8601 format (e.g., YYYY-MM-DD), time is not needed.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "report_usage_batch_request": {
      "additionalProperties": false,
      "description": "Specifies the request information for the Batch Usages endpoint.",
      "properties": {
        "asset_usages": {
          "description": "Identifies the list of asset id, usage count and date of usage combinations to record.",
          "items": {
            "$ref": "#/definitions/asset_usage"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "report_usage_batch_response": {
      "additionalProperties": false,
      "description": "Specifies the response from the Batch Usages endpoint.",
      "properties": {
        "invalid_assets": {
          "description": "Identifies a list of asset ids submitted that did not match known Getty asset ids.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "total_asset_usages_processed": {
          "description": "Specifies the number of asset usage records that were successfully recorded.",
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        }
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "Api-Key": {
      "in": "header",
      "name": "Api-Key",
      "type": "apiKey"
    },
    "OAuth2": {
      "authorizationUrl": "https://api.gettyimages.com/oauth2/auth",
      "flow": "accessCode",
      "scopes": {},
      "tokenUrl": "https://api.gettyimages.com/oauth2/token",
      "type": "oauth2"
    }
  },
  "security": [
    {
      "Api-Key": []
    },
    {
      "OAuth2": []
    }
  ],
  "x-components": {}
}