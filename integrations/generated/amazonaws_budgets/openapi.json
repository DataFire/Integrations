{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<p>The AWS Budgets API enables you to use AWS Budgets to plan your service usage, service costs, and instance reservations. The API reference provides descriptions, syntax, and usage examples for each of the actions and data types for AWS Budgets. </p> <p>Budgets provide you with a way to see the following information:</p> <ul> <li> <p>How close your plan is to your budgeted amount or to the free tier limits</p> </li> <li> <p>Your usage-to-date, including how much you've used of your Reserved Instances (RIs)</p> </li> <li> <p>Your current estimated charges from AWS, and how much your predicted usage will accrue in charges by the end of the month</p> </li> <li> <p>How much of your budget has been used</p> </li> </ul> <p>AWS updates your budget status several times a day. Budgets track your unblended costs, subscriptions, refunds, and RIs. You can create the following types of budgets:</p> <ul> <li> <p> <b>Cost budgets</b> - Plan how much you want to spend on a service.</p> </li> <li> <p> <b>Usage budgets</b> - Plan how much you want to use one or more services.</p> </li> <li> <p> <b>RI utilization budgets</b> - Define a utilization threshold, and receive alerts when your RI usage falls below that threshold. This lets you see if your RIs are unused or under-utilized.</p> </li> <li> <p> <b>RI coverage budgets</b> - Define a coverage threshold, and receive alerts when the number of your instance hours that are covered by RIs fall below that threshold. This lets you see how much of your instance usage is covered by a reservation.</p> </li> </ul> <p>Service Endpoint</p> <p>The AWS Budgets API provides the following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p> </li> </ul> <p>For information about costs that are associated with the AWS Budgets API, see <a href=\"https://aws.amazon.com/aws-cost-management/pricing/\">AWS Cost Management Pricing</a>.</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Budgets",
    "version": "2016-10-20",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/budgets-2016-10-20.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "budgets",
    "x-datafire": {
      "name": "amazonaws_budgets",
      "type": "openapi"
    }
  },
  "host": "budgets.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/#X-Amz-Target=AWSBudgetServiceGateway.CreateBudget": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.CreateBudget"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBudgetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateBudgetResponse"
            }
          },
          "480": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "481": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "482": {
            "description": "CreationLimitExceededException",
            "schema": {
              "$ref": "#/definitions/CreationLimitExceededException"
            }
          },
          "483": {
            "description": "DuplicateRecordException",
            "schema": {
              "$ref": "#/definitions/DuplicateRecordException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "<p>Creates a budget and, if included, notifications and subscribers. </p> <important> <p>Only one of <code>BudgetLimit</code> or <code>PlannedBudgetLimits</code> can be present in the syntax at one time. Use the syntax that matches your case. The Request Syntax section shows the <code>BudgetLimit</code> syntax. For <code>PlannedBudgetLimits</code>, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_CreateBudget.html#API_CreateBudget_Examples\">Examples</a> section. </p> </important>",
        "operationId": "CreateBudget"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.CreateBudgetAction": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.CreateBudgetAction"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBudgetActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateBudgetActionResponse"
            }
          },
          "480": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "481": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "482": {
            "description": "CreationLimitExceededException",
            "schema": {
              "$ref": "#/definitions/CreationLimitExceededException"
            }
          },
          "483": {
            "description": "DuplicateRecordException",
            "schema": {
              "$ref": "#/definitions/DuplicateRecordException"
            }
          },
          "484": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": " Creates a budget action. ",
        "operationId": "CreateBudgetAction"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.CreateNotification": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.CreateNotification"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNotificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateNotificationResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "CreationLimitExceededException",
            "schema": {
              "$ref": "#/definitions/CreationLimitExceededException"
            }
          },
          "484": {
            "description": "DuplicateRecordException",
            "schema": {
              "$ref": "#/definitions/DuplicateRecordException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Creates a notification. You must create the budget before you create the associated notification.",
        "operationId": "CreateNotification"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.CreateSubscriber": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.CreateSubscriber"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSubscriberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateSubscriberResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "CreationLimitExceededException",
            "schema": {
              "$ref": "#/definitions/CreationLimitExceededException"
            }
          },
          "483": {
            "description": "DuplicateRecordException",
            "schema": {
              "$ref": "#/definitions/DuplicateRecordException"
            }
          },
          "484": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Creates a subscriber. You must create the associated budget and notification before you create the subscriber.",
        "operationId": "CreateSubscriber"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.DeleteBudget": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.DeleteBudget"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteBudgetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteBudgetResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "<p>Deletes a budget. You can delete your budget at any time.</p> <important> <p>Deleting a budget also deletes the notifications and subscribers that are associated with that budget.</p> </important>",
        "operationId": "DeleteBudget"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.DeleteBudgetAction": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.DeleteBudgetAction"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteBudgetActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteBudgetActionResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceLockedException",
            "schema": {
              "$ref": "#/definitions/ResourceLockedException"
            }
          }
        },
        "description": " Deletes a budget action. ",
        "operationId": "DeleteBudgetAction"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.DeleteNotification": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.DeleteNotification"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteNotificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteNotificationResponse"
            }
          },
          "480": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "481": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "<p>Deletes a notification.</p> <important> <p>Deleting a notification also deletes the subscribers that are associated with the notification.</p> </important>",
        "operationId": "DeleteNotification"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.DeleteSubscriber": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.DeleteSubscriber"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteSubscriberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteSubscriberResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "<p>Deletes a subscriber.</p> <important> <p>Deleting the last subscriber to a notification also deletes the notification.</p> </important>",
        "operationId": "DeleteSubscriber"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudget": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.DescribeBudget"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeBudgetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeBudgetResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "<p>Describes a budget.</p> <important> <p>The Request Syntax section shows the <code>BudgetLimit</code> syntax. For <code>PlannedBudgetLimits</code>, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_DescribeBudget.html#API_DescribeBudget_Examples\">Examples</a> section. </p> </important>",
        "operationId": "DescribeBudget"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetAction": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.DescribeBudgetAction"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeBudgetActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeBudgetActionResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": " Describes a budget action detail. ",
        "operationId": "DescribeBudgetAction"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionHistories": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSBudgetServiceGateway.DescribeBudgetActionHistories"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeBudgetActionHistoriesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeBudgetActionHistoriesResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          }
        },
        "description": " Describes a budget action history detail. ",
        "operationId": "DescribeBudgetActionHistories"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionsForAccount": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSBudgetServiceGateway.DescribeBudgetActionsForAccount"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeBudgetActionsForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeBudgetActionsForAccountResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          }
        },
        "description": " Describes all of the budget actions for an account. ",
        "operationId": "DescribeBudgetActionsForAccount"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionsForBudget": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSBudgetServiceGateway.DescribeBudgetActionsForBudget"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeBudgetActionsForBudgetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeBudgetActionsForBudgetResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          }
        },
        "description": " Describes all of the budget actions for a budget. ",
        "operationId": "DescribeBudgetActionsForBudget"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetPerformanceHistory": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSBudgetServiceGateway.DescribeBudgetPerformanceHistory"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeBudgetPerformanceHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeBudgetPerformanceHistoryResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "484": {
            "description": "ExpiredNextTokenException",
            "schema": {
              "$ref": "#/definitions/ExpiredNextTokenException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Describes the history for <code>DAILY</code>, <code>MONTHLY</code>, and <code>QUARTERLY</code> budgets. Budget history isn't available for <code>ANNUAL</code> budgets.",
        "operationId": "DescribeBudgetPerformanceHistory"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgets": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSBudgetServiceGateway.DescribeBudgets"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeBudgetsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeBudgetsResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "484": {
            "description": "ExpiredNextTokenException",
            "schema": {
              "$ref": "#/definitions/ExpiredNextTokenException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "<p>Lists the budgets that are associated with an account.</p> <important> <p>The Request Syntax section shows the <code>BudgetLimit</code> syntax. For <code>PlannedBudgetLimits</code>, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_DescribeBudgets.html#API_DescribeBudgets_Examples\">Examples</a> section. </p> </important>",
        "operationId": "DescribeBudgets"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.DescribeNotificationsForBudget": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSBudgetServiceGateway.DescribeNotificationsForBudget"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeNotificationsForBudgetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeNotificationsForBudgetResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "484": {
            "description": "ExpiredNextTokenException",
            "schema": {
              "$ref": "#/definitions/ExpiredNextTokenException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Lists the notifications that are associated with a budget.",
        "operationId": "DescribeNotificationsForBudget"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.DescribeSubscribersForNotification": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSBudgetServiceGateway.DescribeSubscribersForNotification"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeSubscribersForNotificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeSubscribersForNotificationResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "483": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "484": {
            "description": "ExpiredNextTokenException",
            "schema": {
              "$ref": "#/definitions/ExpiredNextTokenException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Lists the subscribers that are associated with a notification.",
        "operationId": "DescribeSubscribersForNotification"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.ExecuteBudgetAction": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.ExecuteBudgetAction"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteBudgetActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExecuteBudgetActionResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceLockedException",
            "schema": {
              "$ref": "#/definitions/ResourceLockedException"
            }
          }
        },
        "description": " Executes a budget action. ",
        "operationId": "ExecuteBudgetAction"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.UpdateBudget": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.UpdateBudget"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateBudgetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateBudgetResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "<p>Updates a budget. You can change every part of a budget except for the <code>budgetName</code> and the <code>calculatedSpend</code>. When you modify a budget, the <code>calculatedSpend</code> drops to zero until AWS has new usage data to use for forecasting.</p> <important> <p>Only one of <code>BudgetLimit</code> or <code>PlannedBudgetLimits</code> can be present in the syntax at one time. Use the syntax that matches your case. The Request Syntax section shows the <code>BudgetLimit</code> syntax. For <code>PlannedBudgetLimits</code>, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_UpdateBudget.html#API_UpdateBudget_Examples\">Examples</a> section. </p> </important>",
        "operationId": "UpdateBudget"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.UpdateBudgetAction": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.UpdateBudgetAction"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateBudgetActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateBudgetActionResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceLockedException",
            "schema": {
              "$ref": "#/definitions/ResourceLockedException"
            }
          }
        },
        "description": " Updates a budget action. ",
        "operationId": "UpdateBudgetAction"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.UpdateNotification": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.UpdateNotification"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateNotificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateNotificationResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "DuplicateRecordException",
            "schema": {
              "$ref": "#/definitions/DuplicateRecordException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Updates a notification.",
        "operationId": "UpdateNotification"
      }
    },
    "/#X-Amz-Target=AWSBudgetServiceGateway.UpdateSubscriber": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSBudgetServiceGateway.UpdateSubscriber"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSubscriberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateSubscriberResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "DuplicateRecordException",
            "schema": {
              "$ref": "#/definitions/DuplicateRecordException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Updates a subscriber.",
        "operationId": "UpdateSubscriber"
      }
    }
  },
  "definitions": {
    "AccessDeniedException": {},
    "AccountId": {
      "description": "The account ID of the user. It should be a 12-digit number.",
      "maxLength": 12,
      "minLength": 12,
      "pattern": "\\d{12}",
      "type": "string"
    },
    "Action": {
      "description": " A budget action resource. ",
      "properties": {
        "ActionId": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionId"
            },
            {
              "description": " A system-generated universally unique identifier (UUID) for the action. "
            }
          ]
        },
        "ActionThreshold": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionThreshold"
            },
            {
              "description": " The trigger threshold of the action. "
            }
          ]
        },
        "ActionType": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionType"
            },
            {
              "description": " The type of action. This defines the type of tasks that can be carried out by this action. This field also determines the format for definition. "
            }
          ]
        },
        "ApprovalModel": {
          "allOf": [
            {
              "$ref": "#/definitions/ApprovalModel"
            },
            {
              "description": " This specifies if the action needs manual or automatic approval. "
            }
          ]
        },
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        },
        "Definition": {
          "allOf": [
            {
              "$ref": "#/definitions/Definition"
            },
            {
              "description": " Where you specify all of the type-specific parameters. "
            }
          ]
        },
        "ExecutionRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleArn"
            },
            {
              "description": " The role passed for action execution and reversion. Roles and actions must be in the same account. "
            }
          ]
        },
        "NotificationType": {
          "$ref": "#/definitions/NotificationType"
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionStatus"
            },
            {
              "description": " The status of action. "
            }
          ]
        },
        "Subscribers": {
          "$ref": "#/definitions/Subscribers"
        }
      },
      "required": [
        "ActionId",
        "BudgetName",
        "NotificationType",
        "ActionType",
        "ActionThreshold",
        "Definition",
        "ExecutionRoleArn",
        "ApprovalModel",
        "Status",
        "Subscribers"
      ],
      "type": "object"
    },
    "ActionHistories": {
      "items": {
        "$ref": "#/definitions/ActionHistory"
      },
      "maxItems": 100,
      "minItems": 0,
      "type": "array"
    },
    "ActionHistory": {
      "description": " The historical records for a budget action. ",
      "properties": {
        "ActionHistoryDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionHistoryDetails"
            },
            {
              "description": " The description of details of the event. "
            }
          ]
        },
        "EventType": {
          "allOf": [
            {
              "$ref": "#/definitions/EventType"
            },
            {
              "description": " This distinguishes between whether the events are triggered by the user or generated by the system. "
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionStatus"
            },
            {
              "description": " The status of action at the time of the event. "
            }
          ]
        },
        "Timestamp": {
          "$ref": "#/definitions/GenericTimestamp"
        }
      },
      "required": [
        "Timestamp",
        "Status",
        "EventType",
        "ActionHistoryDetails"
      ],
      "type": "object"
    },
    "ActionHistoryDetails": {
      "description": " The description of details of the event. ",
      "properties": {
        "Action": {
          "allOf": [
            {
              "$ref": "#/definitions/Action"
            },
            {
              "description": " The budget action resource. "
            }
          ]
        },
        "Message": {
          "$ref": "#/definitions/GenericString"
        }
      },
      "required": [
        "Message",
        "Action"
      ],
      "type": "object"
    },
    "ActionId": {
      "maxLength": 36,
      "minLength": 36,
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
      "type": "string"
    },
    "ActionStatus": {
      "enum": [
        "STANDBY",
        "PENDING",
        "EXECUTION_IN_PROGRESS",
        "EXECUTION_SUCCESS",
        "EXECUTION_FAILURE",
        "REVERSE_IN_PROGRESS",
        "REVERSE_SUCCESS",
        "REVERSE_FAILURE",
        "RESET_IN_PROGRESS",
        "RESET_FAILURE"
      ],
      "type": "string"
    },
    "ActionSubType": {
      "enum": [
        "STOP_EC2_INSTANCES",
        "STOP_RDS_INSTANCES"
      ],
      "type": "string"
    },
    "ActionThreshold": {
      "description": " The trigger threshold of the action. ",
      "properties": {
        "ActionThresholdType": {
          "$ref": "#/definitions/ThresholdType"
        },
        "ActionThresholdValue": {
          "$ref": "#/definitions/NotificationThreshold"
        }
      },
      "required": [
        "ActionThresholdValue",
        "ActionThresholdType"
      ],
      "type": "object"
    },
    "ActionType": {
      "enum": [
        "APPLY_IAM_POLICY",
        "APPLY_SCP_POLICY",
        "RUN_SSM_DOCUMENTS"
      ],
      "type": "string"
    },
    "Actions": {
      "items": {
        "$ref": "#/definitions/Action"
      },
      "maxItems": 100,
      "minItems": 0,
      "type": "array"
    },
    "ApprovalModel": {
      "enum": [
        "AUTOMATIC",
        "MANUAL"
      ],
      "type": "string"
    },
    "Budget": {
      "description": "<p>Represents the output of the <code>CreateBudget</code> operation. The content consists of the detailed metadata and data file information, and the current status of the <code>budget</code> object.</p> <p>This is the ARN pattern for a budget: </p> <p> <code>arn:aws:budgets::AccountId:budget/budgetName</code> </p>",
      "properties": {
        "BudgetLimit": {
          "allOf": [
            {
              "$ref": "#/definitions/Spend"
            },
            {
              "description": "<p>The total amount of cost, usage, RI utilization, RI coverage, Savings Plans utilization, or Savings Plans coverage that you want to track with your budget.</p> <p> <code>BudgetLimit</code> is required for cost or usage budgets, but optional for RI or Savings Plans utilization or coverage budgets. RI and Savings Plans utilization or coverage budgets default to <code>100</code>, which is the only valid value for RI or Savings Plans utilization or coverage budgets. You can't use <code>BudgetLimit</code> with <code>PlannedBudgetLimits</code> for <code>CreateBudget</code> and <code>UpdateBudget</code> actions. </p>"
            }
          ]
        },
        "BudgetName": {
          "allOf": [
            {
              "$ref": "#/definitions/BudgetName"
            },
            {
              "description": "The name of a budget. The name must be unique within an account. The <code>:</code> and <code>\\</code> characters aren't allowed in <code>BudgetName</code>."
            }
          ]
        },
        "BudgetType": {
          "allOf": [
            {
              "$ref": "#/definitions/BudgetType"
            },
            {
              "description": "Whether this budget tracks costs, usage, RI utilization, RI coverage, Savings Plans utilization, or Savings Plans coverage."
            }
          ]
        },
        "CalculatedSpend": {
          "allOf": [
            {
              "$ref": "#/definitions/CalculatedSpend"
            },
            {
              "description": "The actual and forecasted cost or usage that the budget tracks."
            }
          ]
        },
        "CostFilters": {
          "allOf": [
            {
              "$ref": "#/definitions/CostFilters"
            },
            {
              "description": "<p>The cost filters, such as service or tag, that are applied to a budget.</p> <p>AWS Budgets supports the following services as a filter for RI budgets:</p> <ul> <li> <p>Amazon Elastic Compute Cloud - Compute</p> </li> <li> <p>Amazon Redshift</p> </li> <li> <p>Amazon Relational Database Service</p> </li> <li> <p>Amazon ElastiCache</p> </li> <li> <p>Amazon Elasticsearch Service</p> </li> </ul>"
            }
          ]
        },
        "CostTypes": {
          "allOf": [
            {
              "$ref": "#/definitions/CostTypes"
            },
            {
              "description": "<p>The types of costs that are included in this <code>COST</code> budget.</p> <p> <code>USAGE</code>, <code>RI_UTILIZATION</code>, <code>RI_COVERAGE</code>, <code>SAVINGS_PLANS_UTILIZATION</code>, and <code>SAVINGS_PLANS_COVERAGE</code> budgets do not have <code>CostTypes</code>.</p>"
            }
          ]
        },
        "LastUpdatedTime": {
          "allOf": [
            {
              "$ref": "#/definitions/GenericTimestamp"
            },
            {
              "description": "The last time that you updated this budget."
            }
          ]
        },
        "PlannedBudgetLimits": {
          "allOf": [
            {
              "$ref": "#/definitions/PlannedBudgetLimits"
            },
            {
              "description": "<p>A map containing multiple <code>BudgetLimit</code>, including current or future limits.</p> <p> <code>PlannedBudgetLimits</code> is available for cost or usage budget and supports monthly and quarterly <code>TimeUnit</code>. </p> <p>For monthly budgets, provide 12 months of <code>PlannedBudgetLimits</code> values. This must start from the current month and include the next 11 months. The <code>key</code> is the start of the month, <code>UTC</code> in epoch seconds. </p> <p>For quarterly budgets, provide 4 quarters of <code>PlannedBudgetLimits</code> value entries in standard calendar quarter increments. This must start from the current quarter and include the next 3 quarters. The <code>key</code> is the start of the quarter, <code>UTC</code> in epoch seconds. </p> <p>If the planned budget expires before 12 months for monthly or 4 quarters for quarterly, provide the <code>PlannedBudgetLimits</code> values only for the remaining periods.</p> <p>If the budget begins at a date in the future, provide <code>PlannedBudgetLimits</code> values from the start date of the budget. </p> <p>After all of the <code>BudgetLimit</code> values in <code>PlannedBudgetLimits</code> are used, the budget continues to use the last limit as the <code>BudgetLimit</code>. At that point, the planned budget provides the same experience as a fixed budget. </p> <p> <code>DescribeBudget</code> and <code>DescribeBudgets</code> response along with <code>PlannedBudgetLimits</code> will also contain <code>BudgetLimit</code> representing the current month or quarter limit present in <code>PlannedBudgetLimits</code>. This only applies to budgets created with <code>PlannedBudgetLimits</code>. Budgets created without <code>PlannedBudgetLimits</code> will only contain <code>BudgetLimit</code>, and no <code>PlannedBudgetLimits</code>.</p>"
            }
          ]
        },
        "TimePeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/TimePeriod"
            },
            {
              "description": "<p>The period of time that is covered by a budget. The period has a start date and an end date. The start date must come before the end date. The end date must come before <code>06/15/87 00:00 UTC</code>. </p> <p>If you create your budget and don't specify a start date, AWS defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you created your budget on January 24, 2018, chose <code>DAILY</code>, and didn't set a start date, AWS set your start date to <code>01/24/18 00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to <code>01/01/18 00:00 UTC</code>. If you didn't specify an end date, AWS set your end date to <code>06/15/87 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost Management console and the API. </p> <p>You can change either date with the <code>UpdateBudget</code> operation.</p> <p>After the end date, AWS deletes the budget and all associated notifications and subscribers.</p>"
            }
          ]
        },
        "TimeUnit": {
          "allOf": [
            {
              "$ref": "#/definitions/TimeUnit"
            },
            {
              "description": "The length of time until a budget resets the actual and forecasted spend."
            }
          ]
        }
      },
      "required": [
        "BudgetName",
        "TimeUnit",
        "BudgetType"
      ],
      "type": "object"
    },
    "BudgetName": {
      "description": " A string that represents the budget name. The \":\" and \"\\\" characters aren't allowed.",
      "maxLength": 100,
      "minLength": 1,
      "pattern": "[^:\\\\]+",
      "type": "string"
    },
    "BudgetPerformanceHistory": {
      "description": "A history of the state of a budget at the end of the budget's specified time period.",
      "properties": {
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        },
        "BudgetType": {
          "$ref": "#/definitions/BudgetType"
        },
        "BudgetedAndActualAmountsList": {
          "allOf": [
            {
              "$ref": "#/definitions/BudgetedAndActualAmountsList"
            },
            {
              "description": "A list of amounts of cost or usage that you created budgets for, compared to your actual costs or usage."
            }
          ]
        },
        "CostFilters": {
          "allOf": [
            {
              "$ref": "#/definitions/CostFilters"
            },
            {
              "description": "The history of the cost filters for a budget during the specified time period."
            }
          ]
        },
        "CostTypes": {
          "allOf": [
            {
              "$ref": "#/definitions/CostTypes"
            },
            {
              "description": "The history of the cost types for a budget during the specified time period."
            }
          ]
        },
        "TimeUnit": {
          "$ref": "#/definitions/TimeUnit"
        }
      },
      "type": "object"
    },
    "BudgetType": {
      "description": "<p> The type of a budget. It must be one of the following types: </p> <p> <code>COST</code>, <code>USAGE</code>, <code>RI_UTILIZATION</code>, <code>RI_COVERAGE</code>, <code>SAVINGS_PLANS_UTILIZATION</code>, or <code>SAVINGS_PLANS_COVERAGE</code>.</p>",
      "enum": [
        "USAGE",
        "COST",
        "RI_UTILIZATION",
        "RI_COVERAGE",
        "SAVINGS_PLANS_UTILIZATION",
        "SAVINGS_PLANS_COVERAGE"
      ],
      "type": "string"
    },
    "BudgetedAndActualAmounts": {
      "description": "The amount of cost or usage that you created the budget for, compared to your actual costs or usage.",
      "properties": {
        "ActualAmount": {
          "allOf": [
            {
              "$ref": "#/definitions/Spend"
            },
            {
              "description": "Your actual costs or usage for a budget period."
            }
          ]
        },
        "BudgetedAmount": {
          "allOf": [
            {
              "$ref": "#/definitions/Spend"
            },
            {
              "description": "The amount of cost or usage that you created the budget for."
            }
          ]
        },
        "TimePeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/TimePeriod"
            },
            {
              "description": "The time period covered by this budget comparison."
            }
          ]
        }
      },
      "type": "object"
    },
    "BudgetedAndActualAmountsList": {
      "items": {
        "$ref": "#/definitions/BudgetedAndActualAmounts"
      },
      "type": "array"
    },
    "Budgets": {
      "description": " A list of budgets.",
      "items": {
        "$ref": "#/definitions/Budget"
      },
      "type": "array"
    },
    "CalculatedSpend": {
      "description": "<p>The spend objects that are associated with this budget. The <code>actualSpend</code> tracks how much you've used, cost, usage, RI units, or Savings Plans units and the <code>forecastedSpend</code> tracks how much you are predicted to spend based on your historical usage profile.</p> <p>For example, if it is the 20th of the month and you have spent <code>50</code> dollars on Amazon EC2, your <code>actualSpend</code> is <code>50 USD</code>, and your <code>forecastedSpend</code> is <code>75 USD</code>.</p>",
      "properties": {
        "ActualSpend": {
          "allOf": [
            {
              "$ref": "#/definitions/Spend"
            },
            {
              "description": "The amount of cost, usage, RI units, or Savings Plans units that you have used."
            }
          ]
        },
        "ForecastedSpend": {
          "allOf": [
            {
              "$ref": "#/definitions/Spend"
            },
            {
              "description": "The amount of cost, usage, RI units, or Savings Plans units that you are forecasted to use."
            }
          ]
        }
      },
      "required": [
        "ActualSpend"
      ],
      "type": "object"
    },
    "ComparisonOperator": {
      "description": "<p> The comparison operator of a notification. Currently the service supports the following operators:</p> <p> <code>GREATER_THAN</code>, <code>LESS_THAN</code>, <code>EQUAL_TO</code> </p>",
      "enum": [
        "GREATER_THAN",
        "LESS_THAN",
        "EQUAL_TO"
      ],
      "type": "string"
    },
    "CostFilters": {
      "additionalProperties": {
        "$ref": "#/definitions/DimensionValues"
      },
      "description": " A map that represents the cost filters that are applied to the budget.",
      "type": "object"
    },
    "CostTypes": {
      "description": "<p>The types of cost that are included in a <code>COST</code> budget, such as tax and subscriptions.</p> <p> <code>USAGE</code>, <code>RI_UTILIZATION</code>, <code>RI_COVERAGE</code>, <code>SAVINGS_PLANS_UTILIZATION</code>, and <code>SAVINGS_PLANS_COVERAGE</code> budgets do not have <code>CostTypes</code>.</p>",
      "properties": {
        "IncludeCredit": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "<p>Specifies whether a budget includes credits.</p> <p>The default value is <code>true</code>.</p>"
            }
          ]
        },
        "IncludeDiscount": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "<p>Specifies whether a budget includes discounts.</p> <p>The default value is <code>true</code>.</p>"
            }
          ]
        },
        "IncludeOtherSubscription": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "<p>Specifies whether a budget includes non-RI subscription costs.</p> <p>The default value is <code>true</code>.</p>"
            }
          ]
        },
        "IncludeRecurring": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "<p>Specifies whether a budget includes recurring fees such as monthly RI fees.</p> <p>The default value is <code>true</code>.</p>"
            }
          ]
        },
        "IncludeRefund": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "<p>Specifies whether a budget includes refunds.</p> <p>The default value is <code>true</code>.</p>"
            }
          ]
        },
        "IncludeSubscription": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "<p>Specifies whether a budget includes subscriptions.</p> <p>The default value is <code>true</code>.</p>"
            }
          ]
        },
        "IncludeSupport": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "<p>Specifies whether a budget includes support subscription fees.</p> <p>The default value is <code>true</code>.</p>"
            }
          ]
        },
        "IncludeTax": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "<p>Specifies whether a budget includes taxes.</p> <p>The default value is <code>true</code>.</p>"
            }
          ]
        },
        "IncludeUpfront": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "<p>Specifies whether a budget includes upfront RI costs.</p> <p>The default value is <code>true</code>.</p>"
            }
          ]
        },
        "UseAmortized": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "<p>Specifies whether a budget uses the amortized rate.</p> <p>The default value is <code>false</code>.</p>"
            }
          ]
        },
        "UseBlended": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "<p>Specifies whether a budget uses a blended rate.</p> <p>The default value is <code>false</code>.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateBudgetActionRequest": {
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "ActionThreshold": {
          "$ref": "#/definitions/ActionThreshold"
        },
        "ActionType": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionType"
            },
            {
              "description": " The type of action. This defines the type of tasks that can be carried out by this action. This field also determines the format for definition. "
            }
          ]
        },
        "ApprovalModel": {
          "allOf": [
            {
              "$ref": "#/definitions/ApprovalModel"
            },
            {
              "description": " This specifies if the action needs manual or automatic approval. "
            }
          ]
        },
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        },
        "Definition": {
          "$ref": "#/definitions/Definition"
        },
        "ExecutionRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleArn"
            },
            {
              "description": " The role passed for action execution and reversion. Roles and actions must be in the same account. "
            }
          ]
        },
        "NotificationType": {
          "$ref": "#/definitions/NotificationType"
        },
        "Subscribers": {
          "$ref": "#/definitions/Subscribers"
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "NotificationType",
        "ActionType",
        "ActionThreshold",
        "Definition",
        "ExecutionRoleArn",
        "ApprovalModel",
        "Subscribers"
      ],
      "title": "CreateBudgetActionRequest",
      "type": "object"
    },
    "CreateBudgetActionResponse": {
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "ActionId": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionId"
            },
            {
              "description": " A system-generated universally unique identifier (UUID) for the action. "
            }
          ]
        },
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "ActionId"
      ],
      "type": "object"
    },
    "CreateBudgetRequest": {
      "description": " Request of CreateBudget ",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The <code>accountId</code> that is associated with the budget."
            }
          ]
        },
        "Budget": {
          "allOf": [
            {
              "$ref": "#/definitions/Budget"
            },
            {
              "description": "The budget object that you want to create."
            }
          ]
        },
        "NotificationsWithSubscribers": {
          "allOf": [
            {
              "$ref": "#/definitions/NotificationWithSubscribersList"
            },
            {
              "description": "A notification that you want to associate with a budget. A budget can have up to five notifications, and each notification can have one SNS subscriber and up to 10 email subscribers. If you include notifications and subscribers in your <code>CreateBudget</code> call, AWS creates the notifications and subscribers for you."
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "Budget"
      ],
      "title": "CreateBudgetRequest",
      "type": "object"
    },
    "CreateBudgetResponse": {
      "description": " Response of CreateBudget ",
      "properties": {},
      "type": "object"
    },
    "CreateNotificationRequest": {
      "description": " Request of CreateNotification ",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The <code>accountId</code> that is associated with the budget that you want to create a notification for."
            }
          ]
        },
        "BudgetName": {
          "allOf": [
            {
              "$ref": "#/definitions/BudgetName"
            },
            {
              "description": "The name of the budget that you want AWS to notify you about. Budget names must be unique within an account."
            }
          ]
        },
        "Notification": {
          "allOf": [
            {
              "$ref": "#/definitions/Notification"
            },
            {
              "description": "The notification that you want to create."
            }
          ]
        },
        "Subscribers": {
          "allOf": [
            {
              "$ref": "#/definitions/Subscribers"
            },
            {
              "description": "A list of subscribers that you want to associate with the notification. Each notification can have one SNS subscriber and up to 10 email subscribers."
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "Notification",
        "Subscribers"
      ],
      "title": "CreateNotificationRequest",
      "type": "object"
    },
    "CreateNotificationResponse": {
      "description": " Response of CreateNotification ",
      "properties": {},
      "type": "object"
    },
    "CreateSubscriberRequest": {
      "description": " Request of CreateSubscriber ",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The <code>accountId</code> that is associated with the budget that you want to create a subscriber for."
            }
          ]
        },
        "BudgetName": {
          "allOf": [
            {
              "$ref": "#/definitions/BudgetName"
            },
            {
              "description": "The name of the budget that you want to subscribe to. Budget names must be unique within an account."
            }
          ]
        },
        "Notification": {
          "allOf": [
            {
              "$ref": "#/definitions/Notification"
            },
            {
              "description": "The notification that you want to create a subscriber for."
            }
          ]
        },
        "Subscriber": {
          "allOf": [
            {
              "$ref": "#/definitions/Subscriber"
            },
            {
              "description": "The subscriber that you want to associate with a budget notification."
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "Notification",
        "Subscriber"
      ],
      "title": "CreateSubscriberRequest",
      "type": "object"
    },
    "CreateSubscriberResponse": {
      "description": " Response of CreateSubscriber ",
      "properties": {},
      "type": "object"
    },
    "CreationLimitExceededException": {},
    "Definition": {
      "description": " Specifies all of the type-specific parameters. ",
      "properties": {
        "IamActionDefinition": {
          "allOf": [
            {
              "$ref": "#/definitions/IamActionDefinition"
            },
            {
              "description": " The AWS Identity and Access Management (IAM) action definition details. "
            }
          ]
        },
        "ScpActionDefinition": {
          "allOf": [
            {
              "$ref": "#/definitions/ScpActionDefinition"
            },
            {
              "description": " The service control policies (SCPs) action definition details. "
            }
          ]
        },
        "SsmActionDefinition": {
          "allOf": [
            {
              "$ref": "#/definitions/SsmActionDefinition"
            },
            {
              "description": " The AWS Systems Manager (SSM) action definition details. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteBudgetActionRequest": {
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "ActionId": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionId"
            },
            {
              "description": " A system-generated universally unique identifier (UUID) for the action. "
            }
          ]
        },
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "ActionId"
      ],
      "title": "DeleteBudgetActionRequest",
      "type": "object"
    },
    "DeleteBudgetActionResponse": {
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "Action": {
          "$ref": "#/definitions/Action"
        },
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "Action"
      ],
      "type": "object"
    },
    "DeleteBudgetRequest": {
      "description": " Request of DeleteBudget ",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The <code>accountId</code> that is associated with the budget that you want to delete."
            }
          ]
        },
        "BudgetName": {
          "allOf": [
            {
              "$ref": "#/definitions/BudgetName"
            },
            {
              "description": "The name of the budget that you want to delete."
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "BudgetName"
      ],
      "title": "DeleteBudgetRequest",
      "type": "object"
    },
    "DeleteBudgetResponse": {
      "description": " Response of DeleteBudget ",
      "properties": {},
      "type": "object"
    },
    "DeleteNotificationRequest": {
      "description": " Request of DeleteNotification ",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The <code>accountId</code> that is associated with the budget whose notification you want to delete."
            }
          ]
        },
        "BudgetName": {
          "allOf": [
            {
              "$ref": "#/definitions/BudgetName"
            },
            {
              "description": "The name of the budget whose notification you want to delete."
            }
          ]
        },
        "Notification": {
          "allOf": [
            {
              "$ref": "#/definitions/Notification"
            },
            {
              "description": "The notification that you want to delete."
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "Notification"
      ],
      "title": "DeleteNotificationRequest",
      "type": "object"
    },
    "DeleteNotificationResponse": {
      "description": " Response of DeleteNotification ",
      "properties": {},
      "type": "object"
    },
    "DeleteSubscriberRequest": {
      "description": " Request of DeleteSubscriber ",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The <code>accountId</code> that is associated with the budget whose subscriber you want to delete."
            }
          ]
        },
        "BudgetName": {
          "allOf": [
            {
              "$ref": "#/definitions/BudgetName"
            },
            {
              "description": "The name of the budget whose subscriber you want to delete."
            }
          ]
        },
        "Notification": {
          "allOf": [
            {
              "$ref": "#/definitions/Notification"
            },
            {
              "description": "The notification whose subscriber you want to delete."
            }
          ]
        },
        "Subscriber": {
          "allOf": [
            {
              "$ref": "#/definitions/Subscriber"
            },
            {
              "description": "The subscriber that you want to delete."
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "Notification",
        "Subscriber"
      ],
      "title": "DeleteSubscriberRequest",
      "type": "object"
    },
    "DeleteSubscriberResponse": {
      "description": " Response of DeleteSubscriber ",
      "properties": {},
      "type": "object"
    },
    "DescribeBudgetActionHistoriesRequest": {
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "ActionId": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionId"
            },
            {
              "description": " A system-generated universally unique identifier (UUID) for the action. "
            }
          ]
        },
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults"
        },
        "NextToken": {
          "$ref": "#/definitions/GenericString"
        },
        "TimePeriod": {
          "$ref": "#/definitions/TimePeriod"
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "ActionId"
      ],
      "title": "DescribeBudgetActionHistoriesRequest",
      "type": "object"
    },
    "DescribeBudgetActionHistoriesResponse": {
      "properties": {
        "ActionHistories": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionHistories"
            },
            {
              "description": " The historical record of the budget action resource. "
            }
          ]
        },
        "NextToken": {
          "$ref": "#/definitions/GenericString"
        }
      },
      "required": [
        "ActionHistories"
      ],
      "type": "object"
    },
    "DescribeBudgetActionRequest": {
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "ActionId": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionId"
            },
            {
              "description": " A system-generated universally unique identifier (UUID) for the action. "
            }
          ]
        },
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "ActionId"
      ],
      "title": "DescribeBudgetActionRequest",
      "type": "object"
    },
    "DescribeBudgetActionResponse": {
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "Action": {
          "allOf": [
            {
              "$ref": "#/definitions/Action"
            },
            {
              "description": " A budget action resource. "
            }
          ]
        },
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "Action"
      ],
      "type": "object"
    },
    "DescribeBudgetActionsForAccountRequest": {
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults"
        },
        "NextToken": {
          "$ref": "#/definitions/GenericString"
        }
      },
      "required": [
        "AccountId"
      ],
      "title": "DescribeBudgetActionsForAccountRequest",
      "type": "object"
    },
    "DescribeBudgetActionsForAccountResponse": {
      "properties": {
        "Actions": {
          "allOf": [
            {
              "$ref": "#/definitions/Actions"
            },
            {
              "description": " A list of the budget action resources information. "
            }
          ]
        },
        "NextToken": {
          "$ref": "#/definitions/GenericString"
        }
      },
      "required": [
        "Actions"
      ],
      "type": "object"
    },
    "DescribeBudgetActionsForBudgetRequest": {
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults"
        },
        "NextToken": {
          "$ref": "#/definitions/GenericString"
        }
      },
      "required": [
        "AccountId",
        "BudgetName"
      ],
      "title": "DescribeBudgetActionsForBudgetRequest",
      "type": "object"
    },
    "DescribeBudgetActionsForBudgetResponse": {
      "properties": {
        "Actions": {
          "allOf": [
            {
              "$ref": "#/definitions/Actions"
            },
            {
              "description": " A list of the budget action resources information. "
            }
          ]
        },
        "NextToken": {
          "$ref": "#/definitions/GenericString"
        }
      },
      "required": [
        "Actions"
      ],
      "type": "object"
    },
    "DescribeBudgetPerformanceHistoryRequest": {
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults"
        },
        "NextToken": {
          "$ref": "#/definitions/GenericString"
        },
        "TimePeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/TimePeriod"
            },
            {
              "description": "Retrieves how often the budget went into an <code>ALARM</code> state for the specified time period."
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "BudgetName"
      ],
      "title": "DescribeBudgetPerformanceHistoryRequest",
      "type": "object"
    },
    "DescribeBudgetPerformanceHistoryResponse": {
      "properties": {
        "BudgetPerformanceHistory": {
          "allOf": [
            {
              "$ref": "#/definitions/BudgetPerformanceHistory"
            },
            {
              "description": "<p>The history of how often the budget has gone into an <code>ALARM</code> state.</p> <p>For <code>DAILY</code> budgets, the history saves the state of the budget for the last 60 days. For <code>MONTHLY</code> budgets, the history saves the state of the budget for the current month plus the last 12 months. For <code>QUARTERLY</code> budgets, the history saves the state of the budget for the last four quarters.</p>"
            }
          ]
        },
        "NextToken": {
          "$ref": "#/definitions/GenericString"
        }
      },
      "type": "object"
    },
    "DescribeBudgetRequest": {
      "description": " Request of DescribeBudget ",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The <code>accountId</code> that is associated with the budget that you want a description of."
            }
          ]
        },
        "BudgetName": {
          "allOf": [
            {
              "$ref": "#/definitions/BudgetName"
            },
            {
              "description": "The name of the budget that you want a description of."
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "BudgetName"
      ],
      "title": "DescribeBudgetRequest",
      "type": "object"
    },
    "DescribeBudgetResponse": {
      "description": " Response of DescribeBudget ",
      "properties": {
        "Budget": {
          "allOf": [
            {
              "$ref": "#/definitions/Budget"
            },
            {
              "description": "The description of the budget."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeBudgetsRequest": {
      "description": " Request of DescribeBudgets ",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The <code>accountId</code> that is associated with the budgets that you want descriptions of."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "An optional integer that represents how many entries a paginated response contains. The maximum is 100."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/GenericString"
            },
            {
              "description": "The pagination token that you include in your request to indicate the next set of results that you want to retrieve."
            }
          ]
        }
      },
      "required": [
        "AccountId"
      ],
      "title": "DescribeBudgetsRequest",
      "type": "object"
    },
    "DescribeBudgetsResponse": {
      "description": " Response of DescribeBudgets ",
      "properties": {
        "Budgets": {
          "allOf": [
            {
              "$ref": "#/definitions/Budgets"
            },
            {
              "description": "A list of budgets."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/GenericString"
            },
            {
              "description": "The pagination token in the service response that indicates the next set of results that you can retrieve."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeNotificationsForBudgetRequest": {
      "description": " Request of DescribeNotificationsForBudget ",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The <code>accountId</code> that is associated with the budget whose notifications you want descriptions of."
            }
          ]
        },
        "BudgetName": {
          "allOf": [
            {
              "$ref": "#/definitions/BudgetName"
            },
            {
              "description": "The name of the budget whose notifications you want descriptions of."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "An optional integer that represents how many entries a paginated response contains. The maximum is 100."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/GenericString"
            },
            {
              "description": "The pagination token that you include in your request to indicate the next set of results that you want to retrieve."
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "BudgetName"
      ],
      "title": "DescribeNotificationsForBudgetRequest",
      "type": "object"
    },
    "DescribeNotificationsForBudgetResponse": {
      "description": " Response of GetNotificationsForBudget ",
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/GenericString"
            },
            {
              "description": "The pagination token in the service response that indicates the next set of results that you can retrieve."
            }
          ]
        },
        "Notifications": {
          "allOf": [
            {
              "$ref": "#/definitions/Notifications"
            },
            {
              "description": "A list of notifications that are associated with a budget."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeSubscribersForNotificationRequest": {
      "description": " Request of DescribeSubscribersForNotification ",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The <code>accountId</code> that is associated with the budget whose subscribers you want descriptions of."
            }
          ]
        },
        "BudgetName": {
          "allOf": [
            {
              "$ref": "#/definitions/BudgetName"
            },
            {
              "description": "The name of the budget whose subscribers you want descriptions of."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "An optional integer that represents how many entries a paginated response contains. The maximum is 100."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/GenericString"
            },
            {
              "description": "The pagination token that you include in your request to indicate the next set of results that you want to retrieve."
            }
          ]
        },
        "Notification": {
          "allOf": [
            {
              "$ref": "#/definitions/Notification"
            },
            {
              "description": "The notification whose subscribers you want to list."
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "Notification"
      ],
      "title": "DescribeSubscribersForNotificationRequest",
      "type": "object"
    },
    "DescribeSubscribersForNotificationResponse": {
      "description": " Response of DescribeSubscribersForNotification ",
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/GenericString"
            },
            {
              "description": "The pagination token in the service response that indicates the next set of results that you can retrieve."
            }
          ]
        },
        "Subscribers": {
          "allOf": [
            {
              "$ref": "#/definitions/Subscribers"
            },
            {
              "description": "A list of subscribers that are associated with a notification."
            }
          ]
        }
      },
      "type": "object"
    },
    "DimensionValues": {
      "items": {
        "$ref": "#/definitions/GenericString"
      },
      "type": "array"
    },
    "DuplicateRecordException": {},
    "EventType": {
      "enum": [
        "SYSTEM",
        "CREATE_ACTION",
        "DELETE_ACTION",
        "UPDATE_ACTION",
        "EXECUTE_ACTION"
      ],
      "type": "string"
    },
    "ExecuteBudgetActionRequest": {
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "ActionId": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionId"
            },
            {
              "description": " A system-generated universally unique identifier (UUID) for the action. "
            }
          ]
        },
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        },
        "ExecutionType": {
          "allOf": [
            {
              "$ref": "#/definitions/ExecutionType"
            },
            {
              "description": " The type of execution. "
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "ActionId",
        "ExecutionType"
      ],
      "title": "ExecuteBudgetActionRequest",
      "type": "object"
    },
    "ExecuteBudgetActionResponse": {
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "ActionId": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionId"
            },
            {
              "description": " A system-generated universally unique identifier (UUID) for the action. "
            }
          ]
        },
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        },
        "ExecutionType": {
          "allOf": [
            {
              "$ref": "#/definitions/ExecutionType"
            },
            {
              "description": " The type of execution. "
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "ActionId",
        "ExecutionType"
      ],
      "type": "object"
    },
    "ExecutionType": {
      "enum": [
        "APPROVE_BUDGET_ACTION",
        "RETRY_BUDGET_ACTION",
        "REVERSE_BUDGET_ACTION",
        "RESET_BUDGET_ACTION"
      ],
      "type": "string"
    },
    "ExpiredNextTokenException": {},
    "GenericString": {
      "description": " A generic string.",
      "maxLength": 2147483647,
      "minLength": 0,
      "pattern": ".*",
      "type": "string"
    },
    "GenericTimestamp": {
      "description": " A generic time stamp. In Java, it is transformed to a <code>Date</code> object.",
      "format": "date-time",
      "type": "string"
    },
    "Group": {
      "maxLength": 640,
      "minLength": 1,
      "pattern": "^([\\u0021-\\u007F]+\\u002F)?[\\w+=,.@-]+$",
      "type": "string"
    },
    "Groups": {
      "items": {
        "$ref": "#/definitions/Group"
      },
      "maxItems": 100,
      "minItems": 1,
      "type": "array"
    },
    "IamActionDefinition": {
      "description": " The AWS Identity and Access Management (IAM) action definition details. ",
      "properties": {
        "Groups": {
          "allOf": [
            {
              "$ref": "#/definitions/Groups"
            },
            {
              "description": " A list of groups to be attached. There must be at least one group. "
            }
          ]
        },
        "PolicyArn": {
          "allOf": [
            {
              "$ref": "#/definitions/PolicyArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) of the policy to be attached. "
            }
          ]
        },
        "Roles": {
          "allOf": [
            {
              "$ref": "#/definitions/Roles"
            },
            {
              "description": " A list of roles to be attached. There must be at least one role. "
            }
          ]
        },
        "Users": {
          "allOf": [
            {
              "$ref": "#/definitions/Users"
            },
            {
              "description": " A list of users to be attached. There must be at least one user. "
            }
          ]
        }
      },
      "required": [
        "PolicyArn"
      ],
      "type": "object"
    },
    "InstanceId": {
      "maxLength": 63,
      "minLength": 1,
      "pattern": "^i-(\\w{8}|\\w{17})$|^[a-zA-Z]([\\w-]{0,61}\\w)?$",
      "type": "string"
    },
    "InstanceIds": {
      "items": {
        "$ref": "#/definitions/InstanceId"
      },
      "maxItems": 100,
      "minItems": 1,
      "type": "array"
    },
    "InternalErrorException": {},
    "InvalidNextTokenException": {},
    "InvalidParameterException": {},
    "MaxResults": {
      "description": " An integer that represents how many entries a paginated response contains. The maximum is 100.",
      "maximum": 100,
      "minimum": 1,
      "type": "integer"
    },
    "NotFoundException": {},
    "Notification": {
      "description": "<p>A notification that is associated with a budget. A budget can have up to ten notifications. </p> <p>Each notification must have at least one subscriber. A notification can have one SNS subscriber and up to 10 email subscribers, for a total of 11 subscribers.</p> <p>For example, if you have a budget for 200 dollars and you want to be notified when you go over 160 dollars, create a notification with the following parameters:</p> <ul> <li> <p>A notificationType of <code>ACTUAL</code> </p> </li> <li> <p>A <code>thresholdType</code> of <code>PERCENTAGE</code> </p> </li> <li> <p>A <code>comparisonOperator</code> of <code>GREATER_THAN</code> </p> </li> <li> <p>A notification <code>threshold</code> of <code>80</code> </p> </li> </ul>",
      "properties": {
        "ComparisonOperator": {
          "allOf": [
            {
              "$ref": "#/definitions/ComparisonOperator"
            },
            {
              "description": "The comparison that is used for this notification."
            }
          ]
        },
        "NotificationState": {
          "allOf": [
            {
              "$ref": "#/definitions/NotificationState"
            },
            {
              "description": "Whether this notification is in alarm. If a budget notification is in the <code>ALARM</code> state, you have passed the set threshold for the budget."
            }
          ]
        },
        "NotificationType": {
          "allOf": [
            {
              "$ref": "#/definitions/NotificationType"
            },
            {
              "description": "Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for how much you're forecasted to spend (<code>FORECASTED</code>)."
            }
          ]
        },
        "Threshold": {
          "allOf": [
            {
              "$ref": "#/definitions/NotificationThreshold"
            },
            {
              "description": "The threshold that is associated with a notification. Thresholds are always a percentage, and many customers find value being alerted between 50% - 200% of the budgeted amount. The maximum limit for your threshold is 1,000,000% above the budgeted amount."
            }
          ]
        },
        "ThresholdType": {
          "allOf": [
            {
              "$ref": "#/definitions/ThresholdType"
            },
            {
              "description": "The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, AWS notifies you when you go over or are forecasted to go over your total cost threshold. For <code>PERCENTAGE</code> thresholds, AWS notifies you when you go over or are forecasted to go over a certain percentage of your forecasted spend. For example, if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%, AWS notifies you when you go over 160 dollars."
            }
          ]
        }
      },
      "required": [
        "NotificationType",
        "ComparisonOperator",
        "Threshold"
      ],
      "type": "object"
    },
    "NotificationState": {
      "enum": [
        "OK",
        "ALARM"
      ],
      "type": "string"
    },
    "NotificationThreshold": {
      "description": " The threshold of a notification.",
      "format": "double",
      "maximum": 40000000000,
      "minimum": 0,
      "type": "number"
    },
    "NotificationType": {
      "description": " The type of a notification. It must be ACTUAL or FORECASTED.",
      "enum": [
        "ACTUAL",
        "FORECASTED"
      ],
      "type": "string"
    },
    "NotificationWithSubscribers": {
      "description": "A notification with subscribers. A notification can have one SNS subscriber and up to 10 email subscribers, for a total of 11 subscribers.",
      "properties": {
        "Notification": {
          "allOf": [
            {
              "$ref": "#/definitions/Notification"
            },
            {
              "description": "The notification that is associated with a budget."
            }
          ]
        },
        "Subscribers": {
          "allOf": [
            {
              "$ref": "#/definitions/Subscribers"
            },
            {
              "description": "A list of subscribers who are subscribed to this notification."
            }
          ]
        }
      },
      "required": [
        "Notification",
        "Subscribers"
      ],
      "type": "object"
    },
    "NotificationWithSubscribersList": {
      "description": " A list of notifications, each with a list of subscribers.",
      "items": {
        "$ref": "#/definitions/NotificationWithSubscribers"
      },
      "maxItems": 10,
      "type": "array"
    },
    "Notifications": {
      "description": " A list of notifications.",
      "items": {
        "$ref": "#/definitions/Notification"
      },
      "type": "array"
    },
    "NullableBoolean": {
      "type": "boolean"
    },
    "NumericValue": {
      "description": " A string that represents a numeric value.",
      "maxLength": 2147483647,
      "minLength": 1,
      "pattern": "([0-9]*\\.)?[0-9]+",
      "type": "string"
    },
    "PlannedBudgetLimits": {
      "additionalProperties": {
        "$ref": "#/definitions/Spend"
      },
      "type": "object"
    },
    "PolicyArn": {
      "maxLength": 684,
      "minLength": 25,
      "pattern": "^arn:(aws|aws-cn|aws-us-gov|us-iso-east-1|us-isob-east-1):iam::(\\d{12}|aws):policy(\\u002F[\\u0021-\\u007F]+\\u002F|\\u002F)[\\w+=,.@-]+$",
      "type": "string"
    },
    "PolicyId": {
      "maxLength": 130,
      "minLength": 10,
      "pattern": "^p-[0-9a-zA-Z_]{8,128}$",
      "type": "string"
    },
    "Region": {
      "maxLength": 20,
      "minLength": 9,
      "pattern": "^\\w{2}-\\w+(-\\w+)?-\\d$",
      "type": "string"
    },
    "ResourceLockedException": {},
    "Role": {
      "maxLength": 576,
      "minLength": 1,
      "pattern": "^([\\u0021-\\u007F]+\\u002F)?[\\w+=,.@-]+$",
      "type": "string"
    },
    "RoleArn": {
      "maxLength": 618,
      "minLength": 32,
      "pattern": "^arn:(aws|aws-cn|aws-us-gov|us-iso-east-1|us-isob-east-1):iam::\\d{12}:role(\\u002F[\\u0021-\\u007F]+\\u002F|\\u002F)[\\w+=,.@-]+$",
      "type": "string"
    },
    "Roles": {
      "items": {
        "$ref": "#/definitions/Role"
      },
      "maxItems": 100,
      "minItems": 1,
      "type": "array"
    },
    "ScpActionDefinition": {
      "description": " The service control policies (SCP) action definition details. ",
      "properties": {
        "PolicyId": {
          "allOf": [
            {
              "$ref": "#/definitions/PolicyId"
            },
            {
              "description": " The policy ID attached. "
            }
          ]
        },
        "TargetIds": {
          "allOf": [
            {
              "$ref": "#/definitions/TargetIds"
            },
            {
              "description": " A list of target IDs. "
            }
          ]
        }
      },
      "required": [
        "PolicyId",
        "TargetIds"
      ],
      "type": "object"
    },
    "Spend": {
      "description": "<p>The amount of cost or usage that is measured for a budget.</p> <p>For example, a <code>Spend</code> for <code>3 GB</code> of S3 usage would have the following parameters:</p> <ul> <li> <p>An <code>Amount</code> of <code>3</code> </p> </li> <li> <p>A <code>unit</code> of <code>GB</code> </p> </li> </ul>",
      "properties": {
        "Amount": {
          "allOf": [
            {
              "$ref": "#/definitions/NumericValue"
            },
            {
              "description": "The cost or usage amount that is associated with a budget forecast, actual spend, or budget threshold."
            }
          ]
        },
        "Unit": {
          "allOf": [
            {
              "$ref": "#/definitions/UnitValue"
            },
            {
              "description": "The unit of measurement that is used for the budget forecast, actual spend, or budget threshold, such as dollars or GB."
            }
          ]
        }
      },
      "required": [
        "Amount",
        "Unit"
      ],
      "type": "object"
    },
    "SsmActionDefinition": {
      "description": " The AWS Systems Manager (SSM) action definition details. ",
      "properties": {
        "ActionSubType": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionSubType"
            },
            {
              "description": " The action subType. "
            }
          ]
        },
        "InstanceIds": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceIds"
            },
            {
              "description": " The EC2 and RDS instance IDs. "
            }
          ]
        },
        "Region": {
          "allOf": [
            {
              "$ref": "#/definitions/Region"
            },
            {
              "description": " The Region to run the SSM document. "
            }
          ]
        }
      },
      "required": [
        "ActionSubType",
        "Region",
        "InstanceIds"
      ],
      "type": "object"
    },
    "Subscriber": {
      "description": "<p>The subscriber to a budget notification. The subscriber consists of a subscription type and either an Amazon SNS topic or an email address.</p> <p>For example, an email subscriber would have the following parameters:</p> <ul> <li> <p>A <code>subscriptionType</code> of <code>EMAIL</code> </p> </li> <li> <p>An <code>address</code> of <code>example@example.com</code> </p> </li> </ul>",
      "properties": {
        "Address": {
          "allOf": [
            {
              "$ref": "#/definitions/SubscriberAddress"
            },
            {
              "description": "<p>The address that AWS sends budget notifications to, either an SNS topic or an email.</p> <p>When you create a subscriber, the value of <code>Address</code> can't contain line breaks.</p>"
            }
          ]
        },
        "SubscriptionType": {
          "allOf": [
            {
              "$ref": "#/definitions/SubscriptionType"
            },
            {
              "description": "The type of notification that AWS sends to a subscriber."
            }
          ]
        }
      },
      "required": [
        "SubscriptionType",
        "Address"
      ],
      "type": "object"
    },
    "SubscriberAddress": {
      "description": " A string that contains an email address or SNS topic for the subscriber's address.",
      "format": "password",
      "maxLength": 2147483647,
      "minLength": 1,
      "pattern": "(.*[\\n\\r\\t\\f\\ ]?)*",
      "type": "string"
    },
    "Subscribers": {
      "description": " A list of subscribers.",
      "items": {
        "$ref": "#/definitions/Subscriber"
      },
      "maxItems": 11,
      "minItems": 1,
      "type": "array"
    },
    "SubscriptionType": {
      "description": " The subscription type of the subscriber. It can be SMS or EMAIL.",
      "enum": [
        "SNS",
        "EMAIL"
      ],
      "type": "string"
    },
    "TargetId": {
      "maxLength": 68,
      "minLength": 12,
      "pattern": "^(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$)|(\\d{12})",
      "type": "string"
    },
    "TargetIds": {
      "items": {
        "$ref": "#/definitions/TargetId"
      },
      "maxItems": 100,
      "minItems": 1,
      "type": "array"
    },
    "ThresholdType": {
      "description": " The type of threshold for a notification.",
      "enum": [
        "PERCENTAGE",
        "ABSOLUTE_VALUE"
      ],
      "type": "string"
    },
    "TimePeriod": {
      "description": "The period of time that is covered by a budget. The period has a start date and an end date. The start date must come before the end date. There are no restrictions on the end date. ",
      "properties": {
        "End": {
          "allOf": [
            {
              "$ref": "#/definitions/GenericTimestamp"
            },
            {
              "description": "<p>The end date for a budget. If you didn't specify an end date, AWS set your end date to <code>06/15/87 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost Management console and the API.</p> <p>After the end date, AWS deletes the budget and all associated notifications and subscribers. You can change your end date with the <code>UpdateBudget</code> operation.</p>"
            }
          ]
        },
        "Start": {
          "allOf": [
            {
              "$ref": "#/definitions/GenericTimestamp"
            },
            {
              "description": "<p>The start date for a budget. If you created your budget and didn't specify a start date, AWS defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you created your budget on January 24, 2018, chose <code>DAILY</code>, and didn't set a start date, AWS set your start date to <code>01/24/18 00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to <code>01/01/18 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost Management console and the API.</p> <p>You can change your start date with the <code>UpdateBudget</code> operation.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "TimeUnit": {
      "description": " The time unit of the budget, such as MONTHLY or QUARTERLY.",
      "enum": [
        "DAILY",
        "MONTHLY",
        "QUARTERLY",
        "ANNUALLY"
      ],
      "type": "string"
    },
    "UnitValue": {
      "description": " A string that represents the spend unit of a budget. It can't be null or empty.",
      "maxLength": 2147483647,
      "minLength": 1,
      "pattern": ".*",
      "type": "string"
    },
    "UpdateBudgetActionRequest": {
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "ActionId": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionId"
            },
            {
              "description": " A system-generated universally unique identifier (UUID) for the action. "
            }
          ]
        },
        "ActionThreshold": {
          "$ref": "#/definitions/ActionThreshold"
        },
        "ApprovalModel": {
          "allOf": [
            {
              "$ref": "#/definitions/ApprovalModel"
            },
            {
              "description": " This specifies if the action needs manual or automatic approval. "
            }
          ]
        },
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        },
        "Definition": {
          "$ref": "#/definitions/Definition"
        },
        "ExecutionRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleArn"
            },
            {
              "description": " The role passed for action execution and reversion. Roles and actions must be in the same account. "
            }
          ]
        },
        "NotificationType": {
          "$ref": "#/definitions/NotificationType"
        },
        "Subscribers": {
          "$ref": "#/definitions/Subscribers"
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "ActionId"
      ],
      "title": "UpdateBudgetActionRequest",
      "type": "object"
    },
    "UpdateBudgetActionResponse": {
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "BudgetName": {
          "$ref": "#/definitions/BudgetName"
        },
        "NewAction": {
          "allOf": [
            {
              "$ref": "#/definitions/Action"
            },
            {
              "description": " The updated action resource information. "
            }
          ]
        },
        "OldAction": {
          "allOf": [
            {
              "$ref": "#/definitions/Action"
            },
            {
              "description": " The previous action resource information. "
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "OldAction",
        "NewAction"
      ],
      "type": "object"
    },
    "UpdateBudgetRequest": {
      "description": " Request of UpdateBudget ",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The <code>accountId</code> that is associated with the budget that you want to update."
            }
          ]
        },
        "NewBudget": {
          "allOf": [
            {
              "$ref": "#/definitions/Budget"
            },
            {
              "description": "The budget that you want to update your budget to."
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "NewBudget"
      ],
      "title": "UpdateBudgetRequest",
      "type": "object"
    },
    "UpdateBudgetResponse": {
      "description": " Response of UpdateBudget ",
      "properties": {},
      "type": "object"
    },
    "UpdateNotificationRequest": {
      "description": " Request of UpdateNotification ",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The <code>accountId</code> that is associated with the budget whose notification you want to update."
            }
          ]
        },
        "BudgetName": {
          "allOf": [
            {
              "$ref": "#/definitions/BudgetName"
            },
            {
              "description": "The name of the budget whose notification you want to update."
            }
          ]
        },
        "NewNotification": {
          "allOf": [
            {
              "$ref": "#/definitions/Notification"
            },
            {
              "description": "The updated notification to be associated with a budget."
            }
          ]
        },
        "OldNotification": {
          "allOf": [
            {
              "$ref": "#/definitions/Notification"
            },
            {
              "description": "The previous notification that is associated with a budget."
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "OldNotification",
        "NewNotification"
      ],
      "title": "UpdateNotificationRequest",
      "type": "object"
    },
    "UpdateNotificationResponse": {
      "description": " Response of UpdateNotification ",
      "properties": {},
      "type": "object"
    },
    "UpdateSubscriberRequest": {
      "description": " Request of UpdateSubscriber ",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The <code>accountId</code> that is associated with the budget whose subscriber you want to update."
            }
          ]
        },
        "BudgetName": {
          "allOf": [
            {
              "$ref": "#/definitions/BudgetName"
            },
            {
              "description": "The name of the budget whose subscriber you want to update."
            }
          ]
        },
        "NewSubscriber": {
          "allOf": [
            {
              "$ref": "#/definitions/Subscriber"
            },
            {
              "description": "The updated subscriber that is associated with a budget notification."
            }
          ]
        },
        "Notification": {
          "allOf": [
            {
              "$ref": "#/definitions/Notification"
            },
            {
              "description": "The notification whose subscriber you want to update."
            }
          ]
        },
        "OldSubscriber": {
          "allOf": [
            {
              "$ref": "#/definitions/Subscriber"
            },
            {
              "description": "The previous subscriber that is associated with a budget notification."
            }
          ]
        }
      },
      "required": [
        "AccountId",
        "BudgetName",
        "Notification",
        "OldSubscriber",
        "NewSubscriber"
      ],
      "title": "UpdateSubscriberRequest",
      "type": "object"
    },
    "UpdateSubscriberResponse": {
      "description": " Response of UpdateSubscriber ",
      "properties": {},
      "type": "object"
    },
    "User": {
      "maxLength": 576,
      "minLength": 1,
      "pattern": "^([\\u0021-\\u007F]+\\u002F)?[\\w+=,.@-]+$",
      "type": "string"
    },
    "Users": {
      "items": {
        "$ref": "#/definitions/User"
      },
      "maxItems": 100,
      "minItems": 1,
      "type": "array"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/budgets/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}