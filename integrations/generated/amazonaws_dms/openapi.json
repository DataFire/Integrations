{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>AWS Database Migration Service</fullname> <p>AWS Database Migration Service (AWS DMS) can migrate your data to and from the most widely used commercial and open-source databases such as Oracle, PostgreSQL, Microsoft SQL Server, Amazon Redshift, MariaDB, Amazon Aurora, MySQL, and SAP Adaptive Server Enterprise (ASE). The service supports homogeneous migrations such as Oracle to Oracle, as well as heterogeneous migrations between different database platforms, such as Oracle to MySQL or SQL Server to PostgreSQL.</p> <p>For more information about AWS DMS, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/Welcome.html\">What Is AWS Database Migration Service?</a> in the <i>AWS Database Migration User Guide.</i> </p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Database Migration Service",
    "version": "2016-01-01",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dms-2016-01-01.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "dms",
    "x-datafire": {
      "name": "amazonaws_dms",
      "type": "openapi"
    }
  },
  "host": "dms.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/#X-Amz-Target=AmazonDMSv20160101.AddTagsToResource": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.AddTagsToResource"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddTagsToResourceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AddTagsToResourceResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "Adds metadata tags to an AWS DMS resource, including replication instance, endpoint, security group, and migration task. These tags can also be used with cost allocation reporting to track cost associated with DMS resources, or used in a Condition statement in an IAM policy for DMS. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_Tag.html\"> <code>Tag</code> </a> data type description.",
        "operationId": "AddTagsToResource"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.ApplyPendingMaintenanceAction": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.ApplyPendingMaintenanceAction"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplyPendingMaintenanceActionMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApplyPendingMaintenanceActionResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "Applies a pending maintenance action to a resource (for example, to a replication instance).",
        "operationId": "ApplyPendingMaintenanceAction"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.CancelReplicationTaskAssessmentRun": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.CancelReplicationTaskAssessmentRun"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelReplicationTaskAssessmentRunMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CancelReplicationTaskAssessmentRunResponse"
            }
          },
          "480": {
            "description": "AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/AccessDeniedFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          }
        },
        "description": "<p>Cancels a single premigration assessment run.</p> <p>This operation prevents any individual assessments from running if they haven't started running. It also attempts to cancel any individual assessments that are currently running.</p>",
        "operationId": "CancelReplicationTaskAssessmentRun"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.CreateEndpoint": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.CreateEndpoint"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEndpointMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateEndpointResponse"
            }
          },
          "480": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          },
          "481": {
            "description": "ResourceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsFault"
            }
          },
          "482": {
            "description": "ResourceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/ResourceQuotaExceededFault"
            }
          },
          "483": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "484": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "485": {
            "description": "AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/AccessDeniedFault"
            }
          },
          "486": {
            "description": "S3AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/S3AccessDeniedFault"
            }
          }
        },
        "description": "Creates an endpoint using the provided settings.",
        "operationId": "CreateEndpoint"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.CreateEventSubscription": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.CreateEventSubscription"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEventSubscriptionMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateEventSubscriptionResponse"
            }
          },
          "480": {
            "description": "ResourceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/ResourceQuotaExceededFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "482": {
            "description": "ResourceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsFault"
            }
          },
          "483": {
            "description": "SNSInvalidTopicFault",
            "schema": {
              "$ref": "#/definitions/SNSInvalidTopicFault"
            }
          },
          "484": {
            "description": "SNSNoAuthorizationFault",
            "schema": {
              "$ref": "#/definitions/SNSNoAuthorizationFault"
            }
          },
          "485": {
            "description": "KMSAccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/KMSAccessDeniedFault"
            }
          },
          "486": {
            "description": "KMSDisabledFault",
            "schema": {
              "$ref": "#/definitions/KMSDisabledFault"
            }
          },
          "487": {
            "description": "KMSInvalidStateFault",
            "schema": {
              "$ref": "#/definitions/KMSInvalidStateFault"
            }
          },
          "488": {
            "description": "KMSNotFoundFault",
            "schema": {
              "$ref": "#/definitions/KMSNotFoundFault"
            }
          },
          "489": {
            "description": "KMSThrottlingFault",
            "schema": {
              "$ref": "#/definitions/KMSThrottlingFault"
            }
          }
        },
        "description": "<p> Creates an AWS DMS event notification subscription. </p> <p>You can specify the type of source (<code>SourceType</code>) you want to be notified of, provide a list of AWS DMS source IDs (<code>SourceIds</code>) that triggers the events, and provide a list of event categories (<code>EventCategories</code>) for events you want to be notified of. If you specify both the <code>SourceType</code> and <code>SourceIds</code>, such as <code>SourceType = replication-instance</code> and <code>SourceIdentifier = my-replinstance</code>, you will be notified of all the replication instance events for the specified source. If you specify a <code>SourceType</code> but don't specify a <code>SourceIdentifier</code>, you receive notice of the events for that source type for all your AWS DMS sources. If you don't specify either <code>SourceType</code> nor <code>SourceIdentifier</code>, you will be notified of events generated from all AWS DMS sources belonging to your customer account.</p> <p>For more information about AWS DMS events, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html\">Working with Events and Notifications</a> in the <i>AWS Database Migration Service User Guide.</i> </p>",
        "operationId": "CreateEventSubscription"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.CreateReplicationInstance": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.CreateReplicationInstance"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateReplicationInstanceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateReplicationInstanceResponse"
            }
          },
          "480": {
            "description": "AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/AccessDeniedFault"
            }
          },
          "481": {
            "description": "ResourceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsFault"
            }
          },
          "482": {
            "description": "InsufficientResourceCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientResourceCapacityFault"
            }
          },
          "483": {
            "description": "ResourceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/ResourceQuotaExceededFault"
            }
          },
          "484": {
            "description": "StorageQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/StorageQuotaExceededFault"
            }
          },
          "485": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "486": {
            "description": "ReplicationSubnetGroupDoesNotCoverEnoughAZs",
            "schema": {
              "$ref": "#/definitions/ReplicationSubnetGroupDoesNotCoverEnoughAZs"
            }
          },
          "487": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "488": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          },
          "489": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          }
        },
        "description": "<p>Creates the replication instance using the specified parameters.</p> <p>AWS DMS requires that your account have certain roles with appropriate permissions before you can create a replication instance. For information on the required roles, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Security.html#CHAP_Security.APIRole\">Creating the IAM Roles to Use With the AWS CLI and AWS DMS API</a>. For information on the required permissions, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Security.html#CHAP_Security.IAMPermissions\">IAM Permissions Needed to Use AWS DMS</a>.</p>",
        "operationId": "CreateReplicationInstance"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.CreateReplicationSubnetGroup": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.CreateReplicationSubnetGroup"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateReplicationSubnetGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateReplicationSubnetGroupResponse"
            }
          },
          "480": {
            "description": "AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/AccessDeniedFault"
            }
          },
          "481": {
            "description": "ResourceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsFault"
            }
          },
          "482": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "483": {
            "description": "ResourceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/ResourceQuotaExceededFault"
            }
          },
          "484": {
            "description": "ReplicationSubnetGroupDoesNotCoverEnoughAZs",
            "schema": {
              "$ref": "#/definitions/ReplicationSubnetGroupDoesNotCoverEnoughAZs"
            }
          },
          "485": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          }
        },
        "description": "Creates a replication subnet group given a list of the subnet IDs in a VPC.",
        "operationId": "CreateReplicationSubnetGroup"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.CreateReplicationTask": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.CreateReplicationTask"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateReplicationTaskMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateReplicationTaskResponse"
            }
          },
          "480": {
            "description": "AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/AccessDeniedFault"
            }
          },
          "481": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "482": {
            "description": "ResourceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsFault"
            }
          },
          "483": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "484": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          },
          "485": {
            "description": "ResourceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/ResourceQuotaExceededFault"
            }
          }
        },
        "description": "Creates a replication task using the specified parameters.",
        "operationId": "CreateReplicationTask"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DeleteCertificate": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.DeleteCertificate"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteCertificateMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCertificateResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          }
        },
        "description": "Deletes the specified certificate. ",
        "operationId": "DeleteCertificate"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DeleteConnection": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.DeleteConnection"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteConnectionMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteConnectionResponse"
            }
          },
          "480": {
            "description": "AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/AccessDeniedFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          }
        },
        "description": "Deletes the connection between a replication instance and an endpoint.",
        "operationId": "DeleteConnection"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DeleteEndpoint": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.DeleteEndpoint"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteEndpointMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteEndpointResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          }
        },
        "description": "<p>Deletes the specified endpoint.</p> <note> <p>All tasks associated with the endpoint must be deleted before you can delete the endpoint.</p> </note> <p/>",
        "operationId": "DeleteEndpoint"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DeleteEventSubscription": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.DeleteEventSubscription"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteEventSubscriptionMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteEventSubscriptionResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          }
        },
        "description": " Deletes an AWS DMS event subscription. ",
        "operationId": "DeleteEventSubscription"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DeleteReplicationInstance": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.DeleteReplicationInstance"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteReplicationInstanceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteReplicationInstanceResponse"
            }
          },
          "480": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "<p>Deletes the specified replication instance.</p> <note> <p>You must delete any migration tasks that are associated with the replication instance before you can delete it.</p> </note> <p/>",
        "operationId": "DeleteReplicationInstance"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DeleteReplicationSubnetGroup": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.DeleteReplicationSubnetGroup"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteReplicationSubnetGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteReplicationSubnetGroupResponse"
            }
          },
          "480": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "Deletes a subnet group.",
        "operationId": "DeleteReplicationSubnetGroup"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DeleteReplicationTask": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.DeleteReplicationTask"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteReplicationTaskMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteReplicationTaskResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          }
        },
        "description": "Deletes the specified replication task.",
        "operationId": "DeleteReplicationTask"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DeleteReplicationTaskAssessmentRun": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.DeleteReplicationTaskAssessmentRun"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteReplicationTaskAssessmentRunMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteReplicationTaskAssessmentRunResponse"
            }
          },
          "480": {
            "description": "AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/AccessDeniedFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          }
        },
        "description": "<p>Deletes the record of a single premigration assessment run.</p> <p>This operation removes all metadata that AWS DMS maintains about this assessment run. However, the operation leaves untouched all information about this assessment run that is stored in your Amazon S3 bucket.</p>",
        "operationId": "DeleteReplicationTaskAssessmentRun"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeAccountAttributes": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.DescribeAccountAttributes"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeAccountAttributesMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeAccountAttributesResponse"
            }
          }
        },
        "description": "<p>Lists all of the AWS DMS attributes for a customer account. These attributes include AWS DMS quotas for the account and a unique account identifier in a particular DMS region. DMS quotas include a list of resource quotas supported by the account, such as the number of replication instances allowed. The description for each resource quota, includes the quota name, current usage toward that quota, and the quota's maximum value. DMS uses the unique account identifier to name each artifact used by DMS in the given region.</p> <p>This command does not take any parameters.</p>",
        "operationId": "DescribeAccountAttributes"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeApplicableIndividualAssessments": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeApplicableIndividualAssessments"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeApplicableIndividualAssessmentsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeApplicableIndividualAssessmentsResponse"
            }
          },
          "480": {
            "description": "AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/AccessDeniedFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          }
        },
        "description": "<p>Provides a list of individual assessments that you can specify for a new premigration assessment run, given one or more parameters.</p> <p>If you specify an existing migration task, this operation provides the default individual assessments you can specify for that task. Otherwise, the specified parameters model elements of a possible migration task on which to base a premigration assessment run.</p> <p>To use these migration task modeling parameters, you must specify an existing replication instance, a source database engine, a target database engine, and a migration type. This combination of parameters potentially limits the default individual assessments available for an assessment run created for a corresponding migration task.</p> <p>If you specify no parameters, this operation provides a list of all possible individual assessments that you can specify for an assessment run. If you specify any one of the task modeling parameters, you must specify all of them or the operation cannot provide a list of individual assessments. The only parameter that you can specify alone is for an existing migration task. The specified task definition then determines the default list of individual assessments that you can specify in an assessment run for the task.</p>",
        "operationId": "DescribeApplicableIndividualAssessments"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeCertificates": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeCertificates"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeCertificatesMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeCertificatesResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "Provides a description of the certificate.",
        "operationId": "DescribeCertificates"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeConnections": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeConnections"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeConnectionsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeConnectionsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "Describes the status of the connections that have been made between the replication instance and an endpoint. Connections are created when you test an endpoint.",
        "operationId": "DescribeConnections"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeEndpointTypes": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeEndpointTypes"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeEndpointTypesMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeEndpointTypesResponse"
            }
          }
        },
        "description": "Returns information about the type of endpoints available.",
        "operationId": "DescribeEndpointTypes"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeEndpoints": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeEndpoints"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeEndpointsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeEndpointsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "Returns information about the endpoints for your account in the current region.",
        "operationId": "DescribeEndpoints"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeEventCategories": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.DescribeEventCategories"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeEventCategoriesMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeEventCategoriesResponse"
            }
          }
        },
        "description": "Lists categories for all event source types, or, if specified, for a specified source type. You can see a list of the event categories and source types in <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html\">Working with Events and Notifications</a> in the <i>AWS Database Migration Service User Guide.</i> ",
        "operationId": "DescribeEventCategories"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeEventSubscriptions": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeEventSubscriptions"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeEventSubscriptionsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeEventSubscriptionsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "<p>Lists all the event subscriptions for a customer account. The description of a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>, <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>. </p> <p>If you specify <code>SubscriptionName</code>, this action lists the description for that subscription.</p>",
        "operationId": "DescribeEventSubscriptions"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeEvents": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeEvents"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeEventsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeEventsResponse"
            }
          }
        },
        "description": " Lists events for a given source identifier and source type. You can also specify a start and end time. For more information on AWS DMS events, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html\">Working with Events and Notifications</a> in the <i>AWS Database Migration User Guide.</i> ",
        "operationId": "DescribeEvents"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeOrderableReplicationInstances": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeOrderableReplicationInstances"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeOrderableReplicationInstancesMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeOrderableReplicationInstancesResponse"
            }
          }
        },
        "description": "Returns information about the replication instance types that can be created in the specified region.",
        "operationId": "DescribeOrderableReplicationInstances"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribePendingMaintenanceActions": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribePendingMaintenanceActions"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribePendingMaintenanceActionsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribePendingMaintenanceActionsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "For internal use only",
        "operationId": "DescribePendingMaintenanceActions"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeRefreshSchemasStatus": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.DescribeRefreshSchemasStatus"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeRefreshSchemasStatusMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeRefreshSchemasStatusResponse"
            }
          },
          "480": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "Returns the status of the RefreshSchemas operation.",
        "operationId": "DescribeRefreshSchemasStatus"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeReplicationInstanceTaskLogs": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeReplicationInstanceTaskLogs"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeReplicationInstanceTaskLogsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeReplicationInstanceTaskLogsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          }
        },
        "description": "Returns information about the task logs for the specified task.",
        "operationId": "DescribeReplicationInstanceTaskLogs"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeReplicationInstances": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeReplicationInstances"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeReplicationInstancesMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeReplicationInstancesResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "Returns information about replication instances for your account in the current region.",
        "operationId": "DescribeReplicationInstances"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeReplicationSubnetGroups": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeReplicationSubnetGroups"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeReplicationSubnetGroupsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeReplicationSubnetGroupsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "Returns information about the replication subnet groups.",
        "operationId": "DescribeReplicationSubnetGroups"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeReplicationTaskAssessmentResults": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeReplicationTaskAssessmentResults"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeReplicationTaskAssessmentResultsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeReplicationTaskAssessmentResultsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "Returns the task assessment results from Amazon S3. This action always returns the latest results.",
        "operationId": "DescribeReplicationTaskAssessmentResults"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeReplicationTaskAssessmentRuns": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeReplicationTaskAssessmentRuns"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeReplicationTaskAssessmentRunsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeReplicationTaskAssessmentRunsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "<p>Returns a paginated list of premigration assessment runs based on filter settings.</p> <p>These filter settings can specify a combination of premigration assessment runs, migration tasks, replication instances, and assessment run status values.</p> <note> <p>This operation doesn't return information about individual assessments. For this information, see the <code>DescribeReplicationTaskIndividualAssessments</code> operation. </p> </note>",
        "operationId": "DescribeReplicationTaskAssessmentRuns"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeReplicationTaskIndividualAssessments": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeReplicationTaskIndividualAssessments"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeReplicationTaskIndividualAssessmentsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeReplicationTaskIndividualAssessmentsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "<p>Returns a paginated list of individual assessments based on filter settings.</p> <p>These filter settings can specify a combination of premigration assessment runs, migration tasks, and assessment status values.</p>",
        "operationId": "DescribeReplicationTaskIndividualAssessments"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeReplicationTasks": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeReplicationTasks"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeReplicationTasksMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeReplicationTasksResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "Returns information about replication tasks for your account in the current region.",
        "operationId": "DescribeReplicationTasks"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeSchemas": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeSchemas"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeSchemasMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeSchemasResponse"
            }
          },
          "480": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "<p>Returns information about the schema for the specified endpoint.</p> <p/>",
        "operationId": "DescribeSchemas"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.DescribeTableStatistics": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AmazonDMSv20160101.DescribeTableStatistics"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeTableStatisticsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeTableStatisticsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          }
        },
        "description": "<p>Returns table statistics on the database migration task, including table name, rows inserted, rows updated, and rows deleted.</p> <p>Note that the \"last updated\" column the DMS console only indicates the time that AWS DMS last updated the table statistics record for a table. It does not indicate the time of the last update to the table.</p>",
        "operationId": "DescribeTableStatistics"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.ImportCertificate": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.ImportCertificate"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportCertificateMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ImportCertificateResponse"
            }
          },
          "480": {
            "description": "ResourceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsFault"
            }
          },
          "481": {
            "description": "InvalidCertificateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCertificateFault"
            }
          },
          "482": {
            "description": "ResourceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/ResourceQuotaExceededFault"
            }
          }
        },
        "description": "Uploads the specified certificate.",
        "operationId": "ImportCertificate"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.ListTagsForResource": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.ListTagsForResource"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "Lists all metadata tags attached to an AWS DMS resource, including replication instance, endpoint, security group, and migration task. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_Tag.html\"> <code>Tag</code> </a> data type description.",
        "operationId": "ListTagsForResource"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.ModifyEndpoint": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.ModifyEndpoint"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyEndpointMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyEndpointResponse"
            }
          },
          "480": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "482": {
            "description": "ResourceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsFault"
            }
          },
          "483": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          },
          "484": {
            "description": "AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/AccessDeniedFault"
            }
          }
        },
        "description": "Modifies the specified endpoint.",
        "operationId": "ModifyEndpoint"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.ModifyEventSubscription": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.ModifyEventSubscription"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyEventSubscriptionMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyEventSubscriptionResponse"
            }
          },
          "480": {
            "description": "ResourceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/ResourceQuotaExceededFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "482": {
            "description": "SNSInvalidTopicFault",
            "schema": {
              "$ref": "#/definitions/SNSInvalidTopicFault"
            }
          },
          "483": {
            "description": "SNSNoAuthorizationFault",
            "schema": {
              "$ref": "#/definitions/SNSNoAuthorizationFault"
            }
          },
          "484": {
            "description": "KMSAccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/KMSAccessDeniedFault"
            }
          },
          "485": {
            "description": "KMSDisabledFault",
            "schema": {
              "$ref": "#/definitions/KMSDisabledFault"
            }
          },
          "486": {
            "description": "KMSInvalidStateFault",
            "schema": {
              "$ref": "#/definitions/KMSInvalidStateFault"
            }
          },
          "487": {
            "description": "KMSNotFoundFault",
            "schema": {
              "$ref": "#/definitions/KMSNotFoundFault"
            }
          },
          "488": {
            "description": "KMSThrottlingFault",
            "schema": {
              "$ref": "#/definitions/KMSThrottlingFault"
            }
          }
        },
        "description": "Modifies an existing AWS DMS event notification subscription. ",
        "operationId": "ModifyEventSubscription"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.ModifyReplicationInstance": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.ModifyReplicationInstance"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyReplicationInstanceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyReplicationInstanceResponse"
            }
          },
          "480": {
            "description": "AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/AccessDeniedFault"
            }
          },
          "481": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "482": {
            "description": "ResourceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsFault"
            }
          },
          "483": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "484": {
            "description": "InsufficientResourceCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientResourceCapacityFault"
            }
          },
          "485": {
            "description": "StorageQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/StorageQuotaExceededFault"
            }
          },
          "486": {
            "description": "UpgradeDependencyFailureFault",
            "schema": {
              "$ref": "#/definitions/UpgradeDependencyFailureFault"
            }
          }
        },
        "description": "<p>Modifies the replication instance to apply new settings. You can change one or more parameters by specifying these parameters and the new values in the request.</p> <p>Some settings are applied during the maintenance window.</p> <p/>",
        "operationId": "ModifyReplicationInstance"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.ModifyReplicationSubnetGroup": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.ModifyReplicationSubnetGroup"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyReplicationSubnetGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyReplicationSubnetGroupResponse"
            }
          },
          "480": {
            "description": "AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/AccessDeniedFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "482": {
            "description": "ResourceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/ResourceQuotaExceededFault"
            }
          },
          "483": {
            "description": "SubnetAlreadyInUse",
            "schema": {
              "$ref": "#/definitions/SubnetAlreadyInUse"
            }
          },
          "484": {
            "description": "ReplicationSubnetGroupDoesNotCoverEnoughAZs",
            "schema": {
              "$ref": "#/definitions/ReplicationSubnetGroupDoesNotCoverEnoughAZs"
            }
          },
          "485": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          }
        },
        "description": "Modifies the settings for the specified replication subnet group.",
        "operationId": "ModifyReplicationSubnetGroup"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.ModifyReplicationTask": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.ModifyReplicationTask"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyReplicationTaskMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyReplicationTaskResponse"
            }
          },
          "480": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "482": {
            "description": "ResourceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsFault"
            }
          },
          "483": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          }
        },
        "description": "<p>Modifies the specified replication task.</p> <p>You can't modify the task endpoints. The task must be stopped before you can modify it. </p> <p>For more information about AWS DMS tasks, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.html\">Working with Migration Tasks</a> in the <i>AWS Database Migration Service User Guide</i>.</p>",
        "operationId": "ModifyReplicationTask"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.MoveReplicationTask": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.MoveReplicationTask"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveReplicationTaskMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MoveReplicationTaskResponse"
            }
          },
          "480": {
            "description": "AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/AccessDeniedFault"
            }
          },
          "481": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "482": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "Moves a replication task from its current replication instance to a different target replication instance using the specified parameters. The target replication instance must be created with the same or later AWS DMS version as the current replication instance.",
        "operationId": "MoveReplicationTask"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.RebootReplicationInstance": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.RebootReplicationInstance"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RebootReplicationInstanceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RebootReplicationInstanceResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          }
        },
        "description": "Reboots a replication instance. Rebooting results in a momentary outage, until the replication instance becomes available again.",
        "operationId": "RebootReplicationInstance"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.RefreshSchemas": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.RefreshSchemas"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefreshSchemasMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RefreshSchemasResponse"
            }
          },
          "480": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "482": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          },
          "483": {
            "description": "ResourceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/ResourceQuotaExceededFault"
            }
          }
        },
        "description": "Populates the schema for the specified endpoint. This is an asynchronous operation and can take several minutes. You can check the status of this operation by calling the DescribeRefreshSchemasStatus operation.",
        "operationId": "RefreshSchemas"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.ReloadTables": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.ReloadTables"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReloadTablesMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReloadTablesResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          }
        },
        "description": "Reloads the target database table with the source data. ",
        "operationId": "ReloadTables"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.RemoveTagsFromResource": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.RemoveTagsFromResource"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveTagsFromResourceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RemoveTagsFromResourceResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": "Removes metadata tags from an AWS DMS resource, including replication instance, endpoint, security group, and migration task. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_Tag.html\"> <code>Tag</code> </a> data type description.",
        "operationId": "RemoveTagsFromResource"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.StartReplicationTask": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.StartReplicationTask"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartReplicationTaskMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartReplicationTaskResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "482": {
            "description": "AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/AccessDeniedFault"
            }
          }
        },
        "description": "<p>Starts the replication task.</p> <p>For more information about AWS DMS tasks, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.html\">Working with Migration Tasks </a> in the <i>AWS Database Migration Service User Guide.</i> </p>",
        "operationId": "StartReplicationTask"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.StartReplicationTaskAssessment": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.StartReplicationTaskAssessment"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartReplicationTaskAssessmentMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartReplicationTaskAssessmentResponse"
            }
          },
          "480": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        },
        "description": " Starts the replication task assessment for unsupported data types in the source database. ",
        "operationId": "StartReplicationTaskAssessment"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.StartReplicationTaskAssessmentRun": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.StartReplicationTaskAssessmentRun"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartReplicationTaskAssessmentRunMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartReplicationTaskAssessmentRunResponse"
            }
          },
          "480": {
            "description": "AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/AccessDeniedFault"
            }
          },
          "481": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "483": {
            "description": "KMSAccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/KMSAccessDeniedFault"
            }
          },
          "484": {
            "description": "KMSDisabledFault",
            "schema": {
              "$ref": "#/definitions/KMSDisabledFault"
            }
          },
          "485": {
            "description": "KMSFault",
            "schema": {
              "$ref": "#/definitions/KMSFault"
            }
          },
          "486": {
            "description": "KMSInvalidStateFault",
            "schema": {
              "$ref": "#/definitions/KMSInvalidStateFault"
            }
          },
          "487": {
            "description": "KMSNotFoundFault",
            "schema": {
              "$ref": "#/definitions/KMSNotFoundFault"
            }
          },
          "488": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          },
          "489": {
            "description": "S3AccessDeniedFault",
            "schema": {
              "$ref": "#/definitions/S3AccessDeniedFault"
            }
          },
          "490": {
            "description": "S3ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/S3ResourceNotFoundFault"
            }
          },
          "491": {
            "description": "ResourceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsFault"
            }
          }
        },
        "description": "<p>Starts a new premigration assessment run for one or more individual assessments of a migration task.</p> <p>The assessments that you can specify depend on the source and target database engine and the migration type defined for the given task. To run this operation, your migration task must already be created. After you run this operation, you can review the status of each individual assessment. You can also run the migration task manually after the assessment run and its individual assessments complete.</p>",
        "operationId": "StartReplicationTaskAssessmentRun"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.StopReplicationTask": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.StopReplicationTask"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StopReplicationTaskMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopReplicationTaskResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          }
        },
        "description": "Stops the replication task.",
        "operationId": "StopReplicationTask"
      }
    },
    "/#X-Amz-Target=AmazonDMSv20160101.TestConnection": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AmazonDMSv20160101.TestConnection"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestConnectionMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TestConnectionResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidResourceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateFault"
            }
          },
          "482": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          },
          "483": {
            "description": "ResourceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/ResourceQuotaExceededFault"
            }
          }
        },
        "description": "Tests the connection between the replication instance and the endpoint.",
        "operationId": "TestConnection"
      }
    }
  },
  "definitions": {
    "AccessDeniedFault": {},
    "AccountQuota": {
      "description": "Describes a quota for an AWS account, for example, the number of replication instances allowed.",
      "properties": {
        "AccountQuotaName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the AWS DMS quota for this AWS account."
            }
          ]
        },
        "Max": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The maximum allowed value for the quota."
            }
          ]
        },
        "Used": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The amount currently used toward the quota maximum."
            }
          ]
        }
      },
      "type": "object"
    },
    "AccountQuotaList": {
      "items": {
        "$ref": "#/definitions/AccountQuota"
      },
      "type": "array"
    },
    "AddTagsToResourceMessage": {
      "description": "Associates a set of tags with an AWS DMS resource.",
      "properties": {
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Identifies the AWS DMS resource to which tags should be added. The value for this parameter is an Amazon Resource Name (ARN).</p> <p>For AWS DMS, you can tag a replication instance, an endpoint, or a replication task.</p>"
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "One or more tags to be assigned to the resource."
            }
          ]
        }
      },
      "required": [
        "ResourceArn",
        "Tags"
      ],
      "title": "AddTagsToResourceMessage",
      "type": "object"
    },
    "AddTagsToResourceResponse": {
      "description": "<p/>",
      "example": {},
      "properties": {},
      "type": "object"
    },
    "ApplyPendingMaintenanceActionMessage": {
      "description": "<p/>",
      "properties": {
        "ApplyAction": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The pending maintenance action to apply to this resource."
            }
          ]
        },
        "OptInType": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>A value that specifies the type of opt-in request, or undoes an opt-in request. You can't undo an opt-in request of type <code>immediate</code>.</p> <p>Valid values:</p> <ul> <li> <p> <code>immediate</code> - Apply the maintenance action immediately.</p> </li> <li> <p> <code>next-maintenance</code> - Apply the maintenance action during the next maintenance window for the resource.</p> </li> <li> <p> <code>undo-opt-in</code> - Cancel any existing <code>next-maintenance</code> opt-in requests.</p> </li> </ul>"
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the AWS DMS resource that the pending maintenance action applies to."
            }
          ]
        }
      },
      "required": [
        "ReplicationInstanceArn",
        "ApplyAction",
        "OptInType"
      ],
      "title": "ApplyPendingMaintenanceActionMessage",
      "type": "object"
    },
    "ApplyPendingMaintenanceActionResponse": {
      "description": "<p/>",
      "properties": {
        "ResourcePendingMaintenanceActions": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourcePendingMaintenanceActions"
            },
            {
              "description": "The AWS DMS resource that the pending maintenance action will be applied to."
            }
          ]
        }
      },
      "type": "object"
    },
    "AuthMechanismValue": {
      "enum": [
        "default",
        "mongodb_cr",
        "scram_sha_1"
      ],
      "type": "string"
    },
    "AuthTypeValue": {
      "enum": [
        "no",
        "password"
      ],
      "type": "string"
    },
    "AvailabilityZone": {
      "description": "The name of an Availability Zone for use during database migration. <code>AvailabilityZone</code> is an optional parameter to the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_CreateReplicationInstance.html\"> <code>CreateReplicationInstance</code> </a> operation, and it’s value relates to the AWS Region of an endpoint. For example, the availability zone of an endpoint in the us-east-1 region might be us-east-1a, us-east-1b, us-east-1c, or us-east-1d.",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the Availability Zone."
            }
          ]
        }
      },
      "type": "object"
    },
    "AvailabilityZonesList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "Boolean": {
      "type": "boolean"
    },
    "BooleanOptional": {
      "type": "boolean"
    },
    "CancelReplicationTaskAssessmentRunMessage": {
      "description": "<p/>",
      "properties": {
        "ReplicationTaskAssessmentRunArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Amazon Resource Name (ARN) of the premigration assessment run to be canceled."
            }
          ]
        }
      },
      "required": [
        "ReplicationTaskAssessmentRunArn"
      ],
      "title": "CancelReplicationTaskAssessmentRunMessage",
      "type": "object"
    },
    "CancelReplicationTaskAssessmentRunResponse": {
      "description": "<p/>",
      "properties": {
        "ReplicationTaskAssessmentRun": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTaskAssessmentRun"
            },
            {
              "description": "The <code>ReplicationTaskAssessmentRun</code> object for the canceled assessment run."
            }
          ]
        }
      },
      "type": "object"
    },
    "Certificate": {
      "description": "The SSL certificate that can be used to encrypt connections between the endpoints and the replication instance.",
      "properties": {
        "CertificateArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the certificate."
            }
          ]
        },
        "CertificateCreationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The date that the certificate was created."
            }
          ]
        },
        "CertificateIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A customer-assigned name for the certificate. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen or contain two consecutive hyphens."
            }
          ]
        },
        "CertificateOwner": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The owner of the certificate."
            }
          ]
        },
        "CertificatePem": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The contents of a <code>.pem</code> file, which contains an X.509 certificate."
            }
          ]
        },
        "CertificateWallet": {
          "allOf": [
            {
              "$ref": "#/definitions/CertificateWallet"
            },
            {
              "description": "The location of an imported Oracle Wallet certificate for use with SSL."
            }
          ]
        },
        "KeyLength": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The key length of the cryptographic algorithm being used."
            }
          ]
        },
        "SigningAlgorithm": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The signing algorithm for the certificate."
            }
          ]
        },
        "ValidFromDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The beginning date that the certificate is valid."
            }
          ]
        },
        "ValidToDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The final date that the certificate is valid."
            }
          ]
        }
      },
      "type": "object"
    },
    "CertificateList": {
      "items": {
        "$ref": "#/definitions/Certificate"
      },
      "type": "array"
    },
    "CertificateWallet": {
      "type": "string"
    },
    "CharLengthSemantics": {
      "enum": [
        "default",
        "char",
        "byte"
      ],
      "type": "string"
    },
    "CompressionTypeValue": {
      "enum": [
        "none",
        "gzip"
      ],
      "type": "string"
    },
    "Connection": {
      "description": "Status of the connection between an endpoint and a replication instance, including Amazon Resource Names (ARNs) and the last error message issued.",
      "properties": {
        "EndpointArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The ARN string that uniquely identifies the endpoint."
            }
          ]
        },
        "EndpointIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The identifier of the endpoint. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen or contain two consecutive hyphens."
            }
          ]
        },
        "LastFailureMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The error message when the connection last failed."
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The ARN of the replication instance."
            }
          ]
        },
        "ReplicationInstanceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The replication instance identifier. This parameter is stored as a lowercase string."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The connection status. This parameter can return one of the following values:</p> <ul> <li> <p> <code>\"successful\"</code> </p> </li> <li> <p> <code>\"testing\"</code> </p> </li> <li> <p> <code>\"failed\"</code> </p> </li> <li> <p> <code>\"deleting\"</code> </p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "ConnectionList": {
      "items": {
        "$ref": "#/definitions/Connection"
      },
      "type": "array"
    },
    "CreateEndpointMessage": {
      "description": "<p/>",
      "properties": {
        "CertificateArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the certificate."
            }
          ]
        },
        "DatabaseName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the endpoint database."
            }
          ]
        },
        "DmsTransferSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/DmsTransferSettings"
            },
            {
              "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Possible settings include the following:</p> <ul> <li> <p> <code>ServiceAccessRoleArn</code> - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p> <code>BucketName</code> - The name of the S3 bucket to use.</p> </li> <li> <p> <code>CompressionType</code> - An optional parameter to use GZIP to compress the target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep the files uncompressed, don't use this value.</p> </li> </ul> <p>Shorthand syntax for these settings is as follows: <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these settings is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>"
            }
          ]
        },
        "DocDbSettings": {
          "$ref": "#/definitions/DocDbSettings"
        },
        "DynamoDbSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/DynamoDbSettings"
            },
            {
              "description": "Settings in JSON format for the target Amazon DynamoDB endpoint. For information about other available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html\">Using Object Mapping to Migrate Data to DynamoDB</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "ElasticsearchSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchSettings"
            },
            {
              "description": "Settings in JSON format for the target Elasticsearch endpoint. For more information about the available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Elasticsearch.html#CHAP_Target.Elasticsearch.Configuration\">Extra Connection Attributes When Using Elasticsearch as a Target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide</i>."
            }
          ]
        },
        "EndpointIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The database endpoint identifier. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen, or contain two consecutive hyphens."
            }
          ]
        },
        "EndpointType": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationEndpointTypeValue"
            },
            {
              "description": "The type of endpoint. Valid values are <code>source</code> and <code>target</code>."
            }
          ]
        },
        "EngineName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The type of engine for the endpoint. Valid values, depending on the <code>EndpointType</code> value, include <code>\"mysql\"</code>, <code>\"oracle\"</code>, <code>\"postgres\"</code>, <code>\"mariadb\"</code>, <code>\"aurora\"</code>, <code>\"aurora-postgresql\"</code>, <code>\"redshift\"</code>, <code>\"s3\"</code>, <code>\"db2\"</code>, <code>\"azuredb\"</code>, <code>\"sybase\"</code>, <code>\"dynamodb\"</code>, <code>\"mongodb\"</code>, <code>\"kinesis\"</code>, <code>\"kafka\"</code>, <code>\"elasticsearch\"</code>, <code>\"docdb\"</code>, <code>\"sqlserver\"</code>, and <code>\"neptune\"</code>."
            }
          ]
        },
        "ExternalTableDefinition": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The external table definition. "
            }
          ]
        },
        "ExtraConnectionAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Additional attributes associated with the connection. Each attribute is specified as a name-value pair associated by an equal sign (=). Multiple attributes are separated by a semicolon (;) with no additional white space. For information on the attributes available for connecting your source or target endpoint, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Endpoints.html\">Working with AWS DMS Endpoints</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "IBMDb2Settings": {
          "allOf": [
            {
              "$ref": "#/definitions/IBMDb2Settings"
            },
            {
              "description": "Settings in JSON format for the source IBM Db2 LUW endpoint. For information about other available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.DB2.html\">Extra connection attributes when using Db2 LUW as a source for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "KafkaSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/KafkaSettings"
            },
            {
              "description": "Settings in JSON format for the target Apache Kafka endpoint. For more information about the available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kafka.html\">Using Apache Kafka as a Target for AWS Database Migration Service</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "KinesisSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/KinesisSettings"
            },
            {
              "description": "Settings in JSON format for the target endpoint for Amazon Kinesis Data Streams. For more information about the available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kinesis.html\">Using Amazon Kinesis Data Streams as a Target for AWS Database Migration Service</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>An AWS KMS key identifier that is used to encrypt the connection parameters for the endpoint.</p> <p>If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key.</p> <p>AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p>"
            }
          ]
        },
        "MicrosoftSQLServerSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/MicrosoftSQLServerSettings"
            },
            {
              "description": "Settings in JSON format for the source and target Microsoft SQL Server endpoint. For information about other available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.SQLServer.html\">Extra connection attributes when using SQL Server as a source for AWS DMS</a> and <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.SQLServer.html\"> Extra connection attributes when using SQL Server as a target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "MongoDbSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/MongoDbSettings"
            },
            {
              "description": "Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MongoDB.html#CHAP_Source.MongoDB.Configuration\">Using MongoDB as a Target for AWS Database Migration Service</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "MySQLSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/MySQLSettings"
            },
            {
              "description": "Settings in JSON format for the source and target MySQL endpoint. For information about other available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MySQL.html\">Extra connection attributes when using MySQL as a source for AWS DMS</a> and <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.MySQL.html\">Extra connection attributes when using a MySQL-compatible database as a target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "NeptuneSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/NeptuneSettings"
            },
            {
              "description": "Settings in JSON format for the target Amazon Neptune endpoint. For more information about the available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Neptune.html#CHAP_Target.Neptune.EndpointSettings\">Specifying Endpoint Settings for Amazon Neptune as a Target</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "OracleSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/OracleSettings"
            },
            {
              "description": "Settings in JSON format for the source and target Oracle endpoint. For information about other available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.Oracle.html\">Extra connection attributes when using Oracle as a source for AWS DMS</a> and <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Oracle.html\"> Extra connection attributes when using Oracle as a target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/SecretString"
            },
            {
              "description": "The password to be used to log in to the endpoint database."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The port used by the endpoint database."
            }
          ]
        },
        "PostgreSQLSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/PostgreSQLSettings"
            },
            {
              "description": "Settings in JSON format for the source and target PostgreSQL endpoint. For information about other available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.html\">Extra connection attributes when using PostgreSQL as a source for AWS DMS</a> and <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.PostgreSQL.html\"> Extra connection attributes when using PostgreSQL as a target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "RedshiftSettings": {
          "$ref": "#/definitions/RedshiftSettings"
        },
        "ResourceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A friendly name for the resource identifier at the end of the <code>EndpointArn</code> response parameter that is returned in the created <code>Endpoint</code> object. The value for this parameter can have up to 31 characters. It can contain only ASCII letters, digits, and hyphen ('-'). Also, it can't end with a hyphen or contain two consecutive hyphens, and can only begin with a letter, such as <code>Example-App-ARN1</code>. For example, this value might result in the <code>EndpointArn</code> value <code>arn:aws:dms:eu-west-1:012345678901:rep:Example-App-ARN1</code>. If you don't specify a <code>ResourceIdentifier</code> value, AWS DMS generates a default identifier value for the end of <code>EndpointArn</code>."
            }
          ]
        },
        "S3Settings": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Settings"
            },
            {
              "description": "Settings in JSON format for the target Amazon S3 endpoint. For more information about the available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring\">Extra Connection Attributes When Using Amazon S3 as a Target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "ServerName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the server where the endpoint database resides."
            }
          ]
        },
        "ServiceAccessRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The Amazon Resource Name (ARN) for the service access role that you want to use to create the endpoint. "
            }
          ]
        },
        "SslMode": {
          "allOf": [
            {
              "$ref": "#/definitions/DmsSslModeValue"
            },
            {
              "description": "The Secure Sockets Layer (SSL) mode to use for the SSL connection. The default is <code>none</code> "
            }
          ]
        },
        "SybaseSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/SybaseSettings"
            },
            {
              "description": "Settings in JSON format for the source and target SAP ASE endpoint. For information about other available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.SAP.html\">Extra connection attributes when using SAP ASE as a source for AWS DMS</a> and <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.SAP.html\">Extra connection attributes when using SAP ASE as a target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "One or more tags to be assigned to the endpoint."
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The user name to be used to log in to the endpoint database."
            }
          ]
        }
      },
      "required": [
        "EndpointIdentifier",
        "EndpointType",
        "EngineName"
      ],
      "title": "CreateEndpointMessage",
      "type": "object"
    },
    "CreateEndpointResponse": {
      "description": "<p/>",
      "example": {
        "Endpoint": {
          "EndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM",
          "EndpointIdentifier": "test-endpoint-1",
          "EndpointType": "source",
          "EngineName": "mysql",
          "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
          "Port": 3306,
          "ServerName": "mydb.cx1llnox7iyx.us-west-2.rds.amazonaws.com",
          "Status": "active",
          "Username": "username"
        }
      },
      "properties": {
        "Endpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/Endpoint"
            },
            {
              "description": "The endpoint that was created."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateEventSubscriptionMessage": {
      "description": "<p/>",
      "properties": {
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": " A Boolean value; set to <code>true</code> to activate the subscription, or set to <code>false</code> to create the subscription but not activate it. "
            }
          ]
        },
        "EventCategories": {
          "allOf": [
            {
              "$ref": "#/definitions/EventCategoriesList"
            },
            {
              "description": "A list of event categories for a source type that you want to subscribe to. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html\">Working with Events and Notifications</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "SnsTopicArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it. "
            }
          ]
        },
        "SourceIds": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceIdsList"
            },
            {
              "description": "<p>A list of identifiers for which AWS DMS provides notification events.</p> <p>If you don't specify a value, notifications are provided for all sources.</p> <p>If you specify multiple values, they must be of the same type. For example, if you specify a database instance ID, then all of the other values must be database instance IDs.</p>"
            }
          ]
        },
        "SourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p> The type of AWS DMS resource that generates the events. For example, if you want to be notified of events generated by a replication instance, you set this parameter to <code>replication-instance</code>. If this value isn't specified, all events are returned. </p> <p>Valid values: <code>replication-instance</code> | <code>replication-task</code> </p>"
            }
          ]
        },
        "SubscriptionName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the AWS DMS event notification subscription. This name must be less than 255 characters."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "One or more tags to be assigned to the event subscription."
            }
          ]
        }
      },
      "required": [
        "SubscriptionName",
        "SnsTopicArn"
      ],
      "title": "CreateEventSubscriptionMessage",
      "type": "object"
    },
    "CreateEventSubscriptionResponse": {
      "description": "<p/>",
      "properties": {
        "EventSubscription": {
          "allOf": [
            {
              "$ref": "#/definitions/EventSubscription"
            },
            {
              "description": "The event subscription that was created."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateReplicationInstanceMessage": {
      "description": "<p/>",
      "properties": {
        "AllocatedStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The amount of storage (in gigabytes) to be initially allocated for the replication instance."
            }
          ]
        },
        "AutoMinorVersionUpgrade": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "<p>A value that indicates whether minor engine upgrades are applied automatically to the replication instance during the maintenance window. This parameter defaults to <code>true</code>.</p> <p>Default: <code>true</code> </p>"
            }
          ]
        },
        "AvailabilityZone": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Availability Zone where the replication instance will be created. The default value is a random, system-chosen Availability Zone in the endpoint's AWS Region, for example: <code>us-east-1d</code> "
            }
          ]
        },
        "DnsNameServers": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A list of custom DNS name servers supported for the replication instance to access your on-premise source or target database. This list overrides the default name servers supported by the replication instance. You can specify a comma-separated list of internet addresses for up to four on-premise DNS name servers. For example: <code>\"1.1.1.1,2.2.2.2,3.3.3.3,4.4.4.4\"</code> "
            }
          ]
        },
        "EngineVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The engine version number of the replication instance.</p> <p>If an engine version number is not specified when a replication instance is created, the default is the latest engine version available.</p>"
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>An AWS KMS key identifier that is used to encrypt the data on the replication instance.</p> <p>If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key.</p> <p>AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p>"
            }
          ]
        },
        "MultiAZ": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": " Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. "
            }
          ]
        },
        "PreferredMaintenanceWindow": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>Default: A 30-minute window selected at random from an 8-hour block of time per AWS Region, occurring on a random day of the week.</p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p>"
            }
          ]
        },
        "PubliclyAccessible": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. "
            }
          ]
        },
        "ReplicationInstanceClass": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The compute and memory capacity of the replication instance as defined for the specified replication instance class. For example to specify the instance class dms.c4.large, set this parameter to <code>\"dms.c4.large\"</code>.</p> <p>For more information on the settings and capacities for the available replication instance classes, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth\"> Selecting the right AWS DMS replication instance for your migration</a>. </p>"
            }
          ]
        },
        "ReplicationInstanceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1-63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>"
            }
          ]
        },
        "ReplicationSubnetGroupIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A subnet group to associate with the replication instance."
            }
          ]
        },
        "ResourceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A friendly name for the resource identifier at the end of the <code>EndpointArn</code> response parameter that is returned in the created <code>Endpoint</code> object. The value for this parameter can have up to 31 characters. It can contain only ASCII letters, digits, and hyphen ('-'). Also, it can't end with a hyphen or contain two consecutive hyphens, and can only begin with a letter, such as <code>Example-App-ARN1</code>. For example, this value might result in the <code>EndpointArn</code> value <code>arn:aws:dms:eu-west-1:012345678901:rep:Example-App-ARN1</code>. If you don't specify a <code>ResourceIdentifier</code> value, AWS DMS generates a default identifier value for the end of <code>EndpointArn</code>."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "One or more tags to be assigned to the replication instance."
            }
          ]
        },
        "VpcSecurityGroupIds": {
          "allOf": [
            {
              "$ref": "#/definitions/VpcSecurityGroupIdList"
            },
            {
              "description": " Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance. "
            }
          ]
        }
      },
      "required": [
        "ReplicationInstanceIdentifier",
        "ReplicationInstanceClass"
      ],
      "title": "CreateReplicationInstanceMessage",
      "type": "object"
    },
    "CreateReplicationInstanceResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationInstance": {
          "AllocatedStorage": 5,
          "AutoMinorVersionUpgrade": true,
          "EngineVersion": "1.5.0",
          "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
          "PendingModifiedValues": {},
          "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
          "PubliclyAccessible": true,
          "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
          "ReplicationInstanceClass": "dms.t2.micro",
          "ReplicationInstanceIdentifier": "test-rep-1",
          "ReplicationInstanceStatus": "creating",
          "ReplicationSubnetGroup": {
            "ReplicationSubnetGroupDescription": "default",
            "ReplicationSubnetGroupIdentifier": "default",
            "SubnetGroupStatus": "Complete",
            "Subnets": [
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1d"
                },
                "SubnetIdentifier": "subnet-f6dd91af",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1b"
                },
                "SubnetIdentifier": "subnet-3605751d",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1c"
                },
                "SubnetIdentifier": "subnet-c2daefb5",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1e"
                },
                "SubnetIdentifier": "subnet-85e90cb8",
                "SubnetStatus": "Active"
              }
            ],
            "VpcId": "vpc-6741a603"
          }
        }
      },
      "properties": {
        "ReplicationInstance": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationInstance"
            },
            {
              "description": "The replication instance that was created."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateReplicationSubnetGroupMessage": {
      "description": "<p/>",
      "properties": {
        "ReplicationSubnetGroupDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The description for the subnet group."
            }
          ]
        },
        "ReplicationSubnetGroupIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The name for the replication subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, spaces, underscores, or hyphens. Must not be \"default\".</p> <p>Example: <code>mySubnetgroup</code> </p>"
            }
          ]
        },
        "SubnetIds": {
          "allOf": [
            {
              "$ref": "#/definitions/SubnetIdentifierList"
            },
            {
              "description": "One or more subnet IDs to be assigned to the subnet group."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "One or more tags to be assigned to the subnet group."
            }
          ]
        }
      },
      "required": [
        "ReplicationSubnetGroupIdentifier",
        "ReplicationSubnetGroupDescription",
        "SubnetIds"
      ],
      "title": "CreateReplicationSubnetGroupMessage",
      "type": "object"
    },
    "CreateReplicationSubnetGroupResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationSubnetGroup": {}
      },
      "properties": {
        "ReplicationSubnetGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationSubnetGroup"
            },
            {
              "description": "The replication subnet group that was created."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateReplicationTaskMessage": {
      "description": "<p/>",
      "properties": {
        "CdcStartPosition": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p> <note> <p>When you use this task setting with a source PostgreSQL database, a logical replication slot should already be created and associated with the source endpoint. You can verify this by setting the <code>slotName</code> extra connection attribute to the name of this logical replication slot. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.html#CHAP_Source.PostgreSQL.ConnectionAttrib\">Extra Connection Attributes When Using PostgreSQL as a Source for AWS DMS</a>.</p> </note>"
            }
          ]
        },
        "CdcStartTime": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "<p>Indicates the start time for a change data capture (CDC) operation. Use either CdcStartTime or CdcStartPosition to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p>Timestamp Example: --cdc-start-time “2018-03-08T12:12:12”</p>"
            }
          ]
        },
        "CdcStopPosition": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:2018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 2018-02-09T12:12:12 “</p>"
            }
          ]
        },
        "MigrationType": {
          "allOf": [
            {
              "$ref": "#/definitions/MigrationTypeValue"
            },
            {
              "description": "The migration type. Valid values: <code>full-load</code> | <code>cdc</code> | <code>full-load-and-cdc</code> "
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of a replication instance."
            }
          ]
        },
        "ReplicationTaskIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>An identifier for the replication task.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1-255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>"
            }
          ]
        },
        "ReplicationTaskSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Overall settings for the task, in JSON format. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.html\">Specifying Task Settings for AWS Database Migration Service Tasks</a> in the <i>AWS Database Migration User Guide.</i> "
            }
          ]
        },
        "ResourceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A friendly name for the resource identifier at the end of the <code>EndpointArn</code> response parameter that is returned in the created <code>Endpoint</code> object. The value for this parameter can have up to 31 characters. It can contain only ASCII letters, digits, and hyphen ('-'). Also, it can't end with a hyphen or contain two consecutive hyphens, and can only begin with a letter, such as <code>Example-App-ARN1</code>. For example, this value might result in the <code>EndpointArn</code> value <code>arn:aws:dms:eu-west-1:012345678901:rep:Example-App-ARN1</code>. If you don't specify a <code>ResourceIdentifier</code> value, AWS DMS generates a default identifier value for the end of <code>EndpointArn</code>."
            }
          ]
        },
        "SourceEndpointArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "An Amazon Resource Name (ARN) that uniquely identifies the source endpoint."
            }
          ]
        },
        "TableMappings": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The table mappings for the task, in JSON format. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TableMapping.html\">Using Table Mapping to Specify Task Settings</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "One or more tags to be assigned to the replication task."
            }
          ]
        },
        "TargetEndpointArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "An Amazon Resource Name (ARN) that uniquely identifies the target endpoint."
            }
          ]
        },
        "TaskData": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Supplemental information that the task requires to migrate the data for certain source and target endpoints. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.TaskData.html\">Specifying Supplemental Data for Task Settings</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        }
      },
      "required": [
        "ReplicationTaskIdentifier",
        "SourceEndpointArn",
        "TargetEndpointArn",
        "ReplicationInstanceArn",
        "MigrationType",
        "TableMappings"
      ],
      "title": "CreateReplicationTaskMessage",
      "type": "object"
    },
    "CreateReplicationTaskResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationTask": {
          "MigrationType": "full-load",
          "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
          "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
          "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
          "ReplicationTaskIdentifier": "task1",
          "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
          "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
          "Status": "creating",
          "TableMappings": "file://mappingfile.json",
          "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
        }
      },
      "properties": {
        "ReplicationTask": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTask"
            },
            {
              "description": "The replication task that was created."
            }
          ]
        }
      },
      "type": "object"
    },
    "DataFormatValue": {
      "enum": [
        "csv",
        "parquet"
      ],
      "type": "string"
    },
    "DatePartitionDelimiterValue": {
      "enum": [
        "SLASH",
        "UNDERSCORE",
        "DASH",
        "NONE"
      ],
      "type": "string"
    },
    "DatePartitionSequenceValue": {
      "enum": [
        "YYYYMMDD",
        "YYYYMMDDHH",
        "YYYYMM",
        "MMYYYYDD",
        "DDMMYYYY"
      ],
      "type": "string"
    },
    "DeleteCertificateMessage": {
      "properties": {
        "CertificateArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the deleted certificate."
            }
          ]
        }
      },
      "required": [
        "CertificateArn"
      ],
      "title": "DeleteCertificateMessage",
      "type": "object"
    },
    "DeleteCertificateResponse": {
      "example": {
        "Certificate": {}
      },
      "properties": {
        "Certificate": {
          "allOf": [
            {
              "$ref": "#/definitions/Certificate"
            },
            {
              "description": "The Secure Sockets Layer (SSL) certificate."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteConnectionMessage": {
      "description": "<p/>",
      "properties": {
        "EndpointArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication instance."
            }
          ]
        }
      },
      "required": [
        "EndpointArn",
        "ReplicationInstanceArn"
      ],
      "title": "DeleteConnectionMessage",
      "type": "object"
    },
    "DeleteConnectionResponse": {
      "description": "<p/>",
      "example": {
        "Connection": {}
      },
      "properties": {
        "Connection": {
          "allOf": [
            {
              "$ref": "#/definitions/Connection"
            },
            {
              "description": "The connection that is being deleted."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteEndpointMessage": {
      "description": "<p/>",
      "properties": {
        "EndpointArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
            }
          ]
        }
      },
      "required": [
        "EndpointArn"
      ],
      "title": "DeleteEndpointMessage",
      "type": "object"
    },
    "DeleteEndpointResponse": {
      "description": "<p/>",
      "example": {
        "Endpoint": {
          "EndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM",
          "EndpointIdentifier": "test-endpoint-1",
          "EndpointType": "source",
          "EngineName": "mysql",
          "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
          "Port": 3306,
          "ServerName": "mydb.cx1llnox7iyx.us-west-2.rds.amazonaws.com",
          "Status": "active",
          "Username": "username"
        }
      },
      "properties": {
        "Endpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/Endpoint"
            },
            {
              "description": "The endpoint that was deleted."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteEventSubscriptionMessage": {
      "description": "<p/>",
      "properties": {
        "SubscriptionName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the DMS event notification subscription to be deleted."
            }
          ]
        }
      },
      "required": [
        "SubscriptionName"
      ],
      "title": "DeleteEventSubscriptionMessage",
      "type": "object"
    },
    "DeleteEventSubscriptionResponse": {
      "description": "<p/>",
      "properties": {
        "EventSubscription": {
          "allOf": [
            {
              "$ref": "#/definitions/EventSubscription"
            },
            {
              "description": "The event subscription that was deleted."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteReplicationInstanceMessage": {
      "description": "<p/>",
      "properties": {
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication instance to be deleted."
            }
          ]
        }
      },
      "required": [
        "ReplicationInstanceArn"
      ],
      "title": "DeleteReplicationInstanceMessage",
      "type": "object"
    },
    "DeleteReplicationInstanceResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationInstance": {
          "AllocatedStorage": 5,
          "AutoMinorVersionUpgrade": true,
          "EngineVersion": "1.5.0",
          "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
          "PendingModifiedValues": {},
          "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
          "PubliclyAccessible": true,
          "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
          "ReplicationInstanceClass": "dms.t2.micro",
          "ReplicationInstanceIdentifier": "test-rep-1",
          "ReplicationInstanceStatus": "creating",
          "ReplicationSubnetGroup": {
            "ReplicationSubnetGroupDescription": "default",
            "ReplicationSubnetGroupIdentifier": "default",
            "SubnetGroupStatus": "Complete",
            "Subnets": [
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1d"
                },
                "SubnetIdentifier": "subnet-f6dd91af",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1b"
                },
                "SubnetIdentifier": "subnet-3605751d",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1c"
                },
                "SubnetIdentifier": "subnet-c2daefb5",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1e"
                },
                "SubnetIdentifier": "subnet-85e90cb8",
                "SubnetStatus": "Active"
              }
            ],
            "VpcId": "vpc-6741a603"
          }
        }
      },
      "properties": {
        "ReplicationInstance": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationInstance"
            },
            {
              "description": "The replication instance that was deleted."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteReplicationSubnetGroupMessage": {
      "description": "<p/>",
      "properties": {
        "ReplicationSubnetGroupIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The subnet group name of the replication instance."
            }
          ]
        }
      },
      "required": [
        "ReplicationSubnetGroupIdentifier"
      ],
      "title": "DeleteReplicationSubnetGroupMessage",
      "type": "object"
    },
    "DeleteReplicationSubnetGroupResponse": {
      "description": "<p/>",
      "example": {},
      "properties": {},
      "type": "object"
    },
    "DeleteReplicationTaskAssessmentRunMessage": {
      "description": "<p/>",
      "properties": {
        "ReplicationTaskAssessmentRunArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Amazon Resource Name (ARN) of the premigration assessment run to be deleted."
            }
          ]
        }
      },
      "required": [
        "ReplicationTaskAssessmentRunArn"
      ],
      "title": "DeleteReplicationTaskAssessmentRunMessage",
      "type": "object"
    },
    "DeleteReplicationTaskAssessmentRunResponse": {
      "description": "<p/>",
      "properties": {
        "ReplicationTaskAssessmentRun": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTaskAssessmentRun"
            },
            {
              "description": "The <code>ReplicationTaskAssessmentRun</code> object for the deleted assessment run."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteReplicationTaskMessage": {
      "description": "<p/>",
      "properties": {
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication task to be deleted."
            }
          ]
        }
      },
      "required": [
        "ReplicationTaskArn"
      ],
      "title": "DeleteReplicationTaskMessage",
      "type": "object"
    },
    "DeleteReplicationTaskResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationTask": {
          "MigrationType": "full-load",
          "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
          "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
          "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
          "ReplicationTaskIdentifier": "task1",
          "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
          "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
          "Status": "creating",
          "TableMappings": "file://mappingfile.json",
          "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
        }
      },
      "properties": {
        "ReplicationTask": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTask"
            },
            {
              "description": "The deleted replication task."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeAccountAttributesMessage": {
      "description": "<p/>",
      "properties": {},
      "title": "DescribeAccountAttributesMessage",
      "type": "object"
    },
    "DescribeAccountAttributesResponse": {
      "description": "<p/>",
      "example": {
        "AccountQuotas": [
          {
            "AccountQuotaName": "ReplicationInstances",
            "Max": 20,
            "Used": 0
          },
          {
            "AccountQuotaName": "AllocatedStorage",
            "Max": 20,
            "Used": 0
          },
          {
            "AccountQuotaName": "Endpoints",
            "Max": 20,
            "Used": 0
          }
        ]
      },
      "properties": {
        "AccountQuotas": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountQuotaList"
            },
            {
              "description": "Account quota information."
            }
          ]
        },
        "UniqueAccountIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>A unique AWS DMS identifier for an account in a particular AWS Region. The value of this identifier has the following format: <code>c99999999999</code>. DMS uses this identifier to name artifacts. For example, DMS uses this identifier to name the default Amazon S3 bucket for storing task assessment reports in a given AWS Region. The format of this S3 bucket name is the following: <code>dms-<i>AccountNumber</i>-<i>UniqueAccountIdentifier</i>.</code> Here is an example name for this default S3 bucket: <code>dms-111122223333-c44445555666</code>.</p> <note> <p>AWS DMS supports the <code>UniqueAccountIdentifier</code> parameter in versions 3.1.4 and later.</p> </note>"
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeApplicableIndividualAssessmentsMessage": {
      "description": "<p/>",
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "Maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved."
            }
          ]
        },
        "MigrationType": {
          "allOf": [
            {
              "$ref": "#/definitions/MigrationTypeValue"
            },
            {
              "description": "Name of the migration type that each provided individual assessment must support."
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "ARN of a replication instance on which you want to base the default list of individual assessments."
            }
          ]
        },
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Amazon Resource Name (ARN) of a migration task on which you want to base the default list of individual assessments."
            }
          ]
        },
        "SourceEngineName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Name of a database engine that the specified replication instance supports as a source."
            }
          ]
        },
        "TargetEngineName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Name of a database engine that the specified replication instance supports as a target."
            }
          ]
        }
      },
      "title": "DescribeApplicableIndividualAssessmentsMessage",
      "type": "object"
    },
    "DescribeApplicableIndividualAssessmentsResponse": {
      "description": "<p/>",
      "properties": {
        "IndividualAssessmentNames": {
          "allOf": [
            {
              "$ref": "#/definitions/IndividualAssessmentNameList"
            },
            {
              "description": "List of names for the individual assessments supported by the premigration assessment run that you start based on the specified request parameters. For more information on the available individual assessments, including compatibility with different migration task configurations, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.AssessmentReport.html\">Working with premigration assessment runs</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Pagination token returned for you to pass to a subsequent request. If you pass this token as the <code>Marker</code> value in a subsequent request, the response includes only records beyond the marker, up to the value specified in the request by <code>MaxRecords</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeCertificatesMessage": {
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": "Filters applied to the certificates described in the form of key-value pairs."
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 10</p>"
            }
          ]
        }
      },
      "title": "DescribeCertificatesMessage",
      "type": "object"
    },
    "DescribeCertificatesResponse": {
      "example": {
        "Certificates": [],
        "Marker": ""
      },
      "properties": {
        "Certificates": {
          "allOf": [
            {
              "$ref": "#/definitions/CertificateList"
            },
            {
              "description": "The Secure Sockets Layer (SSL) certificates associated with the replication instance."
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeConnectionsMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": "<p>The filters applied to the connection.</p> <p>Valid filter names: endpoint-arn | replication-instance-arn</p>"
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
            }
          ]
        }
      },
      "title": "DescribeConnectionsMessage",
      "type": "object"
    },
    "DescribeConnectionsResponse": {
      "description": "<p/>",
      "example": {
        "Connections": [
          {
            "EndpointArn": "arn:aws:dms:us-east-arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
            "EndpointIdentifier": "testsrc1",
            "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
            "ReplicationInstanceIdentifier": "test",
            "Status": "successful"
          }
        ],
        "Marker": ""
      },
      "properties": {
        "Connections": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionList"
            },
            {
              "description": "A description of the connections."
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeEndpointTypesMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": "<p>Filters applied to the endpoint types.</p> <p>Valid filter names: engine-name | endpoint-type</p>"
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
            }
          ]
        }
      },
      "title": "DescribeEndpointTypesMessage",
      "type": "object"
    },
    "DescribeEndpointTypesResponse": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "SupportedEndpointTypes": []
      },
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "SupportedEndpointTypes": {
          "allOf": [
            {
              "$ref": "#/definitions/SupportedEndpointTypeList"
            },
            {
              "description": "The types of endpoints that are supported."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeEndpointsMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": "<p>Filters applied to the endpoints.</p> <p>Valid filter names: endpoint-arn | endpoint-type | endpoint-id | engine-name</p>"
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
            }
          ]
        }
      },
      "title": "DescribeEndpointsMessage",
      "type": "object"
    },
    "DescribeEndpointsResponse": {
      "description": "<p/>",
      "example": {
        "Endpoints": [],
        "Marker": ""
      },
      "properties": {
        "Endpoints": {
          "allOf": [
            {
              "$ref": "#/definitions/EndpointList"
            },
            {
              "description": "Endpoint description."
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeEventCategoriesMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": "Filters applied to the event categories."
            }
          ]
        },
        "SourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-task</p>"
            }
          ]
        }
      },
      "title": "DescribeEventCategoriesMessage",
      "type": "object"
    },
    "DescribeEventCategoriesResponse": {
      "description": "<p/>",
      "properties": {
        "EventCategoryGroupList": {
          "allOf": [
            {
              "$ref": "#/definitions/EventCategoryGroupList"
            },
            {
              "description": "A list of event categories."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeEventSubscriptionsMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": "Filters applied to event subscriptions."
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
            }
          ]
        },
        "SubscriptionName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the AWS DMS event subscription to be described."
            }
          ]
        }
      },
      "title": "DescribeEventSubscriptionsMessage",
      "type": "object"
    },
    "DescribeEventSubscriptionsResponse": {
      "description": "<p/>",
      "properties": {
        "EventSubscriptionsList": {
          "allOf": [
            {
              "$ref": "#/definitions/EventSubscriptionsList"
            },
            {
              "description": "A list of event subscriptions."
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeEventsMessage": {
      "description": "<p/>",
      "properties": {
        "Duration": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The duration of the events to be listed."
            }
          ]
        },
        "EndTime": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The end time for the events to be listed."
            }
          ]
        },
        "EventCategories": {
          "allOf": [
            {
              "$ref": "#/definitions/EventCategoriesList"
            },
            {
              "description": "A list of event categories for the source type that you've chosen."
            }
          ]
        },
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": "Filters applied to events."
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
            }
          ]
        },
        "SourceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The identifier of an event source."
            }
          ]
        },
        "SourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceType"
            },
            {
              "description": "<p>The type of AWS DMS resource that generates events.</p> <p>Valid values: replication-instance | replication-task</p>"
            }
          ]
        },
        "StartTime": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The start time for the events to be listed."
            }
          ]
        }
      },
      "title": "DescribeEventsMessage",
      "type": "object"
    },
    "DescribeEventsResponse": {
      "description": "<p/>",
      "properties": {
        "Events": {
          "allOf": [
            {
              "$ref": "#/definitions/EventList"
            },
            {
              "description": "The events described."
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeOrderableReplicationInstancesMessage": {
      "description": "<p/>",
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
            }
          ]
        }
      },
      "title": "DescribeOrderableReplicationInstancesMessage",
      "type": "object"
    },
    "DescribeOrderableReplicationInstancesResponse": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "OrderableReplicationInstances": []
      },
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "OrderableReplicationInstances": {
          "allOf": [
            {
              "$ref": "#/definitions/OrderableReplicationInstanceList"
            },
            {
              "description": "The order-able replication instances available."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribePendingMaintenanceActionsMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication instance."
            }
          ]
        }
      },
      "title": "DescribePendingMaintenanceActionsMessage",
      "type": "object"
    },
    "DescribePendingMaintenanceActionsResponse": {
      "description": "<p/>",
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "PendingMaintenanceActions": {
          "allOf": [
            {
              "$ref": "#/definitions/PendingMaintenanceActions"
            },
            {
              "description": "The pending maintenance action."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeRefreshSchemasStatusMessage": {
      "description": "<p/>",
      "properties": {
        "EndpointArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
            }
          ]
        }
      },
      "required": [
        "EndpointArn"
      ],
      "title": "DescribeRefreshSchemasStatusMessage",
      "type": "object"
    },
    "DescribeRefreshSchemasStatusResponse": {
      "description": "<p/>",
      "example": {
        "RefreshSchemasStatus": {}
      },
      "properties": {
        "RefreshSchemasStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/RefreshSchemasStatus"
            },
            {
              "description": "The status of the schema."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeReplicationInstanceTaskLogsMessage": {
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication instance."
            }
          ]
        }
      },
      "required": [
        "ReplicationInstanceArn"
      ],
      "title": "DescribeReplicationInstanceTaskLogsMessage",
      "type": "object"
    },
    "DescribeReplicationInstanceTaskLogsResponse": {
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication instance."
            }
          ]
        },
        "ReplicationInstanceTaskLogs": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationInstanceTaskLogsList"
            },
            {
              "description": "An array of replication task log metadata. Each member of the array contains the replication task name, ARN, and task log size (in bytes). "
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeReplicationInstancesMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": "<p>Filters applied to replication instances.</p> <p>Valid filter names: replication-instance-arn | replication-instance-id | replication-instance-class | engine-version</p>"
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
            }
          ]
        }
      },
      "title": "DescribeReplicationInstancesMessage",
      "type": "object"
    },
    "DescribeReplicationInstancesResponse": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "ReplicationInstances": []
      },
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "ReplicationInstances": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationInstanceList"
            },
            {
              "description": "The replication instances described."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeReplicationSubnetGroupsMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": "<p>Filters applied to replication subnet groups.</p> <p>Valid filter names: replication-subnet-group-id</p>"
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
            }
          ]
        }
      },
      "title": "DescribeReplicationSubnetGroupsMessage",
      "type": "object"
    },
    "DescribeReplicationSubnetGroupsResponse": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "ReplicationSubnetGroups": []
      },
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "ReplicationSubnetGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationSubnetGroups"
            },
            {
              "description": "A description of the replication subnet groups."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeReplicationTaskAssessmentResultsMessage": {
      "description": "<p/>",
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
            }
          ]
        },
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) string that uniquely identifies the task. When this input parameter is specified, the API returns only one result and ignore the values of the <code>MaxRecords</code> and <code>Marker</code> parameters. "
            }
          ]
        }
      },
      "title": "DescribeReplicationTaskAssessmentResultsMessage",
      "type": "object"
    },
    "DescribeReplicationTaskAssessmentResultsResponse": {
      "description": "<p/>",
      "properties": {
        "BucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "- The Amazon S3 bucket where the task assessment report is located. "
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "ReplicationTaskAssessmentResults": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTaskAssessmentResultList"
            },
            {
              "description": " The task assessment report. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeReplicationTaskAssessmentRunsMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": "<p>Filters applied to the premigration assessment runs described in the form of key-value pairs.</p> <p>Valid filter names: <code>replication-task-assessment-run-arn</code>, <code>replication-task-arn</code>, <code>replication-instance-arn</code>, <code>status</code> </p>"
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved."
            }
          ]
        }
      },
      "title": "DescribeReplicationTaskAssessmentRunsMessage",
      "type": "object"
    },
    "DescribeReplicationTaskAssessmentRunsResponse": {
      "description": "<p/>",
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A pagination token returned for you to pass to a subsequent request. If you pass this token as the <code>Marker</code> value in a subsequent request, the response includes only records beyond the marker, up to the value specified in the request by <code>MaxRecords</code>."
            }
          ]
        },
        "ReplicationTaskAssessmentRuns": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTaskAssessmentRunList"
            },
            {
              "description": "One or more premigration assessment runs as specified by <code>Filters</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeReplicationTaskIndividualAssessmentsMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": "<p>Filters applied to the individual assessments described in the form of key-value pairs.</p> <p>Valid filter names: <code>replication-task-assessment-run-arn</code>, <code>replication-task-arn</code>, <code>status</code> </p>"
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved."
            }
          ]
        }
      },
      "title": "DescribeReplicationTaskIndividualAssessmentsMessage",
      "type": "object"
    },
    "DescribeReplicationTaskIndividualAssessmentsResponse": {
      "description": "<p/>",
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A pagination token returned for you to pass to a subsequent request. If you pass this token as the <code>Marker</code> value in a subsequent request, the response includes only records beyond the marker, up to the value specified in the request by <code>MaxRecords</code>."
            }
          ]
        },
        "ReplicationTaskIndividualAssessments": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTaskIndividualAssessmentList"
            },
            {
              "description": "One or more individual assessments as specified by <code>Filters</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeReplicationTasksMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": "<p>Filters applied to replication tasks.</p> <p>Valid filter names: replication-task-arn | replication-task-id | migration-type | endpoint-arn | replication-instance-arn</p>"
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
            }
          ]
        },
        "WithoutSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "An option to set to avoid returning information about settings. Use this to reduce overhead when setting information is too large. To use this option, choose <code>true</code>; otherwise, choose <code>false</code> (the default)."
            }
          ]
        }
      },
      "title": "DescribeReplicationTasksMessage",
      "type": "object"
    },
    "DescribeReplicationTasksResponse": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "ReplicationTasks": []
      },
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "ReplicationTasks": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTaskList"
            },
            {
              "description": "A description of the replication tasks."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeSchemasMessage": {
      "description": "<p/>",
      "properties": {
        "EndpointArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
            }
          ]
        }
      },
      "required": [
        "EndpointArn"
      ],
      "title": "DescribeSchemasMessage",
      "type": "object"
    },
    "DescribeSchemasResponse": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "Schemas": []
      },
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "Schemas": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaList"
            },
            {
              "description": "The described schema."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeTableStatisticsMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": "<p>Filters applied to table statistics.</p> <p>Valid filter names: schema-name | table-name | table-state</p> <p>A combination of filters creates an AND condition where each record matches all specified filters.</p>"
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "MaxRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 500.</p>"
            }
          ]
        },
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication task."
            }
          ]
        }
      },
      "required": [
        "ReplicationTaskArn"
      ],
      "title": "DescribeTableStatisticsMessage",
      "type": "object"
    },
    "DescribeTableStatisticsResponse": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "ReplicationTaskArn": "",
        "TableStatistics": []
      },
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
            }
          ]
        },
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication task."
            }
          ]
        },
        "TableStatistics": {
          "allOf": [
            {
              "$ref": "#/definitions/TableStatisticsList"
            },
            {
              "description": "The table statistics."
            }
          ]
        }
      },
      "type": "object"
    },
    "DmsSslModeValue": {
      "enum": [
        "none",
        "require",
        "verify-ca",
        "verify-full"
      ],
      "type": "string"
    },
    "DmsTransferSettings": {
      "description": " The settings in JSON format for the DMS Transfer type source endpoint. ",
      "properties": {
        "BucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The name of the S3 bucket to use. "
            }
          ]
        },
        "ServiceAccessRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The IAM role that has permission to access the Amazon S3 bucket. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DocDbSettings": {
      "description": "Provides information that defines a DocumentDB endpoint.",
      "properties": {
        "DatabaseName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The database name on the DocumentDB source endpoint. "
            }
          ]
        },
        "DocsToInvestigate": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this setting when <code>NestingLevel</code> is set to <code>\"one\"</code>. </p> <p>Must be a positive value greater than <code>0</code>. Default value is <code>1000</code>.</p>"
            }
          ]
        },
        "ExtractDocId": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "<p> Specifies the document ID. Use this setting when <code>NestingLevel</code> is set to <code>\"none\"</code>. </p> <p>Default value is <code>\"false\"</code>. </p>"
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region."
            }
          ]
        },
        "NestingLevel": {
          "allOf": [
            {
              "$ref": "#/definitions/NestingLevelValue"
            },
            {
              "description": "<p> Specifies either document or table mode. </p> <p>Default value is <code>\"none\"</code>. Specify <code>\"none\"</code> to use document mode. Specify <code>\"one\"</code> to use table mode.</p>"
            }
          ]
        },
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/SecretString"
            },
            {
              "description": " The password for the user account you use to access the DocumentDB source endpoint. "
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": " The port value for the DocumentDB source endpoint. "
            }
          ]
        },
        "ServerName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The name of the server on the DocumentDB source endpoint. "
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The user name you use to access the DocumentDB source endpoint. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DynamoDbSettings": {
      "description": "Provides the Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role used to define an Amazon DynamoDB target endpoint.",
      "properties": {
        "ServiceAccessRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The Amazon Resource Name (ARN) used by the service access IAM role. "
            }
          ]
        }
      },
      "required": [
        "ServiceAccessRoleArn"
      ],
      "type": "object"
    },
    "ElasticsearchSettings": {
      "description": "Provides information that defines an Elasticsearch endpoint.",
      "properties": {
        "EndpointUri": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The endpoint for the Elasticsearch cluster. AWS DMS uses HTTPS if a transport protocol (http/https) is not specified."
            }
          ]
        },
        "ErrorRetryDuration": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The maximum number of seconds for which DMS retries failed API requests to the Elasticsearch cluster."
            }
          ]
        },
        "FullLoadErrorPercentage": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p>The maximum percentage of records that can fail to be written before a full load operation stops.</p> <p>To avoid early failure, this counter is only effective after 1000 records are transferred. Elasticsearch also has the concept of error monitoring during the last 10 minutes of an Observation Window. If transfer of all records fail in the last 10 minutes, the full load operation stops. </p>"
            }
          ]
        },
        "ServiceAccessRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) used by service to access the IAM role."
            }
          ]
        }
      },
      "required": [
        "ServiceAccessRoleArn",
        "EndpointUri"
      ],
      "type": "object"
    },
    "EncodingTypeValue": {
      "enum": [
        "plain",
        "plain-dictionary",
        "rle-dictionary"
      ],
      "type": "string"
    },
    "EncryptionModeValue": {
      "enum": [
        "sse-s3",
        "sse-kms"
      ],
      "type": "string"
    },
    "Endpoint": {
      "description": "<p>Describes an endpoint of a database instance in response to operations such as the following:</p> <ul> <li> <p> <code>CreateEndpoint</code> </p> </li> <li> <p> <code>DescribeEndpoint</code> </p> </li> <li> <p> <code>DescribeEndpointTypes</code> </p> </li> <li> <p> <code>ModifyEndpoint</code> </p> </li> </ul>",
      "properties": {
        "CertificateArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) used for SSL connection to the endpoint."
            }
          ]
        },
        "DatabaseName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the database at the endpoint."
            }
          ]
        },
        "DmsTransferSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/DmsTransferSettings"
            },
            {
              "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Possible settings include the following:</p> <ul> <li> <p> <code>ServiceAccessRoleArn</code> - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p> <code>BucketName</code> - The name of the S3 bucket to use.</p> </li> <li> <p> <code>CompressionType</code> - An optional parameter to use GZIP to compress the target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep the files uncompressed, don't use this value.</p> </li> </ul> <p>Shorthand syntax for these settings is as follows: <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these settings is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>"
            }
          ]
        },
        "DocDbSettings": {
          "$ref": "#/definitions/DocDbSettings"
        },
        "DynamoDbSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/DynamoDbSettings"
            },
            {
              "description": "The settings for the DynamoDB target endpoint. For more information, see the <code>DynamoDBSettings</code> structure."
            }
          ]
        },
        "ElasticsearchSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchSettings"
            },
            {
              "description": "The settings for the Elasticsearch source endpoint. For more information, see the <code>ElasticsearchSettings</code> structure."
            }
          ]
        },
        "EndpointArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
            }
          ]
        },
        "EndpointIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The database endpoint identifier. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen or contain two consecutive hyphens."
            }
          ]
        },
        "EndpointType": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationEndpointTypeValue"
            },
            {
              "description": "The type of endpoint. Valid values are <code>source</code> and <code>target</code>."
            }
          ]
        },
        "EngineDisplayName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\""
            }
          ]
        },
        "EngineName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The database engine name. Valid values, depending on the EndpointType, include <code>\"mysql\"</code>, <code>\"oracle\"</code>, <code>\"postgres\"</code>, <code>\"mariadb\"</code>, <code>\"aurora\"</code>, <code>\"aurora-postgresql\"</code>, <code>\"redshift\"</code>, <code>\"s3\"</code>, <code>\"db2\"</code>, <code>\"azuredb\"</code>, <code>\"sybase\"</code>, <code>\"dynamodb\"</code>, <code>\"mongodb\"</code>, <code>\"kinesis\"</code>, <code>\"kafka\"</code>, <code>\"elasticsearch\"</code>, <code>\"documentdb\"</code>, <code>\"sqlserver\"</code>, and <code>\"neptune\"</code>."
            }
          ]
        },
        "ExternalId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account. "
            }
          ]
        },
        "ExternalTableDefinition": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The external table definition."
            }
          ]
        },
        "ExtraConnectionAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Additional connection attributes used to connect to the endpoint."
            }
          ]
        },
        "IBMDb2Settings": {
          "allOf": [
            {
              "$ref": "#/definitions/IBMDb2Settings"
            },
            {
              "description": "The settings for the IBM Db2 LUW source endpoint. For more information, see the <code>IBMDb2Settings</code> structure. "
            }
          ]
        },
        "KafkaSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/KafkaSettings"
            },
            {
              "description": "The settings for the Apache Kafka target endpoint. For more information, see the <code>KafkaSettings</code> structure."
            }
          ]
        },
        "KinesisSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/KinesisSettings"
            },
            {
              "description": "The settings for the Amazon Kinesis target endpoint. For more information, see the <code>KinesisSettings</code> structure."
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>An AWS KMS key identifier that is used to encrypt the connection parameters for the endpoint.</p> <p>If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key.</p> <p>AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p>"
            }
          ]
        },
        "MicrosoftSQLServerSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/MicrosoftSQLServerSettings"
            },
            {
              "description": "The settings for the Microsoft SQL Server source and target endpoint. For more information, see the <code>MicrosoftSQLServerSettings</code> structure."
            }
          ]
        },
        "MongoDbSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/MongoDbSettings"
            },
            {
              "description": "The settings for the MongoDB source endpoint. For more information, see the <code>MongoDbSettings</code> structure."
            }
          ]
        },
        "MySQLSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/MySQLSettings"
            },
            {
              "description": "The settings for the MySQL source and target endpoint. For more information, see the <code>MySQLSettings</code> structure."
            }
          ]
        },
        "NeptuneSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/NeptuneSettings"
            },
            {
              "description": "The settings for the Amazon Neptune target endpoint. For more information, see the <code>NeptuneSettings</code> structure."
            }
          ]
        },
        "OracleSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/OracleSettings"
            },
            {
              "description": "The settings for the Oracle source and target endpoint. For more information, see the <code>OracleSettings</code> structure."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The port value used to access the endpoint."
            }
          ]
        },
        "PostgreSQLSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/PostgreSQLSettings"
            },
            {
              "description": "The settings for the PostgreSQL source and target endpoint. For more information, see the <code>PostgreSQLSettings</code> structure."
            }
          ]
        },
        "RedshiftSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/RedshiftSettings"
            },
            {
              "description": "Settings for the Amazon Redshift endpoint."
            }
          ]
        },
        "S3Settings": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Settings"
            },
            {
              "description": "The settings for the S3 target endpoint. For more information, see the <code>S3Settings</code> structure."
            }
          ]
        },
        "ServerName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the server at the endpoint."
            }
          ]
        },
        "ServiceAccessRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) used by the service access IAM role."
            }
          ]
        },
        "SslMode": {
          "allOf": [
            {
              "$ref": "#/definitions/DmsSslModeValue"
            },
            {
              "description": "The SSL mode used to connect to the endpoint. The default value is <code>none</code>."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The status of the endpoint."
            }
          ]
        },
        "SybaseSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/SybaseSettings"
            },
            {
              "description": "The settings for the SAP ASE source and target endpoint. For more information, see the <code>SybaseSettings</code> structure."
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The user name used to connect to the endpoint."
            }
          ]
        }
      },
      "type": "object"
    },
    "EndpointList": {
      "items": {
        "$ref": "#/definitions/Endpoint"
      },
      "type": "array"
    },
    "Event": {
      "description": "Describes an identifiable significant activity that affects a replication instance or task. This object can provide the message, the available event categories, the date and source of the event, and the AWS DMS resource type.",
      "properties": {
        "Date": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The date of the event."
            }
          ]
        },
        "EventCategories": {
          "allOf": [
            {
              "$ref": "#/definitions/EventCategoriesList"
            },
            {
              "description": "The event categories available for the specified source type."
            }
          ]
        },
        "Message": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The event message."
            }
          ]
        },
        "SourceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The identifier of an event source."
            }
          ]
        },
        "SourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceType"
            },
            {
              "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | endpoint | replication-task</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "EventCategoriesList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "EventCategoryGroup": {
      "description": "Lists categories of events subscribed to, and generated by, the applicable AWS DMS resource type. This data type appears in response to the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_EventCategoryGroup.html\"> <code>DescribeEventCategories</code> </a> action.",
      "properties": {
        "EventCategories": {
          "allOf": [
            {
              "$ref": "#/definitions/EventCategoriesList"
            },
            {
              "description": " A list of event categories from a source type that you've chosen."
            }
          ]
        },
        "SourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | replication-task</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "EventCategoryGroupList": {
      "items": {
        "$ref": "#/definitions/EventCategoryGroup"
      },
      "type": "array"
    },
    "EventList": {
      "items": {
        "$ref": "#/definitions/Event"
      },
      "type": "array"
    },
    "EventSubscription": {
      "description": "Describes an event notification subscription created by the <code>CreateEventSubscription</code> operation.",
      "properties": {
        "CustSubscriptionId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The AWS DMS event notification subscription Id."
            }
          ]
        },
        "CustomerAwsId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The AWS customer account associated with the AWS DMS event notification subscription."
            }
          ]
        },
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Boolean value that indicates if the event subscription is enabled."
            }
          ]
        },
        "EventCategoriesList": {
          "allOf": [
            {
              "$ref": "#/definitions/EventCategoriesList"
            },
            {
              "description": "A lists of event categories."
            }
          ]
        },
        "SnsTopicArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The topic ARN of the AWS DMS event notification subscription."
            }
          ]
        },
        "SourceIdsList": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceIdsList"
            },
            {
              "description": "A list of source Ids for the event subscription."
            }
          ]
        },
        "SourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | replication-task</p>"
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The status of the AWS DMS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that AWS DMS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>"
            }
          ]
        },
        "SubscriptionCreationTime": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The time the AWS DMS event notification subscription was created."
            }
          ]
        }
      },
      "type": "object"
    },
    "EventSubscriptionsList": {
      "items": {
        "$ref": "#/definitions/EventSubscription"
      },
      "type": "array"
    },
    "ExcludeTestList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "Filter": {
      "description": "Identifies the name and value of a filter object. This filter is used to limit the number and type of AWS DMS objects that are returned for a particular <code>Describe*</code> call or similar operation. Filters are used as an optional parameter to the following APIs. ",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the filter as specified for a <code>Describe*</code> or similar operation."
            }
          ]
        },
        "Values": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterValueList"
            },
            {
              "description": "The filter value, which can specify one or more values used to narrow the returned results."
            }
          ]
        }
      },
      "required": [
        "Name",
        "Values"
      ],
      "type": "object"
    },
    "FilterList": {
      "items": {
        "$ref": "#/definitions/Filter"
      },
      "type": "array"
    },
    "FilterValueList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "IBMDb2Settings": {
      "description": "Provides information that defines an IBM Db2 LUW endpoint.",
      "properties": {
        "CurrentLsn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "For ongoing replication (CDC), use CurrentLSN to specify a log sequence number (LSN) where you want the replication to start."
            }
          ]
        },
        "DatabaseName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Database name for the endpoint."
            }
          ]
        },
        "MaxKBytesPerRead": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "Maximum number of bytes per read, as a NUMBER value. The default is 64 KB."
            }
          ]
        },
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/SecretString"
            },
            {
              "description": "Endpoint connection password."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "Endpoint TCP port."
            }
          ]
        },
        "ServerName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Fully qualified domain name of the endpoint."
            }
          ]
        },
        "SetDataCaptureChanges": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Enables ongoing replication (CDC) as a BOOLEAN value. The default is true."
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Endpoint connection user name."
            }
          ]
        }
      },
      "type": "object"
    },
    "ImportCertificateMessage": {
      "properties": {
        "CertificateIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A customer-assigned name for the certificate. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen or contain two consecutive hyphens."
            }
          ]
        },
        "CertificatePem": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The contents of a <code>.pem</code> file, which contains an X.509 certificate."
            }
          ]
        },
        "CertificateWallet": {
          "allOf": [
            {
              "$ref": "#/definitions/CertificateWallet"
            },
            {
              "description": "The location of an imported Oracle Wallet certificate for use with SSL."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "The tags associated with the certificate."
            }
          ]
        }
      },
      "required": [
        "CertificateIdentifier"
      ],
      "title": "ImportCertificateMessage",
      "type": "object"
    },
    "ImportCertificateResponse": {
      "example": {
        "Certificate": {}
      },
      "properties": {
        "Certificate": {
          "allOf": [
            {
              "$ref": "#/definitions/Certificate"
            },
            {
              "description": "The certificate to be uploaded."
            }
          ]
        }
      },
      "type": "object"
    },
    "IncludeTestList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "IndividualAssessmentNameList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "InsufficientResourceCapacityFault": {},
    "Integer": {
      "type": "integer"
    },
    "IntegerOptional": {
      "type": "integer"
    },
    "InvalidCertificateFault": {},
    "InvalidResourceStateFault": {},
    "InvalidSubnet": {},
    "KMSAccessDeniedFault": {},
    "KMSDisabledFault": {},
    "KMSFault": {},
    "KMSInvalidStateFault": {},
    "KMSKeyNotAccessibleFault": {},
    "KMSNotFoundFault": {},
    "KMSThrottlingFault": {},
    "KafkaSettings": {
      "description": "Provides information that describes an Apache Kafka endpoint. This information includes the output format of records applied to the endpoint and details of transaction and control table data information.",
      "properties": {
        "Broker": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The broker location and port of the Kafka broker that hosts your Kafka instance. Specify the broker in the form <code> <i>broker-hostname-or-ip</i>:<i>port</i> </code>. For example, <code>\"ec2-12-345-678-901.compute-1.amazonaws.com:2345\"</code>."
            }
          ]
        },
        "IncludeControlDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Shows detailed control information for table definition, column definition, and table and column changes in the Kafka message output. The default is <code>false</code>."
            }
          ]
        },
        "IncludeNullAndEmpty": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Include NULL and empty columns for records migrated to the endpoint. The default is <code>false</code>."
            }
          ]
        },
        "IncludePartitionValue": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Shows the partition value within the Kafka message output, unless the partition type is <code>schema-table-type</code>. The default is <code>false</code>."
            }
          ]
        },
        "IncludeTableAlterOperations": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Includes any data definition language (DDL) operations that change the table in the control data, such as <code>rename-table</code>, <code>drop-table</code>, <code>add-column</code>, <code>drop-column</code>, and <code>rename-column</code>. The default is <code>false</code>."
            }
          ]
        },
        "IncludeTransactionDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Provides detailed transaction information from the source database. This information includes a commit timestamp, a log position, and values for <code>transaction_id</code>, previous <code>transaction_id</code>, and <code>transaction_record_id</code> (the record offset within a transaction). The default is <code>false</code>."
            }
          ]
        },
        "MessageFormat": {
          "allOf": [
            {
              "$ref": "#/definitions/MessageFormatValue"
            },
            {
              "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code> (default) or <code>JSON_UNFORMATTED</code> (a single line with no tab)."
            }
          ]
        },
        "MessageMaxBytes": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The maximum size in bytes for records created on the endpoint The default is 1,000,000."
            }
          ]
        },
        "PartitionIncludeSchemaTable": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Prefixes schema and table names to partition values, when the partition type is <code>primary-key-type</code>. Doing this increases data distribution among Kafka partitions. For example, suppose that a SysBench schema has thousands of tables and each table has only limited range for a primary key. In this case, the same primary key is sent from thousands of tables to the same partition, which causes throttling. The default is <code>false</code>."
            }
          ]
        },
        "Topic": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The topic to which you migrate the data. If you don't specify a topic, AWS DMS specifies <code>\"kafka-default-topic\"</code> as the migration topic."
            }
          ]
        }
      },
      "type": "object"
    },
    "KeyList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "KinesisSettings": {
      "description": "Provides information that describes an Amazon Kinesis Data Stream endpoint. This information includes the output format of records applied to the endpoint and details of transaction and control table data information.",
      "properties": {
        "IncludeControlDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. The default is <code>false</code>."
            }
          ]
        },
        "IncludeNullAndEmpty": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Include NULL and empty columns for records migrated to the endpoint. The default is <code>false</code>."
            }
          ]
        },
        "IncludePartitionValue": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Shows the partition value within the Kinesis message output, unless the partition type is <code>schema-table-type</code>. The default is <code>false</code>."
            }
          ]
        },
        "IncludeTableAlterOperations": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Includes any data definition language (DDL) operations that change the table in the control data, such as <code>rename-table</code>, <code>drop-table</code>, <code>add-column</code>, <code>drop-column</code>, and <code>rename-column</code>. The default is <code>false</code>."
            }
          ]
        },
        "IncludeTransactionDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Provides detailed transaction information from the source database. This information includes a commit timestamp, a log position, and values for <code>transaction_id</code>, previous <code>transaction_id</code>, and <code>transaction_record_id</code> (the record offset within a transaction). The default is <code>false</code>."
            }
          ]
        },
        "MessageFormat": {
          "allOf": [
            {
              "$ref": "#/definitions/MessageFormatValue"
            },
            {
              "description": "The output format for the records created on the endpoint. The message format is <code>JSON</code> (default) or <code>JSON_UNFORMATTED</code> (a single line with no tab)."
            }
          ]
        },
        "PartitionIncludeSchemaTable": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Prefixes schema and table names to partition values, when the partition type is <code>primary-key-type</code>. Doing this increases data distribution among Kinesis shards. For example, suppose that a SysBench schema has thousands of tables and each table has only limited range for a primary key. In this case, the same primary key is sent from thousands of tables to the same shard, which causes throttling. The default is <code>false</code>."
            }
          ]
        },
        "ServiceAccessRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the AWS Identity and Access Management (IAM) role that AWS DMS uses to write to the Kinesis data stream."
            }
          ]
        },
        "StreamArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListTagsForResourceMessage": {
      "description": "<p/>",
      "properties": {
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) string that uniquely identifies the AWS DMS resource."
            }
          ]
        }
      },
      "required": [
        "ResourceArn"
      ],
      "title": "ListTagsForResourceMessage",
      "type": "object"
    },
    "ListTagsForResourceResponse": {
      "description": "<p/>",
      "example": {
        "TagList": []
      },
      "properties": {
        "TagList": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "A list of tags for the resource."
            }
          ]
        }
      },
      "type": "object"
    },
    "Long": {
      "type": "integer"
    },
    "MessageFormatValue": {
      "enum": [
        "json",
        "json-unformatted"
      ],
      "type": "string"
    },
    "MicrosoftSQLServerSettings": {
      "description": "Provides information that defines a Microsoft SQL Server endpoint.",
      "properties": {
        "BcpPacketSize": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The maximum size of the packets (in bytes) used to transfer data using BCP."
            }
          ]
        },
        "ControlTablesFileGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Specify a filegroup for the AWS DMS internal tables. When the replication task starts, all the internal AWS DMS control tables (awsdms_ apply_exception, awsdms_apply, awsdms_changes) are created on the specified filegroup."
            }
          ]
        },
        "DatabaseName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Database name for the endpoint."
            }
          ]
        },
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/SecretString"
            },
            {
              "description": "Endpoint connection password."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "Endpoint TCP port."
            }
          ]
        },
        "ReadBackupOnly": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "When this attribute is set to <code>Y</code>, AWS DMS only reads changes from transaction log backups and doesn't read from the active transaction log file during ongoing replication. Setting this parameter to <code>Y</code> enables you to control active transaction log file growth during full load and ongoing replication tasks. However, it can add some source latency to ongoing replication."
            }
          ]
        },
        "SafeguardPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/SafeguardPolicy"
            },
            {
              "description": "<p>Use this attribute to minimize the need to access the backup log and enable AWS DMS to prevent truncation using one of the following two methods.</p> <p> <i>Start transactions in the database:</i> This is the default method. When this method is used, AWS DMS prevents TLOG truncation by mimicking a transaction in the database. As long as such a transaction is open, changes that appear after the transaction started aren't truncated. If you need Microsoft Replication to be enabled in your database, then you must choose this method.</p> <p> <i>Exclusively use sp_repldone within a single task</i>: When this method is used, AWS DMS reads the changes and then uses sp_repldone to mark the TLOG transactions as ready for truncation. Although this method doesn't involve any transactional activities, it can only be used when Microsoft Replication isn't running. Also, when using this method, only one AWS DMS task can access the database at any given time. Therefore, if you need to run parallel AWS DMS tasks against the same database, use the default method.</p>"
            }
          ]
        },
        "ServerName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Fully qualified domain name of the endpoint."
            }
          ]
        },
        "UseBcpFullLoad": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Use this to attribute to transfer data for full-load operations using BCP. When the target table contains an identity column that does not exist in the source table, you must disable the use BCP for loading table option."
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Endpoint connection user name."
            }
          ]
        }
      },
      "type": "object"
    },
    "MigrationTypeValue": {
      "enum": [
        "full-load",
        "cdc",
        "full-load-and-cdc"
      ],
      "type": "string"
    },
    "ModifyEndpointMessage": {
      "description": "<p/>",
      "properties": {
        "CertificateArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the certificate used for SSL connection."
            }
          ]
        },
        "DatabaseName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the endpoint database."
            }
          ]
        },
        "DmsTransferSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/DmsTransferSettings"
            },
            {
              "description": "<p>The settings in JSON format for the DMS transfer type of source endpoint. </p> <p>Attributes include the following:</p> <ul> <li> <p>serviceAccessRoleArn - The AWS Identity and Access Management (IAM) role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p>BucketName - The name of the S3 bucket to use.</p> </li> <li> <p>compressionType - An optional parameter to use GZIP to compress the target files. Either set this parameter to NONE (the default) or don't use it to leave the files uncompressed.</p> </li> </ul> <p>Shorthand syntax for these settings is as follows: <code>ServiceAccessRoleArn=string ,BucketName=string,CompressionType=string</code> </p> <p>JSON syntax for these settings is as follows: <code>{ \"ServiceAccessRoleArn\": \"string\", \"BucketName\": \"string\", \"CompressionType\": \"none\"|\"gzip\" } </code> </p>"
            }
          ]
        },
        "DocDbSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/DocDbSettings"
            },
            {
              "description": "Settings in JSON format for the source DocumentDB endpoint. For more information about the available settings, see the configuration properties section in <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.DocumentDB.html\"> Using DocumentDB as a Target for AWS Database Migration Service</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "DynamoDbSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/DynamoDbSettings"
            },
            {
              "description": "Settings in JSON format for the target Amazon DynamoDB endpoint. For information about other available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html\">Using Object Mapping to Migrate Data to DynamoDB</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "ElasticsearchSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchSettings"
            },
            {
              "description": "Settings in JSON format for the target Elasticsearch endpoint. For more information about the available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Elasticsearch.html#CHAP_Target.Elasticsearch.Configuration\">Extra Connection Attributes When Using Elasticsearch as a Target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "EndpointArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
            }
          ]
        },
        "EndpointIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The database endpoint identifier. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen or contain two consecutive hyphens."
            }
          ]
        },
        "EndpointType": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationEndpointTypeValue"
            },
            {
              "description": "The type of endpoint. Valid values are <code>source</code> and <code>target</code>."
            }
          ]
        },
        "EngineName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The type of engine for the endpoint. Valid values, depending on the EndpointType, include <code>\"mysql\"</code>, <code>\"oracle\"</code>, <code>\"postgres\"</code>, <code>\"mariadb\"</code>, <code>\"aurora\"</code>, <code>\"aurora-postgresql\"</code>, <code>\"redshift\"</code>, <code>\"s3\"</code>, <code>\"db2\"</code>, <code>\"azuredb\"</code>, <code>\"sybase\"</code>, <code>\"dynamodb\"</code>, <code>\"mongodb\"</code>, <code>\"kinesis\"</code>, <code>\"kafka\"</code>, <code>\"elasticsearch\"</code>, <code>\"documentdb\"</code>, <code>\"sqlserver\"</code>, and <code>\"neptune\"</code>."
            }
          ]
        },
        "ExternalTableDefinition": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The external table definition."
            }
          ]
        },
        "ExtraConnectionAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Additional attributes associated with the connection. To reset this parameter, pass the empty string (\"\") as an argument."
            }
          ]
        },
        "IBMDb2Settings": {
          "allOf": [
            {
              "$ref": "#/definitions/IBMDb2Settings"
            },
            {
              "description": "Settings in JSON format for the source IBM Db2 LUW endpoint. For information about other available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.DB2.ConnectionAttrib\">Extra connection attributes when using Db2 LUW as a source for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "KafkaSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/KafkaSettings"
            },
            {
              "description": "Settings in JSON format for the target Apache Kafka endpoint. For more information about the available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kafka.html\">Using Apache Kafka as a Target for AWS Database Migration Service</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "KinesisSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/KinesisSettings"
            },
            {
              "description": "Settings in JSON format for the target endpoint for Amazon Kinesis Data Streams. For more information about the available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kinesis.html\">Using Amazon Kinesis Data Streams as a Target for AWS Database Migration Service</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "MicrosoftSQLServerSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/MicrosoftSQLServerSettings"
            },
            {
              "description": "Settings in JSON format for the source and target Microsoft SQL Server endpoint. For information about other available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.SQLServer.ConnectionAttrib\">Extra connection attributes when using SQL Server as a source for AWS DMS</a> and <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.SQLServer.ConnectionAttrib\"> Extra connection attributes when using SQL Server as a target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "MongoDbSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/MongoDbSettings"
            },
            {
              "description": "Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see the configuration properties section in <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MongoDB.html\"> Using MongoDB as a Target for AWS Database Migration Service</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "MySQLSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/MySQLSettings"
            },
            {
              "description": "Settings in JSON format for the source and target MySQL endpoint. For information about other available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MySQL.ConnectionAttrib\">Extra connection attributes when using MySQL as a source for AWS DMS</a> and <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.MySQL.ConnectionAttrib\">Extra connection attributes when using a MySQL-compatible database as a target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "NeptuneSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/NeptuneSettings"
            },
            {
              "description": "Settings in JSON format for the target Amazon Neptune endpoint. For more information about the available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Neptune.html#CHAP_Target.Neptune.EndpointSettings\">Specifying Endpoint Settings for Amazon Neptune as a Target</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "OracleSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/OracleSettings"
            },
            {
              "description": "Settings in JSON format for the source and target Oracle endpoint. For information about other available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.Oracle.ConnectionAttrib\">Extra connection attributes when using Oracle as a source for AWS DMS</a> and <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Oracle.ConnectionAttrib\"> Extra connection attributes when using Oracle as a target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/SecretString"
            },
            {
              "description": "The password to be used to login to the endpoint database."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The port used by the endpoint database."
            }
          ]
        },
        "PostgreSQLSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/PostgreSQLSettings"
            },
            {
              "description": "Settings in JSON format for the source and target PostgreSQL endpoint. For information about other available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.ConnectionAttrib\">Extra connection attributes when using PostgreSQL as a source for AWS DMS</a> and <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.PostgreSQL.ConnectionAttrib\"> Extra connection attributes when using PostgreSQL as a target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "RedshiftSettings": {
          "$ref": "#/definitions/RedshiftSettings"
        },
        "S3Settings": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Settings"
            },
            {
              "description": "Settings in JSON format for the target Amazon S3 endpoint. For more information about the available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring\">Extra Connection Attributes When Using Amazon S3 as a Target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "ServerName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the server where the endpoint database resides."
            }
          ]
        },
        "ServiceAccessRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The Amazon Resource Name (ARN) for the service access role you want to use to modify the endpoint. "
            }
          ]
        },
        "SslMode": {
          "allOf": [
            {
              "$ref": "#/definitions/DmsSslModeValue"
            },
            {
              "description": "The SSL mode used to connect to the endpoint. The default value is <code>none</code>."
            }
          ]
        },
        "SybaseSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/SybaseSettings"
            },
            {
              "description": "Settings in JSON format for the source and target SAP ASE endpoint. For information about other available settings, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.SAP.ConnectionAttrib\">Extra connection attributes when using SAP ASE as a source for AWS DMS</a> and <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.SAP.ConnectionAttrib\">Extra connection attributes when using SAP ASE as a target for AWS DMS</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The user name to be used to login to the endpoint database."
            }
          ]
        }
      },
      "required": [
        "EndpointArn"
      ],
      "title": "ModifyEndpointMessage",
      "type": "object"
    },
    "ModifyEndpointResponse": {
      "description": "<p/>",
      "example": {
        "Endpoint": {}
      },
      "properties": {
        "Endpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/Endpoint"
            },
            {
              "description": "The modified endpoint."
            }
          ]
        }
      },
      "type": "object"
    },
    "ModifyEventSubscriptionMessage": {
      "description": "<p/>",
      "properties": {
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": " A Boolean value; set to <b>true</b> to activate the subscription. "
            }
          ]
        },
        "EventCategories": {
          "allOf": [
            {
              "$ref": "#/definitions/EventCategoriesList"
            },
            {
              "description": " A list of event categories for a source type that you want to subscribe to. Use the <code>DescribeEventCategories</code> action to see a list of event categories. "
            }
          ]
        },
        "SnsTopicArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it."
            }
          ]
        },
        "SourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p> The type of AWS DMS resource that generates the events you want to subscribe to. </p> <p>Valid values: replication-instance | replication-task</p>"
            }
          ]
        },
        "SubscriptionName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the AWS DMS event notification subscription to be modified."
            }
          ]
        }
      },
      "required": [
        "SubscriptionName"
      ],
      "title": "ModifyEventSubscriptionMessage",
      "type": "object"
    },
    "ModifyEventSubscriptionResponse": {
      "description": "<p/>",
      "properties": {
        "EventSubscription": {
          "allOf": [
            {
              "$ref": "#/definitions/EventSubscription"
            },
            {
              "description": "The modified event subscription."
            }
          ]
        }
      },
      "type": "object"
    },
    "ModifyReplicationInstanceMessage": {
      "description": "<p/>",
      "properties": {
        "AllocatedStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The amount of storage (in gigabytes) to be allocated for the replication instance."
            }
          ]
        },
        "AllowMajorVersionUpgrade": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage, and the change is asynchronously applied as soon as possible.</p> <p>This parameter must be set to <code>true</code> when specifying a value for the <code>EngineVersion</code> parameter that is a different major version than the replication instance's current version.</p>"
            }
          ]
        },
        "ApplyImmediately": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether the changes should be applied immediately or during the next maintenance window."
            }
          ]
        },
        "AutoMinorVersionUpgrade": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "<p>A value that indicates that minor version upgrades are applied automatically to the replication instance during the maintenance window. Changing this parameter doesn't result in an outage, except in the case dsecribed following. The change is asynchronously applied as soon as possible. </p> <p>An outage does result if these factors apply: </p> <ul> <li> <p>This parameter is set to <code>true</code> during the maintenance window.</p> </li> <li> <p>A newer minor version is available. </p> </li> <li> <p>AWS DMS has enabled automatic patching for the given engine version. </p> </li> </ul>"
            }
          ]
        },
        "EngineVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The engine version number of the replication instance.</p> <p>When modifying a major engine version of an instance, also set <code>AllowMajorVersionUpgrade</code> to <code>true</code>.</p>"
            }
          ]
        },
        "MultiAZ": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": " Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. "
            }
          ]
        },
        "PreferredMaintenanceWindow": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The weekly time range (in UTC) during which system maintenance can occur, which might result in an outage. Changing this parameter does not result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.</p> <p>Default: Uses existing setting</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes</p>"
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication instance."
            }
          ]
        },
        "ReplicationInstanceClass": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The compute and memory capacity of the replication instance as defined for the specified replication instance class. For example to specify the instance class dms.c4.large, set this parameter to <code>\"dms.c4.large\"</code>.</p> <p>For more information on the settings and capacities for the available replication instance classes, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth\"> Selecting the right AWS DMS replication instance for your migration</a>. </p>"
            }
          ]
        },
        "ReplicationInstanceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The replication instance identifier. This parameter is stored as a lowercase string."
            }
          ]
        },
        "VpcSecurityGroupIds": {
          "allOf": [
            {
              "$ref": "#/definitions/VpcSecurityGroupIdList"
            },
            {
              "description": " Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance. "
            }
          ]
        }
      },
      "required": [
        "ReplicationInstanceArn"
      ],
      "title": "ModifyReplicationInstanceMessage",
      "type": "object"
    },
    "ModifyReplicationInstanceResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationInstance": {
          "AllocatedStorage": 5,
          "AutoMinorVersionUpgrade": true,
          "EngineVersion": "1.5.0",
          "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
          "PendingModifiedValues": {},
          "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
          "PubliclyAccessible": true,
          "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
          "ReplicationInstanceClass": "dms.t2.micro",
          "ReplicationInstanceIdentifier": "test-rep-1",
          "ReplicationInstanceStatus": "available",
          "ReplicationSubnetGroup": {
            "ReplicationSubnetGroupDescription": "default",
            "ReplicationSubnetGroupIdentifier": "default",
            "SubnetGroupStatus": "Complete",
            "Subnets": [
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1d"
                },
                "SubnetIdentifier": "subnet-f6dd91af",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1b"
                },
                "SubnetIdentifier": "subnet-3605751d",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1c"
                },
                "SubnetIdentifier": "subnet-c2daefb5",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1e"
                },
                "SubnetIdentifier": "subnet-85e90cb8",
                "SubnetStatus": "Active"
              }
            ],
            "VpcId": "vpc-6741a603"
          }
        }
      },
      "properties": {
        "ReplicationInstance": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationInstance"
            },
            {
              "description": "The modified replication instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "ModifyReplicationSubnetGroupMessage": {
      "description": "<p/>",
      "properties": {
        "ReplicationSubnetGroupDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A description for the replication instance subnet group."
            }
          ]
        },
        "ReplicationSubnetGroupIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the replication instance subnet group."
            }
          ]
        },
        "SubnetIds": {
          "allOf": [
            {
              "$ref": "#/definitions/SubnetIdentifierList"
            },
            {
              "description": "A list of subnet IDs."
            }
          ]
        }
      },
      "required": [
        "ReplicationSubnetGroupIdentifier",
        "SubnetIds"
      ],
      "title": "ModifyReplicationSubnetGroupMessage",
      "type": "object"
    },
    "ModifyReplicationSubnetGroupResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationSubnetGroup": {}
      },
      "properties": {
        "ReplicationSubnetGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationSubnetGroup"
            },
            {
              "description": "The modified replication subnet group."
            }
          ]
        }
      },
      "type": "object"
    },
    "ModifyReplicationTaskMessage": {
      "description": "<p/>",
      "properties": {
        "CdcStartPosition": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p> <note> <p>When you use this task setting with a source PostgreSQL database, a logical replication slot should already be created and associated with the source endpoint. You can verify this by setting the <code>slotName</code> extra connection attribute to the name of this logical replication slot. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.html#CHAP_Source.PostgreSQL.ConnectionAttrib\">Extra Connection Attributes When Using PostgreSQL as a Source for AWS DMS</a>.</p> </note>"
            }
          ]
        },
        "CdcStartTime": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "<p>Indicates the start time for a change data capture (CDC) operation. Use either CdcStartTime or CdcStartPosition to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p>Timestamp Example: --cdc-start-time “2018-03-08T12:12:12”</p>"
            }
          ]
        },
        "CdcStopPosition": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:2018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 2018-02-09T12:12:12 “</p>"
            }
          ]
        },
        "MigrationType": {
          "allOf": [
            {
              "$ref": "#/definitions/MigrationTypeValue"
            },
            {
              "description": "The migration type. Valid values: <code>full-load</code> | <code>cdc</code> | <code>full-load-and-cdc</code> "
            }
          ]
        },
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication task."
            }
          ]
        },
        "ReplicationTaskIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1-255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>"
            }
          ]
        },
        "ReplicationTaskSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "JSON file that contains settings for the task, such as task metadata settings."
            }
          ]
        },
        "TableMappings": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "When using the AWS CLI or boto3, provide the path of the JSON file that contains the table mappings. Precede the path with <code>file://</code>. When working with the DMS API, provide the JSON as the parameter value, for example: <code>--table-mappings file://mappingfile.json</code> "
            }
          ]
        },
        "TaskData": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Supplemental information that the task requires to migrate the data for certain source and target endpoints. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.TaskData.html\">Specifying Supplemental Data for Task Settings</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        }
      },
      "required": [
        "ReplicationTaskArn"
      ],
      "title": "ModifyReplicationTaskMessage",
      "type": "object"
    },
    "ModifyReplicationTaskResponse": {
      "description": "<p/>",
      "properties": {
        "ReplicationTask": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTask"
            },
            {
              "description": "The replication task that was modified."
            }
          ]
        }
      },
      "type": "object"
    },
    "MongoDbSettings": {
      "description": "Provides information that defines a MongoDB endpoint.",
      "properties": {
        "AuthMechanism": {
          "allOf": [
            {
              "$ref": "#/definitions/AuthMechanismValue"
            },
            {
              "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>For the default value, in MongoDB version 2.x, <code>\"default\"</code> is <code>\"mongodb_cr\"</code>. For MongoDB version 3.x or later, <code>\"default\"</code> is <code>\"scram_sha_1\"</code>. This setting isn't used when <code>AuthType</code> is set to <code>\"no\"</code>.</p>"
            }
          ]
        },
        "AuthSource": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p> The MongoDB database name. This setting isn't used when <code>AuthType</code> is set to <code>\"no\"</code>. </p> <p>The default is <code>\"admin\"</code>.</p>"
            }
          ]
        },
        "AuthType": {
          "allOf": [
            {
              "$ref": "#/definitions/AuthTypeValue"
            },
            {
              "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>When when set to <code>\"no\"</code>, user name and password parameters are not used and can be empty. </p>"
            }
          ]
        },
        "DatabaseName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The database name on the MongoDB source endpoint. "
            }
          ]
        },
        "DocsToInvestigate": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this setting when <code>NestingLevel</code> is set to <code>\"one\"</code>. </p> <p>Must be a positive value greater than <code>0</code>. Default value is <code>1000</code>.</p>"
            }
          ]
        },
        "ExtractDocId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p> Specifies the document ID. Use this setting when <code>NestingLevel</code> is set to <code>\"none\"</code>. </p> <p>Default value is <code>\"false\"</code>. </p>"
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The AWS KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region."
            }
          ]
        },
        "NestingLevel": {
          "allOf": [
            {
              "$ref": "#/definitions/NestingLevelValue"
            },
            {
              "description": "<p> Specifies either document or table mode. </p> <p>Default value is <code>\"none\"</code>. Specify <code>\"none\"</code> to use document mode. Specify <code>\"one\"</code> to use table mode.</p>"
            }
          ]
        },
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/SecretString"
            },
            {
              "description": " The password for the user account you use to access the MongoDB source endpoint. "
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": " The port value for the MongoDB source endpoint. "
            }
          ]
        },
        "ServerName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The name of the server on the MongoDB source endpoint. "
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The user name you use to access the MongoDB source endpoint. "
            }
          ]
        }
      },
      "type": "object"
    },
    "MoveReplicationTaskMessage": {
      "description": "<p/>",
      "properties": {
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the task that you want to move."
            }
          ]
        },
        "TargetReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The ARN of the replication instance where you want to move the task to."
            }
          ]
        }
      },
      "required": [
        "ReplicationTaskArn",
        "TargetReplicationInstanceArn"
      ],
      "title": "MoveReplicationTaskMessage",
      "type": "object"
    },
    "MoveReplicationTaskResponse": {
      "description": "<p/>",
      "properties": {
        "ReplicationTask": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTask"
            },
            {
              "description": "The replication task that was moved."
            }
          ]
        }
      },
      "type": "object"
    },
    "MySQLSettings": {
      "description": "Provides information that defines a MySQL endpoint.",
      "properties": {
        "AfterConnectScript": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Specifies a script to run immediately after AWS DMS connects to the endpoint. The migration task continues running regardless if the SQL statement succeeds or fails."
            }
          ]
        },
        "DatabaseName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Database name for the endpoint."
            }
          ]
        },
        "EventsPollInterval": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p>Specifies how often to check the binary log for new changes/events when the database is idle.</p> <p>Example: <code>eventsPollInterval=5;</code> </p> <p>In the example, AWS DMS checks for changes in the binary logs every five seconds.</p>"
            }
          ]
        },
        "MaxFileSize": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p>Specifies the maximum size (in KB) of any .csv file used to transfer data to a MySQL-compatible database.</p> <p>Example: <code>maxFileSize=512</code> </p>"
            }
          ]
        },
        "ParallelLoadThreads": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p>Improves performance when loading data into the MySQLcompatible target database. Specifies how many threads to use to load the data into the MySQL-compatible target database. Setting a large number of threads can have an adverse effect on database performance, because a separate connection is required for each thread.</p> <p>Example: <code>parallelLoadThreads=1</code> </p>"
            }
          ]
        },
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/SecretString"
            },
            {
              "description": "Endpoint connection password."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "Endpoint TCP port."
            }
          ]
        },
        "ServerName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Fully qualified domain name of the endpoint."
            }
          ]
        },
        "ServerTimezone": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Specifies the time zone for the source MySQL database.</p> <p>Example: <code>serverTimezone=US/Pacific;</code> </p> <p>Note: Do not enclose time zones in single quotes.</p>"
            }
          ]
        },
        "TargetDbType": {
          "allOf": [
            {
              "$ref": "#/definitions/TargetDbType"
            },
            {
              "description": "<p>Specifies where to migrate source tables on the target, either to a single database or multiple databases.</p> <p>Example: <code>targetDbType=MULTIPLE_DATABASES</code> </p>"
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Endpoint connection user name."
            }
          ]
        }
      },
      "type": "object"
    },
    "NeptuneSettings": {
      "description": "Provides information that defines an Amazon Neptune endpoint.",
      "properties": {
        "ErrorRetryDuration": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The number of milliseconds for AWS DMS to wait to retry a bulk-load of migrated graph data to the Neptune target database before raising an error. The default is 250."
            }
          ]
        },
        "IamAuthEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "If you want AWS Identity and Access Management (IAM) authorization enabled for this endpoint, set this parameter to <code>true</code>. Then attach the appropriate IAM policy document to your service role specified by <code>ServiceAccessRoleArn</code>. The default is <code>false</code>."
            }
          ]
        },
        "MaxFileSize": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The maximum size in kilobytes of migrated graph data stored in a .csv file before AWS DMS bulk-loads the data to the Neptune target database. The default is 1,048,576 KB. If the bulk load is successful, AWS DMS clears the bucket, ready to store the next batch of migrated graph data."
            }
          ]
        },
        "MaxRetryCount": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The number of times for AWS DMS to retry a bulk load of migrated graph data to the Neptune target database before raising an error. The default is 5."
            }
          ]
        },
        "S3BucketFolder": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A folder path where you want AWS DMS to store migrated graph data in the S3 bucket specified by <code>S3BucketName</code> "
            }
          ]
        },
        "S3BucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the Amazon S3 bucket where AWS DMS can temporarily store migrated graph data in .csv files before bulk-loading it to the Neptune target database. AWS DMS maps the SQL source data to graph data before storing it in these .csv files."
            }
          ]
        },
        "ServiceAccessRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the service role that you created for the Neptune target endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Neptune.html#CHAP_Target.Neptune.ServiceRole\">Creating an IAM Service Role for Accessing Amazon Neptune as a Target</a> in the <i>AWS Database Migration Service User Guide. </i> "
            }
          ]
        }
      },
      "required": [
        "S3BucketName",
        "S3BucketFolder"
      ],
      "type": "object"
    },
    "NestingLevelValue": {
      "enum": [
        "none",
        "one"
      ],
      "type": "string"
    },
    "OracleSettings": {
      "description": "Provides information that defines an Oracle endpoint.",
      "properties": {
        "AccessAlternateDirectly": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Set this attribute to <code>false</code> in order to use the Binary Reader to capture change data for an Amazon RDS for Oracle as the source. This tells the DMS instance to not access redo logs through any specified path prefix replacement using direct file access."
            }
          ]
        },
        "AddSupplementalLogging": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "<p>Set this attribute to set up table-level supplemental logging for the Oracle database. This attribute enables PRIMARY KEY supplemental logging on all tables selected for a migration task.</p> <p>If you use this option, you still need to enable database-level supplemental logging.</p>"
            }
          ]
        },
        "AdditionalArchivedLogDestId": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "Set this attribute with <code>archivedLogDestId</code> in a primary/ standby setup. This attribute is useful in the case of a switchover. In this case, AWS DMS needs to know which destination to get archive redo logs from to read changes. This need arises because the previous primary instance is now a standby instance after switchover."
            }
          ]
        },
        "AllowSelectNestedTables": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Set this attribute to <code>true</code> to enable replication of Oracle tables containing columns that are nested tables or defined types."
            }
          ]
        },
        "ArchivedLogDestId": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "Specifies the destination of the archived redo logs. The value should be the same as the DEST_ID number in the v$archived_log table. When working with multiple log destinations (DEST_ID), we recommend that you to specify an archived redo logs location identifier. Doing this improves performance by ensuring that the correct logs are accessed from the outset."
            }
          ]
        },
        "ArchivedLogsOnly": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "When this field is set to <code>Y</code>, AWS DMS only accesses the archived redo logs. If the archived redo logs are stored on Oracle ASM only, the AWS DMS user account needs to be granted ASM privileges."
            }
          ]
        },
        "AsmPassword": {
          "allOf": [
            {
              "$ref": "#/definitions/SecretString"
            },
            {
              "description": "For an Oracle source endpoint, your Oracle Automatic Storage Management (ASM) password. You can set this value from the <code> <i>asm_user_password</i> </code> value. You set this value as part of the comma-separated value that you set to the <code>Password</code> request parameter when you create the endpoint to access transaction logs using Binary Reader. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.Oracle.html#dms/latest/userguide/CHAP_Source.Oracle.html#CHAP_Source.Oracle.CDC.Configuration\">Configuration for change data capture (CDC) on an Oracle source database</a>."
            }
          ]
        },
        "AsmServer": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "For an Oracle source endpoint, your ASM server address. You can set this value from the <code>asm_server</code> value. You set <code>asm_server</code> as part of the extra connection attribute string to access an Oracle server with Binary Reader that uses ASM. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.Oracle.html#dms/latest/userguide/CHAP_Source.Oracle.html#CHAP_Source.Oracle.CDC.Configuration\">Configuration for change data capture (CDC) on an Oracle source database</a>."
            }
          ]
        },
        "AsmUser": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "For an Oracle source endpoint, your ASM user name. You can set this value from the <code>asm_user</code> value. You set <code>asm_user</code> as part of the extra connection attribute string to access an Oracle server with Binary Reader that uses ASM. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.Oracle.html#dms/latest/userguide/CHAP_Source.Oracle.html#CHAP_Source.Oracle.CDC.Configuration\">Configuration for change data capture (CDC) on an Oracle source database</a>."
            }
          ]
        },
        "CharLengthSemantics": {
          "allOf": [
            {
              "$ref": "#/definitions/CharLengthSemantics"
            },
            {
              "description": "<p>Specifies whether the length of a character column is in bytes or in characters. To indicate that the character column length is in characters, set this attribute to <code>CHAR</code>. Otherwise, the character column length is in bytes.</p> <p>Example: <code>charLengthSemantics=CHAR;</code> </p>"
            }
          ]
        },
        "DatabaseName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Database name for the endpoint."
            }
          ]
        },
        "DirectPathNoLog": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "When set to <code>true</code>, this attribute helps to increase the commit rate on the Oracle target database by writing directly to tables and not writing a trail to database logs."
            }
          ]
        },
        "DirectPathParallelLoad": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "When set to <code>true</code>, this attribute specifies a parallel load when <code>useDirectPathFullLoad</code> is set to <code>Y</code>. This attribute also only applies when you use the AWS DMS parallel load feature. Note that the target table cannot have any constraints or indexes."
            }
          ]
        },
        "EnableHomogenousTablespace": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Set this attribute to enable homogenous tablespace replication and create existing tables or indexes under the same tablespace on the target."
            }
          ]
        },
        "FailTasksOnLobTruncation": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "<p>When set to <code>true</code>, this attribute causes a task to fail if the actual size of an LOB column is greater than the specified <code>LobMaxSize</code>.</p> <p>If a task is set to limited LOB mode and this option is set to <code>true</code>, the task fails instead of truncating the LOB data.</p>"
            }
          ]
        },
        "NumberDatatypeScale": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p>Specifies the number scale. You can select a scale up to 38, or you can select FLOAT. By default, the NUMBER data type is converted to precision 38, scale 10.</p> <p>Example: <code>numberDataTypeScale=12</code> </p>"
            }
          ]
        },
        "OraclePathPrefix": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Set this string attribute to the required value in order to use the Binary Reader to capture change data for an Amazon RDS for Oracle as the source. This value specifies the default Oracle root used to access the redo logs."
            }
          ]
        },
        "ParallelAsmReadThreads": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "Set this attribute to change the number of threads that DMS configures to perform a Change Data Capture (CDC) load using Oracle Automatic Storage Management (ASM). You can specify an integer value between 2 (the default) and 8 (the maximum). Use this attribute together with the <code>readAheadBlocks</code> attribute."
            }
          ]
        },
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/SecretString"
            },
            {
              "description": "Endpoint connection password."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "Endpoint TCP port."
            }
          ]
        },
        "ReadAheadBlocks": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "Set this attribute to change the number of read-ahead blocks that DMS configures to perform a Change Data Capture (CDC) load using Oracle Automatic Storage Management (ASM). You can specify an integer value between 1000 (the default) and 200,000 (the maximum)."
            }
          ]
        },
        "ReadTableSpaceName": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "When set to <code>true</code>, this attribute supports tablespace replication."
            }
          ]
        },
        "ReplacePathPrefix": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Set this attribute to true in order to use the Binary Reader to capture change data for an Amazon RDS for Oracle as the source. This setting tells DMS instance to replace the default Oracle root with the specified <code>usePathPrefix</code> setting to access the redo logs."
            }
          ]
        },
        "RetryInterval": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p>Specifies the number of seconds that the system waits before resending a query.</p> <p>Example: <code>retryInterval=6;</code> </p>"
            }
          ]
        },
        "SecurityDbEncryption": {
          "allOf": [
            {
              "$ref": "#/definitions/SecretString"
            },
            {
              "description": "For an Oracle source endpoint, the transparent data encryption (TDE) password required by AWM DMS to access Oracle redo logs encrypted by TDE using Binary Reader. It is also the <code> <i>TDE_Password</i> </code> part of the comma-separated value you set to the <code>Password</code> request parameter when you create the endpoint. The <code>SecurityDbEncryptian</code> setting is related to this <code>SecurityDbEncryptionName</code> setting. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.Oracle.html#CHAP_Source.Oracle.Encryption\"> Supported encryption methods for using Oracle as a source for AWS DMS</a> in the <i>AWS Database Migration Service User Guide</i>. "
            }
          ]
        },
        "SecurityDbEncryptionName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "For an Oracle source endpoint, the name of a key used for the transparent data encryption (TDE) of the columns and tablespaces in an Oracle source database that is encrypted using TDE. The key value is the value of the <code>SecurityDbEncryption</code> setting. For more information on setting the key name value of <code>SecurityDbEncryptionName</code>, see the information and example for setting the <code>securityDbEncryptionName</code> extra connection attribute in <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.Oracle.html#CHAP_Source.Oracle.Encryption\"> Supported encryption methods for using Oracle as a source for AWS DMS</a> in the <i>AWS Database Migration Service User Guide</i>."
            }
          ]
        },
        "ServerName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Fully qualified domain name of the endpoint."
            }
          ]
        },
        "UseAlternateFolderForOnline": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "Set this attribute to <code>true</code> in order to use the Binary Reader to capture change data for an Amazon RDS for Oracle as the source. This tells the DMS instance to use any specified prefix replacement to access all online redo logs."
            }
          ]
        },
        "UsePathPrefix": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Set this string attribute to the required value in order to use the Binary Reader to capture change data for an Amazon RDS for Oracle as the source. This value specifies the path prefix used to replace the default Oracle root to access the redo logs."
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Endpoint connection user name."
            }
          ]
        }
      },
      "type": "object"
    },
    "OrderableReplicationInstance": {
      "description": "In response to the <code>DescribeOrderableReplicationInstances</code> operation, this object describes an available replication instance. This description includes the replication instance's type, engine version, and allocated storage.",
      "properties": {
        "AvailabilityZones": {
          "allOf": [
            {
              "$ref": "#/definitions/AvailabilityZonesList"
            },
            {
              "description": "List of Availability Zones for this replication instance."
            }
          ]
        },
        "DefaultAllocatedStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The default amount of storage (in gigabytes) that is allocated for the replication instance."
            }
          ]
        },
        "EngineVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The version of the replication engine."
            }
          ]
        },
        "IncludedAllocatedStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The amount of storage (in gigabytes) that is allocated for the replication instance."
            }
          ]
        },
        "MaxAllocatedStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The minimum amount of storage (in gigabytes) that can be allocated for the replication instance."
            }
          ]
        },
        "MinAllocatedStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The minimum amount of storage (in gigabytes) that can be allocated for the replication instance."
            }
          ]
        },
        "ReleaseStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/ReleaseStatusValues"
            },
            {
              "description": "<p>The value returned when the specified <code>EngineVersion</code> of the replication instance is in Beta or test mode. This indicates some features might not work as expected.</p> <note> <p>AWS DMS supports the <code>ReleaseStatus</code> parameter in versions 3.1.4 and later.</p> </note>"
            }
          ]
        },
        "ReplicationInstanceClass": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The compute and memory capacity of the replication instance as defined for the specified replication instance class. For example to specify the instance class dms.c4.large, set this parameter to <code>\"dms.c4.large\"</code>.</p> <p>For more information on the settings and capacities for the available replication instance classes, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth\"> Selecting the right AWS DMS replication instance for your migration</a>. </p>"
            }
          ]
        },
        "StorageType": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The type of storage used by the replication instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "OrderableReplicationInstanceList": {
      "items": {
        "$ref": "#/definitions/OrderableReplicationInstance"
      },
      "type": "array"
    },
    "ParquetVersionValue": {
      "enum": [
        "parquet-1-0",
        "parquet-2-0"
      ],
      "type": "string"
    },
    "PendingMaintenanceAction": {
      "description": "Describes a maintenance action pending for an AWS DMS resource, including when and how it will be applied. This data type is a response element to the <code>DescribePendingMaintenanceActions</code> operation.",
      "properties": {
        "Action": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The type of pending maintenance action that is available for the resource."
            }
          ]
        },
        "AutoAppliedAfterDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The date of the maintenance window when the action is to be applied. The maintenance action is applied to the resource during its first maintenance window after this date. If this date is specified, any <code>next-maintenance</code> opt-in requests are ignored."
            }
          ]
        },
        "CurrentApplyDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The effective date when the pending maintenance action will be applied to the resource. This date takes into account opt-in requests received from the <code>ApplyPendingMaintenanceAction</code> API operation, and also the <code>AutoAppliedAfterDate</code> and <code>ForcedApplyDate</code> parameter values. This value is blank if an opt-in request has not been received and nothing has been specified for <code>AutoAppliedAfterDate</code> or <code>ForcedApplyDate</code>."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A description providing more detail about the maintenance action."
            }
          ]
        },
        "ForcedApplyDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The date when the maintenance action will be automatically applied. The maintenance action is applied to the resource on this date regardless of the maintenance window for the resource. If this date is specified, any <code>immediate</code> opt-in requests are ignored."
            }
          ]
        },
        "OptInStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The type of opt-in request that has been received for the resource."
            }
          ]
        }
      },
      "type": "object"
    },
    "PendingMaintenanceActionDetails": {
      "items": {
        "$ref": "#/definitions/PendingMaintenanceAction"
      },
      "type": "array"
    },
    "PendingMaintenanceActions": {
      "items": {
        "$ref": "#/definitions/ResourcePendingMaintenanceActions"
      },
      "type": "array"
    },
    "PostgreSQLSettings": {
      "description": "Provides information that defines a PostgreSQL endpoint.",
      "properties": {
        "AfterConnectScript": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>For use with change data capture (CDC) only, this attribute has AWS DMS bypass foreign keys and user triggers to reduce the time it takes to bulk load data.</p> <p>Example: <code>afterConnectScript=SET session_replication_role='replica'</code> </p>"
            }
          ]
        },
        "CaptureDdls": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "<p>To capture DDL events, AWS DMS creates various artifacts in the PostgreSQL database when the task starts. You can later remove these artifacts.</p> <p>If this value is set to <code>N</code>, you don't have to create tables or triggers on the source database.</p>"
            }
          ]
        },
        "DatabaseName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Database name for the endpoint."
            }
          ]
        },
        "DdlArtifactsSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The schema in which the operational DDL database artifacts are created.</p> <p>Example: <code>ddlArtifactsSchema=xyzddlschema;</code> </p>"
            }
          ]
        },
        "ExecuteTimeout": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p>Sets the client statement timeout for the PostgreSQL instance, in seconds. The default value is 60 seconds.</p> <p>Example: <code>executeTimeout=100;</code> </p>"
            }
          ]
        },
        "FailTasksOnLobTruncation": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "<p>When set to <code>true</code>, this value causes a task to fail if the actual size of a LOB column is greater than the specified <code>LobMaxSize</code>.</p> <p>If task is set to Limited LOB mode and this option is set to true, the task fails instead of truncating the LOB data.</p>"
            }
          ]
        },
        "MaxFileSize": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p>Specifies the maximum size (in KB) of any .csv file used to transfer data to PostgreSQL.</p> <p>Example: <code>maxFileSize=512</code> </p>"
            }
          ]
        },
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/SecretString"
            },
            {
              "description": "Endpoint connection password."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "Endpoint TCP port."
            }
          ]
        },
        "ServerName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Fully qualified domain name of the endpoint."
            }
          ]
        },
        "SlotName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Sets the name of a previously created logical replication slot for a CDC load of the PostgreSQL source instance.</p> <p>When used with the AWS DMS API <code>CdcStartPosition</code> request parameter, this attribute also enables using native CDC start points.</p>"
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Endpoint connection user name."
            }
          ]
        }
      },
      "type": "object"
    },
    "RebootReplicationInstanceMessage": {
      "properties": {
        "ForceFailover": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "If this parameter is <code>true</code>, the reboot is conducted through a Multi-AZ failover. (If the instance isn't configured for Multi-AZ, then you can't specify <code>true</code>.)"
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication instance."
            }
          ]
        }
      },
      "required": [
        "ReplicationInstanceArn"
      ],
      "title": "RebootReplicationInstanceMessage",
      "type": "object"
    },
    "RebootReplicationInstanceResponse": {
      "properties": {
        "ReplicationInstance": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationInstance"
            },
            {
              "description": "The replication instance that is being rebooted. "
            }
          ]
        }
      },
      "type": "object"
    },
    "RedshiftSettings": {
      "description": "Provides information that defines an Amazon Redshift endpoint.",
      "properties": {
        "AcceptAnyDate": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "<p>A value that indicates to allow any date format, including invalid formats such as 00/00/00 00:00:00, to be loaded without generating an error. You can choose <code>true</code> or <code>false</code> (the default).</p> <p>This parameter applies only to TIMESTAMP and DATE columns. Always use ACCEPTANYDATE with the DATEFORMAT parameter. If the date format for the data doesn't match the DATEFORMAT specification, Amazon Redshift inserts a NULL value into that field. </p>"
            }
          ]
        },
        "AfterConnectScript": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Code to run after connecting. This parameter should contain the code itself, not the name of a file containing the code."
            }
          ]
        },
        "BucketFolder": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>An S3 folder where the comma-separated-value (.csv) files are stored before being uploaded to the target Redshift cluster. </p> <p>For full load mode, AWS DMS converts source records into .csv files and loads them to the <i>BucketFolder/TableID</i> path. AWS DMS uses the Redshift <code>COPY</code> command to upload the .csv files to the target table. The files are deleted once the <code>COPY</code> operation has finished. For more information, see <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/r_COPY.html\">Amazon Redshift Database Developer Guide</a> </p> <p>For change-data-capture (CDC) mode, AWS DMS creates a <i>NetChanges</i> table, and loads the .csv files to this <i>BucketFolder/NetChangesTableID</i> path.</p>"
            }
          ]
        },
        "BucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the intermediate S3 bucket used to store .csv files before uploading data to Redshift."
            }
          ]
        },
        "CaseSensitiveNames": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "If Amazon Redshift is configured to support case sensitive schema names, set <code>CaseSensitiveNames</code> to <code>true</code>. The default is <code>false</code>."
            }
          ]
        },
        "CompUpdate": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "If you set <code>CompUpdate</code> to <code>true</code> Amazon Redshift applies automatic compression if the table is empty. This applies even if the table columns already have encodings other than <code>RAW</code>. If you set <code>CompUpdate</code> to <code>false</code>, automatic compression is disabled and existing column encodings aren't changed. The default is <code>true</code>."
            }
          ]
        },
        "ConnectionTimeout": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "A value that sets the amount of time to wait (in milliseconds) before timing out, beginning from when you initially establish a connection."
            }
          ]
        },
        "DatabaseName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the Amazon Redshift data warehouse (service) that you are working with."
            }
          ]
        },
        "DateFormat": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The date format that you are using. Valid values are <code>auto</code> (case-sensitive), your date format string enclosed in quotes, or NULL. If this parameter is left unset (NULL), it defaults to a format of 'YYYY-MM-DD'. Using <code>auto</code> recognizes most strings, even some that aren't supported when you use a date format string. </p> <p>If your date and time values use formats different from each other, set this to <code>auto</code>. </p>"
            }
          ]
        },
        "EmptyAsNull": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "A value that specifies whether AWS DMS should migrate empty CHAR and VARCHAR fields as NULL. A value of <code>true</code> sets empty CHAR and VARCHAR fields to null. The default is <code>false</code>."
            }
          ]
        },
        "EncryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionModeValue"
            },
            {
              "description": "<p>The type of server-side encryption that you want to use for your data. This encryption type is part of the endpoint settings or the extra connections attributes for Amazon S3. You can choose either <code>SSE_S3</code> (the default) or <code>SSE_KMS</code>. </p> <note> <p>For the <code>ModifyEndpoint</code> operation, you can change the existing value of the <code>EncryptionMode</code> parameter from <code>SSE_KMS</code> to <code>SSE_S3</code>. But you can’t change the existing value from <code>SSE_S3</code> to <code>SSE_KMS</code>.</p> </note> <p>To use <code>SSE_S3</code>, create an AWS Identity and Access Management (IAM) role with a policy that allows <code>\"arn:aws:s3:::*\"</code> to use the following actions: <code>\"s3:PutObject\", \"s3:ListBucket\"</code> </p>"
            }
          ]
        },
        "ExplicitIds": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "This setting is only valid for a full-load migration task. Set <code>ExplicitIds</code> to <code>true</code> to have tables with <code>IDENTITY</code> columns override their auto-generated values with explicit values loaded from the source data files used to populate the tables. The default is <code>false</code>."
            }
          ]
        },
        "FileTransferUploadStreams": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p>The number of threads used to upload a single file. This parameter accepts a value from 1 through 64. It defaults to 10.</p> <p>The number of parallel streams used to upload a single .csv file to an S3 bucket using S3 Multipart Upload. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html\">Multipart upload overview</a>. </p> <p> <code>FileTransferUploadStreams</code> accepts a value from 1 through 64. It defaults to 10.</p>"
            }
          ]
        },
        "LoadTimeout": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The amount of time to wait (in milliseconds) before timing out of operations performed by AWS DMS on a Redshift cluster, such as Redshift COPY, INSERT, DELETE, and UPDATE."
            }
          ]
        },
        "MaxFileSize": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The maximum size (in KB) of any .csv file used to load data on an S3 bucket and transfer data to Amazon Redshift. It defaults to 1048576KB (1 GB)."
            }
          ]
        },
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/SecretString"
            },
            {
              "description": "The password for the user named in the <code>username</code> property."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The port number for Amazon Redshift. The default value is 5439."
            }
          ]
        },
        "RemoveQuotes": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "A value that specifies to remove surrounding quotation marks from strings in the incoming data. All characters within the quotation marks, including delimiters, are retained. Choose <code>true</code> to remove quotation marks. The default is <code>false</code>."
            }
          ]
        },
        "ReplaceChars": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A value that specifies to replaces the invalid characters specified in <code>ReplaceInvalidChars</code>, substituting the specified characters instead. The default is <code>\"?\"</code>."
            }
          ]
        },
        "ReplaceInvalidChars": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A list of characters that you want to replace. Use with <code>ReplaceChars</code>."
            }
          ]
        },
        "ServerName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the Amazon Redshift cluster you are using."
            }
          ]
        },
        "ServerSideEncryptionKmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The AWS KMS key ID. If you are using <code>SSE_KMS</code> for the <code>EncryptionMode</code>, provide this key ID. The key that you use needs an attached policy that enables IAM user permissions and allows use of the key."
            }
          ]
        },
        "ServiceAccessRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the IAM role that has access to the Amazon Redshift service."
            }
          ]
        },
        "TimeFormat": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The time format that you want to use. Valid values are <code>auto</code> (case-sensitive), <code>'timeformat_string'</code>, <code>'epochsecs'</code>, or <code>'epochmillisecs'</code>. It defaults to 10. Using <code>auto</code> recognizes most strings, even some that aren't supported when you use a time format string. </p> <p>If your date and time values use formats different from each other, set this parameter to <code>auto</code>. </p>"
            }
          ]
        },
        "TrimBlanks": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "A value that specifies to remove the trailing white space characters from a VARCHAR string. This parameter applies only to columns with a VARCHAR data type. Choose <code>true</code> to remove unneeded white space. The default is <code>false</code>."
            }
          ]
        },
        "TruncateColumns": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "A value that specifies to truncate data in columns to the appropriate number of characters, so that the data fits in the column. This parameter applies only to columns with a VARCHAR or CHAR data type, and rows with a size of 4 MB or less. Choose <code>true</code> to truncate data. The default is <code>false</code>."
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "An Amazon Redshift user name for a registered user."
            }
          ]
        },
        "WriteBufferSize": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The size (in KB) of the in-memory file write buffer used when generating .csv files on the local disk at the DMS replication instance. The default value is 1000 (buffer size is 1000KB)."
            }
          ]
        }
      },
      "type": "object"
    },
    "RefreshSchemasMessage": {
      "description": "<p/>",
      "properties": {
        "EndpointArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication instance."
            }
          ]
        }
      },
      "required": [
        "EndpointArn",
        "ReplicationInstanceArn"
      ],
      "title": "RefreshSchemasMessage",
      "type": "object"
    },
    "RefreshSchemasResponse": {
      "description": "<p/>",
      "example": {
        "RefreshSchemasStatus": {}
      },
      "properties": {
        "RefreshSchemasStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/RefreshSchemasStatus"
            },
            {
              "description": "The status of the refreshed schema."
            }
          ]
        }
      },
      "type": "object"
    },
    "RefreshSchemasStatus": {
      "description": "Provides information that describes status of a schema at an endpoint specified by the <code>DescribeRefreshSchemaStatus</code> operation.",
      "properties": {
        "EndpointArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
            }
          ]
        },
        "LastFailureMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The last failure message for the schema."
            }
          ]
        },
        "LastRefreshDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The date the schema was last refreshed."
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication instance."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/RefreshSchemasStatusTypeValue"
            },
            {
              "description": "The status of the schema."
            }
          ]
        }
      },
      "type": "object"
    },
    "RefreshSchemasStatusTypeValue": {
      "enum": [
        "successful",
        "failed",
        "refreshing"
      ],
      "type": "string"
    },
    "ReleaseStatusValues": {
      "enum": [
        "beta"
      ],
      "type": "string"
    },
    "ReloadOptionValue": {
      "enum": [
        "data-reload",
        "validate-only"
      ],
      "type": "string"
    },
    "ReloadTablesMessage": {
      "properties": {
        "ReloadOption": {
          "allOf": [
            {
              "$ref": "#/definitions/ReloadOptionValue"
            },
            {
              "description": "<p>Options for reload. Specify <code>data-reload</code> to reload the data and re-validate it if validation is enabled. Specify <code>validate-only</code> to re-validate the table. This option applies only when validation is enabled for the task. </p> <p>Valid values: data-reload, validate-only</p> <p>Default value is data-reload.</p>"
            }
          ]
        },
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication task. "
            }
          ]
        },
        "TablesToReload": {
          "allOf": [
            {
              "$ref": "#/definitions/TableListToReload"
            },
            {
              "description": "The name and schema of the table to be reloaded. "
            }
          ]
        }
      },
      "required": [
        "ReplicationTaskArn",
        "TablesToReload"
      ],
      "title": "ReloadTablesMessage",
      "type": "object"
    },
    "ReloadTablesResponse": {
      "properties": {
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication task. "
            }
          ]
        }
      },
      "type": "object"
    },
    "RemoveTagsFromResourceMessage": {
      "description": "Removes one or more tags from an AWS DMS resource.",
      "properties": {
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "An AWS DMS resource from which you want to remove tag(s). The value for this parameter is an Amazon Resource Name (ARN)."
            }
          ]
        },
        "TagKeys": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyList"
            },
            {
              "description": "The tag key (name) of the tag to be removed."
            }
          ]
        }
      },
      "required": [
        "ResourceArn",
        "TagKeys"
      ],
      "title": "RemoveTagsFromResourceMessage",
      "type": "object"
    },
    "RemoveTagsFromResourceResponse": {
      "description": "<p/>",
      "example": {},
      "properties": {},
      "type": "object"
    },
    "ReplicationEndpointTypeValue": {
      "enum": [
        "source",
        "target"
      ],
      "type": "string"
    },
    "ReplicationInstance": {
      "description": "Provides information that defines a replication instance.",
      "properties": {
        "AllocatedStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The amount of storage (in gigabytes) that is allocated for the replication instance."
            }
          ]
        },
        "AutoMinorVersionUpgrade": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Boolean value indicating if minor version upgrades will be automatically applied to the instance."
            }
          ]
        },
        "AvailabilityZone": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Availability Zone for the instance."
            }
          ]
        },
        "DnsNameServers": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The DNS name servers supported for the replication instance to access your on-premise source or target database."
            }
          ]
        },
        "EngineVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The engine version number of the replication instance.</p> <p>If an engine version number is not specified when a replication instance is created, the default is the latest engine version available.</p> <p>When modifying a major engine version of an instance, also set <code>AllowMajorVersionUpgrade</code> to <code>true</code>.</p>"
            }
          ]
        },
        "FreeUntil": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": " The expiration date of the free replication instance that is part of the Free DMS program. "
            }
          ]
        },
        "InstanceCreateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The time the replication instance was created."
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>An AWS KMS key identifier that is used to encrypt the data on the replication instance.</p> <p>If you don't specify a value for the <code>KmsKeyId</code> parameter, then AWS DMS uses your default encryption key.</p> <p>AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p>"
            }
          ]
        },
        "MultiAZ": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": " Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. "
            }
          ]
        },
        "PendingModifiedValues": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationPendingModifiedValues"
            },
            {
              "description": "The pending modification values."
            }
          ]
        },
        "PreferredMaintenanceWindow": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The maintenance window times for the replication instance. Any pending upgrades to the replication instance are performed during this time."
            }
          ]
        },
        "PubliclyAccessible": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. "
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication instance."
            }
          ]
        },
        "ReplicationInstanceClass": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The compute and memory capacity of the replication instance as defined for the specified replication instance class. It is a required parameter, although a defualt value is pre-selected in the DMS console.</p> <p>For more information on the settings and capacities for the available replication instance classes, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth\"> Selecting the right AWS DMS replication instance for your migration</a>. </p>"
            }
          ]
        },
        "ReplicationInstanceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The replication instance identifier is a required parameter. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1-63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>"
            }
          ]
        },
        "ReplicationInstancePrivateIpAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The private IP address of the replication instance.",
              "x-deprecated": true
            }
          ]
        },
        "ReplicationInstancePrivateIpAddresses": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationInstancePrivateIpAddressList"
            },
            {
              "description": "One or more private IP addresses for the replication instance."
            }
          ]
        },
        "ReplicationInstancePublicIpAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The public IP address of the replication instance.",
              "x-deprecated": true
            }
          ]
        },
        "ReplicationInstancePublicIpAddresses": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationInstancePublicIpAddressList"
            },
            {
              "description": "One or more public IP addresses for the replication instance."
            }
          ]
        },
        "ReplicationInstanceStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The status of the replication instance. The possible return values include:</p> <ul> <li> <p> <code>\"available\"</code> </p> </li> <li> <p> <code>\"creating\"</code> </p> </li> <li> <p> <code>\"deleted\"</code> </p> </li> <li> <p> <code>\"deleting\"</code> </p> </li> <li> <p> <code>\"failed\"</code> </p> </li> <li> <p> <code>\"modifying\"</code> </p> </li> <li> <p> <code>\"upgrading\"</code> </p> </li> <li> <p> <code>\"rebooting\"</code> </p> </li> <li> <p> <code>\"resetting-master-credentials\"</code> </p> </li> <li> <p> <code>\"storage-full\"</code> </p> </li> <li> <p> <code>\"incompatible-credentials\"</code> </p> </li> <li> <p> <code>\"incompatible-network\"</code> </p> </li> <li> <p> <code>\"maintenance\"</code> </p> </li> </ul>"
            }
          ]
        },
        "ReplicationSubnetGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationSubnetGroup"
            },
            {
              "description": "The subnet group for the replication instance."
            }
          ]
        },
        "SecondaryAvailabilityZone": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Availability Zone of the standby replication instance in a Multi-AZ deployment."
            }
          ]
        },
        "VpcSecurityGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/VpcSecurityGroupMembershipList"
            },
            {
              "description": "The VPC security group for the instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "ReplicationInstanceList": {
      "items": {
        "$ref": "#/definitions/ReplicationInstance"
      },
      "type": "array"
    },
    "ReplicationInstancePrivateIpAddressList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "ReplicationInstancePublicIpAddressList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "ReplicationInstanceTaskLog": {
      "description": "Contains metadata for a replication instance task log.",
      "properties": {
        "ReplicationInstanceTaskLogSize": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The size, in bytes, of the replication task log."
            }
          ]
        },
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication task."
            }
          ]
        },
        "ReplicationTaskName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the replication task."
            }
          ]
        }
      },
      "type": "object"
    },
    "ReplicationInstanceTaskLogsList": {
      "items": {
        "$ref": "#/definitions/ReplicationInstanceTaskLog"
      },
      "type": "array"
    },
    "ReplicationPendingModifiedValues": {
      "description": "Provides information about the values of pending modifications to a replication instance. This data type is an object of the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_ReplicationInstance.html\"> <code>ReplicationInstance</code> </a> user-defined data type. ",
      "properties": {
        "AllocatedStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The amount of storage (in gigabytes) that is allocated for the replication instance."
            }
          ]
        },
        "EngineVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The engine version number of the replication instance."
            }
          ]
        },
        "MultiAZ": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": " Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. "
            }
          ]
        },
        "ReplicationInstanceClass": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.</p> <p>For more information on the settings and capacities for the available replication instance classes, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth\"> Selecting the right AWS DMS replication instance for your migration</a>. </p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "ReplicationSubnetGroup": {
      "description": "Describes a subnet group in response to a request by the <code>DescribeReplicationSubnetGroups</code> operation.",
      "properties": {
        "ReplicationSubnetGroupDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A description for the replication subnet group."
            }
          ]
        },
        "ReplicationSubnetGroupIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The identifier of the replication instance subnet group."
            }
          ]
        },
        "SubnetGroupStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The status of the subnet group."
            }
          ]
        },
        "Subnets": {
          "allOf": [
            {
              "$ref": "#/definitions/SubnetList"
            },
            {
              "description": "The subnets that are in the subnet group."
            }
          ]
        },
        "VpcId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The ID of the VPC."
            }
          ]
        }
      },
      "type": "object"
    },
    "ReplicationSubnetGroupDoesNotCoverEnoughAZs": {},
    "ReplicationSubnetGroups": {
      "items": {
        "$ref": "#/definitions/ReplicationSubnetGroup"
      },
      "type": "array"
    },
    "ReplicationTask": {
      "description": "Provides information that describes a replication task created by the <code>CreateReplicationTask</code> operation.",
      "properties": {
        "CdcStartPosition": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either <code>CdcStartPosition</code> or <code>CdcStartTime</code> to specify when you want the CDC operation to start. Specifying both values results in an error.</p> <p>The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>"
            }
          ]
        },
        "CdcStopPosition": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:2018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 2018-02-09T12:12:12 “</p>"
            }
          ]
        },
        "LastFailureMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The last error (failure) message generated for the replication task."
            }
          ]
        },
        "MigrationType": {
          "allOf": [
            {
              "$ref": "#/definitions/MigrationTypeValue"
            },
            {
              "description": "The type of migration."
            }
          ]
        },
        "RecoveryCheckpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint."
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The ARN of the replication instance."
            }
          ]
        },
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication task."
            }
          ]
        },
        "ReplicationTaskCreationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The date the replication task was created."
            }
          ]
        },
        "ReplicationTaskIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1-255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>"
            }
          ]
        },
        "ReplicationTaskSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The settings for the replication task."
            }
          ]
        },
        "ReplicationTaskStartDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The date the replication task is scheduled to start."
            }
          ]
        },
        "ReplicationTaskStats": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTaskStats"
            },
            {
              "description": "The statistics for the task, including elapsed time, tables loaded, and table errors."
            }
          ]
        },
        "SourceEndpointArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) that uniquely identifies the endpoint."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The status of the replication task. This response parameter can return one of the following values:</p> <ul> <li> <p> <code>\"moving\"</code> – The task is being moved in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_MoveReplicationTask.html\"> <code>MoveReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"creating\"</code> – The task is being created in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_CreateReplicationTask.html\"> <code>CreateReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"deleting\"</code> – The task is being deleted in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_DeleteReplicationTask.html\"> <code>DeleteReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"failed\"</code> – The task failed to successfully complete the database migration in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTask.html\"> <code>StartReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"failed-move\"</code> – The task failed to move in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_MoveReplicationTask.html\"> <code>MoveReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"modifying\"</code> – The task definition is being modified in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_ModifyReplicationTask.html\"> <code>ModifyReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"ready\"</code> – The task is in a <code>ready</code> state where it can respond to other task operations, such as <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTask.html\"> <code>StartReplicationTask</code> </a> or <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_DeleteReplicationTask.html\"> <code>DeleteReplicationTask</code> </a>. </p> </li> <li> <p> <code>\"running\"</code> – The task is performing a database migration in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTask.html\"> <code>StartReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"starting\"</code> – The task is preparing to perform a database migration in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTask.html\"> <code>StartReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"stopped\"</code> – The task has stopped in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StopReplicationTask.html\"> <code>StopReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"stopping\"</code> – The task is preparing to stop in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StopReplicationTask.html\"> <code>StopReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"testing\"</code> – The database migration specified for this task is being tested in response to running either the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTaskAssessmentRun.html\"> <code>StartReplicationTaskAssessmentRun</code> </a> or the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTaskAssessment.html\"> <code>StartReplicationTaskAssessment</code> </a> operation.</p> <note> <p> <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTaskAssessmentRun.html\"> <code>StartReplicationTaskAssessmentRun</code> </a> is an improved premigration task assessment operation. The <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTaskAssessment.html\"> <code>StartReplicationTaskAssessment</code> </a> operation assesses data type compatibility only between the source and target database of a given migration task. In contrast, <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTaskAssessmentRun.html\"> <code>StartReplicationTaskAssessmentRun</code> </a> enables you to specify a variety of premigration task assessments in addition to data type compatibility. These assessments include ones for the validity of primary key definitions and likely issues with database migration performance, among others.</p> </note> </li> </ul>"
            }
          ]
        },
        "StopReason": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The reason the replication task was stopped. This response parameter can return one of the following values:</p> <ul> <li> <p> <code>\"STOP_REASON_FULL_LOAD_COMPLETED\"</code> – Full-load migration completed.</p> </li> <li> <p> <code>\"STOP_REASON_CACHED_CHANGES_APPLIED\"</code> – Change data capture (CDC) load completed.</p> </li> <li> <p> <code>\"STOP_REASON_CACHED_CHANGES_NOT_APPLIED\"</code> – In a full-load and CDC migration, the full load stopped as specified before starting the CDC migration.</p> </li> <li> <p> <code>\"STOP_REASON_SERVER_TIME\"</code> – The migration stopped at the specified server time.</p> </li> </ul>"
            }
          ]
        },
        "TableMappings": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Table mappings specified in the task."
            }
          ]
        },
        "TargetEndpointArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The ARN that uniquely identifies the endpoint."
            }
          ]
        },
        "TargetReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The ARN of the replication instance to which this task is moved in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_MoveReplicationTask.html\"> <code>MoveReplicationTask</code> </a> operation. Otherwise, this response parameter isn't a member of the <code>ReplicationTask</code> object."
            }
          ]
        },
        "TaskData": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Supplemental information that the task requires to migrate the data for certain source and target endpoints. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.TaskData.html\">Specifying Supplemental Data for Task Settings</a> in the <i>AWS Database Migration Service User Guide.</i> "
            }
          ]
        }
      },
      "type": "object"
    },
    "ReplicationTaskAssessmentResult": {
      "description": " The task assessment report in JSON format. ",
      "properties": {
        "AssessmentResults": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The task assessment results in JSON format. "
            }
          ]
        },
        "AssessmentResultsFile": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The file containing the results of the task assessment. "
            }
          ]
        },
        "AssessmentStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The status of the task assessment. "
            }
          ]
        },
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication task. "
            }
          ]
        },
        "ReplicationTaskIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The replication task identifier of the task on which the task assessment was run. "
            }
          ]
        },
        "ReplicationTaskLastAssessmentDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The date the task assessment was completed. "
            }
          ]
        },
        "S3ObjectUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The URL of the S3 object containing the task assessment results. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ReplicationTaskAssessmentResultList": {
      "items": {
        "$ref": "#/definitions/ReplicationTaskAssessmentResult"
      },
      "type": "array"
    },
    "ReplicationTaskAssessmentRun": {
      "description": "<p>Provides information that describes a premigration assessment run that you have started using the <code>StartReplicationTaskAssessmentRun</code> operation.</p> <p>Some of the information appears based on other operations that can return the <code>ReplicationTaskAssessmentRun</code> object.</p>",
      "properties": {
        "AssessmentProgress": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTaskAssessmentRunProgress"
            },
            {
              "description": "Indication of the completion progress for the individual assessments specified to run."
            }
          ]
        },
        "AssessmentRunName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Unique name of the assessment run."
            }
          ]
        },
        "LastFailureMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Last message generated by an individual assessment failure."
            }
          ]
        },
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "ARN of the migration task associated with this premigration assessment run."
            }
          ]
        },
        "ReplicationTaskAssessmentRunArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Amazon Resource Name (ARN) of this assessment run."
            }
          ]
        },
        "ReplicationTaskAssessmentRunCreationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "Date on which the assessment run was created using the <code>StartReplicationTaskAssessmentRun</code> operation."
            }
          ]
        },
        "ResultEncryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Encryption mode used to encrypt the assessment run results."
            }
          ]
        },
        "ResultKmsKeyArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "ARN of the AWS KMS encryption key used to encrypt the assessment run results."
            }
          ]
        },
        "ResultLocationBucket": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Amazon S3 bucket where AWS DMS stores the results of this assessment run."
            }
          ]
        },
        "ResultLocationFolder": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Folder in an Amazon S3 bucket where AWS DMS stores the results of this assessment run."
            }
          ]
        },
        "ServiceAccessRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "ARN of the service role used to start the assessment run using the <code>StartReplicationTaskAssessmentRun</code> operation."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Assessment run status. </p> <p>This status can have one of the following values:</p> <ul> <li> <p> <code>\"cancelling\"</code> – The assessment run was canceled by the <code>CancelReplicationTaskAssessmentRun</code> operation.</p> </li> <li> <p> <code>\"deleting\"</code> – The assessment run was deleted by the <code>DeleteReplicationTaskAssessmentRun</code> operation.</p> </li> <li> <p> <code>\"failed\"</code> – At least one individual assessment completed with a <code>failed</code> status.</p> </li> <li> <p> <code>\"error-provisioning\"</code> – An internal error occurred while resources were provisioned (during <code>provisioning</code> status).</p> </li> <li> <p> <code>\"error-executing\"</code> – An internal error occurred while individual assessments ran (during <code>running</code> status).</p> </li> <li> <p> <code>\"invalid state\"</code> – The assessment run is in an unknown state.</p> </li> <li> <p> <code>\"passed\"</code> – All individual assessments have completed, and none has a <code>failed</code> status.</p> </li> <li> <p> <code>\"provisioning\"</code> – Resources required to run individual assessments are being provisioned.</p> </li> <li> <p> <code>\"running\"</code> – Individual assessments are being run.</p> </li> <li> <p> <code>\"starting\"</code> – The assessment run is starting, but resources are not yet being provisioned for individual assessments.</p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "ReplicationTaskAssessmentRunList": {
      "items": {
        "$ref": "#/definitions/ReplicationTaskAssessmentRun"
      },
      "type": "array"
    },
    "ReplicationTaskAssessmentRunProgress": {
      "description": "The progress values reported by the <code>AssessmentProgress</code> response element.",
      "properties": {
        "IndividualAssessmentCompletedCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of individual assessments that have completed, successfully or not."
            }
          ]
        },
        "IndividualAssessmentCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of individual assessments that are specified to run."
            }
          ]
        }
      },
      "type": "object"
    },
    "ReplicationTaskIndividualAssessment": {
      "description": "Provides information that describes an individual assessment from a premigration assessment run.",
      "properties": {
        "IndividualAssessmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Name of this individual assessment."
            }
          ]
        },
        "ReplicationTaskAssessmentRunArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "ARN of the premigration assessment run that is created to run this individual assessment."
            }
          ]
        },
        "ReplicationTaskIndividualAssessmentArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Amazon Resource Name (ARN) of this individual assessment."
            }
          ]
        },
        "ReplicationTaskIndividualAssessmentStartDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "Date when this individual assessment was started as part of running the <code>StartReplicationTaskAssessmentRun</code> operation."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Individual assessment status.</p> <p>This status can have one of the following values:</p> <ul> <li> <p> <code>\"cancelled\"</code> </p> </li> <li> <p> <code>\"error\"</code> </p> </li> <li> <p> <code>\"failed\"</code> </p> </li> <li> <p> <code>\"passed\"</code> </p> </li> <li> <p> <code>\"pending\"</code> </p> </li> <li> <p> <code>\"running\"</code> </p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "ReplicationTaskIndividualAssessmentList": {
      "items": {
        "$ref": "#/definitions/ReplicationTaskIndividualAssessment"
      },
      "type": "array"
    },
    "ReplicationTaskList": {
      "items": {
        "$ref": "#/definitions/ReplicationTask"
      },
      "type": "array"
    },
    "ReplicationTaskStats": {
      "description": "In response to a request by the <code>DescribeReplicationTasks</code> operation, this object provides a collection of statistics about a replication task.",
      "properties": {
        "ElapsedTimeMillis": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The elapsed time of the task, in milliseconds."
            }
          ]
        },
        "FreshStartDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The date the replication task was started either with a fresh start or a target reload."
            }
          ]
        },
        "FullLoadFinishDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The date the replication task full load was completed."
            }
          ]
        },
        "FullLoadProgressPercent": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The percent complete for the full load migration task."
            }
          ]
        },
        "FullLoadStartDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The date the replication task full load was started."
            }
          ]
        },
        "StartDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The date the replication task was started either with a fresh start or a resume. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTask.html#DMS-StartReplicationTask-request-StartReplicationTaskType\">StartReplicationTaskType</a>."
            }
          ]
        },
        "StopDate": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The date the replication task was stopped."
            }
          ]
        },
        "TablesErrored": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of errors that have occurred during this task."
            }
          ]
        },
        "TablesLoaded": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of tables loaded for this task."
            }
          ]
        },
        "TablesLoading": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of tables currently loading for this task."
            }
          ]
        },
        "TablesQueued": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of tables queued for this task."
            }
          ]
        }
      },
      "type": "object"
    },
    "ResourceAlreadyExistsFault": {},
    "ResourceNotFoundFault": {},
    "ResourcePendingMaintenanceActions": {
      "description": "Identifies an AWS DMS resource and any pending actions for it.",
      "properties": {
        "PendingMaintenanceActionDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/PendingMaintenanceActionDetails"
            },
            {
              "description": "Detailed information about the pending maintenance action."
            }
          ]
        },
        "ResourceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the DMS resource that the pending maintenance action applies to. For information about creating an ARN, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Introduction.AWS.ARN.html\"> Constructing an Amazon Resource Name (ARN) for AWS DMS</a> in the DMS documentation."
            }
          ]
        }
      },
      "type": "object"
    },
    "ResourceQuotaExceededFault": {},
    "S3AccessDeniedFault": {},
    "S3ResourceNotFoundFault": {},
    "S3Settings": {
      "description": "Settings for exporting data to Amazon S3. ",
      "properties": {
        "BucketFolder": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path <code> <i>bucketFolder</i>/<i>schema_name</i>/<i>table_name</i>/</code>. If this parameter isn't specified, then the path used is <code> <i>schema_name</i>/<i>table_name</i>/</code>. "
            }
          ]
        },
        "BucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The name of the S3 bucket. "
            }
          ]
        },
        "CdcInsertsAndUpdates": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "<p>A value that enables a change data capture (CDC) load to write INSERT and UPDATE operations to .csv or .parquet (columnar storage) output files. The default setting is <code>false</code>, but when <code>CdcInsertsAndUpdates</code> is set to <code>true</code> or <code>y</code>, only INSERTs and UPDATEs from the source database are migrated to the .csv or .parquet file. </p> <p>For .csv file format only, how these INSERTs and UPDATEs are recorded depends on the value of the <code>IncludeOpForFullLoad</code> parameter. If <code>IncludeOpForFullLoad</code> is set to <code>true</code>, the first field of every CDC record is set to either <code>I</code> or <code>U</code> to indicate INSERT and UPDATE operations at the source. But if <code>IncludeOpForFullLoad</code> is set to <code>false</code>, CDC records are written without an indication of INSERT or UPDATE operations at the source. For more information about how these settings work together, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring.InsertOps\">Indicating Source DB Operations in Migrated S3 Data</a> in the <i>AWS Database Migration Service User Guide.</i>.</p> <note> <p>AWS DMS supports the use of the <code>CdcInsertsAndUpdates</code> parameter in versions 3.3.1 and later.</p> <p> <code>CdcInsertsOnly</code> and <code>CdcInsertsAndUpdates</code> can't both be set to <code>true</code> for the same endpoint. Set either <code>CdcInsertsOnly</code> or <code>CdcInsertsAndUpdates</code> to <code>true</code> for the same endpoint, but not both.</p> </note>"
            }
          ]
        },
        "CdcInsertsOnly": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "<p>A value that enables a change data capture (CDC) load to write only INSERT operations to .csv or columnar storage (.parquet) output files. By default (the <code>false</code> setting), the first field in a .csv or .parquet record contains the letter I (INSERT), U (UPDATE), or D (DELETE). These values indicate whether the row was inserted, updated, or deleted at the source database for a CDC load to the target.</p> <p>If <code>CdcInsertsOnly</code> is set to <code>true</code> or <code>y</code>, only INSERTs from the source database are migrated to the .csv or .parquet file. For .csv format only, how these INSERTs are recorded depends on the value of <code>IncludeOpForFullLoad</code>. If <code>IncludeOpForFullLoad</code> is set to <code>true</code>, the first field of every CDC record is set to I to indicate the INSERT operation at the source. If <code>IncludeOpForFullLoad</code> is set to <code>false</code>, every CDC record is written without a first field to indicate the INSERT operation at the source. For more information about how these settings work together, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring.InsertOps\">Indicating Source DB Operations in Migrated S3 Data</a> in the <i>AWS Database Migration Service User Guide.</i>.</p> <note> <p>AWS DMS supports the interaction described preceding between the <code>CdcInsertsOnly</code> and <code>IncludeOpForFullLoad</code> parameters in versions 3.1.4 and later. </p> <p> <code>CdcInsertsOnly</code> and <code>CdcInsertsAndUpdates</code> can't both be set to <code>true</code> for the same endpoint. Set either <code>CdcInsertsOnly</code> or <code>CdcInsertsAndUpdates</code> to <code>true</code> for the same endpoint, but not both.</p> </note>"
            }
          ]
        },
        "CdcPath": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Specifies the folder path of CDC files. For an S3 source, this setting is required if a task captures change data; otherwise, it's optional. If <code>CdcPath</code> is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. For an S3 target, if <code>CdcPath</code>is set, it is the folder path where data changes are replicated. If you set <a href=\"dms/latest/APIReference/API_S3Settings.html#DMS-Type-S3Settings-PreserveTransactions\"> <code>PreserveTransactions</code> </a> to <code>true</code>, AWS DMS verifies that you have set this parameter to a folder path on your S3 target where AWS DMS can save the transaction order for the CDC load. AWS DMS creates this CDC folder path in either your S3 target working directory or the S3 target location specified by <a href=\"dms/latest/APIReference/API_S3Settings.html#DMS-Type-S3Settings-BucketFolder\"> <code>BucketFolder</code> </a> and <a href=\"dms/latest/APIReference/API_S3Settings.html#DMS-Type-S3Settings-BucketName\"> <code>BucketName</code> </a>.</p> <p>For example, if you specify <code>CdcPath</code> as <code>MyChangedData</code>, and you specify <code>BucketName</code> as <code>MyTargetBucket</code> but do not specify <code>BucketFolder</code>, AWS DMS creates the CDC folder path following: <code>MyTargetBucket/MyChangedData</code>.</p> <p>If you specify the same <code>CdcPath</code>, and you specify <code>BucketName</code> as <code>MyTargetBucket</code> and <code>BucketFolder</code> as <code>MyTargetData</code>, AWS DMS creates the CDC folder path following: <code>MyTargetBucket/MyTargetData/MyChangedData</code>.</p> <note> <p>This setting is supported in AWS DMS versions 3.4.2 and later.</p> </note>"
            }
          ]
        },
        "CompressionType": {
          "allOf": [
            {
              "$ref": "#/definitions/CompressionTypeValue"
            },
            {
              "description": "An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Either set this parameter to NONE (the default) or don't use it to leave the files uncompressed. This parameter applies to both .csv and .parquet file formats. "
            }
          ]
        },
        "CsvDelimiter": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The delimiter used to separate columns in the .csv file for both source and target. The default is a comma. "
            }
          ]
        },
        "CsvNoSupValue": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>This setting only applies if your Amazon S3 output files during a change data capture (CDC) load are written in .csv format. If <a href=\"dms/latest/APIReference/API_S3Settings.html#DMS-Type-S3Settings-UseCsvNoSupValue\"> <code>UseCsvNoSupValue</code> </a> is set to true, specify a string value that you want AWS DMS to use for all columns not included in the supplemental log. If you do not specify a string value, AWS DMS uses the null value for these columns regardless of the <code>UseCsvNoSupValue</code> setting.</p> <note> <p>This setting is supported in AWS DMS versions 3.4.1 and later.</p> </note>"
            }
          ]
        },
        "CsvRowDelimiter": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The delimiter used to separate rows in the .csv file for both source and target. The default is a carriage return (<code>\\n</code>). "
            }
          ]
        },
        "DataFormat": {
          "allOf": [
            {
              "$ref": "#/definitions/DataFormatValue"
            },
            {
              "description": "<p>The format of the data that you want to use for output. You can choose one of the following: </p> <ul> <li> <p> <code>csv</code> : This is a row-based file format with comma-separated values (.csv). </p> </li> <li> <p> <code>parquet</code> : Apache Parquet (.parquet) is a columnar storage file format that features efficient compression and provides faster query response. </p> </li> </ul>"
            }
          ]
        },
        "DataPageSize": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The size of one data page in bytes. This parameter defaults to 1024 * 1024 bytes (1 MiB). This number is used for .parquet file format only. "
            }
          ]
        },
        "DatePartitionDelimiter": {
          "allOf": [
            {
              "$ref": "#/definitions/DatePartitionDelimiterValue"
            },
            {
              "description": "Specifies a date separating delimiter to use during folder partitioning. The default value is <code>SLASH</code>. Use this parameter when <code>DatePartitionedEnabled</code> is set to <code>true</code>."
            }
          ]
        },
        "DatePartitionEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "When set to <code>true</code>, this parameter partitions S3 bucket folders based on transaction commit dates. The default value is <code>false</code>. For more information about date-based folder partitoning, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.DatePartitioning\">Using date-based folder partitioning</a>."
            }
          ]
        },
        "DatePartitionSequence": {
          "allOf": [
            {
              "$ref": "#/definitions/DatePartitionSequenceValue"
            },
            {
              "description": "Identifies the sequence of the date format to use during folder partitioning. The default value is <code>YYYYMMDD</code>. Use this parameter when <code>DatePartitionedEnabled</code> is set to <code>true</code>."
            }
          ]
        },
        "DictPageSizeLimit": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "The maximum size of an encoded dictionary page of a column. If the dictionary page exceeds this, this column is stored using an encoding type of <code>PLAIN</code>. This parameter defaults to 1024 * 1024 bytes (1 MiB), the maximum size of a dictionary page before it reverts to <code>PLAIN</code> encoding. This size is used for .parquet file format only. "
            }
          ]
        },
        "EnableStatistics": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "A value that enables statistics for Parquet pages and row groups. Choose <code>true</code> to enable statistics, <code>false</code> to disable. Statistics include <code>NULL</code>, <code>DISTINCT</code>, <code>MAX</code>, and <code>MIN</code> values. This parameter defaults to <code>true</code>. This value is used for .parquet file format only."
            }
          ]
        },
        "EncodingType": {
          "allOf": [
            {
              "$ref": "#/definitions/EncodingTypeValue"
            },
            {
              "description": "<p>The type of encoding you are using: </p> <ul> <li> <p> <code>RLE_DICTIONARY</code> uses a combination of bit-packing and run-length encoding to store repeated values more efficiently. This is the default.</p> </li> <li> <p> <code>PLAIN</code> doesn't use encoding at all. Values are stored as they are.</p> </li> <li> <p> <code>PLAIN_DICTIONARY</code> builds a dictionary of the values encountered in a given column. The dictionary is stored in a dictionary page for each column chunk.</p> </li> </ul>"
            }
          ]
        },
        "EncryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionModeValue"
            },
            {
              "description": "<p>The type of server-side encryption that you want to use for your data. This encryption type is part of the endpoint settings or the extra connections attributes for Amazon S3. You can choose either <code>SSE_S3</code> (the default) or <code>SSE_KMS</code>. </p> <note> <p>For the <code>ModifyEndpoint</code> operation, you can change the existing value of the <code>EncryptionMode</code> parameter from <code>SSE_KMS</code> to <code>SSE_S3</code>. But you can’t change the existing value from <code>SSE_S3</code> to <code>SSE_KMS</code>.</p> </note> <p>To use <code>SSE_S3</code>, you need an AWS Identity and Access Management (IAM) role with permission to allow <code>\"arn:aws:s3:::dms-*\"</code> to use the following actions:</p> <ul> <li> <p> <code>s3:CreateBucket</code> </p> </li> <li> <p> <code>s3:ListBucket</code> </p> </li> <li> <p> <code>s3:DeleteBucket</code> </p> </li> <li> <p> <code>s3:GetBucketLocation</code> </p> </li> <li> <p> <code>s3:GetObject</code> </p> </li> <li> <p> <code>s3:PutObject</code> </p> </li> <li> <p> <code>s3:DeleteObject</code> </p> </li> <li> <p> <code>s3:GetObjectVersion</code> </p> </li> <li> <p> <code>s3:GetBucketPolicy</code> </p> </li> <li> <p> <code>s3:PutBucketPolicy</code> </p> </li> <li> <p> <code>s3:DeleteBucketPolicy</code> </p> </li> </ul>"
            }
          ]
        },
        "ExternalTableDefinition": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " Specifies how tables are defined in the S3 source files only. "
            }
          ]
        },
        "IncludeOpForFullLoad": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "<p>A value that enables a full load to write INSERT operations to the comma-separated value (.csv) output files only to indicate how the rows were added to the source database.</p> <note> <p>AWS DMS supports the <code>IncludeOpForFullLoad</code> parameter in versions 3.1.4 and later.</p> </note> <p>For full load, records can only be inserted. By default (the <code>false</code> setting), no information is recorded in these output files for a full load to indicate that the rows were inserted at the source database. If <code>IncludeOpForFullLoad</code> is set to <code>true</code> or <code>y</code>, the INSERT is recorded as an I annotation in the first field of the .csv file. This allows the format of your target records from a full load to be consistent with the target records from a CDC load.</p> <note> <p>This setting works together with the <code>CdcInsertsOnly</code> and the <code>CdcInsertsAndUpdates</code> parameters for output to .csv files only. For more information about how these settings work together, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring.InsertOps\">Indicating Source DB Operations in Migrated S3 Data</a> in the <i>AWS Database Migration Service User Guide.</i>.</p> </note>"
            }
          ]
        },
        "ParquetTimestampInMillisecond": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "<p>A value that specifies the precision of any <code>TIMESTAMP</code> column values that are written to an Amazon S3 object file in .parquet format.</p> <note> <p>AWS DMS supports the <code>ParquetTimestampInMillisecond</code> parameter in versions 3.1.4 and later.</p> </note> <p>When <code>ParquetTimestampInMillisecond</code> is set to <code>true</code> or <code>y</code>, AWS DMS writes all <code>TIMESTAMP</code> columns in a .parquet formatted file with millisecond precision. Otherwise, DMS writes them with microsecond precision.</p> <p>Currently, Amazon Athena and AWS Glue can handle only millisecond precision for <code>TIMESTAMP</code> values. Set this parameter to <code>true</code> for S3 endpoint object files that are .parquet formatted only if you plan to query or process the data with Athena or AWS Glue.</p> <note> <p>AWS DMS writes any <code>TIMESTAMP</code> column values written to an S3 file in .csv format with microsecond precision.</p> <p>Setting <code>ParquetTimestampInMillisecond</code> has no effect on the string format of the timestamp column value that is inserted by setting the <code>TimestampColumnName</code> parameter.</p> </note>"
            }
          ]
        },
        "ParquetVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/ParquetVersionValue"
            },
            {
              "description": "The version of the Apache Parquet format that you want to use: <code>parquet_1_0</code> (the default) or <code>parquet_2_0</code>."
            }
          ]
        },
        "PreserveTransactions": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "<p>If set to <code>true</code>, AWS DMS saves the transaction order for a change data capture (CDC) load on the Amazon S3 target specified by <a href=\"dms/latest/APIReference/API_S3Settings.html#DMS-Type-S3Settings-CdcPath\"> <code>CdcPath</code> </a>.</p> <note> <p>This setting is supported in AWS DMS versions 3.4.2 and later.</p> </note>"
            }
          ]
        },
        "RowGroupLength": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "<p>The number of rows in a row group. A smaller row group size provides faster reads. But as the number of row groups grows, the slower writes become. This parameter defaults to 10,000 rows. This number is used for .parquet file format only. </p> <p>If you choose a value larger than the maximum, <code>RowGroupLength</code> is set to the max row group length in bytes (64 * 1024 * 1024). </p>"
            }
          ]
        },
        "ServerSideEncryptionKmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>If you are using <code>SSE_KMS</code> for the <code>EncryptionMode</code>, provide the AWS KMS key ID. The key that you use needs an attached policy that enables AWS Identity and Access Management (IAM) user permissions and allows use of the key.</p> <p>Here is a CLI example: <code>aws dms create-endpoint --endpoint-identifier <i>value</i> --endpoint-type target --engine-name s3 --s3-settings ServiceAccessRoleArn=<i>value</i>,BucketFolder=<i>value</i>,BucketName=<i>value</i>,EncryptionMode=SSE_KMS,ServerSideEncryptionKmsKeyId=<i>value</i> </code> </p>"
            }
          ]
        },
        "ServiceAccessRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The Amazon Resource Name (ARN) used by the service access IAM role. It is a required parameter that enables DMS to write and read objects from an 3S bucket."
            }
          ]
        },
        "TimestampColumnName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>A value that when nonblank causes AWS DMS to add a column with timestamp information to the endpoint data for an Amazon S3 target.</p> <note> <p>AWS DMS supports the <code>TimestampColumnName</code> parameter in versions 3.1.4 and later.</p> </note> <p>DMS includes an additional <code>STRING</code> column in the .csv or .parquet object files of your migrated data when you set <code>TimestampColumnName</code> to a nonblank value.</p> <p>For a full load, each row of this timestamp column contains a timestamp for when the data was transferred from the source to the target by DMS. </p> <p>For a change data capture (CDC) load, each row of the timestamp column contains the timestamp for the commit of that row in the source database.</p> <p>The string format for this timestamp column value is <code>yyyy-MM-dd HH:mm:ss.SSSSSS</code>. By default, the precision of this value is in microseconds. For a CDC load, the rounding of the precision depends on the commit timestamp supported by DMS for the source database.</p> <p>When the <code>AddColumnName</code> parameter is set to <code>true</code>, DMS also includes a name for the timestamp column that you set with <code>TimestampColumnName</code>.</p>"
            }
          ]
        },
        "UseCsvNoSupValue": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "<p>This setting applies if the S3 output files during a change data capture (CDC) load are written in .csv format. If set to <code>true</code> for columns not included in the supplemental log, AWS DMS uses the value specified by <a href=\"dms/latest/APIReference/API_S3Settings.html#DMS-Type-S3Settings-CsvNoSupValue\"> <code>CsvNoSupValue</code> </a>. If not set or set to <code>false</code>, AWS DMS uses the null value for these columns.</p> <note> <p>This setting is supported in AWS DMS versions 3.4.1 and later.</p> </note>"
            }
          ]
        }
      },
      "type": "object"
    },
    "SNSInvalidTopicFault": {},
    "SNSNoAuthorizationFault": {},
    "SafeguardPolicy": {
      "enum": [
        "rely-on-sql-server-replication-agent",
        "exclusive-automatic-truncation",
        "shared-automatic-truncation"
      ],
      "type": "string"
    },
    "SchemaList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "SecretString": {
      "format": "password",
      "type": "string"
    },
    "SourceIdsList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "SourceType": {
      "enum": [
        "replication-instance"
      ],
      "type": "string"
    },
    "StartReplicationTaskAssessmentMessage": {
      "description": "<p/>",
      "properties": {
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The Amazon Resource Name (ARN) of the replication task. "
            }
          ]
        }
      },
      "required": [
        "ReplicationTaskArn"
      ],
      "title": "StartReplicationTaskAssessmentMessage",
      "type": "object"
    },
    "StartReplicationTaskAssessmentResponse": {
      "description": "<p/>",
      "properties": {
        "ReplicationTask": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTask"
            },
            {
              "description": " The assessed replication task. "
            }
          ]
        }
      },
      "type": "object"
    },
    "StartReplicationTaskAssessmentRunMessage": {
      "description": "<p/>",
      "properties": {
        "AssessmentRunName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Unique name to identify the assessment run."
            }
          ]
        },
        "Exclude": {
          "allOf": [
            {
              "$ref": "#/definitions/ExcludeTestList"
            },
            {
              "description": "<p>Space-separated list of names for specific individual assessments that you want to exclude. These names come from the default list of individual assessments that AWS DMS supports for the associated migration task. This task is specified by <code>ReplicationTaskArn</code>.</p> <note> <p>You can't set a value for <code>Exclude</code> if you also set a value for <code>IncludeOnly</code> in the API operation.</p> <p>To identify the names of the default individual assessments that AWS DMS supports for the associated migration task, run the <code>DescribeApplicableIndividualAssessments</code> operation using its own <code>ReplicationTaskArn</code> request parameter.</p> </note>"
            }
          ]
        },
        "IncludeOnly": {
          "allOf": [
            {
              "$ref": "#/definitions/IncludeTestList"
            },
            {
              "description": "<p>Space-separated list of names for specific individual assessments that you want to include. These names come from the default list of individual assessments that AWS DMS supports for the associated migration task. This task is specified by <code>ReplicationTaskArn</code>.</p> <note> <p>You can't set a value for <code>IncludeOnly</code> if you also set a value for <code>Exclude</code> in the API operation. </p> <p>To identify the names of the default individual assessments that AWS DMS supports for the associated migration task, run the <code>DescribeApplicableIndividualAssessments</code> operation using its own <code>ReplicationTaskArn</code> request parameter.</p> </note>"
            }
          ]
        },
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Amazon Resource Name (ARN) of the migration task associated with the premigration assessment run that you want to start."
            }
          ]
        },
        "ResultEncryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Encryption mode that you can specify to encrypt the results of this assessment run. If you don't specify this request parameter, AWS DMS stores the assessment run results without encryption. You can specify one of the options following:</p> <ul> <li> <p> <code>\"SSE_S3\"</code> – The server-side encryption provided as a default by Amazon S3.</p> </li> <li> <p> <code>\"SSE_KMS\"</code> – AWS Key Management Service (AWS KMS) encryption. This encryption can use either a custom KMS encryption key that you specify or the default KMS encryption key that DMS provides.</p> </li> </ul>"
            }
          ]
        },
        "ResultKmsKeyArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "ARN of a custom KMS encryption key that you specify when you set <code>ResultEncryptionMode</code> to <code>\"SSE_KMS</code>\"."
            }
          ]
        },
        "ResultLocationBucket": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Amazon S3 bucket where you want AWS DMS to store the results of this assessment run."
            }
          ]
        },
        "ResultLocationFolder": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Folder within an Amazon S3 bucket where you want AWS DMS to store the results of this assessment run."
            }
          ]
        },
        "ServiceAccessRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "ARN of a service role needed to start the assessment run."
            }
          ]
        }
      },
      "required": [
        "ReplicationTaskArn",
        "ServiceAccessRoleArn",
        "ResultLocationBucket",
        "AssessmentRunName"
      ],
      "title": "StartReplicationTaskAssessmentRunMessage",
      "type": "object"
    },
    "StartReplicationTaskAssessmentRunResponse": {
      "description": "<p/>",
      "properties": {
        "ReplicationTaskAssessmentRun": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTaskAssessmentRun"
            },
            {
              "description": "The premigration assessment run that was started."
            }
          ]
        }
      },
      "type": "object"
    },
    "StartReplicationTaskMessage": {
      "description": "<p/>",
      "properties": {
        "CdcStartPosition": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p> <note> <p>When you use this task setting with a source PostgreSQL database, a logical replication slot should already be created and associated with the source endpoint. You can verify this by setting the <code>slotName</code> extra connection attribute to the name of this logical replication slot. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.html#CHAP_Source.PostgreSQL.ConnectionAttrib\">Extra Connection Attributes When Using PostgreSQL as a Source for AWS DMS</a>.</p> </note>"
            }
          ]
        },
        "CdcStartTime": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "<p>Indicates the start time for a change data capture (CDC) operation. Use either CdcStartTime or CdcStartPosition to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p>Timestamp Example: --cdc-start-time “2018-03-08T12:12:12”</p>"
            }
          ]
        },
        "CdcStopPosition": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:2018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 2018-02-09T12:12:12 “</p>"
            }
          ]
        },
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication task to be started."
            }
          ]
        },
        "StartReplicationTaskType": {
          "allOf": [
            {
              "$ref": "#/definitions/StartReplicationTaskTypeValue"
            },
            {
              "description": "A type of replication task."
            }
          ]
        }
      },
      "required": [
        "ReplicationTaskArn",
        "StartReplicationTaskType"
      ],
      "title": "StartReplicationTaskMessage",
      "type": "object"
    },
    "StartReplicationTaskResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationTask": {
          "MigrationType": "full-load",
          "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
          "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
          "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
          "ReplicationTaskIdentifier": "task1",
          "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
          "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
          "Status": "creating",
          "TableMappings": "file://mappingfile.json",
          "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
        }
      },
      "properties": {
        "ReplicationTask": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTask"
            },
            {
              "description": "The replication task started."
            }
          ]
        }
      },
      "type": "object"
    },
    "StartReplicationTaskTypeValue": {
      "enum": [
        "start-replication",
        "resume-processing",
        "reload-target"
      ],
      "type": "string"
    },
    "StopReplicationTaskMessage": {
      "description": "<p/>",
      "properties": {
        "ReplicationTaskArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name(ARN) of the replication task to be stopped."
            }
          ]
        }
      },
      "required": [
        "ReplicationTaskArn"
      ],
      "title": "StopReplicationTaskMessage",
      "type": "object"
    },
    "StopReplicationTaskResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationTask": {
          "MigrationType": "full-load",
          "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
          "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
          "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
          "ReplicationTaskIdentifier": "task1",
          "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
          "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
          "Status": "creating",
          "TableMappings": "file://mappingfile.json",
          "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
        }
      },
      "properties": {
        "ReplicationTask": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationTask"
            },
            {
              "description": "The replication task stopped."
            }
          ]
        }
      },
      "type": "object"
    },
    "StorageQuotaExceededFault": {},
    "String": {
      "type": "string"
    },
    "Subnet": {
      "description": "In response to a request by the <code>DescribeReplicationSubnetGroups</code> operation, this object identifies a subnet by its given Availability Zone, subnet identifier, and status.",
      "properties": {
        "SubnetAvailabilityZone": {
          "allOf": [
            {
              "$ref": "#/definitions/AvailabilityZone"
            },
            {
              "description": "The Availability Zone of the subnet."
            }
          ]
        },
        "SubnetIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The subnet identifier."
            }
          ]
        },
        "SubnetStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The status of the subnet."
            }
          ]
        }
      },
      "type": "object"
    },
    "SubnetAlreadyInUse": {},
    "SubnetIdentifierList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "SubnetList": {
      "items": {
        "$ref": "#/definitions/Subnet"
      },
      "type": "array"
    },
    "SupportedEndpointType": {
      "description": "Provides information about types of supported endpoints in response to a request by the <code>DescribeEndpointTypes</code> operation. This information includes the type of endpoint, the database engine name, and whether change data capture (CDC) is supported.",
      "properties": {
        "EndpointType": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationEndpointTypeValue"
            },
            {
              "description": "The type of endpoint. Valid values are <code>source</code> and <code>target</code>."
            }
          ]
        },
        "EngineDisplayName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is \"aurora,\" this value would be \"Amazon Aurora MySQL.\""
            }
          ]
        },
        "EngineName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The database engine name. Valid values, depending on the EndpointType, include <code>\"mysql\"</code>, <code>\"oracle\"</code>, <code>\"postgres\"</code>, <code>\"mariadb\"</code>, <code>\"aurora\"</code>, <code>\"aurora-postgresql\"</code>, <code>\"redshift\"</code>, <code>\"s3\"</code>, <code>\"db2\"</code>, <code>\"azuredb\"</code>, <code>\"sybase\"</code>, <code>\"dynamodb\"</code>, <code>\"mongodb\"</code>, <code>\"kinesis\"</code>, <code>\"kafka\"</code>, <code>\"elasticsearch\"</code>, <code>\"documentdb\"</code>, <code>\"sqlserver\"</code>, and <code>\"neptune\"</code>."
            }
          ]
        },
        "ReplicationInstanceEngineMinimumVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The earliest AWS DMS engine version that supports this endpoint engine. Note that endpoint engines released with AWS DMS versions earlier than 3.1.1 do not return a value for this parameter."
            }
          ]
        },
        "SupportsCDC": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates if Change Data Capture (CDC) is supported."
            }
          ]
        }
      },
      "type": "object"
    },
    "SupportedEndpointTypeList": {
      "items": {
        "$ref": "#/definitions/SupportedEndpointType"
      },
      "type": "array"
    },
    "SybaseSettings": {
      "description": "Provides information that defines a SAP ASE endpoint.",
      "properties": {
        "DatabaseName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Database name for the endpoint."
            }
          ]
        },
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/SecretString"
            },
            {
              "description": "Endpoint connection password."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerOptional"
            },
            {
              "description": "Endpoint TCP port."
            }
          ]
        },
        "ServerName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Fully qualified domain name of the endpoint."
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Endpoint connection user name."
            }
          ]
        }
      },
      "type": "object"
    },
    "TStamp": {
      "format": "date-time",
      "type": "string"
    },
    "TableListToReload": {
      "items": {
        "$ref": "#/definitions/TableToReload"
      },
      "type": "array"
    },
    "TableStatistics": {
      "description": "Provides a collection of table statistics in response to a request by the <code>DescribeTableStatistics</code> operation.",
      "properties": {
        "Ddls": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The data definition language (DDL) used to build and modify the structure of your tables."
            }
          ]
        },
        "Deletes": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The number of delete actions performed on a table."
            }
          ]
        },
        "FullLoadCondtnlChkFailedRows": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The number of rows that failed conditional checks during the full load operation (valid only for migrations where DynamoDB is the target)."
            }
          ]
        },
        "FullLoadEndTime": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The time when the full load operation completed."
            }
          ]
        },
        "FullLoadErrorRows": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The number of rows that failed to load during the full load operation (valid only for migrations where DynamoDB is the target)."
            }
          ]
        },
        "FullLoadReloaded": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanOptional"
            },
            {
              "description": "A value that indicates if the table was reloaded (<code>true</code>) or loaded as part of a new full load operation (<code>false</code>)."
            }
          ]
        },
        "FullLoadRows": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The number of rows added during the full load operation."
            }
          ]
        },
        "FullLoadStartTime": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The time when the full load operation started."
            }
          ]
        },
        "Inserts": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The number of insert actions performed on a table."
            }
          ]
        },
        "LastUpdateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/TStamp"
            },
            {
              "description": "The last time a table was updated."
            }
          ]
        },
        "SchemaName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The schema name."
            }
          ]
        },
        "TableName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the table."
            }
          ]
        },
        "TableState": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The state of the tables described.</p> <p>Valid states: Table does not exist | Before load | Full load | Table completed | Table cancelled | Table error | Table all | Table updates | Table is being reloaded</p>"
            }
          ]
        },
        "Updates": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The number of update actions performed on a table."
            }
          ]
        },
        "ValidationFailedRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The number of records that failed validation."
            }
          ]
        },
        "ValidationPendingRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The number of records that have yet to be validated."
            }
          ]
        },
        "ValidationState": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The validation state of the table.</p> <p>This parameter can have the following values:</p> <ul> <li> <p>Not enabled – Validation isn't enabled for the table in the migration task.</p> </li> <li> <p>Pending records – Some records in the table are waiting for validation.</p> </li> <li> <p>Mismatched records – Some records in the table don't match between the source and target.</p> </li> <li> <p>Suspended records – Some records in the table couldn't be validated.</p> </li> <li> <p>No primary key –The table couldn't be validated because it has no primary key.</p> </li> <li> <p>Table error – The table wasn't validated because it's in an error state and some data wasn't migrated.</p> </li> <li> <p>Validated – All rows in the table are validated. If the table is updated, the status can change from Validated.</p> </li> <li> <p>Error – The table couldn't be validated because of an unexpected error.</p> </li> <li> <p>Pending validation – The table is waiting validation.</p> </li> <li> <p>Preparing table – Preparing the table enabled in the migration task for validation.</p> </li> <li> <p>Pending revalidation – All rows in the table are pending validation after the table was updated.</p> </li> </ul>"
            }
          ]
        },
        "ValidationStateDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Additional details about the state of validation."
            }
          ]
        },
        "ValidationSuspendedRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The number of records that couldn't be validated."
            }
          ]
        }
      },
      "type": "object"
    },
    "TableStatisticsList": {
      "items": {
        "$ref": "#/definitions/TableStatistics"
      },
      "type": "array"
    },
    "TableToReload": {
      "description": "Provides the name of the schema and table to be reloaded.",
      "properties": {
        "SchemaName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The schema name of the table to be reloaded."
            }
          ]
        },
        "TableName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The table name of the table to be reloaded."
            }
          ]
        }
      },
      "required": [
        "SchemaName",
        "TableName"
      ],
      "type": "object"
    },
    "Tag": {
      "description": "<p>A user-defined key-value pair that describes metadata added to an AWS DMS resource and that is used by operations such as the following:</p> <ul> <li> <p> <code>AddTagsToResource</code> </p> </li> <li> <p> <code>ListTagsForResource</code> </p> </li> <li> <p> <code>RemoveTagsFromResource</code> </p> </li> </ul>",
      "properties": {
        "Key": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A key is the required name of the tag. The string value can be 1-128 Unicode characters in length and can't be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regular expressions: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\")."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A value is the optional value of the tag. The string value can be 1-256 Unicode characters in length and can't be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regular expressions: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\")."
            }
          ]
        }
      },
      "type": "object"
    },
    "TagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array"
    },
    "TargetDbType": {
      "enum": [
        "specific-database",
        "multiple-databases"
      ],
      "type": "string"
    },
    "TestConnectionMessage": {
      "description": "<p/>",
      "properties": {
        "EndpointArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
            }
          ]
        },
        "ReplicationInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the replication instance."
            }
          ]
        }
      },
      "required": [
        "ReplicationInstanceArn",
        "EndpointArn"
      ],
      "title": "TestConnectionMessage",
      "type": "object"
    },
    "TestConnectionResponse": {
      "description": "<p/>",
      "example": {
        "Connection": {}
      },
      "properties": {
        "Connection": {
          "allOf": [
            {
              "$ref": "#/definitions/Connection"
            },
            {
              "description": "The connection tested."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpgradeDependencyFailureFault": {},
    "VpcSecurityGroupIdList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "VpcSecurityGroupMembership": {
      "description": "Describes the status of a security group associated with the virtual private cloud (VPC) hosting your replication and DB instances.",
      "properties": {
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The status of the VPC security group."
            }
          ]
        },
        "VpcSecurityGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The VPC security group ID."
            }
          ]
        }
      },
      "type": "object"
    },
    "VpcSecurityGroupMembershipList": {
      "items": {
        "$ref": "#/definitions/VpcSecurityGroupMembership"
      },
      "type": "array"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/dms/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}