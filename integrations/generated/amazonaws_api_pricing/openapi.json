{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<p>AWS Price List Service API (AWS Price List Service) is a centralized and convenient way to programmatically query Amazon Web Services for services, products, and pricing information. The AWS Price List Service uses standardized product attributes such as <code>Location</code>, <code>Storage Class</code>, and <code>Operating System</code>, and provides prices at the SKU level. You can use the AWS Price List Service to build cost control and scenario planning tools, reconcile billing data, forecast future spend for budgeting purposes, and provide cost benefit analysis that compare your internal workloads with AWS.</p> <p>Use <code>GetServices</code> without a service code to retrieve the service codes for all AWS services, then <code>GetServices</code> with a service code to retreive the attribute names for that service. After you have the service code and attribute names, you can use <code>GetAttributeValues</code> to see what values are available for an attribute. With the service code and an attribute name and value, you can use <code>GetProducts</code> to find specific products that you're interested in, such as an <code>AmazonEC2</code> instance, with a <code>Provisioned IOPS</code> <code>volumeType</code>.</p> <p>Service Endpoint</p> <p>AWS Price List Service API provides the following two endpoints:</p> <ul> <li> <p>https://api.pricing.us-east-1.amazonaws.com</p> </li> <li> <p>https://api.pricing.ap-south-1.amazonaws.com</p> </li> </ul>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Price List Service",
    "version": "2017-10-15",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/pricing-2017-10-15.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "pricing",
    "x-datafire": {
      "name": "amazonaws_api_pricing",
      "type": "openapi"
    }
  },
  "host": "api.pricing.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/#X-Amz-Target=AWSPriceListService.DescribeServices": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSPriceListService.DescribeServices"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeServicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeServicesResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "484": {
            "description": "ExpiredNextTokenException",
            "schema": {
              "$ref": "#/definitions/ExpiredNextTokenException"
            }
          }
        },
        "description": "Returns the metadata for one service or a list of the metadata for all services. Use this without a service code to get the service codes for all services. Use it with a service code, such as <code>AmazonEC2</code>, to get information specific to that service, such as the attribute names available for that service. For example, some of the attribute names available for EC2 are <code>volumeType</code>, <code>maxIopsVolume</code>, <code>operation</code>, <code>locationType</code>, and <code>instanceCapacity10xlarge</code>.",
        "operationId": "DescribeServices"
      }
    },
    "/#X-Amz-Target=AWSPriceListService.GetAttributeValues": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSPriceListService.GetAttributeValues"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAttributeValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAttributeValuesResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "484": {
            "description": "ExpiredNextTokenException",
            "schema": {
              "$ref": "#/definitions/ExpiredNextTokenException"
            }
          }
        },
        "description": "Returns a list of attribute values. Attibutes are similar to the details in a Price List API offer file. For a list of available attributes, see <a href=\"http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/reading-an-offer.html#pps-defs\">Offer File Definitions</a> in the <a href=\"http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/billing-what-is.html\">AWS Billing and Cost Management User Guide</a>.",
        "operationId": "GetAttributeValues"
      }
    },
    "/#X-Amz-Target=AWSPriceListService.GetProducts": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSPriceListService.GetProducts"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetProductsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetProductsResponse"
            }
          },
          "480": {
            "description": "InternalErrorException",
            "schema": {
              "$ref": "#/definitions/InternalErrorException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "484": {
            "description": "ExpiredNextTokenException",
            "schema": {
              "$ref": "#/definitions/ExpiredNextTokenException"
            }
          }
        },
        "description": "Returns a list of all products that match the filter criteria.",
        "operationId": "GetProducts"
      }
    }
  },
  "definitions": {
    "AttributeNameList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "AttributeValue": {
      "description": "The values of a given attribute, such as <code>Throughput Optimized HDD</code> or <code>Provisioned IOPS</code> for the <code>Amazon EC2</code> <code>volumeType</code> attribute.",
      "properties": {
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The specific value of an <code>attributeName</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "AttributeValueList": {
      "items": {
        "$ref": "#/definitions/AttributeValue"
      },
      "type": "array"
    },
    "BoxedInteger": {
      "maximum": 100,
      "minimum": 1,
      "type": "integer"
    },
    "DescribeServicesRequest": {
      "properties": {
        "FormatVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The format version that you want the response to be in.</p> <p>Valid values are: <code>aws_v1</code> </p>"
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/BoxedInteger"
            },
            {
              "description": "The maximum number of results that you want returned in the response."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The pagination token that indicates the next set of results that you want to retrieve."
            }
          ]
        },
        "ServiceCode": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The code for the service whose information you want to retrieve, such as <code>AmazonEC2</code>. You can use the <code>ServiceCode</code> to filter the results in a <code>GetProducts</code> call. To retrieve a list of all services, leave this blank."
            }
          ]
        }
      },
      "title": "DescribeServicesRequest",
      "type": "object"
    },
    "DescribeServicesResponse": {
      "example": {
        "FormatVersion": "aws_v1",
        "NextToken": "abcdefg123",
        "Services": [
          {
            "AttributeNames": [
              "volumeType",
              "maxIopsvolume",
              "instanceCapacity10xlarge",
              "locationType",
              "operation"
            ],
            "ServiceCode": "AmazonEC2"
          }
        ]
      },
      "properties": {
        "FormatVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The format version of the response. For example, <code>aws_v1</code>."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The pagination token for the next set of retreivable results."
            }
          ]
        },
        "Services": {
          "allOf": [
            {
              "$ref": "#/definitions/ServiceList"
            },
            {
              "description": "The service metadata for the service or services in the response."
            }
          ]
        }
      },
      "type": "object"
    },
    "ExpiredNextTokenException": {
      "description": "The pagination token expired. Try again without a pagination token.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/errorMessage"
        }
      },
      "type": "object"
    },
    "Filter": {
      "description": "The constraints that you want all returned products to match.",
      "properties": {
        "Field": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The product metadata field that you want to filter on. You can filter by just the service code to see all products for a specific service, filter by just the attribute name to see a specific attribute for multiple services, or use both a service code and an attribute name to retrieve only products that match both fields.</p> <p>Valid values include: <code>ServiceCode</code>, and all attribute names</p> <p>For example, you can filter by the <code>AmazonEC2</code> service code and the <code>volumeType</code> attribute name to get the prices for only Amazon EC2 volumes.</p>"
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterType"
            },
            {
              "description": "<p>The type of filter that you want to use.</p> <p>Valid values are: <code>TERM_MATCH</code>. <code>TERM_MATCH</code> returns only products that match both the given filter field and the given value.</p>"
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The service code or attribute value that you want to filter by. If you are filtering by service code this is the actual service code, such as <code>AmazonEC2</code>. If you are filtering by attribute name, this is the attribute value that you want the returned products to match, such as a <code>Provisioned IOPS</code> volume."
            }
          ]
        }
      },
      "required": [
        "Type",
        "Field",
        "Value"
      ],
      "type": "object"
    },
    "FilterType": {
      "enum": [
        "TERM_MATCH"
      ],
      "type": "string"
    },
    "Filters": {
      "items": {
        "$ref": "#/definitions/Filter"
      },
      "type": "array"
    },
    "GetAttributeValuesRequest": {
      "properties": {
        "AttributeName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The name of the attribute that you want to retrieve the values for, such as <code>volumeType</code>."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/BoxedInteger"
            },
            {
              "description": "The maximum number of results to return in response."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The pagination token that indicates the next set of results that you want to retrieve."
            }
          ]
        },
        "ServiceCode": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The service code for the service whose attributes you want to retrieve. For example, if you want the retrieve an EC2 attribute, use <code>AmazonEC2</code>."
            }
          ]
        }
      },
      "required": [
        "ServiceCode",
        "AttributeName"
      ],
      "title": "GetAttributeValuesRequest",
      "type": "object"
    },
    "GetAttributeValuesResponse": {
      "example": {
        "AttributeValues": [
          {
            "Value": "Throughput Optimized HDD"
          },
          {
            "Value": "Provisioned IOPS"
          }
        ],
        "NextToken": "GpgauEXAMPLEezucl5LV0w==:7GzYJ0nw0DBTJ2J66EoTIIynE6O1uXwQtTRqioJzQadBnDVgHPzI1en4BUQnPCLpzeBk9RQQAWaFieA4+DapFAGLgk+Z/9/cTw9GldnPOHN98+FdmJP7wKU3QQpQ8MQr5KOeBkIsAqvAQYdL0DkL7tHwPtE5iCEByAmg9gcC/yBU1vAOsf7R3VaNN4M5jMDv3woSWqASSIlBVB6tgW78YL22KhssoItM/jWW+aP6Jqtq4mldxp/ct6DWAl+xLFwHU/CbketimPPXyqHF3/UXDw=="
      },
      "properties": {
        "AttributeValues": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeValueList"
            },
            {
              "description": "The list of values for an attribute. For example, <code>Throughput Optimized HDD</code> and <code>Provisioned IOPS</code> are two available values for the <code>AmazonEC2</code> <code>volumeType</code>."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The pagination token that indicates the next set of results to retrieve."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetProductsRequest": {
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/Filters"
            },
            {
              "description": "The list of filters that limit the returned products. only products that match all filters are returned."
            }
          ]
        },
        "FormatVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The format version that you want the response to be in.</p> <p>Valid values are: <code>aws_v1</code> </p>"
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/BoxedInteger"
            },
            {
              "description": "The maximum number of results to return in the response."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The pagination token that indicates the next set of results that you want to retrieve."
            }
          ]
        },
        "ServiceCode": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The code for the service whose products you want to retrieve. "
            }
          ]
        }
      },
      "title": "GetProductsRequest",
      "type": "object"
    },
    "GetProductsResponse": {
      "example": {
        "FormatVersion": "aws_v1",
        "NextToken": "57r3EXAMPLEujbzWfHF7Ciw==:ywSmZsD3mtpQmQLQ5XfOsIMkYybSj+vAT+kGmwMFq+K9DGmIoJkz7lunVeamiOPgthdWSO2a7YKojCO+zY4dJmuNl2QvbNhXs+AJ2Ufn7xGmJncNI2TsEuAsVCUfTAvAQNcwwamtk6XuZ4YdNnooV62FjkV3ZAn40d9+wAxV7+FImvhUHi/+f8afgZdGh2zPUlH8jlV9uUtj0oHp8+DhPUuHXh+WBII1E/aoKpPSm3c=",
        "PriceList": [
          "{\"product\":{\"productFamily\":\"Storage\",\"attributes\":{\"storageMedia\":\"SSD-backed\",\"maxThroughputvolume\":\"320 MB/sec\",\"volumeType\":\"Provisioned IOPS\",\"maxIopsvolume\":\"20000\",\"servicecode\":\"AmazonEC2\",\"usagetype\":\"CAN1-EBS:VolumeUsage.piops\",\"locationType\":\"AWS Region\",\"location\":\"Canada (Central)\",\"servicename\":\"Amazon Elastic Compute Cloud\",\"maxVolumeSize\":\"16 TiB\",\"operation\":\"\"},\"sku\":\"WQGC34PB2AWS8R4U\"},\"serviceCode\":\"AmazonEC2\",\"terms\":{\"OnDemand\":{\"WQGC34PB2AWS8R4U.JRTCKXETXF\":{\"priceDimensions\":{\"WQGC34PB2AWS8R4U.JRTCKXETXF.6YS6EN2CT7\":{\"unit\":\"GB-Mo\",\"endRange\":\"Inf\",\"description\":\"$0.138 per GB-month of Provisioned IOPS SSD (io1)  provisioned storage - Canada (Central)\",\"appliesTo\":[],\"rateCode\":\"WQGC34PB2AWS8R4U.JRTCKXETXF.6YS6EN2CT7\",\"beginRange\":\"0\",\"pricePerUnit\":{\"USD\":\"0.1380000000\"}}},\"sku\":\"WQGC34PB2AWS8R4U\",\"effectiveDate\":\"2017-08-01T00:00:00Z\",\"offerTermCode\":\"JRTCKXETXF\",\"termAttributes\":{}}}},\"version\":\"20170901182201\",\"publicationDate\":\"2017-09-01T18:22:01Z\"}"
        ]
      },
      "properties": {
        "FormatVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The format version of the response. For example, aws_v1."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The pagination token that indicates the next set of results to retrieve."
            }
          ]
        },
        "PriceList": {
          "allOf": [
            {
              "$ref": "#/definitions/PriceList"
            },
            {
              "description": "The list of products that match your filters. The list contains both the product metadata and the price information."
            }
          ]
        }
      },
      "type": "object"
    },
    "InternalErrorException": {
      "description": "An error on the server occurred during the processing of your request. Try again later.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/errorMessage"
        }
      },
      "type": "object"
    },
    "InvalidNextTokenException": {
      "description": "The pagination token is invalid. Try again without a pagination token.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/errorMessage"
        }
      },
      "type": "object"
    },
    "InvalidParameterException": {
      "description": "One or more parameters had an invalid value.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/errorMessage"
        }
      },
      "type": "object"
    },
    "NotFoundException": {
      "description": "The requested resource can't be found.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/errorMessage"
        }
      },
      "type": "object"
    },
    "PriceList": {
      "items": {
        "$ref": "#/definitions/PriceListItemJSON"
      },
      "type": "array"
    },
    "PriceListItemJSON": {
      "type": "string"
    },
    "Service": {
      "description": "The metadata for a service, such as the service code and available attribute names.",
      "properties": {
        "AttributeNames": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeNameList"
            },
            {
              "description": "The attributes that are available for this service."
            }
          ]
        },
        "ServiceCode": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The code for the AWS service."
            }
          ]
        }
      },
      "type": "object"
    },
    "ServiceList": {
      "items": {
        "$ref": "#/definitions/Service"
      },
      "type": "array"
    },
    "String": {
      "type": "string"
    },
    "errorMessage": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/pricing/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}