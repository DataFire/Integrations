{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "devrel@box.com",
      "name": "Box, Inc",
      "url": "https://box.dev",
      "x-twitter": "BoxHQ"
    },
    "description": "[Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.",
    "license": {
      "name": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "termsOfService": "https://cloud.app.box.com/s/rmwxu64h1ipr41u49w3bbuvbsa29wku9",
    "title": "Box Platform API",
    "version": "2.0.0",
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_BoxHQ_profile_image.jpeg"
    },
    "x-origin": [
      {
        "converter": {
          "url": "https://github.com/lucybot/api-spec-converter",
          "version": "2.7.31"
        },
        "format": "openapi",
        "url": "https://opensource.box.com/box-openapi/openapi.json",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "box.com",
    "x-datafire": {
      "name": "box",
      "type": "openapi"
    }
  },
  "host": "api.box.com",
  "basePath": "/2.0",
  "schemes": [
    "https"
  ],
  "paths": {
    "/authorize": {
      "get": {
        "servers": [
          {
            "description": "Server for client-side authentication",
            "url": "https://account.box.com/api/oauth2"
          }
        ],
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "description": "The type of response we'd like to receive.",
            "enum": [
              "code"
            ],
            "format": "token",
            "in": "query",
            "name": "response_type",
            "required": true,
            "type": "string",
            "x-example": "code"
          },
          {
            "description": "The Client ID of the application that is requesting to authenticate\nthe user. To get the Client ID for your application, log in to your\nBox developer console and click the **Edit Application** link for\nthe application you're working with. In the OAuth 2.0 Parameters section\nof the configuration page, find the item labelled `client_id`. The\ntext of that item is your application's Client ID.",
            "in": "query",
            "name": "client_id",
            "required": true,
            "type": "string",
            "x-example": "ly1nj6n11vionaie65emwzk575hnnmrk"
          },
          {
            "description": "The URL to which Box redirects the browser after the user has granted\nor denied the application permission. This URL must match the\nredirect URL in the configuration of your application. It must be a\nvalid HTTPS URL and it needs to be able to handle the redirection to\ncomplete the next step in the OAuth 2.0 flow.",
            "format": "url",
            "in": "query",
            "name": "redirect_uri",
            "required": false,
            "type": "string",
            "x-example": "http://example.com/auth/callback"
          },
          {
            "description": "A custom string of your choice. Box will pass the same string to\nthe redirect URL when authentication is complete. This parameter\ncan be used to identify a user on redirect, as well as protect\nagainst hijacked sessions and other exploits.",
            "in": "query",
            "name": "state",
            "required": false,
            "type": "string",
            "x-example": "my_state"
          },
          {
            "description": "A comma-separated list of application scopes you'd like to\nauthenticate the user for. This defaults to all the scopes configured\nfor the application in its configuration page.",
            "in": "query",
            "name": "scope",
            "required": false,
            "type": "string",
            "x-example": "admin_readwrite"
          }
        ],
        "responses": {
          "200": {
            "description": "Does not return any data, but rather should be used in the browser.",
            "schema": {
              "format": "html",
              "type": "string"
            }
          },
          "default": {
            "description": "Does not return any data, but rather should be used in the browser.",
            "schema": {
              "format": "html",
              "type": "string"
            }
          }
        },
        "security": [],
        "tags": [
          "Authorization"
        ],
        "description": "Authorize a user by sending them through the [Box](https://box.com)\nwebsite and request their permission to act on their behalf.\n\nThis is the first step when authenticating a user using\nOAuth 2.0. To request a user's authorization to use the Box APIs\non their behalf you will need to send a user to the URL with this\nformat.",
        "operationId": "get_authorize",
        "summary": "Authorize user",
        "x-box-tag": "authorization"
      }
    },
    "/collaboration_whitelist_entries": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of domains that are allowed for collaboration.",
            "schema": {
              "$ref": "#/definitions/CollaborationAllowlistEntries"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Domain restrictions for collaborations"
        ],
        "description": "Returns the list domains that have been deemed safe to create collaborations\nfor within the current enterprise.",
        "operationId": "get_collaboration_whitelist_entries",
        "summary": "List allowed collaboration domains",
        "x-box-tag": "collaboration_allowlist_entries"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "direction": {
                  "description": "The direction in which to allow collaborations.",
                  "enum": [
                    "inbound",
                    "outbound",
                    "both"
                  ],
                  "example": "inbound",
                  "type": "string"
                },
                "domain": {
                  "description": "The domain to add to the list of allowed domains.",
                  "example": "example.com",
                  "type": "string"
                }
              },
              "required": [
                "domain",
                "direction"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a new entry on the list of allowed domains.",
            "schema": {
              "$ref": "#/definitions/CollaborationAllowlistEntry"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Domain restrictions for collaborations"
        ],
        "description": "Creates a new entry in the list of allowed domains to allow\ncollaboration for.",
        "operationId": "post_collaboration_whitelist_entries",
        "summary": "Add domain to list of allowed collaboration domains",
        "x-box-tag": "collaboration_allowlist_entries"
      }
    },
    "/collaboration_whitelist_entries/{collaboration_whitelist_entry_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the entry in the list.",
            "in": "path",
            "name": "collaboration_whitelist_entry_id",
            "required": true,
            "type": "string",
            "x-example": "213123"
          }
        ],
        "responses": {
          "204": {
            "description": "A blank response is returned if the entry was\nsuccessfully deleted."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Domain restrictions for collaborations"
        ],
        "description": "Removes a domain from the list of domains that have been deemed safe to create\ncollaborations for within the current enterprise.",
        "operationId": "delete_collaboration_whitelist_entries_id",
        "summary": "Remove domain from list of allowed collaboration domains",
        "x-box-tag": "collaboration_allowlist_entries"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the entry in the list.",
            "in": "path",
            "name": "collaboration_whitelist_entry_id",
            "required": true,
            "type": "string",
            "x-example": "213123"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an entry on the list of allowed domains.",
            "schema": {
              "$ref": "#/definitions/CollaborationAllowlistEntry"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Domain restrictions for collaborations"
        ],
        "description": "Returns a domain that has been deemed safe to create collaborations\nfor within the current enterprise.",
        "operationId": "get_collaboration_whitelist_entries_id",
        "summary": "Get allowed collaboration domain",
        "x-box-tag": "collaboration_allowlist_entries"
      }
    },
    "/collaboration_whitelist_exempt_targets": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of user exemptions.",
            "schema": {
              "$ref": "#/definitions/CollaborationAllowlistExemptTargets"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Domain restrictions (User exemptions)"
        ],
        "description": "Returns a list of users who have been exempt from the collaboration\ndomain restrictions.",
        "operationId": "get_collaboration_whitelist_exempt_targets",
        "summary": "List users exempt from collaboration domain restrictions",
        "x-box-tag": "collaboration_allowlist_exempt_targets"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "user": {
                  "description": "The user to exempt.",
                  "properties": {
                    "id": {
                      "description": "The ID of the user to exempt.",
                      "example": "23522323",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "user"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a new exemption entry.",
            "schema": {
              "$ref": "#/definitions/CollaborationAllowlistExemptTarget"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Domain restrictions (User exemptions)"
        ],
        "description": "Exempts a user from the restrictions set out by the allowed list of domains\nfor collaborations.",
        "operationId": "post_collaboration_whitelist_exempt_targets",
        "summary": "Create user exemption from collaboration domain restrictions",
        "x-box-tag": "collaboration_allowlist_exempt_targets"
      }
    },
    "/collaboration_whitelist_exempt_targets/{collaboration_whitelist_exempt_target_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the exemption to the list.",
            "in": "path",
            "name": "collaboration_whitelist_exempt_target_id",
            "required": true,
            "type": "string",
            "x-example": "984923"
          }
        ],
        "responses": {
          "204": {
            "description": "A blank response is returned if the exemption was\nsuccessfully deleted."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Domain restrictions (User exemptions)"
        ],
        "description": "Removes a user's exemption from the restrictions set out by the allowed list\nof domains for collaborations.",
        "operationId": "delete_collaboration_whitelist_exempt_targets_id",
        "summary": "Remove user from list of users exempt from domain restrictions",
        "x-box-tag": "collaboration_allowlist_exempt_targets"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the exemption to the list.",
            "in": "path",
            "name": "collaboration_whitelist_exempt_target_id",
            "required": true,
            "type": "string",
            "x-example": "984923"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the user's exempted from the list of collaboration domains.",
            "schema": {
              "$ref": "#/definitions/CollaborationAllowlistExemptTarget"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Domain restrictions (User exemptions)"
        ],
        "description": "Returns a users who has been exempt from the collaboration\ndomain restrictions.",
        "operationId": "get_collaboration_whitelist_exempt_targets_id",
        "summary": "Get user exempt from collaboration domain restrictions",
        "x-box-tag": "collaboration_allowlist_exempt_targets"
      }
    },
    "/collaborations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The status of the collaborations to retrieve",
            "enum": [
              "pending"
            ],
            "in": "query",
            "name": "status",
            "required": true,
            "type": "string",
            "x-example": "pending"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of pending collaboration objects.\n\nIf the user has no pending collaborations, the collection\nwill be empty.",
            "schema": {
              "$ref": "#/definitions/Collaborations"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Collaborations (List)"
        ],
        "description": "Retrieves all pending collaboration invites for this user.",
        "operationId": "get_collaborations",
        "summary": "List pending collaborations",
        "x-box-tag": "list_collaborations"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "Determines if users should receive email notification\nfor the action performed.",
            "in": "query",
            "name": "notify",
            "required": false,
            "type": "boolean",
            "x-example": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "accessible_by": {
                  "description": "The user or group to give access to the item.",
                  "properties": {
                    "id": {
                      "description": "The ID of the user or group.\n\nAlternatively, use `login` to specify a user by email\naddress.",
                      "example": "23522323",
                      "type": "string"
                    },
                    "login": {
                      "description": "The email address of the user to grant access to the item.\n\nAlternatively, use `id` to specify a user by user ID.",
                      "example": "john@example.com",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of collaborator to invite.",
                      "enum": [
                        "user",
                        "group"
                      ],
                      "example": "user",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                },
                "can_view_path": {
                  "description": "Determines if the invited users can see the entire parent path to\nthe associated folder. The user will not gain privileges in any\nparent folder and therefore can not see content the user is not\ncollaborated on.\n\nBe aware that this meaningfully increases the time required to load the\ninvitee's **All Files** page. We recommend you limit the number of\ncollaborations with `can_view_path` enabled to 1,000 per user.",
                  "example": true,
                  "type": "boolean"
                },
                "expires_at": {
                  "description": "Set the expiration date for the collaboration. At this date, the\ncollaboration will be automatically removed from the item.\n\nThis feature will only work if the **Automatically remove invited\ncollaborators: Allow folder owners to extend the expiry date**\nsetting has been enabled in the **Enterprise Settings**\nof the **Admin Console**. When the setting is not enabled,\ncollaborations can not have an expiry date and a value for this\nfield will be result in an error.",
                  "example": "2019-08-29T23:59:00-07:00",
                  "format": "date-time",
                  "type": "string"
                },
                "item": {
                  "description": "The item to attach the comment to.",
                  "properties": {
                    "id": {
                      "description": "The ID of the item that will be granted access to",
                      "example": "11446498",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of the item that this collaboration will be\ngranted access to",
                      "enum": [
                        "file",
                        "folder"
                      ],
                      "example": "file",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ],
                  "type": "object"
                },
                "role": {
                  "description": "The level of access granted.",
                  "enum": [
                    "editor",
                    "viewer",
                    "previewer",
                    "uploader",
                    "previewer uploader",
                    "viewer uploader",
                    "co-owner"
                  ],
                  "example": "editor",
                  "type": "string"
                }
              },
              "required": [
                "item",
                "accessible_by",
                "role"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a new collaboration object.",
            "schema": {
              "$ref": "#/definitions/Collaboration"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Collaborations"
        ],
        "description": "Adds a collaboration for a single user or a single group to a file\nor folder.\n\nCollaborations can be created using email address, user IDs, or a\ngroup IDs.\n\nIf a collaboration is being created with a group, access to\nthis endpoint is dependent on the group's ability to be invited.",
        "operationId": "post_collaborations",
        "summary": "Create collaboration",
        "x-box-tag": "user_collaborations"
      }
    },
    "/collaborations/{collaboration_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the collaboration",
            "in": "path",
            "name": "collaboration_id",
            "required": true,
            "type": "string",
            "x-example": "1234"
          }
        ],
        "responses": {
          "204": {
            "description": "A blank response is returned if the collaboration was\nsuccessfully deleted."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Collaborations"
        ],
        "description": "Deletes a single collaboration.",
        "operationId": "delete_collaborations_id",
        "summary": "Remove collaboration",
        "x-box-tag": "user_collaborations"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the collaboration",
            "in": "path",
            "name": "collaboration_id",
            "required": true,
            "type": "string",
            "x-example": "1234"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collaboration object.",
            "schema": {
              "$ref": "#/definitions/Collaboration"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Collaborations"
        ],
        "description": "Retrieves a single collaboration.",
        "operationId": "get_collaborations_id",
        "summary": "Get collaboration",
        "x-box-tag": "user_collaborations"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the collaboration",
            "in": "path",
            "name": "collaboration_id",
            "required": true,
            "type": "string",
            "x-example": "1234"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "can_view_path": {
                  "description": "Determines if the invited users can see the entire parent path to\nthe associated folder. The user will not gain privileges in any\nparent folder and therefore can not see content the user is not\ncollaborated on.\n\nBe aware that this meaningfully increases the time required to load the\ninvitee's **All Files** page. We recommend you limit the number of\ncollaborations with `can_view_path` enabled to 1,000 per user.",
                  "example": true,
                  "type": "boolean"
                },
                "expires_at": {
                  "description": "Update the expiration date for the collaboration. At this date,\nthe collaboration will be automatically removed from the item.\n\nThis feature will only work if the **Automatically remove invited\ncollaborators: Allow folder owners to extend the expiry date**\nsetting has been enabled in the **Enterprise Settings**\nof the **Admin Console**. When the setting is not enabled,\ncollaborations can not have an expiry date and a value for this\nfield will be result in an error.\n\nAdditionally, a collaboration can only be given an\nexpiration if it was created after the **Automatically remove\ninvited collaborator** setting was enabled.",
                  "example": "2019-08-29T23:59:00-07:00",
                  "format": "date-time",
                  "type": "string"
                },
                "role": {
                  "description": "The level of access granted.",
                  "enum": [
                    "editor",
                    "viewer",
                    "previewer",
                    "uploader",
                    "previewer uploader",
                    "viewer uploader",
                    "co-owner",
                    "owner"
                  ],
                  "example": "editor",
                  "type": "string"
                },
                "status": {
                  "description": "<!--alex ignore reject-->\nSet the status of a `pending` collaboration invitation,\neffectively accepting, or rejecting the invite.",
                  "enum": [
                    "pending",
                    "accepted",
                    "rejected"
                  ],
                  "example": "accepted",
                  "type": "string"
                }
              },
              "required": [
                "role"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an updated collaboration object unless the owner has changed.",
            "schema": {
              "$ref": "#/definitions/Collaboration"
            }
          },
          "204": {
            "description": "If the role is changed to `owner`, the collaboration is deleted\nand a new collaboration is created. The previous `owner` of\nthe old collaboration will be a `co-owner` on the new collaboration.",
            "schema": {
              "$ref": "#/definitions/Collaboration"
            }
          },
          "403": {
            "description": "Returns an error if the authenticated user does not have the right\npermissions to update the collaboration.\n\nAdditionally, this error may occur when attempting to update the\n`expires_at` field for the collaboration without the **Automatically\nremove invited collaborators: Allow folder owners to extend the expiry\ndate** setting enabled in the admin dashboard of the enterprise.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Collaborations"
        ],
        "description": "Updates a collaboration.\n\nCan be used to change the owner of an item, or to\naccept collaboration invites.",
        "operationId": "put_collaborations_id",
        "summary": "Update collaboration",
        "x-box-tag": "user_collaborations"
      }
    },
    "/collections": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all collections for the given user",
            "schema": {
              "$ref": "#/definitions/Collections"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Collections"
        ],
        "description": "Retrieves all collections for a given user.\n\nCurrently, only the `favorites` collection\nis supported.",
        "operationId": "get_collections",
        "summary": "List all collections",
        "x-box-tag": "collections"
      }
    },
    "/collections/{collection_id}/items": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the collection.",
            "in": "path",
            "name": "collection_id",
            "required": true,
            "type": "string",
            "x-example": "926489"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of items in the collection.",
            "schema": {
              "$ref": "#/definitions/Items"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Collections"
        ],
        "description": "Retrieves the files and/or folders contained within\nthis collection.",
        "operationId": "get_collections_id_items",
        "summary": "List collection items",
        "x-box-tag": "collections"
      }
    },
    "/comments": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "item": {
                  "description": "The item to attach the comment to.",
                  "properties": {
                    "id": {
                      "description": "The ID of the item",
                      "example": "11446498",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of the item that this comment will be placed on.",
                      "enum": [
                        "file",
                        "comment"
                      ],
                      "example": "file",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ],
                  "type": "object"
                },
                "message": {
                  "description": "The text of the comment.\n\nTo mention a user, use the `tagged_message`\nparameter instead.",
                  "example": "Review completed!",
                  "type": "string"
                },
                "tagged_message": {
                  "description": "The text of the comment, including `@[user_id:name]`\nsomewhere in the message to mention another user, which\nwill send them an email notification, letting them know\nthey have been mentioned.\n\nThe `user_id` is the target user's ID, where the `name`\ncan be any custom phrase. In the Box UI this name will\nlink to the user's profile.\n\nIf you are not mentioning another user, use `message`\ninstead.",
                  "example": "@[1234:John] Review completed!",
                  "type": "string"
                }
              },
              "required": [
                "message"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the newly created comment object.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Comments"
        ],
        "description": "Adds a comment by the user to a specific file, or\nas a reply to an other comment.",
        "operationId": "post_comments",
        "summary": "Create comment",
        "x-box-tag": "comments"
      }
    },
    "/comments/{comment_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the comment.",
            "in": "path",
            "name": "comment_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the comment has been deleted."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Comments"
        ],
        "description": "Permanently deletes a comment.",
        "operationId": "delete_comments_id",
        "summary": "Remove comment",
        "x-box-tag": "comments"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the comment.",
            "in": "path",
            "name": "comment_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a full comment object.",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Comments"
        ],
        "description": "Retrieves the message and metadata for a specific comment, as well\nas information on the user who created the comment.",
        "operationId": "get_comments_id",
        "summary": "Get comment",
        "x-box-tag": "comments"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the comment.",
            "in": "path",
            "name": "comment_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "message": {
                  "description": "The text of the comment to update",
                  "example": "Review completed!",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated comment object.",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Comments"
        ],
        "description": "Update the message of a comment.",
        "operationId": "put_comments_id",
        "summary": "Update comment",
        "x-box-tag": "comments"
      }
    },
    "/device_pinners/{device_pinner_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the device pin",
            "in": "path",
            "name": "device_pinner_id",
            "required": true,
            "type": "string",
            "x-example": "2324234"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the pin has been deleted."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Device pinners"
        ],
        "description": "Deletes an individual device pin.",
        "operationId": "delete_device_pinners_id",
        "summary": "Remove device pin",
        "x-box-tag": "device_pinners"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the device pin",
            "in": "path",
            "name": "device_pinner_id",
            "required": true,
            "type": "string",
            "x-example": "2324234"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns information about a single device pin.",
            "schema": {
              "$ref": "#/definitions/DevicePinner"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Device pinners"
        ],
        "description": "Retrieves information about an individual device pin.",
        "operationId": "get_device_pinners_id",
        "summary": "Get device pin",
        "x-box-tag": "device_pinners"
      }
    },
    "/enterprises/{enterprise_id}/device_pinners": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the enterprise",
            "in": "path",
            "name": "enterprise_id",
            "required": true,
            "type": "string",
            "x-example": "3442311"
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "description": "The direction to sort results in. This can be either in alphabetical ascending\n(`ASC`) or descending (`DESC`) order.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "in": "query",
            "name": "direction",
            "required": false,
            "type": "string",
            "x-example": "ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of device pins for a given enterprise.",
            "schema": {
              "$ref": "#/definitions/DevicePinners"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Device pinners"
        ],
        "description": "Retrieves all the device pins within an enterprise.\n\nThe user must have admin privileges, and the application\nneeds the \"manage enterprise\" scope to make this call.",
        "operationId": "get_enterprises_id_device_pinners",
        "summary": "List enterprise device pins",
        "x-box-tag": "device_pinners"
      }
    },
    "/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": "all",
            "description": "Defines the type of events that are returned\n\n* `all` returns everything for a user and is the default\n* `changes` returns events that may cause file tree changes\n  such as file updates or collaborations.\n* `sync` is similar to `changes` but only applies to synced folders\n* `admin_logs` returns all events for an entire enterprise and\n  requires the user making the API call to have admin permissions.",
            "enum": [
              "all",
              "changes",
              "sync",
              "admin_logs"
            ],
            "in": "query",
            "name": "stream_type",
            "type": "string",
            "x-example": "all"
          },
          {
            "description": "The location in the event stream to start receiving events from.\n\n* `now` will return an empty list events and\nthe latest stream position for initialization.\n* `0` or `null` will return all events.",
            "in": "query",
            "name": "stream_position",
            "type": "string",
            "x-example": "1348790499819"
          },
          {
            "default": 100,
            "description": "Limits the number of events returned",
            "format": "int64",
            "in": "query",
            "maximum": 500,
            "name": "limit",
            "type": "integer",
            "x-example": 50
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of events to filter by. This can only be used when\nrequesting the events with a `stream_type` of `admin_logs`. For any other\n`stream_type` this value will be ignored.",
            "in": "query",
            "items": {
              "description": "An event type that can be filtered by",
              "enum": [
                "ACCESS_GRANTED",
                "ACCESS_REVOKED",
                "ADD_DEVICE_ASSOCIATION",
                "ADD_LOGIN_ACTIVITY_DEVICE",
                "ADMIN_LOGIN",
                "APPLICATION_CREATED",
                "APPLICATION_PUBLIC_KEY_ADDED",
                "APPLICATION_PUBLIC_KEY_DELETED",
                "CHANGE_ADMIN_ROLE",
                "CHANGE_FOLDER_PERMISSION",
                "COLLABORATION_ACCEPT",
                "COLLABORATION_EXPIRATION",
                "COLLABORATION_INVITE",
                "COLLABORATION_REMOVE",
                "COLLABORATION_ROLE_CHANGE",
                "COMMENT_CREATE",
                "COMMENT_DELETE",
                "CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY",
                "CONTENT_WORKFLOW_AUTOMATION_ADD",
                "CONTENT_WORKFLOW_AUTOMATION_DELETE",
                "CONTENT_WORKFLOW_POLICY_ADD",
                "CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION",
                "CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION",
                "COPY",
                "DATA_RETENTION_CREATE_RETENTION",
                "DATA_RETENTION_REMOVE_RETENTION",
                "DELETE",
                "DELETE_USER",
                "DEVICE_TRUST_CHECK_FAILED",
                "DOWNLOAD",
                "EDIT",
                "EDIT_USER",
                "EMAIL_ALIAS_CONFIRM",
                "EMAIL_ALIAS_REMOVE",
                "ENTERPRISE_APP_AUTHORIZATION_UPDATE",
                "EXTERNAL_COLLAB_SECURITY_SETTINGS",
                "FAILED_LOGIN",
                "FILE_MARKED_MALICIOUS",
                "FILE_WATERMARKED_DOWNLOAD",
                "GROUP_ADD_ITEM",
                "GROUP_ADD_USER",
                "GROUP_CREATION",
                "GROUP_DELETION",
                "GROUP_EDITED",
                "GROUP_REMOVE_ITEM",
                "GROUP_REMOVE_USER",
                "ITEM_MODIFY",
                "ITEM_OPEN",
                "ITEM_SHARED_UPDATE",
                "ITEM_SYNC",
                "ITEM_UNSYNC",
                "LEGAL_HOLD_ASSIGNMENT_CREATE",
                "LEGAL_HOLD_ASSIGNMENT_DELETE",
                "LEGAL_HOLD_POLICY_CREATE",
                "LEGAL_HOLD_POLICY_DELETE",
                "LEGAL_HOLD_POLICY_UPDATE",
                "LOCK",
                "LOGIN",
                "METADATA_INSTANCE_CREATE",
                "METADATA_INSTANCE_DELETE",
                "METADATA_INSTANCE_UPDATE",
                "METADATA_TEMPLATE_CREATE",
                "METADATA_TEMPLATE_DELETE",
                "METADATA_TEMPLATE_UPDATE",
                "MOVE",
                "NEW_USER",
                "OAUTH2_ACCESS_TOKEN_REVOKE",
                "PREVIEW",
                "REMOVE_DEVICE_ASSOCIATION",
                "REMOVE_LOGIN_ACTIVITY_DEVICE",
                "RENAME",
                "RETENTION_POLICY_ASSIGNMENT_ADD",
                "SHARE",
                "SHARE_EXPIRATION",
                "SHIELD_ALERT",
                "STORAGE_EXPIRATION",
                "TASK_ASSIGNMENT_CREATE",
                "TASK_ASSIGNMENT_DELETE",
                "TASK_ASSIGNMENT_UPDATE",
                "TASK_CREATE",
                "TASK_UPDATE",
                "TERMS_OF_SERVICE_ACCEPT",
                "TERMS_OF_SERVICE_REJECT",
                "UNDELETE",
                "UNLOCK",
                "UNSHARE",
                "UPDATE_COLLABORATION_EXPIRATION",
                "UPDATE_SHARE_EXPIRATION",
                "UPLOAD",
                "USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE",
                "WATERMARK_LABEL_CREATE",
                "WATERMARK_LABEL_DELETE"
              ],
              "type": "string"
            },
            "name": "event_type",
            "type": "array",
            "x-example": [
              "ACCESS_GRANTED"
            ]
          },
          {
            "description": "The lower bound date and time to return events for. This can only be used\nwhen requesting the events with a `stream_type` of `admin_logs`. For any\nother `stream_type` this value will be ignored.",
            "format": "date-time",
            "in": "query",
            "name": "created_after",
            "type": "string",
            "x-example": "2012-12-12T10:53:43-08:00"
          },
          {
            "description": "The upper bound date and time to return events for. This can only be used\nwhen requesting the events with a `stream_type` of `admin_logs`. For any\nother `stream_type` this value will be ignored.",
            "format": "date-time",
            "in": "query",
            "name": "created_before",
            "required": false,
            "type": "string",
            "x-example": "2013-12-12T10:53:43-08:00"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of event objects.\n\nEvents objects are returned in pages, with each page (chunk)\nincluding a list of event objects. The response includes a\n`chunk_size` parameter indicating how many events were returned in this\nchunk, as well as the next `stream_position` that can be\nqueried.",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Returns up to a year of past events for a given user\nor for the entire enterprise.\n\nBy default this returns events for the authenticated user. To retrieve\nevents for the entire enterprise, set the `stream_type` to `admin_logs`.\nThe user making the API call will need to have admin privileges, and\nthe application will need to have the permission to access the event feed\nto get the enterprise event feed.",
        "operationId": "get_events",
        "summary": "List user and enterprise events",
        "x-box-tag": "events"
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a paginated array of servers that can be used\ninstead of the regular endpoints for long-polling events.",
            "schema": {
              "$ref": "#/definitions/RealtimeServers"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Returns a list of real-time servers that can be used for long-polling updates\nto the [event stream](#get-events).\n\nLong polling is the concept where a HTTP request is kept open until the\nserver sends a response, then repeating the process over and over to receive\nupdated responses.\n\nLong polling the event stream can only be used for user events, not for\nenterprise events.\n\nTo use long polling, first use this endpoint to retrieve a list of long poll\nURLs. Next, make a long poll request to any of the provided URLs.\n\nWhen an event occurs in monitored account a response with the value\n`new_change` will be sent. The response contains no other details as\nit only serves as a prompt to take further action such as sending a\nrequest to the [events endpoint](#get-events) with the last known\n`stream_position`.\n\nAfter the server sends this response it closes the connection. You must now\nrepeat the long poll process to begin listening for events again.\n\nIf no events occur for a while and the connection times out you will\nreceive a response with the value `reconnect`. When you receive this response\nyou’ll make another call to this endpoint to restart the process.\n\nIf you receive no events in `retry_timeout` seconds then you will need to\nmake another request to the real-time server (one of the URLs in the response\nfor this endpoint). This might be necessary due to network errors.\n\nFinally, if you receive a `max_retries` error when making a request to the\nreal-time server, you should start over by making a call to this endpoint\nfirst.",
        "operationId": "options_events",
        "summary": "Get events long poll endpoint",
        "x-box-tag": "events"
      }
    },
    "/file_requests/{file_request_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`.",
            "in": "path",
            "name": "file_request_id",
            "required": true,
            "type": "string",
            "x-example": "123"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the file request has been successfully\ndeleted."
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the file request is not found or has already been deleted,\nor the user does not have access to the associated folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `file_request_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "File requests"
        ],
        "description": "Deletes a file request permanently.",
        "operationId": "delete_file_requests_id",
        "summary": "Delete file request",
        "x-box-sanitized": true,
        "x-box-tag": "file_requests"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`.",
            "in": "path",
            "name": "file_request_id",
            "required": true,
            "type": "string",
            "x-example": "123"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a file request object.",
            "schema": {
              "$ref": "#/definitions/FileRequest"
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the file request is not found, or the user does not\nhave access to the associated folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `file_request_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "File requests"
        ],
        "description": "Retrieves the information about a file request.",
        "operationId": "get_file_requests_id",
        "summary": "Get file request",
        "x-box-enable-explorer": true,
        "x-box-tag": "file_requests"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`.",
            "in": "path",
            "name": "file_request_id",
            "required": true,
            "type": "string",
            "x-example": "123"
          },
          {
            "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
            "in": "header",
            "name": "if-match",
            "required": false,
            "type": "string",
            "x-example": "1"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FileRequestUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated file request object.",
            "schema": {
              "$ref": "#/definitions/FileRequest"
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returned if the user does not have all the permissions to complete the\nupdate.\n\n* `access_denied_insufficient_permissions` when the authenticated user\ndoes not have access to update the file request.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the file request is not found, or the user does not\nhave access to the associated folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `file_request_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file request. This indicates that the\nfile request has changed since it was last requested.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "File requests"
        ],
        "description": "Updates a file request. This can be used to activate or\ndeactivate a file request.",
        "operationId": "put_file_requests_id",
        "summary": "Update file request",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "file_requests"
      }
    },
    "/file_requests/{file_request_id}/copy": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`.",
            "in": "path",
            "name": "file_request_id",
            "required": true,
            "type": "string",
            "x-example": "123"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FileRequestCopyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns updated file request object.",
            "schema": {
              "$ref": "#/definitions/FileRequest"
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returned if the user does not have all the permissions to complete the\nupdate.\n\n* `access_denied_insufficient_permissions` when the authenticated user\ndoes not have access to update the file request.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the file request is not found, or the user does not\nhave access to the associated folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `file_request_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "File requests"
        ],
        "description": "Copies an existing file request that is already present on one folder,\nand applies it to another folder.",
        "operationId": "post_file_requests_id_copy",
        "summary": "Copy file request",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "file_requests"
      }
    },
    "/file_version_legal_holds": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the legal hold policy to get the file version legal\nholds for.",
            "in": "query",
            "name": "policy_id",
            "required": true,
            "type": "string",
            "x-example": "133870"
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of file version legal holds for a specific legal\nhold policy.",
            "schema": {
              "$ref": "#/definitions/FileVersionLegalHolds"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "File version legal holds"
        ],
        "description": "Get a list of file versions on legal hold for a legal hold\nassignment.\n\nDue to ongoing re-architecture efforts this API might not return all file\nversions for this policy ID.\n\nInstead, this API will only return file versions held in the legacy\narchitecture. Two new endpoints will available to request any file versions\nheld in the new architecture.\n\nFor file versions held in the new architecture, the `GET\n/legal_hold_policy_assignments/:id/file_versions_on_hold` API can be used to\nreturn all past file versions available for this policy assignment, and the\n`GET /legal_hold_policy_assignments/:id/files_on_hold` API can be used to\nreturn any current (latest) versions of a file under legal hold.\n\nThe `GET /legal_hold_policy_assignments?policy_id={id}` API can be used to\nfind a list of policy assignments for a given policy ID.\n\nOnce the re-architecture is completed this API will be deprecated.",
        "operationId": "get_file_version_legal_holds",
        "summary": "List file version legal holds",
        "x-box-tag": "file_version_legal_holds"
      }
    },
    "/file_version_legal_holds/{file_version_legal_hold_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the file version legal hold",
            "in": "path",
            "name": "file_version_legal_hold_id",
            "required": true,
            "type": "string",
            "x-example": "2348213"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the legal hold policy assignments for the file version.",
            "schema": {
              "$ref": "#/definitions/FileVersionLegalHold"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "File version legal holds"
        ],
        "description": "Retrieves information about the legal hold policies\nassigned to a file version.",
        "operationId": "get_file_version_legal_holds_id",
        "summary": "Get file version legal hold",
        "x-box-tag": "file_version_legal_holds"
      }
    },
    "/file_version_retentions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Filters results by files with this ID.",
            "in": "query",
            "name": "file_id",
            "required": false,
            "type": "string",
            "x-example": "43123123"
          },
          {
            "description": "Filters results by file versions with this ID.",
            "in": "query",
            "name": "file_version_id",
            "required": false,
            "type": "string",
            "x-example": "1"
          },
          {
            "description": "Filters results by the retention policy with this ID.",
            "in": "query",
            "name": "policy_id",
            "required": false,
            "type": "string",
            "x-example": "982312"
          },
          {
            "description": "Filters results by the retention policy with this disposition\naction.",
            "enum": [
              "permanently_delete",
              "remove_retention"
            ],
            "in": "query",
            "name": "disposition_action",
            "required": false,
            "type": "string",
            "x-example": "permanently_delete"
          },
          {
            "description": "Filters results by files that will have their disposition\ncome into effect before this date.",
            "in": "query",
            "name": "disposition_before",
            "required": false,
            "type": "string",
            "x-example": "2012-12-12T10:53:43-08:00"
          },
          {
            "description": "Filters results by files that will have their disposition\ncome into effect after this date.",
            "in": "query",
            "name": "disposition_after",
            "required": false,
            "type": "string",
            "x-example": "2012-12-19T10:34:23-08:00"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all file version retentions for the enterprise.",
            "schema": {
              "$ref": "#/definitions/FileVersionRetentions"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "File version retentions"
        ],
        "description": "Retrieves all file version retentions for the given enterprise.",
        "operationId": "get_file_version_retentions",
        "summary": "List file version retentions",
        "x-box-tag": "file_version_retentions"
      }
    },
    "/file_version_retentions/{file_version_retention_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the file version retention",
            "in": "path",
            "name": "file_version_retention_id",
            "required": true,
            "type": "string",
            "x-example": "3424234"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a file version retention object.",
            "schema": {
              "$ref": "#/definitions/FileVersionRetention"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "File version retentions"
        ],
        "description": "Returns information about a file version retention.",
        "operationId": "get_file_version_retentions_id",
        "summary": "Get retention on file",
        "x-box-tag": "file_version_retentions"
      }
    },
    "/files/content": {
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "name": {
                  "description": "The name for the file",
                  "example": "File.mp4",
                  "type": "string"
                },
                "parent": {
                  "allOf": [
                    {
                      "description": "The parent for this item",
                      "properties": {
                        "id": {
                          "description": "The ID of parent item",
                          "example": "123",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "The parent folder to upload the file to"
                    }
                  ]
                },
                "size": {
                  "description": "The size of the file in bytes",
                  "example": 1024,
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If the check passed, the response will include a session URL that\ncan be used to upload the file to.",
            "schema": {
              "$ref": "#/definitions/UploadUrl"
            }
          },
          "409": {
            "description": "If the check did not pass, the response will include some details on\nwhy it did not pass.",
            "schema": {
              "$ref": "#/definitions/ConflictError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Files"
        ],
        "description": "Performs a check to verify that a file will be accepted by Box\nbefore you upload the entire file.",
        "operationId": "options_files_content",
        "summary": "Preflight check before upload",
        "x-box-tag": "uploads"
      },
      "post": {
        "servers": [
          {
            "description": "Server for file uploads",
            "url": "https://upload.box.com/api/2.0"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "An optional header containing the SHA1 hash of the file to\nensure that the file was not corrupted in transit.",
            "in": "header",
            "name": "content-md5",
            "required": false,
            "type": "string",
            "x-example": "134b65991ed521fcfe4724b7d814ab8ded5185dc"
          },
          {
            "description": "The additional attributes of the file being uploaded. Mainly the\nname and the parent folder. These attributes are part of the multi\npart request body and are in JSON format.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
            "in": "formData",
            "name": "attributes",
            "required": true,
            "type": "object"
          },
          {
            "description": "The content of the file to upload to Box.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
            "format": "binary",
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the new file object in a list.",
            "schema": {
              "$ref": "#/definitions/Files"
            }
          },
          "409": {
            "description": "Returns an error if the file already exists,\nor the account has run out of disk space.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Uploads"
        ],
        "description": "Uploads a small file to Box. For file sizes over 50MB we recommend\nusing the Chunk Upload APIs.\n\n# Request body order\n\nThe `attributes` part of the body must come **before** the\n`file` part. Requests that do not follow this format when\nuploading the file will receive a HTTP `400` error with a\n`metadata_after_file_contents` error code.",
        "operationId": "post_files_content",
        "summary": "Upload file",
        "x-box-tag": "uploads"
      }
    },
    "/files/upload_sessions": {
      "post": {
        "servers": [
          {
            "description": "Server for file uploads",
            "url": "https://upload.box.com/api/2.0"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "file_name": {
                  "description": "The name of new file",
                  "example": "Project.mov",
                  "type": "string"
                },
                "file_size": {
                  "description": "The total number of bytes of the file to be uploaded",
                  "example": 104857600,
                  "format": "int64",
                  "type": "integer"
                },
                "folder_id": {
                  "description": "The ID of the folder to upload the new file to.",
                  "example": "0",
                  "type": "string"
                }
              },
              "required": [
                "folder_id",
                "file_size",
                "file_name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a new upload session.",
            "schema": {
              "$ref": "#/definitions/UploadSession"
            }
          },
          "400": {
            "description": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `missing_destination`: No `folder_id` was provided\n* `invalid_folder_id`: `folder_id` is not valid\n* `item_name_invalid`: `file_name` is not valid\n* `missing_file_size`: `file_size` was not provided\n* `invalid_file_size`: `file_size` was not a valid number\n* `file_size_too_small`: `file_size` is below minimum file size for\n  uploads via this API\n* `missing_file_name`: `file_name` was not provided",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returns an error if the operation is not allowed for some reason.\n\n* `storage_limit_exceeded`: Account storage limit reached",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if the parent folder could not be found, or\nthe authenticated user does not have access to it.\n\n* `invalid_parameter`: The `folder_id` value represents a\n  folder that the user does not have access to, or does not\n  exist.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error if the file already exists,\nor the account has run out of disk space.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Uploads (Chunked)"
        ],
        "description": "Creates an upload session for a new file.",
        "operationId": "post_files_upload_sessions",
        "summary": "Create upload session",
        "x-box-tag": "chunked_uploads"
      }
    },
    "/files/upload_sessions/{upload_session_id}": {
      "delete": {
        "servers": [
          {
            "description": "Server for file uploads",
            "url": "https://upload.box.com/api/2.0"
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the upload session.",
            "in": "path",
            "name": "upload_session_id",
            "required": true,
            "type": "string",
            "x-example": "D5E3F7A"
          }
        ],
        "responses": {
          "204": {
            "description": "A blank response is returned if the session was\nsuccessfully aborted."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Uploads (Chunked)"
        ],
        "description": "Abort an upload session and discard all data uploaded.\n\nThis cannot be reversed.",
        "operationId": "delete_files_upload_sessions_id",
        "summary": "Remove upload session",
        "x-box-tag": "chunked_uploads"
      },
      "get": {
        "servers": [
          {
            "description": "Server for file uploads",
            "url": "https://upload.box.com/api/2.0"
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the upload session.",
            "in": "path",
            "name": "upload_session_id",
            "required": true,
            "type": "string",
            "x-example": "D5E3F7A"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an upload session object.",
            "schema": {
              "$ref": "#/definitions/UploadSession"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Uploads (Chunked)"
        ],
        "description": "Return information about an upload session.",
        "operationId": "get_files_upload_sessions_id",
        "summary": "Get upload session",
        "x-box-tag": "chunked_uploads"
      },
      "put": {
        "servers": [
          {
            "description": "Server for file uploads",
            "url": "https://upload.box.com/api/2.0"
          }
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the upload session.",
            "in": "path",
            "name": "upload_session_id",
            "required": true,
            "type": "string",
            "x-example": "D5E3F7A"
          },
          {
            "description": "The [RFC3230][1] message digest of the chunk uploaded.\n\nOnly SHA1 is supported. The SHA1 digest must be Base64\nencoded. The format of this header is as\n`sha=BASE64_ENCODED_DIGEST`.\n\n[1]: https://tools.ietf.org/html/rfc3230",
            "in": "header",
            "name": "digest",
            "required": true,
            "type": "string",
            "x-example": "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
          },
          {
            "description": "The byte range of the chunk.\n\nMust not overlap with the range of a part already\nuploaded this session.",
            "in": "header",
            "name": "content-range",
            "required": true,
            "type": "string",
            "x-example": "bytes 8388608-16777215/445856194"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "The binary content of the file",
              "format": "binary",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chunk has been uploaded successfully.",
            "schema": {
              "$ref": "#/definitions/UploadedPart"
            }
          },
          "409": {
            "description": "Returns an error if the chunk conflicts with another\nchunk previously uploaded.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Returns an error if a precondition was not met.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "416": {
            "description": "Returns an error if the content range does not match a specified range\nfor the session.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Uploads (Chunked)"
        ],
        "description": "Updates a chunk of an upload session for a file.",
        "operationId": "put_files_upload_sessions_id",
        "summary": "Upload part of file",
        "x-box-tag": "chunked_uploads"
      }
    },
    "/files/upload_sessions/{upload_session_id}/commit": {
      "post": {
        "servers": [
          {
            "description": "Server for file uploads",
            "url": "https://upload.box.com/api/2.0"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the upload session.",
            "in": "path",
            "name": "upload_session_id",
            "required": true,
            "type": "string",
            "x-example": "D5E3F7A"
          },
          {
            "description": "The [RFC3230][1] message digest of the whole file.\n\nOnly SHA1 is supported. The SHA1 digest must be Base64\nencoded. The format of this header is as\n`sha=BASE64_ENCODED_DIGEST`.\n\n[1]: https://tools.ietf.org/html/rfc3230",
            "in": "header",
            "name": "digest",
            "required": true,
            "type": "string",
            "x-example": "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
          },
          {
            "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
            "in": "header",
            "name": "if-match",
            "required": false,
            "type": "string",
            "x-example": "1"
          },
          {
            "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
            "in": "header",
            "name": "if-none-match",
            "required": false,
            "type": "string",
            "x-example": "1"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "parts": {
                  "description": "The list details for the uploaded parts",
                  "items": {
                    "$ref": "#/definitions/UploadPart"
                  },
                  "type": "array"
                }
              },
              "required": [
                "parts"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the file object in a list.",
            "schema": {
              "$ref": "#/definitions/Files"
            }
          },
          "202": {
            "description": "Returns when all chunks have been uploaded but not yet processed.\n\nInspect the upload session to get more information about the\nprogress of processing the chunks, then retry committing the file\nwhen all chunks have processed.",
            "headers": {
              "Retry-After": {
                "description": "Indicates the number of seconds the client should wait before\nattempting their commit request again.",
                "type": "integer"
              }
            }
          },
          "409": {
            "description": "Returns an error if there is already a file with the same name\nin the target folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Returns an error if the `If-Match` or `If-None-Match` conditions fail.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Uploads (Chunked)"
        ],
        "description": "Close an upload session and create a file from the\nuploaded chunks.",
        "operationId": "post_files_upload_sessions_id_commit",
        "summary": "Commit upload session",
        "x-box-tag": "chunked_uploads"
      }
    },
    "/files/upload_sessions/{upload_session_id}/parts": {
      "get": {
        "servers": [
          {
            "description": "Server for file uploads",
            "url": "https://upload.box.com/api/2.0"
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the upload session.",
            "in": "path",
            "name": "upload_session_id",
            "required": true,
            "type": "string",
            "x-example": "D5E3F7A"
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of parts that have been uploaded.",
            "schema": {
              "$ref": "#/definitions/UploadParts"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Uploads (Chunked)"
        ],
        "description": "Return a list of the chunks uploaded to the upload\nsession so far.",
        "operationId": "get_files_upload_sessions_id_parts",
        "summary": "List parts",
        "x-box-tag": "chunked_uploads"
      }
    },
    "/files/{file_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
            "in": "header",
            "name": "if-match",
            "required": false,
            "type": "string",
            "x-example": "1"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the file has been successfully\ndeleted."
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the file is not found or has already been deleted, or the user\ndoes not have access to the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `file_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file. This indicates that the file\nhas changed since it was last requested.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Files"
        ],
        "description": "Deletes a file, either permanently or by moving it to\nthe trash.\n\nThe the enterprise settings determine whether the item will\nbe permanently deleted from Box or moved to the trash.",
        "operationId": "delete_files_id",
        "summary": "Delete file",
        "x-box-sanitized": true,
        "x-box-tag": "files"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n\nAdditionally this field can be used to query any metadata\napplied to the file by specifying the `metadata` field as well\nas the scope and key of the template to retrieve, for example\n`?field=metadata.enterprise_12345.contractTemplate`.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
            "in": "header",
            "name": "if-none-match",
            "required": false,
            "type": "string",
            "x-example": "1"
          },
          {
            "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
            "in": "header",
            "name": "boxapi",
            "required": false,
            "type": "string",
            "x-example": "shared_link=[link]&shared_link_password=[password]"
          },
          {
            "description": "A header required to request specific `representations`\nof a file. Use this in combination with the `fields` query\nparameter to request a specific file representation.\n\nThe general format for these representations is\n`X-Rep-Hints: [...]` where `[...]` is one or many\nhints in the format `[fileType?query]`.\n\nFor example, to request a `png` representation in `32x32`\nas well as `94x94` pixel dimensions provide the following\nhints.\n\n`X-Rep-Hints: [jpg?dimensions=32x32][jpg?dimensions=94x94]`\n\nAdditionally, a `text` representation is available for all\ndocument file types in Box using the `[extracted_text]`\nrepresentation.\n\n`X-Rep-Hints: [extracted_text]`",
            "in": "header",
            "name": "x-rep-hints",
            "required": true,
            "type": "string",
            "x-example": "[pdf]"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a file object.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "304": {
            "description": "Returns an empty response when the `If-None-Match` header matches\nthe current `etag` value of the folder. This indicates that the folder\nhas not changed since it was last requested."
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the file is not found, or the user does not\nhave access to the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `file_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "415": {
            "description": "Returns an error if an action is performed on a file with an\nincorrect media type.\n\n* `unsupported_media_type` when requesting an `expiring_embed_link`\n  for a file that is not supported by Box Embed.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Files"
        ],
        "description": "Retrieves the details about a file.",
        "operationId": "get_files_id",
        "summary": "Get file information",
        "x-box-enable-explorer": true,
        "x-box-tag": "files"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "name": {
                  "description": "An optional new name for the file.",
                  "example": "Restored.docx",
                  "type": "string"
                },
                "parent": {
                  "allOf": [
                    {
                      "description": "The parent for this item",
                      "properties": {
                        "id": {
                          "description": "The ID of parent item",
                          "example": "123",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "Specifies an optional ID of a folder to restore the file to\nwhen the original folder no longer exists.\n\nPlease be aware that this ID will only be used if the original\nfolder no longer exists. Use this ID to provide a fallback\nlocation to restore the file to if the original location\nhas been deleted."
                    }
                  ]
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a file object when the file has been restored.",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "403": {
            "description": "Returns an error if the user does not have access to the folder\nthe file is being restored to, or the user does not have permission\nto restore files from the trash.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if the file is not in the trash.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error if there is an file with the same name\nin the folder the file is being restored to.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Trashed files"
        ],
        "description": "Restores a file that has been moved to the trash.\n\nAn optional new parent ID can be provided to restore the file to in case the\noriginal folder has been deleted.",
        "operationId": "post_files_id",
        "summary": "Restore file",
        "x-box-tag": "trashed_files"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
            "in": "header",
            "name": "if-match",
            "required": false,
            "type": "string",
            "x-example": "1"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "tags": {
                  "description": "The tags for this item. These tags are shown in\nthe Box web app and mobile apps next to an item.\n\nTo add or remove a tag, retrieve the item's current tags,\nmodify them, and then update this field.\n\nThere is a limit of 100 tags per item, and 10,000\nunique tags per enterprise.",
                  "example": [
                    "approved"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 100,
                  "minItems": 1,
                  "type": "array"
                },
                "description": {
                  "description": "The description for a file. This can be seen in the right-hand sidebar panel\nwhen viewing a file in the Box web app. Additionally, this index is used in\nthe search index of the file, allowing users to find the file by the content\nin the description.",
                  "example": "The latest reports. Automatically updated",
                  "maxLength": 256,
                  "type": "string"
                },
                "lock": {
                  "description": "Defines a lock on an item. This prevents the item from being\nmoved, renamed, or otherwise changed by anyone other than the user\nwho created the lock.\n\nSet this to `null` to remove the lock.",
                  "properties": {
                    "access": {
                      "description": "The type of this object.",
                      "enum": [
                        "lock"
                      ],
                      "example": "lock",
                      "type": "string"
                    },
                    "expires_at": {
                      "description": "Defines the time at which the lock expires.",
                      "example": "2012-12-12T10:53:43-08:00",
                      "format": "date-time",
                      "type": "string"
                    },
                    "is_download_prevented": {
                      "description": "Defines if the file can be downloaded while it is locked.",
                      "example": true,
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                },
                "name": {
                  "description": "An optional different name for the file. This can be used to\nrename the file.",
                  "example": "NewFile.txt",
                  "type": "string"
                },
                "parent": {
                  "allOf": [
                    {
                      "description": "The parent for this item",
                      "properties": {
                        "id": {
                          "description": "The ID of parent item",
                          "example": "123",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "An optional new parent folder for the file. This can be used\nto move the file to a new folder."
                    }
                  ]
                },
                "permissions": {
                  "description": "Defines who can download a file.",
                  "properties": {
                    "can_download": {
                      "description": "Defines who is allowed to download this file. The possible\nvalues are either `open` for everyone or `company` for\nthe other members of the user's enterprise.\n\nThis setting overrides the download permissions that are\nnormally part of the `role` of a collaboration. When set to\n`company`, this essentially removes the download option for\nexternal users with `viewer` or `editor` a roles.",
                      "enum": [
                        "open",
                        "company"
                      ],
                      "example": "open",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "shared_link": {
                  "allOf": [
                    {
                      "description": "Defines a shared link for an item. Set this to `null` to remove\nthe shared link.",
                      "properties": {
                        "access": {
                          "description": "The level of access for the shared link. This can be\nrestricted to anyone with the link (`open`), only people\nwithin the company (`company`) and only those who\nhave been invited to the folder (`collaborators`).\n\nIf not set, this field defaults to the access level specified\nby the enterprise admin. To create a shared link with this\ndefault setting pass the `shared_link` object with\nno `access` field, for example `{ \"shared_link\": {} }`.\n\nThe `company` access level is only available to paid\naccounts.",
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "example": "open",
                          "type": "string"
                        },
                        "password": {
                          "description": "The password required to access the shared link. Set the\npassword to `null` to remove it.\n\nA password can only be set when `access` is set to `open`.",
                          "example": "do-not-use-this-password",
                          "type": "string"
                        },
                        "permissions": {
                          "properties": {
                            "can_download": {
                              "description": "If the shared link allows for downloading of files.\nThis can only be set when `access` is set to\n`open` or `company`.",
                              "example": true,
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "unshared_at": {
                          "description": "The timestamp at which this shared link will\nexpire. This field can only be set by\nusers with paid accounts.",
                          "example": "2012-12-12T10:53:43-08:00",
                          "format": "date-time",
                          "type": "string"
                        },
                        "vanity_name": {
                          "description": "Defines a custom vanity name to use in the shared link URL,\nfor example `https://app.box.com/v/my-shared-link`.\n\nCustom URLs should not be used when sharing sensitive content\nas vanity URLs are a lot easier to guess than regular shared links.",
                          "example": "my-shared-link",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "Defines a shared link for a file. Set this to `null` to remove\nthe shared link."
                    }
                  ]
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a file object.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returned if the user does not have all the permissions to complete the\nupdate.\n\n* `access_denied_insufficient_permissions` when the authenticated user\ndoes not have access the destination folder to move the file to.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the file is not found, or the user does not\nhave access to the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `file_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file. This indicates that the file\nhas changed since it was last requested.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Files"
        ],
        "description": "Updates a file. This can be used to rename or move a file,\ncreate a shared link, or lock a file.",
        "operationId": "put_files_id",
        "summary": "Update file",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "files"
      }
    },
    "/files/{file_id}#add_shared_link": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "Explicitly request the `shared_link` fields\nto be returned for this item.",
            "in": "query",
            "name": "fields",
            "required": true,
            "type": "string",
            "x-example": "shared_link"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "shared_link": {
                  "description": "The settings for the shared link to create on the file.\n\nUse an empty object (`{}`) to use the default settings for shared\nlinks.",
                  "properties": {
                    "access": {
                      "description": "The level of access for the shared link. This can be\nrestricted to anyone with the link (`open`), only people\nwithin the company (`company`) and only those who\nhave been invited to the file (`collaborators`).\n\nIf not set, this field defaults to the access level specified\nby the enterprise admin. To create a shared link with this\ndefault setting pass the `shared_link` object with\nno `access` field, for example `{ \"shared_link\": {} }`.\n\nThe `company` access level is only available to paid\naccounts.",
                      "enum": [
                        "open",
                        "company",
                        "collaborators"
                      ],
                      "example": "open",
                      "type": "string"
                    },
                    "password": {
                      "description": "The password required to access the shared link. Set the\npassword to `null` to remove it.\n\nA password can only be set when `access` is set to `open`.",
                      "example": "do-not-use-this-password",
                      "type": "string"
                    },
                    "permissions": {
                      "properties": {
                        "can_download": {
                          "description": "If the shared link allows for downloading of files.\nThis can only be set when `access` is set to\n`open` or `company`.",
                          "example": true,
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "unshared_at": {
                      "description": "The timestamp at which this shared link will\nexpire. This field can only be set by\nusers with paid accounts.",
                      "example": "2012-12-12T10:53:43-08:00",
                      "format": "date-time",
                      "type": "string"
                    },
                    "vanity_name": {
                      "description": "Defines a custom vanity name to use in the shared link URL,\nfor example `https://app.box.com/v/my-shared-link`.\n\nCustom URLs should not be used when sharing sensitive content\nas vanity URLs are a lot easier to guess than regular shared\nlinks.",
                      "example": "my-shared-link",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the base representation of a file with a new shared\nlink attached.",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returned if the user does not have all the permissions to complete the\nupdate.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the file is not found, or the user does not\nhave access to the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `file_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file. This indicates that the file\nhas changed since it was last requested.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Shared links (Files)"
        ],
        "description": "Adds a shared link to a file.",
        "operationId": "put_files_id#add_shared_link",
        "summary": "Add shared link to file",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "shared_links_files"
      }
    },
    "/files/{file_id}#get_shared_link": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "Explicitly request the `shared_link` fields\nto be returned for this item.",
            "in": "query",
            "name": "fields",
            "required": true,
            "type": "string",
            "x-example": "shared_link"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the base representation of a file with the\nadditional shared link information.",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the file is not found, or the user does not\nhave access to the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `file_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Shared links (Files)"
        ],
        "description": "Gets the information for a shared link on a file.",
        "operationId": "get_files_id#get_shared_link",
        "summary": "Get shared link for file",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "shared_links_files"
      }
    },
    "/files/{file_id}#remove_shared_link": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "Explicitly request the `shared_link` fields\nto be returned for this item.",
            "in": "query",
            "name": "fields",
            "required": true,
            "type": "string",
            "x-example": "shared_link"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "shared_link": {
                  "description": "By setting this value to `null`, the shared link\nis removed from the file.",
                  "example": null,
                  "type": "object",
                  "x-nullable": true
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a basic representation of a file, with the shared link removed.",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returned if the user does not have all the permissions to complete the\nupdate.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the file is not found, or the user does not\nhave access to the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `file_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file. This indicates that the file\nhas changed since it was last requested.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Shared links (Files)"
        ],
        "description": "Removes a shared link from a file.",
        "operationId": "put_files_id#remove_shared_link",
        "summary": "Remove shared link from file",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "shared_links_files"
      }
    },
    "/files/{file_id}#update_shared_link": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "Explicitly request the `shared_link` fields\nto be returned for this item.",
            "in": "query",
            "name": "fields",
            "required": true,
            "type": "string",
            "x-example": "shared_link"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "shared_link": {
                  "description": "The settings for the shared link to update.",
                  "properties": {
                    "access": {
                      "description": "The level of access for the shared link. This can be\nrestricted to anyone with the link (`open`), only people\nwithin the company (`company`) and only those who\nhave been invited to the folder (`collaborators`).\n\nIf not set, this field defaults to the access level specified\nby the enterprise admin. To create a shared link with this\ndefault setting pass the `shared_link` object with\nno `access` field, for example `{ \"shared_link\": {} }`.\n\nThe `company` access level is only available to paid\naccounts.",
                      "enum": [
                        "open",
                        "company",
                        "collaborators"
                      ],
                      "example": "open",
                      "type": "string"
                    },
                    "password": {
                      "description": "The password required to access the shared link. Set the\npassword to `null` to remove it.\n\nA password can only be set when `access` is set to `open`.",
                      "example": "do-not-use-this-password",
                      "type": "string"
                    },
                    "permissions": {
                      "properties": {
                        "can_download": {
                          "description": "If the shared link allows for downloading of files.\nThis can only be set when `access` is set to\n`open` or `company`.",
                          "example": true,
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "unshared_at": {
                      "description": "The timestamp at which this shared link will\nexpire. This field can only be set by\nusers with paid accounts.",
                      "example": "2012-12-12T10:53:43-08:00",
                      "format": "date-time",
                      "type": "string"
                    },
                    "vanity_name": {
                      "description": "Defines a custom vanity name to use in the shared link URL,\nfor example `https://app.box.com/v/my-shared-link`.\n\nCustom URLs should not be used when sharing sensitive content\nas vanity URLs are a lot easier to guess than regular shared\nlinks.",
                      "example": "my-shared-link",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a basic representation of the file, with the updated shared\nlink attached.",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returned if the user does not have all the permissions to complete the\nupdate.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the file is not found, or the user does not\nhave access to the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `file_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file. This indicates that the file\nhas changed since it was last requested.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Shared links (Files)"
        ],
        "description": "Updates a shared link on a file.",
        "operationId": "put_files_id#update_shared_link",
        "summary": "Update shared link on file",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "shared_links_files"
      }
    },
    "/files/{file_id}/collaborations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of collaboration objects. If there are no\ncollaborations on this file an empty collection will be returned.\n\nThis list includes pending collaborations, for which the `status`\nis set to `pending`, indicating invitations that have been sent but not\nyet accepted.",
            "schema": {
              "$ref": "#/definitions/Collaborations"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Collaborations (List)"
        ],
        "description": "Retrieves a list of pending and active collaborations for a\nfile. This returns all the users that have access to the file\nor have been invited to the file.",
        "operationId": "get_files_id_collaborations",
        "summary": "List file collaborations",
        "x-box-tag": "list_collaborations"
      }
    },
    "/files/{file_id}/comments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of comment objects. If there are no\ncomments on this file an empty collection will be returned.",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Comments"
        ],
        "description": "Retrieves a list of comments for a file.",
        "operationId": "get_files_id_comments",
        "summary": "List file comments",
        "x-box-tag": "comments"
      }
    },
    "/files/{file_id}/content": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "The byte range of the content to download.\n\nThe format `{start_byte}-{end_byte}` can be used to specify\nwhat section of the file to download.",
            "in": "header",
            "name": "range",
            "required": false,
            "type": "string",
            "x-example": "0-1024"
          },
          {
            "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
            "in": "header",
            "name": "boxapi",
            "required": false,
            "type": "string",
            "x-example": "shared_link=[link]&shared_link_password=[password]"
          },
          {
            "description": "The file version to download",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "string",
            "x-example": "4"
          },
          {
            "description": "An optional access token that can be used to pre-authenticate this request, which means that a download link can be shared with a browser or a third party service without them needing to know how to handle the authentication.\nWhen using this parameter, please make sure that the access token is sufficiently scoped down to only allow read access to that file and no other files or folders.",
            "in": "query",
            "name": "access_token",
            "required": false,
            "type": "string",
            "x-example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
          }
        ],
        "responses": {
          "202": {
            "description": "If the file is not ready to be downloaded yet `Retry-After` header will\nbe returned indicating the time in seconds after which the file will\nbe available for the client to download.\n\nThis response can occur when the file was uploaded immediately before the\ndownload request.",
            "headers": {
              "Retry-After": {
                "description": "The time in seconds after which to retry the download",
                "type": "integer"
              }
            }
          },
          "302": {
            "description": "If the file is available to be downloaded the response will include a\n`Location` header for the file on `dl.boxcloud.com`.\n\nThe `dl.boxcloud.com` URL is not persistent and clients will need\nto follow the redirect in order to actually download the file.",
            "headers": {
              "Location": {
                "description": "A pointer to the download URL",
                "format": "url",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Downloads"
        ],
        "description": "Returns the contents of a file in binary format.",
        "operationId": "get_files_id_content",
        "summary": "Download file",
        "x-box-tag": "downloads"
      },
      "post": {
        "servers": [
          {
            "description": "Server for file uploads",
            "url": "https://upload.box.com/api/2.0"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
            "in": "header",
            "name": "if-match",
            "required": false,
            "type": "string",
            "x-example": "1"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "An optional header containing the SHA1 hash of the file to\nensure that the file was not corrupted in transit.",
            "in": "header",
            "name": "content-md5",
            "required": false,
            "type": "string",
            "x-example": "134b65991ed521fcfe4724b7d814ab8ded5185dc"
          },
          {
            "description": "The additional attributes of the file being uploaded. Mainly the\nname and the parent folder. These attributes are part of the multi\npart request body and are in JSON format.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
            "in": "formData",
            "name": "attributes",
            "required": true,
            "type": "object"
          },
          {
            "description": "The content of the file to upload to Box.\n\n<Message warning>\n\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n\n</Message>",
            "format": "binary",
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the new file object in a list.",
            "schema": {
              "$ref": "#/definitions/Files"
            }
          },
          "412": {
            "description": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file. This indicates that the file\nhas changed since it was last requested.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Uploads"
        ],
        "description": "Update a file's content. For file sizes over 50MB we recommend\nusing the Chunk Upload APIs.\n\n# Request body order\n\nThe `attributes` part of the body must come **before** the\n`file` part. Requests that do not follow this format when\nuploading the file will receive a HTTP `400` error with a\n`metadata_after_file_contents` error code.",
        "operationId": "post_files_id_content",
        "summary": "Upload file version",
        "x-box-tag": "uploads"
      }
    },
    "/files/{file_id}/copy": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "nullable": false,
              "properties": {
                "name": {
                  "description": "An optional new name for the copied file.\n\nThere are some restrictions to the file name. Names containing\nnon-printable ASCII characters, forward and backward slashes\n(`/`, `\\`), and protected names like `.` and `..` are\nautomatically sanitized by removing the non-allowed\ncharacters.",
                  "example": "FileCopy.txt",
                  "maxLength": 255,
                  "type": "string"
                },
                "parent": {
                  "description": "The destination folder to copy the file to.",
                  "properties": {
                    "id": {
                      "description": "The ID of folder to copy the file to.",
                      "example": "0",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "version": {
                  "description": "An optional ID of the specific file version to copy.",
                  "example": "0",
                  "type": "string"
                }
              },
              "required": [
                "parent"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a new file object representing the copied file.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "304": {
            "description": "Returns an empty response when the `If-None-Match` header matches\nthe current `etag` value of the file. This indicates that the file\nhas not changed since it was last requested."
          },
          "400": {
            "description": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `bad_request` when a parameter is missing.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if either the source file or the destination\nfolder could not be found, or the authenticated user does not\nhave access to either.\n\n* `not_found` when the authenticated user does not have access\n  to the source file or the destination folder",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "* `operation_blocked_temporary`: Returned if either of the destination\n  or source folders is locked due to another move, copy, delete or\n  restore operation in process.\n\n  The operation can be retried at a later point.\n\n* `item_name_in_use` when a folder with the same name already\n  exists.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Files"
        ],
        "description": "Creates a copy of a file.",
        "operationId": "post_files_id_copy",
        "summary": "Copy file",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "files"
      }
    },
    "/files/{file_id}/metadata": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all the metadata associated with a file.\n\nThis API does not support pagination and will therefore always return\nall of the metadata associated to the file.",
            "schema": {
              "$ref": "#/definitions/Metadatas"
            }
          },
          "403": {
            "description": "Returned when the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned when the user does not have access to the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata instances (Files)"
        ],
        "description": "Retrieves all metadata for a given file.",
        "operationId": "get_files_id_metadata",
        "summary": "List metadata instances on file",
        "x-box-sanitized": true,
        "x-box-tag": "file_metadata"
      }
    },
    "/files/{file_id}/metadata/enterprise/securityClassification-6VMVochwUWo": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the classification is\nsuccessfully deleted."
          },
          "400": {
            "description": "Returned when the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the file does not have any classification applied\nto it, or when the user does not have access to the\nfile.\n\n* `instance_not_found` - An instance of the classification metadata\ntemplate with the was not found on this file.\n* `not_found` - The file was not found, or the user does not have access\nto the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned when the method was not allowed.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Classifications on files"
        ],
        "description": "Removes any classifications from a file.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/files/:id//enterprise_12345/securityClassification-6VMVochwUWo`.",
        "operationId": "delete_files_id_metadata_enterprise_securityClassification-6VMVochwUWo",
        "summary": "Remove classification from file",
        "x-box-sanitized": true,
        "x-box-tag": "file_classifications"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "201": {
            "description": "Returns an instance of the `securityClassification` metadata\ntemplate, which contains a `Box__Security__Classification__Key`\nfield that lists all the classifications available to this\nenterprise.",
            "schema": {
              "$ref": "#/definitions/Classification"
            }
          },
          "403": {
            "description": "Returned when the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the metadata template specified\nwas not applied to this file or the user does not have access to the\nfile.\n\n* `instance_not_found` - The metadata template was not applied to the\nfile.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned when the method was not allowed.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Classifications on files"
        ],
        "description": "Retrieves the classification metadata instance that\nhas been applied to a file.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/files/:id//enterprise_12345/securityClassification-6VMVochwUWo`.",
        "operationId": "get_files_id_metadata_enterprise_securityClassification-6VMVochwUWo",
        "summary": "Get classification on file",
        "x-box-sanitized": true,
        "x-box-tag": "file_classifications"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "Box__Security__Classification__Key": {
                  "description": "The name of the classification to apply to this file.\n\nTo list the available classifications in an enterprise,\nuse the classification API to retrieve the\n[classification template](e://get_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema)\nwhich lists all available classification keys.",
                  "example": "Sensitive",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the classification template instance\nthat was applied to the file.",
            "schema": {
              "$ref": "#/definitions/Classification"
            }
          },
          "400": {
            "description": "Returns an error when the request body is not valid.\n\n* `schema_validation_failed` - The request body contains a value for a for\na field that either does not exist, or for which the value or type does\nnot match the expected field type. An example might be an unknown option\nfor an `enum` or `multiSelect` field.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the file or metadata template could not be found.\n\n* `not_found` - The file could not be found, or the user does not have\naccess to the file.\n* `instance_tuple_not_found` - The metadata template could not be found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error when an instance of this metadata template is already\npresent on the file.\n\n* `tuple_already_exists` - An instance of them metadata template already\nexists on the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Classifications on files"
        ],
        "description": "Adds a classification to a file by specifying the label of the\nclassification to add.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/files/:id//enterprise_12345/securityClassification-6VMVochwUWo`.",
        "operationId": "post_files_id_metadata_enterprise_securityClassification-6VMVochwUWo",
        "summary": "Add classification to file",
        "x-box-sanitized": true,
        "x-box-tag": "file_classifications"
      },
      "put": {
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "A list containing the one change to make, to\nupdate the classification label.",
              "items": {
                "description": "The operation to perform on the classification\nmetadata template instance. In this case, it use\nused to replace the value stored for the\n`Box__Security__Classification__Key` field with a new\nvalue.",
                "properties": {
                  "op": {
                    "description": "`replace`",
                    "enum": [
                      "replace"
                    ],
                    "example": "replace",
                    "type": "string"
                  },
                  "path": {
                    "description": "`/Box__Security__Classification__Key`",
                    "enum": [
                      "/Box__Security__Classification__Key"
                    ],
                    "example": "/Box__Security__Classification__Key",
                    "type": "string"
                  },
                  "value": {
                    "description": "The name of the classification to apply to this file.\n\nTo list the available classifications in an enterprise,\nuse the classification API to retrieve the\n[classification template](e://get_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema)\nwhich lists all available classification keys.",
                    "example": "Sensitive",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated classification metadata template instance.",
            "schema": {
              "$ref": "#/definitions/Classification"
            }
          },
          "400": {
            "description": "Returns an error when the request body is not valid.\n\n* `bad_request` - The request body format is not an array of valid JSON\nPatch operations.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "Returns an error in some edge cases when the request body is not a valid\narray of JSON Patch items.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Classifications on files"
        ],
        "description": "Updates a classification on a file.\n\nThe classification can only be updated if a classification has already been\napplied to the file before. When editing classifications, only values are\ndefined for the enterprise will be accepted.",
        "operationId": "put_files_id_metadata_enterprise_securityClassification-6VMVochwUWo",
        "summary": "Update classification on file",
        "x-box-sanitized": true,
        "x-box-tag": "file_classifications"
      }
    },
    "/files/{file_id}/metadata/global/boxSkillsCards": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the cards are\nsuccessfully deleted."
          },
          "404": {
            "description": "Returns an error when the file does not have an instance of the Box Skill\ncards applied to it, or when the user does not have access to the file.\n\n* `instance_not_found` - An instance of the metadata template for Box\nSkill cards was not found on this file.\n* `not_found` - The file was not found, or the user does not have access\nto the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned when the method was not allowed.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Skills"
        ],
        "description": "Removes any Box Skills cards metadata from a file.",
        "operationId": "delete_files_id_metadata_global_boxSkillsCards",
        "summary": "Remove Box Skill cards from file",
        "x-box-sanitized": true,
        "x-box-tag": "skills"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all the metadata associated with a file.\n\nThis API does not support pagination and will therefore always return\nall of the metadata associated to the file.",
            "schema": {
              "$ref": "#/definitions/SkillCardsMetadata"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Skills"
        ],
        "description": "List the Box Skills metadata cards that are attached to a file.",
        "operationId": "get_files_id_metadata_global_boxSkillsCards",
        "summary": "List Box Skill cards on file",
        "x-box-tag": "skills"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "cards": {
                  "description": "A list of Box Skill cards to apply to this file.",
                  "items": {},
                  "type": "array"
                }
              },
              "required": [
                "cards"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the instance of the template that was applied to the file,\nincluding the data that was applied to the template.",
            "schema": {
              "$ref": "#/definitions/SkillCardsMetadata"
            }
          },
          "400": {
            "description": "Returns an error when the request body is not valid.\n\n* `schema_validation_failed` - The request body contains a value for a for\na field that either does not exist, or for which the value or type does\nnot match the expected field type. An example might be an unknown option\nfor an `enum` or `multiSelect` field.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the file or metadata template could not be found.\n\n* `not_found` - The file could not be found, or the user does not have\naccess to the file.\n* `instance_tuple_not_found` - The metadata template could not be found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error when an instance of this metadata template is already\npresent on the file.\n\n* `tuple_already_exists` - An instance of them metadata template already\nexists on the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Skills"
        ],
        "description": "Applies one or more Box Skills metadata cards to a file.",
        "operationId": "post_files_id_metadata_global_boxSkillsCards",
        "summary": "Create Box Skill cards on file",
        "x-box-tag": "skills"
      },
      "put": {
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902)\nspecification for the changes to make to the metadata\ntemplate.\n\nThe changes are represented as a JSON array of\noperation objects.",
              "items": {
                "description": "An operation that replaces an existing card.",
                "properties": {
                  "op": {
                    "description": "`replace`",
                    "enum": [
                      "replace"
                    ],
                    "example": "replace",
                    "type": "string"
                  },
                  "path": {
                    "description": "The JSON Path that represents the card to replace. In most cases\nthis will be in the format `/cards/{index}` where `index` is the\nzero-indexed position of the card in the list of cards.",
                    "example": "/cards/0",
                    "type": "string"
                  },
                  "value": {
                    "allOf": [
                      {},
                      {
                        "description": "The card to insert into the list of cards at the\nposition defined by `path`."
                      }
                    ]
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated metadata template, with the\ncustom template data included.",
            "schema": {
              "$ref": "#/definitions/SkillCardsMetadata"
            }
          },
          "404": {
            "description": "The requested file could not be found",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Skills"
        ],
        "description": "Updates one or more Box Skills metadata cards to a file.",
        "operationId": "put_files_id_metadata_global_boxSkillsCards",
        "summary": "Update Box Skill cards on file",
        "x-box-tag": "skills"
      }
    },
    "/files/{file_id}/metadata/{scope}/{template_key}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "The scope of the metadata template",
            "enum": [
              "global",
              "enterprise"
            ],
            "in": "path",
            "name": "scope",
            "required": true,
            "type": "string",
            "x-example": "global"
          },
          {
            "description": "The name of the metadata template",
            "in": "path",
            "name": "template_key",
            "required": true,
            "type": "string",
            "x-example": "properties"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the metadata is\nsuccessfully deleted."
          },
          "400": {
            "description": "Returned when the request parameters are not valid. This may happen of the\n`scope` is not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the file does not have an instance of the metadata\ntemplate applied to it, or when the user does not have access to the\nfile.\n\n* `instance_not_found` - An instance of the metadata template with the\ngiven `scope` and `templateKey` was not found on this file.\n* `not_found` - The file was not found, or the user does not have access\nto the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned when the method was not allowed.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata instances (Files)"
        ],
        "description": "Deletes a piece of file metadata.",
        "operationId": "delete_files_id_metadata_id_id",
        "summary": "Remove metadata instance from file",
        "x-box-sanitized": true,
        "x-box-tag": "file_metadata"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "The scope of the metadata template",
            "enum": [
              "global",
              "enterprise"
            ],
            "in": "path",
            "name": "scope",
            "required": true,
            "type": "string",
            "x-example": "global"
          },
          {
            "description": "The name of the metadata template",
            "in": "path",
            "name": "template_key",
            "required": true,
            "type": "string",
            "x-example": "properties"
          }
        ],
        "responses": {
          "201": {
            "description": "An instance of the metadata template that includes\nadditional \"key:value\" pairs defined by the user or\nan application.",
            "schema": {
              "$ref": "#/definitions/Metadata"
            }
          },
          "403": {
            "description": "Returned when the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the metadata template specified\nwas not applied to this file or the user does not have access to the\nfile.\n\n* `instance_not_found` - The metadata template was not applied to the\nfile.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned when the method was not allowed.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata instances (Files)"
        ],
        "description": "Retrieves the instance of a metadata template that has been applied to a\nfile.",
        "operationId": "get_files_id_metadata_id_id",
        "summary": "Get metadata instance on file",
        "x-box-sanitized": true,
        "x-box-tag": "file_metadata"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "The scope of the metadata template",
            "enum": [
              "global",
              "enterprise"
            ],
            "in": "path",
            "name": "scope",
            "required": true,
            "type": "string",
            "x-example": "global"
          },
          {
            "description": "The name of the metadata template",
            "in": "path",
            "name": "template_key",
            "required": true,
            "type": "string",
            "x-example": "properties"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "additionalProperties": {
                "description": "A value for each of the fields that are present on the metadata\ntemplate.\n\nFor the `global.properties` template this can be an a list of zero\nor more fields, as this template allows for any generic key-value\npairs to be stored on the template.",
                "example": "Aaron Levie",
                "type": "string",
                "x-box-example-key": "name"
              },
              "example": {
                "name": "Aaron Levie"
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the instance of the template that was applied to the file,\nincluding the data that was applied to the template.",
            "schema": {
              "$ref": "#/definitions/Metadata"
            }
          },
          "400": {
            "description": "Returns an error when the request body is not valid.\n\n* `schema_validation_failed` - The request body contains a value for a for\na field that either does not exist, or for which the value or type does\nnot match the expected field type. An example might be an unknown option\nfor an `enum` or `multiSelect` field.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the file or metadata template could not be found.\n\n* `not_found` - The file could not be found, or the user does not have\naccess to the file.\n* `instance_tuple_not_found` - The metadata template could not be found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error when an instance of this metadata template is already\npresent on the file.\n\n* `tuple_already_exists` - An instance of them metadata template already\nexists on the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata instances (Files)"
        ],
        "description": "Applies an instance of a metadata template to a file.\n\nIn most cases only values that are present in the metadata template\nwill be accepted, except for the `global.properties` template which accepts\nany key-value pair.",
        "operationId": "post_files_id_metadata_id_id",
        "summary": "Create metadata instance on file",
        "x-box-sanitized": true,
        "x-box-tag": "file_metadata"
      },
      "put": {
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "The scope of the metadata template",
            "enum": [
              "global",
              "enterprise"
            ],
            "in": "path",
            "name": "scope",
            "required": true,
            "type": "string",
            "x-example": "global"
          },
          {
            "description": "The name of the metadata template",
            "in": "path",
            "name": "template_key",
            "required": true,
            "type": "string",
            "x-example": "properties"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902)\nspecification for the changes to make to the metadata\ninstance.\n\nThe changes are represented as a JSON array of\noperation objects.",
              "items": {
                "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902) operation for a\nchange to make to the metadata instance.",
                "properties": {
                  "from": {
                    "description": "The location in the metadata JSON object to move or copy a value\nfrom. Required for `move` or `copy` operations and must be in the\nformat of a [JSON-Pointer](https://tools.ietf.org/html/rfc6901).",
                    "example": "/nextState",
                    "type": "string"
                  },
                  "op": {
                    "description": "The type of change to perform on the template. Some\nof these are hazardous as they will change existing templates.",
                    "enum": [
                      "add",
                      "replace",
                      "remove",
                      "test",
                      "move",
                      "copy"
                    ],
                    "example": "add",
                    "type": "string"
                  },
                  "path": {
                    "description": "The location in the metadata JSON object\nto apply the changes to, in the format of a\n[JSON-Pointer](https://tools.ietf.org/html/rfc6901).\n\nThe path must always be prefixed with a `/` to represent the root\nof the template. The characters `~` and `/` are reserved\ncharacters and must be escaped in the key.",
                    "example": "/currentState",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value to be set or tested.\n\nRequired for `add`, `replace`, and `test` operations. For `add`,\nif the value exists already the previous value will be overwritten\nby the new value. For `replace`, the value must exist before\nreplacing.\n\nFor `test`, the existing value at the `path` location must match\nthe specified value.",
                    "example": "reviewed",
                    "type": "string"
                  }
                },
                "title": "A metadata instance update operation",
                "type": "object"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated metadata template instance, with the\ncustom template data included.",
            "schema": {
              "$ref": "#/definitions/Metadata"
            }
          },
          "400": {
            "description": "Returns an error when the request body is not valid.\n\n* `bad_request` - The request body format is not an array of valid JSON\nPatch objects.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "Returns an error in some edge cases when the request body is not a valid\narray of JSON Patch items.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata instances (Files)"
        ],
        "description": "Updates a piece of metadata on a file.\n\nThe metadata instance can only be updated if the template has already been\napplied to the file before. When editing metadata, only values that match\nthe metadata template schema will be accepted.\n\nThe update is applied atomically. If any errors occur during the\napplication of the operations, the metadata instance will not be changed.",
        "operationId": "put_files_id_metadata_id_id",
        "summary": "Update metadata instance on file",
        "x-box-sanitized": true,
        "x-box-tag": "file_metadata"
      }
    },
    "/files/{file_id}/tasks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of tasks on a file.\n\nIf there are no tasks on this file an empty collection is returned\ninstead.",
            "schema": {
              "$ref": "#/definitions/Tasks"
            }
          },
          "404": {
            "description": "Returns an error when the file could not be found or the user does not\nhave access to the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returns an error when the `file_id` was not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "Returns an error when an attempt was made to retrieve tasks for the file\nwith ID `0`.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "description": "Retrieves a list of all the tasks for a file. This\nendpoint does not support pagination.",
        "operationId": "get_files_id_tasks",
        "summary": "List tasks on file",
        "x-box-sanitized": true,
        "x-box-tag": "tasks"
      }
    },
    "/files/{file_id}/thumbnail.{extension}": {
      "get": {
        "produces": [
          "image/jpg",
          "image/png",
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "The file format for the thumbnail",
            "enum": [
              "png",
              "jpg"
            ],
            "in": "path",
            "name": "extension",
            "required": true,
            "type": "string",
            "x-example": "png"
          },
          {
            "description": "The minimum height of the thumbnail",
            "in": "query",
            "maximum": 320,
            "minimum": 32,
            "name": "min_height",
            "type": "integer",
            "x-example": 32
          },
          {
            "description": "The minimum width of the thumbnail",
            "in": "query",
            "maximum": 320,
            "minimum": 32,
            "name": "min_width",
            "type": "integer",
            "x-example": 32
          },
          {
            "description": "The maximum height of the thumbnail",
            "in": "query",
            "maximum": 320,
            "minimum": 32,
            "name": "max_height",
            "required": false,
            "type": "integer",
            "x-example": 320
          },
          {
            "description": "The maximum width of the thumbnail",
            "in": "query",
            "maximum": 320,
            "minimum": 32,
            "name": "max_width",
            "required": false,
            "type": "integer",
            "x-example": 320
          }
        ],
        "responses": {
          "200": {
            "description": "When a thumbnail can be created the thumbnail data will be\nreturned in the body of the response.",
            "schema": {
              "description": "The thumbnail",
              "format": "binary",
              "type": "string"
            }
          },
          "202": {
            "description": "Sometimes generating a thumbnail can take a few seconds. In these\nsituations the API returns a `Location`-header pointing to a\nplaceholder graphic for this file type.\n\nThe placeholder graphic can be used in a user interface until the\nthumbnail generation has completed. The `Retry-After`-header indicates\nwhen to the thumbnail will be ready. At that time, retry this endpoint\nto retrieve the thumbnail.",
            "headers": {
              "Location": {
                "description": "A pointer to a placeholder graphic that can be used until the\nthumbnail has been generated.",
                "format": "url",
                "type": "string"
              },
              "Retry-After": {
                "description": "The time in seconds after which the thumbnail will be available.\n\nYour application  only attempt to get the thumbnail again after\nthis time.",
                "format": "int64",
                "type": "integer"
              }
            }
          },
          "302": {
            "description": "Returns an error when Box is not able to create a thumbnail for this\nfile type.\n\nInstead, a `Location`-header pointing to a placeholder graphic for\nthis file type will be returned.",
            "headers": {
              "Location": {
                "description": "A pointer to a placeholder graphic that can be used for this\nfile type.",
                "format": "url",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `requested_preview_unavailable` - an incorrect dimension was\n  requested. This will happen if the dimension requested is\n  larger or smaller than the available file sizes for the thumbnail\n  format, or when when any of the size constraints contradict\n  each other.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the file is not found, or the user does not\nhave access to the file, or for additional reasons.\n\n* `preview_cannot_be_generated` - Box does not support thumbnails\n  for this type of file",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Files"
        ],
        "description": "Retrieves a thumbnail, or smaller image representation, of a file.\n\nSizes of `32x32`,`64x64`, `128x128`, and `256x256` can be returned in\nthe `.png` format and sizes of `32x32`, `94x94`, `160x160`, and `320x320`\ncan be returned in the `.jpg` format.\n\nThumbnails can be generated for the image and video file formats listed\n[found on our community site][1].\n\n[1]: https://community.box.com/t5/Migrating-and-Previewing-Content/File-Types-and-Fonts-Supported-in-Box-Content-Preview/ta-p/327",
        "operationId": "get_files_id_thumbnail_id",
        "summary": "Get file thumbnail",
        "x-box-tag": "files"
      }
    },
    "/files/{file_id}/trash": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the file was\npermanently deleted."
          },
          "404": {
            "description": "Returns an error if the file is not in the trash.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Trashed files"
        ],
        "description": "Permanently deletes a file that is in the trash.\nThis action cannot be undone.",
        "operationId": "delete_files_id_trash",
        "summary": "Permanently remove file",
        "x-box-tag": "trashed_files"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the file that was trashed,\nincluding information about when the it\nwas moved to the trash.",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "404": {
            "description": "Returns an error if the file can not be found directly\nin the trash.\n\nPlease note that a `HTTP 404` is also returned if any of\nthe file's parent folders have been moved to the trash.\n\nIn that case, only that parent folder can be inspected using\nthe [`GET /folders/:id/trash`](e://get_folders_id_trash) API.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Trashed files"
        ],
        "description": "Retrieves a file that has been moved to the trash.\n\nPlease note that only if the file itself has been moved to the\ntrash can it be retrieved with this API call. If instead one of\nits parent folders was moved to the trash, only that folder\ncan be inspected using the\n[`GET /folders/:id/trash`](e://get_folders_id_trash) API.\n\nTo list all items that have been moved to the trash, please\nuse the [`GET /folders/trash/items`](e://get-folders-trash-items/)\nAPI.",
        "operationId": "get_files_id_trash",
        "summary": "Get trashed file",
        "x-box-tag": "trashed_files"
      }
    },
    "/files/{file_id}/upload_sessions": {
      "post": {
        "servers": [
          {
            "description": "Server for file uploads",
            "url": "https://upload.box.com/api/2.0"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "file_name": {
                  "description": "The optional new name of new file",
                  "example": "Project.mov",
                  "type": "string"
                },
                "file_size": {
                  "description": "The total number of bytes of the file to be uploaded",
                  "example": 104857600,
                  "format": "int64",
                  "type": "integer"
                }
              },
              "required": [
                "file_size"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a new upload session.",
            "schema": {
              "$ref": "#/definitions/UploadSession"
            }
          },
          "409": {
            "description": "Returns an error if the file already exists,\nor if the account has run out of disk space.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Uploads (Chunked)"
        ],
        "description": "Creates an upload session for an existing file.",
        "operationId": "post_files_id_upload_sessions",
        "summary": "Create upload session for existing file",
        "x-box-tag": "chunked_uploads"
      }
    },
    "/files/{file_id}/versions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of past versions for this file.",
            "schema": {
              "$ref": "#/definitions/FileVersions"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "File versions"
        ],
        "description": "Retrieve a list of the past versions for a file.\n\nVersions are only tracked by Box users with premium accounts. To fetch the ID\nof the current version of a file, use the `GET /file/:id` API.",
        "operationId": "get_files_id_versions",
        "summary": "List all file versions",
        "x-box-tag": "file_versions"
      }
    },
    "/files/{file_id}/versions/current": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "The file version to revert to",
              "properties": {
                "id": {
                  "description": "The file version ID",
                  "example": "11446498",
                  "type": "string"
                },
                "type": {
                  "description": "The type to revert to",
                  "enum": [
                    "file_version"
                  ],
                  "example": "file_version",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a newly created file version object.",
            "schema": {
              "$ref": "#/definitions/FileVersion"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "File versions"
        ],
        "description": "Revert to a previous version of a file.\n\nIf previous versions exist, this method can be used to\npromote one of the older versions to the top of the version history.\n\nThis actually creates a new copy of the old version and puts it at the\ntop of the versions history. The file will have the exact same contents\nas the older version, with the the same hash digest, `etag`, and\nname as the original.\n\nOther properties such as comments do not get updated to their\nformer values.",
        "operationId": "post_files_id_versions_current",
        "summary": "Revert file version",
        "x-box-tag": "file_versions"
      }
    },
    "/files/{file_id}/versions/{file_version_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "The ID of the file version",
            "in": "path",
            "name": "file_version_id",
            "required": true,
            "type": "string",
            "x-example": "1234"
          },
          {
            "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
            "in": "header",
            "name": "if-match",
            "required": false,
            "type": "string",
            "x-example": "1"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the file has been successfully\ndeleted."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "File versions"
        ],
        "description": "Move a file version to the trash.\n\nVersions are only tracked for Box users with premium accounts.",
        "operationId": "delete_files_id_versions_id",
        "summary": "Remove file version",
        "x-box-tag": "file_versions"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "The ID of the file version",
            "in": "path",
            "name": "file_version_id",
            "required": true,
            "type": "string",
            "x-example": "1234"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific version of a file.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
            "schema": {
              "$ref": "#/definitions/FileVersion"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "File versions"
        ],
        "description": "Retrieve a specific version of a file.\n\nVersions are only tracked for Box users with premium accounts.",
        "operationId": "get_files_id_versions_id",
        "summary": "Get file version",
        "x-box-tag": "file_versions"
      }
    },
    "/files/{file_id}/watermark": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "204": {
            "description": "An empty response will be returned when the watermark\nwas successfully deleted."
          },
          "404": {
            "description": "Returns an error if the file did not have\na watermark applied to it",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Watermarks (Files)"
        ],
        "description": "Removes the watermark from a file.",
        "operationId": "delete_files_id_watermark",
        "summary": "Remove watermark from file",
        "x-box-tag": "file_watermarks"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object containing information about the\nwatermark associated for to this file.",
            "schema": {
              "$ref": "#/definitions/Watermark"
            }
          },
          "404": {
            "description": "Returns an error if the file does not have a watermark applied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Watermarks (Files)"
        ],
        "description": "Retrieve the watermark for a file.",
        "operationId": "get_files_id_watermark",
        "summary": "Get watermark on file",
        "x-box-tag": "file_watermarks"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "watermark": {
                  "description": "The watermark to imprint on the file",
                  "properties": {
                    "imprint": {
                      "description": "The type of watermark to apply.\n\nCurrently only supports one option.",
                      "enum": [
                        "default"
                      ],
                      "example": "default",
                      "type": "string"
                    }
                  },
                  "required": [
                    "imprint"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "watermark"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an updated watermark if a watermark already\nexisted on this file.",
            "schema": {
              "$ref": "#/definitions/Watermark"
            }
          },
          "201": {
            "description": "Returns a new watermark if no watermark existed on\nthis file yet.",
            "schema": {
              "$ref": "#/definitions/Watermark"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Watermarks (Files)"
        ],
        "description": "Applies or update a watermark on a file.",
        "operationId": "put_files_id_watermark",
        "summary": "Apply watermark to file",
        "x-box-tag": "file_watermarks"
      }
    },
    "/folder_locks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "query",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns details for all folder locks applied to the folder, including the\nlock type and user that applied the lock.",
            "schema": {
              "$ref": "#/definitions/FolderLocks"
            }
          },
          "403": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `folder_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Folder Locks"
        ],
        "description": "Retrieves folder lock details for a given folder.",
        "operationId": "get_folder_locks",
        "summary": "List folder locks on folder",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "folder_locks"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "folder": {
                  "description": "The folder to apply the lock to.",
                  "properties": {
                    "id": {
                      "description": "The ID of the folder.",
                      "example": "1234567890",
                      "type": "string"
                    },
                    "type": {
                      "description": "The content type the lock is being applied to. Only `folder`\nis supported.",
                      "example": "folder",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "id"
                  ],
                  "type": "object"
                },
                "locked_operations": {
                  "description": "The operations to lock for the folder. If `locked_operations` is\nincluded in the request, both `move` and `delete` must also be\nincluded and both set to `true`.",
                  "properties": {
                    "delete": {
                      "description": "Whether deleting the folder should be locked.",
                      "example": true,
                      "type": "boolean"
                    },
                    "move": {
                      "description": "Whether moving the folder should be locked.",
                      "example": true,
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "move",
                    "delete"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "folder"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the instance of the folder lock that was applied to the folder,\nincluding the user that applied the lock and the operations set.",
            "schema": {
              "$ref": "#/definitions/FolderLock"
            }
          },
          "400": {
            "description": "Returns an error when the request body is not valid.\n\n* `schema_validation_failed` - The request body contains a value for\na field that either does not exist, or for which the value or type does\nnot match the expected field type. An example might be an unknown option\nfor an `enum` or `multiSelect` field.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the folder could not be found.\n\n* `not_found` - The folder could not be found, or the user does not have\naccess to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Folder Locks"
        ],
        "description": "Creates a folder lock on a folder, preventing it from being moved and/or\ndeleted.",
        "operationId": "post_folder_locks",
        "summary": "Create folder lock on folder",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "folder_locks"
      }
    },
    "/folder_locks/{folder_lock_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the folder lock.",
            "in": "path",
            "name": "folder_lock_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the folder lock is successfully deleted."
          },
          "403": {
            "description": "Returns an error if the user does not have the required\naccess to perform the action.\n\n* `access_denied_insufficient_permissions`: Returned when the\n  user does not have access to the folder.\n\n* `insufficient_scope`: Returned an error if the application\n  does not have the right scope to delete folders. Make sure\n  your application has been configured to read and write all files\n  and folders stored in Box.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if the folder could not be found,\nor the authenticated user does not have access to the folder.\n\n* `not_found` when the authenticated user does not have access\n  to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Folder Locks"
        ],
        "description": "Deletes a folder lock on a given folder.",
        "operationId": "delete_folder_locks_id",
        "summary": "Delete folder lock",
        "x-box-sanitized": true,
        "x-box-tag": "folder_locks"
      }
    },
    "/folders": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "folder_upload_email": {
                  "allOf": [
                    {
                      "description": "The Write Folder Upload Email object",
                      "properties": {
                        "access": {
                          "description": "When this parameter has been set, users can email files\nto the email address that has been automatically\ncreated for this folder.\n\nTo create an email address, set this property either when\ncreating or updating the folder.\n\nWhen set to `collaborators`, only emails from registered email\naddresses for collaborators will be accepted. This includes\nany email aliases a user might have registered.\n\nWhen set to `open` it will accept emails from any email\naddress.",
                          "enum": [
                            "open",
                            "collaborators"
                          ],
                          "example": "open",
                          "nullable": false,
                          "type": "string"
                        }
                      },
                      "title": "Folder upload email",
                      "type": "object"
                    },
                    {
                      "description": "Setting this object enables the upload email address.\n\nThis email address can be used by users to directly\nupload files directly to the folder via email."
                    }
                  ]
                },
                "name": {
                  "description": "The name for the new folder.\n\nThere are some restrictions to the file name. Names containing\nnon-printable ASCII characters, forward and backward slashes\n(`/`, `\\`), as well as names with trailing spaces are\nprohibited.\n\nAdditionally, the names `.` and `..` are\nnot allowed either.",
                  "example": "New Folder",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "parent": {
                  "description": "The parent folder to create the new folder within.",
                  "properties": {
                    "id": {
                      "description": "The ID of parent folder",
                      "example": "0",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "sync_state": {
                  "description": "Specifies whether a folder should be synced to a\nuser's device or not. This is used by Box Sync\n(discontinued) and is not used by Box Drive.",
                  "enum": [
                    "synced",
                    "not_synced",
                    "partially_synced"
                  ],
                  "example": "synced",
                  "nullable": false,
                  "type": "string"
                }
              },
              "required": [
                "name",
                "parent"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a folder object.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "400": {
            "description": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `bad_request` when a parameter is missing or incorrect.\n* `item_name_too_long` when the folder name is too long.\n* `item_name_invalid` when the folder name contains\n  non-valid characters.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returns an error if the user does not have the required\naccess to perform the action. This might be because they\ndon't have access to the folder or parent folder, or because\nthe application does not have permission to write files and\nfolders.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if the parent folder could not be found,\nor the authenticated user does not have access to the parent\nfolder.\n\n* `not_found` when the authenticated user does not have access\n  to the parent folder",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "* `operation_blocked_temporary`: Returned if either of the destination\n  or source folders is locked due to another move, copy, delete or\n  restore operation in process.\n\n  The operation can be retried at a later point.\n\n* `item_name_in_use`: Returned if a folder with the name\n  already exists in the parent folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "description": "Creates a new empty folder within the specified parent folder.",
        "operationId": "post_folders",
        "summary": "Create folder",
        "x-box-enable-explorer": true,
        "x-box-tag": "folders"
      }
    },
    "/folders/trash/items": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "description": "Specifies whether to use marker-based pagination instead of\noffset-based pagination. Only one pagination method can\nbe used at a time.\n\nBy setting this value to true, the API will return a `marker` field\nthat can be passed as a parameter to this endpoint to get the next\npage of the response.",
            "in": "query",
            "name": "usemarker",
            "required": false,
            "type": "boolean",
            "x-example": true
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The direction to sort results in. This can be either in alphabetical ascending\n(`ASC`) or descending (`DESC`) order.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "in": "query",
            "name": "direction",
            "required": false,
            "type": "string",
            "x-example": "ASC"
          },
          {
            "description": "Defines the **second** attribute by which items\nare sorted.\n\nItems are always sorted by their `type` first, with\nfolders listed before files, and files listed\nbefore web links.\n\nThis parameter is not supported when using marker-based pagination.",
            "enum": [
              "id",
              "name",
              "date",
              "size"
            ],
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of items that have been deleted",
            "schema": {
              "$ref": "#/definitions/Items"
            }
          },
          "400": {
            "description": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `invalid_parameter` can appear when the `sort`, `direction` or `offset`\nparameter is provided when using marker based pagination, or when the\n`marker` parameter is provided but `usemarker` is set to `false` or\n`null`.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Trashed items"
        ],
        "description": "Retrieves the files and folders that have been moved\nto the trash.\n\nAny attribute in the full files or folders objects can be passed\nin with the `fields` parameter to retrieve those specific\nattributes that are not returned by default.\n\nThis endpoint defaults to use offset-based pagination, yet also supports\nmarker-based pagination using the `marker` parameter.",
        "operationId": "get_folders_trash_items",
        "summary": "List trashed items",
        "x-box-tag": "trashed_items"
      }
    },
    "/folders/{folder_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
            "in": "header",
            "name": "if-match",
            "required": false,
            "type": "string",
            "x-example": "1"
          },
          {
            "description": "Delete a folder that is not empty by recursively deleting the\nfolder and all of its content.",
            "in": "query",
            "name": "recursive",
            "required": false,
            "type": "boolean",
            "x-example": true
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the folder is successfully deleted\nor moved to the trash."
          },
          "403": {
            "description": "Returns an error if the user does not have the required\naccess to perform the action.\n\n* `access_denied_insufficient_permissions`: Returned when the\n  user does not have access to the folder, or when a folder lock has been\n  applied to the folder to prevent deletion.\n\n* `insufficient_scope`: Returned an error if the application\n  does not have the right scope to delete folders. Make sure\n  your application has been configured to read and write all files\n  and folders stored in Box.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if the folder could not be found,\nor the authenticated user does not have access to the folder.\n\n* `not_found` when the authenticated user does not have access\n  to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "* `folder_not_empty`: Returned if the folder is not empty. Use the\n  `recursive` query parameter to recursively delete the folder and\n  its contents.\n* `operation_blocked_temporary`: Returned if the folder\n  is locked due to another move, copy, delete or restore\n  operation in progress.\n\n  The operation can be retried at a later point.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the folder. This indicates that the\nfolder has changed since it was last requested.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "503": {
            "description": "Returns an error when the operation takes longer\nthan 60 seconds. The operation will continue after\nthis response has been returned.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "description": "Deletes a folder, either permanently or by moving it to\nthe trash.",
        "operationId": "delete_folders_id",
        "summary": "Delete folder",
        "x-box-sanitized": true,
        "x-box-tag": "folders"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n\nAdditionally this field can be used to query any metadata\napplied to the file by specifying the `metadata` field as well\nas the scope and key of the template to retrieve, for example\n`?field=metadata.enterprise_12345.contractTemplate`.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
            "in": "header",
            "name": "if-none-match",
            "required": false,
            "type": "string",
            "x-example": "1"
          },
          {
            "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
            "in": "header",
            "name": "boxapi",
            "required": false,
            "type": "string",
            "x-example": "shared_link=[link]&shared_link_password=[password]"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a folder, including the first 100 entries in the folder.\n\nTo fetch more items within the folder, please use the\n[Get items in a folder](#get-folders-id-items) endpoint.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "304": {
            "description": "Returns an empty response when the `If-None-Match` header matches\nthe current `etag` value of the folder. This indicates that the folder\nhas not changed since it was last requested."
          },
          "403": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `folder_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "description": "Retrieves details for a folder, including the first 100 entries\nin the folder.\n\nTo fetch more items within the folder, please use the\n[Get items in a folder](#get-folders-id-items) endpoint.",
        "operationId": "get_folders_id",
        "summary": "Get folder information",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "folders"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "name": {
                  "description": "An optional new name for the folder.",
                  "example": "Restored Photos",
                  "type": "string"
                },
                "parent": {
                  "allOf": [
                    {
                      "description": "The parent for this item",
                      "properties": {
                        "id": {
                          "description": "The ID of parent item",
                          "example": "123",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "Specifies an optional ID of a folder to restore the folder\nto when the original folder no longer exists.\n\nPlease be aware that this ID will only be used if the original\nfolder no longer exists. Use this ID to provide a fallback\nlocation to restore the folder to if the original location\nhas been deleted."
                    }
                  ]
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a folder object when the folder has been restored.",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "403": {
            "description": "Returns an error if the user does not have access to the folder\nthe folder is being restored to, or the user does not have permission\nto restore folders from the trash.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if the folder is not in the trash.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "* Returned an error if there is a folder with the same name\n  in the destination folder.\n\n* `operation_blocked_temporary`: Returned if either of the destination\n  or source folders is locked due to another move, copy, delete or\n  restore operation in process.\n\n  The operation can be retried at a later point.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Trashed folders"
        ],
        "description": "Restores a folder that has been moved to the trash.\n\nAn optional new parent ID can be provided to restore the folder to in case the\noriginal folder has been deleted.\n\n# Folder locking\n\nDuring this operation, part of the file tree will be locked, mainly\nthe source folder and all of its descendants, as well as the destination\nfolder.\n\nFor the duration of the operation, no other move, copy, delete, or restore\noperation can performed on any of the locked folders.",
        "operationId": "post_folders_id",
        "summary": "Restore folder",
        "x-box-tag": "trashed_folders"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
            "in": "header",
            "name": "if-match",
            "required": false,
            "type": "string",
            "x-example": "1"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "tags": {
                  "description": "The tags for this item. These tags are shown in\nthe Box web app and mobile apps next to an item.\n\nTo add or remove a tag, retrieve the item's current tags,\nmodify them, and then update this field.\n\nThere is a limit of 100 tags per item, and 10,000\nunique tags per enterprise.",
                  "example": [
                    "approved"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 100,
                  "minItems": 1,
                  "type": "array"
                },
                "can_non_owners_invite": {
                  "description": "Specifies if users who are not the owner\nof the folder can invite new collaborators to the folder.",
                  "example": true,
                  "type": "boolean"
                },
                "can_non_owners_view_collaborators": {
                  "description": "Restricts collaborators who are not the owner of\nthis folder from viewing other collaborations on\nthis folder.\n\nIt also restricts non-owners from inviting new\ncollaborators.\n\nWhen setting this field to `false`, it is required\nto also set `can_non_owners_invite_collaborators` to\n`false` if it has not already been set.",
                  "example": true,
                  "type": "boolean"
                },
                "collections": {
                  "description": "An array of collections to make this folder\na member of. Currently\nwe only support the `favorites` collection.\n\nTo get the ID for a collection, use the\n[List all collections][1] endpoint.\n\nPassing an empty array `[]` or `null` will remove\nthe folder from all collections.\n\n[1]: ../advanced-files-and-folders/#get-collections",
                  "items": {
                    "description": "The bare basic reference for an object",
                    "properties": {
                      "id": {
                        "description": "The unique identifier for this object",
                        "example": "11446498",
                        "type": "string"
                      },
                      "type": {
                        "description": "The type for this object",
                        "example": "file",
                        "type": "string"
                      }
                    },
                    "title": "Reference",
                    "type": "object"
                  },
                  "type": "array"
                },
                "description": {
                  "description": "The optional description of this folder",
                  "example": "Legal contracts for the new ACME deal",
                  "maxLength": 256,
                  "nullable": false,
                  "type": "string"
                },
                "folder_upload_email": {
                  "allOf": [
                    {
                      "description": "The Write Folder Upload Email object",
                      "properties": {
                        "access": {
                          "description": "When this parameter has been set, users can email files\nto the email address that has been automatically\ncreated for this folder.\n\nTo create an email address, set this property either when\ncreating or updating the folder.\n\nWhen set to `collaborators`, only emails from registered email\naddresses for collaborators will be accepted. This includes\nany email aliases a user might have registered.\n\nWhen set to `open` it will accept emails from any email\naddress.",
                          "enum": [
                            "open",
                            "collaborators"
                          ],
                          "example": "open",
                          "nullable": false,
                          "type": "string"
                        }
                      },
                      "title": "Folder upload email",
                      "type": "object"
                    },
                    {
                      "description": "Setting this object enables the upload email address.\n\nThis email address can be used by users to directly\nupload files directly to the folder via email.\n\nSetting the value to `null` will disable the email address."
                    }
                  ]
                },
                "is_collaboration_restricted_to_enterprise": {
                  "description": "Specifies if new invites to this folder are restricted to users\nwithin the enterprise. This does not affect existing\ncollaborations.",
                  "example": true,
                  "type": "boolean"
                },
                "name": {
                  "description": "The optional new name for this folder.",
                  "example": "New Folder",
                  "type": "string"
                },
                "parent": {
                  "description": "The parent folder for this folder. Use this to move\nthe folder or to restore it out of the trash.",
                  "properties": {
                    "id": {
                      "description": "The ID of the new parent folder",
                      "example": "0",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "shared_link": {
                  "allOf": [
                    {
                      "description": "Defines a shared link for an item. Set this to `null` to remove\nthe shared link.",
                      "properties": {
                        "access": {
                          "description": "The level of access for the shared link. This can be\nrestricted to anyone with the link (`open`), only people\nwithin the company (`company`) and only those who\nhave been invited to the folder (`collaborators`).\n\nIf not set, this field defaults to the access level specified\nby the enterprise admin. To create a shared link with this\ndefault setting pass the `shared_link` object with\nno `access` field, for example `{ \"shared_link\": {} }`.\n\nThe `company` access level is only available to paid\naccounts.",
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "example": "open",
                          "type": "string"
                        },
                        "password": {
                          "description": "The password required to access the shared link. Set the\npassword to `null` to remove it.\n\nA password can only be set when `access` is set to `open`.",
                          "example": "do-not-use-this-password",
                          "type": "string"
                        },
                        "permissions": {
                          "properties": {
                            "can_download": {
                              "description": "If the shared link allows for downloading of files.\nThis can only be set when `access` is set to\n`open` or `company`.",
                              "example": true,
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "unshared_at": {
                          "description": "The timestamp at which this shared link will\nexpire. This field can only be set by\nusers with paid accounts.",
                          "example": "2012-12-12T10:53:43-08:00",
                          "format": "date-time",
                          "type": "string"
                        },
                        "vanity_name": {
                          "description": "Defines a custom vanity name to use in the shared link URL,\nfor example `https://app.box.com/v/my-shared-link`.\n\nCustom URLs should not be used when sharing sensitive content\nas vanity URLs are a lot easier to guess than regular shared links.",
                          "example": "my-shared-link",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "Enables the creation of a shared link for a folder."
                    }
                  ]
                },
                "sync_state": {
                  "description": "Specifies whether a folder should be synced to a\nuser's device or not. This is used by Box Sync\n(discontinued) and is not used by Box Drive.",
                  "enum": [
                    "synced",
                    "not_synced",
                    "partially_synced"
                  ],
                  "example": "synced",
                  "nullable": false,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a folder object for the updated folder\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.\n\nThis call will return synchronously. This holds true even when\nmoving folders with a large a large number of items in all of its\ndescendants. For very large folders, this means the call could\ntake minutes or hours to return.",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "400": {
            "description": "Returns an error if some of the parameters are missing or\nnot valid, or if a folder lock is preventing a move operation.\n\n* `bad_request` when a parameter is missing or incorrect. This error also\n  happens when a password is set for a shared link with an access type\n  of `open`.\n* `item_name_too_long` when the folder name is too long.\n* `item_name_invalid` when the folder name contains\n  non-valid characters.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returns an error if the user does not have the required\naccess to perform the action.\n\n* `access_denied_insufficient_permissions`: Returned when the\n  user does not have access to the folder or parent folder, or if the\n  folder is being moved and a folder lock has been applied to prevent\n  such operations.\n\n* `insufficient_scope`: Returned an error if the application\n  does not have the right scope to update folders. Make sure\n  your application has been configured to read and write all files\n  and folders stored in Box.\n\n* `forbidden`: Returned when the user is not allowed to perform this\n  action for other users. This can include trying to create a\n  Shared Link with a `company` access level on a free account.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if the folder or parent folder could not be found,\nor the authenticated user does not have access to either folder.\n\n* `not_found` when the authenticated user does not have access\n  to the folder or parent folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "* `operation_blocked_temporary`: Returned if either of the destination\n  or source folders is locked due to another move, copy, delete or\n  restore operation in progress.\n\n  The operation can be retried at a later point.\n\n* `item_name_in_use`: Returned if a folder with the name\n  already exists in the parent folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the folder. This indicates that the\nfolder has changed since it was last requested.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "503": {
            "description": "Returns an error when the operation takes longer\nthan 60 seconds. The operation will continue after\nthis response has been returned.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "description": "Updates a folder. This can be also be used to move the folder,\ncreate shared links, update collaborations, and more.",
        "operationId": "put_folders_id",
        "summary": "Update folder",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "folders"
      }
    },
    "/folders/{folder_id}#add_shared_link": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "Explicitly request the `shared_link` fields\nto be returned for this item.",
            "in": "query",
            "name": "fields",
            "required": true,
            "type": "string",
            "x-example": "shared_link"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "shared_link": {
                  "description": "The settings for the shared link to create on the folder.\n\nUse an empty object (`{}`) to use the default settings for shared\nlinks.",
                  "properties": {
                    "access": {
                      "description": "The level of access for the shared link. This can be\nrestricted to anyone with the link (`open`), only people\nwithin the company (`company`) and only those who\nhave been invited to the folder (`collaborators`).\n\nIf not set, this field defaults to the access level specified\nby the enterprise admin. To create a shared link with this\ndefault setting pass the `shared_link` object with\nno `access` field, for example `{ \"shared_link\": {} }`.\n\nThe `company` access level is only available to paid\naccounts.",
                      "enum": [
                        "open",
                        "company",
                        "collaborators"
                      ],
                      "example": "open",
                      "type": "string"
                    },
                    "password": {
                      "description": "The password required to access the shared link. Set the\npassword to `null` to remove it.\n\nA password can only be set when `access` is set to `open`.",
                      "example": "do-not-use-this-password",
                      "type": "string"
                    },
                    "permissions": {
                      "properties": {
                        "can_download": {
                          "description": "If the shared link allows for downloading of folders.\nThis can only be set when `access` is set to\n`open` or `company`.",
                          "example": true,
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "unshared_at": {
                      "description": "The timestamp at which this shared link will\nexpire. This field can only be set by\nusers with paid accounts.",
                      "example": "2012-12-12T10:53:43-08:00",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the base representation of a folder with a new shared\nlink attached.",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returned if the user does not have all the permissions to complete the\nupdate.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `folder_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the folder. This indicates that the folder\nhas changed since it was last requested.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Shared links (Folders)"
        ],
        "description": "Adds a shared link to a folder.",
        "operationId": "put_folders_id#add_shared_link",
        "summary": "Add shared link to folder",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "shared_links_folders"
      }
    },
    "/folders/{folder_id}#get_shared_link": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "Explicitly request the `shared_link` fields\nto be returned for this item.",
            "in": "query",
            "name": "fields",
            "required": true,
            "type": "string",
            "x-example": "shared_link"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the base representation of a folder with the\nadditional shared link information.",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `folder_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Shared links (Folders)"
        ],
        "description": "Gets the information for a shared link on a folder.",
        "operationId": "get_folders_id#get_shared_link",
        "summary": "Get shared link for folder",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "shared_links_folders"
      }
    },
    "/folders/{folder_id}#remove_shared_link": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "Explicitly request the `shared_link` fields\nto be returned for this item.",
            "in": "query",
            "name": "fields",
            "required": true,
            "type": "string",
            "x-example": "shared_link"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "shared_link": {
                  "description": "By setting this value to `null`, the shared link\nis removed from the folder.",
                  "example": null,
                  "type": "object",
                  "x-nullable": true
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a basic representation of a folder, with the shared link removed.",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returned if the user does not have all the permissions to complete the\nupdate.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `folder_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the folder. This indicates that the folder\nhas changed since it was last requested.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Shared links (Folders)"
        ],
        "description": "Removes a shared link from a folder.",
        "operationId": "put_folders_id#remove_shared_link",
        "summary": "Remove shared link from folder",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "shared_links_folders"
      }
    },
    "/folders/{folder_id}#update_shared_link": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "Explicitly request the `shared_link` fields\nto be returned for this item.",
            "in": "query",
            "name": "fields",
            "required": true,
            "type": "string",
            "x-example": "shared_link"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "shared_link": {
                  "description": "The settings for the shared link to update.",
                  "properties": {
                    "access": {
                      "description": "The level of access for the shared link. This can be\nrestricted to anyone with the link (`open`), only people\nwithin the company (`company`) and only those who\nhave been invited to the folder (`collaborators`).\n\nIf not set, this field defaults to the access level specified\nby the enterprise admin. To create a shared link with this\ndefault setting pass the `shared_link` object with\nno `access` field, for example `{ \"shared_link\": {} }`.\n\nThe `company` access level is only available to paid\naccounts.",
                      "enum": [
                        "open",
                        "company",
                        "collaborators"
                      ],
                      "example": "open",
                      "type": "string"
                    },
                    "password": {
                      "description": "The password required to access the shared link. Set the\npassword to `null` to remove it.\n\nA password can only be set when `access` is set to `open`.",
                      "example": "do-not-use-this-password",
                      "type": "string"
                    },
                    "permissions": {
                      "properties": {
                        "can_download": {
                          "description": "If the shared link allows for downloading of folders.\nThis can only be set when `access` is set to\n`open` or `company`.",
                          "example": true,
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "unshared_at": {
                      "description": "The timestamp at which this shared link will\nexpire. This field can only be set by\nusers with paid accounts.",
                      "example": "2012-12-12T10:53:43-08:00",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a basic representation of the folder, with the updated shared\nlink attached.",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returned if the user does not have all the permissions to complete the\nupdate.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `folder_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "412": {
            "description": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the folder. This indicates that the folder\nhas changed since it was last requested.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Shared links (Folders)"
        ],
        "description": "Updates a shared link on a folder.",
        "operationId": "put_folders_id#update_shared_link",
        "summary": "Update shared link on folder",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "shared_links_folders"
      }
    },
    "/folders/{folder_id}/collaborations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of collaboration objects. If there are no\ncollaborations on this folder an empty collection will be returned.\n\nThis list includes pending collaborations, for which the `status`\nis set to `pending`, indicating invitations that have been sent but not\nyet accepted.",
            "schema": {
              "$ref": "#/definitions/Collaborations"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Collaborations (List)"
        ],
        "description": "Retrieves a list of pending and active collaborations for a\nfolder. This returns all the users that have access to the folder\nor have been invited to the folder.",
        "operationId": "get_folders_id_collaborations",
        "summary": "List folder collaborations",
        "x-box-tag": "list_collaborations"
      }
    },
    "/folders/{folder_id}/copy": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier of the folder to copy.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder with the ID `0` can not be copied.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "0"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "nullable": false,
              "properties": {
                "name": {
                  "description": "An optional new name for the copied folder.\n\nThere are some restrictions to the file name. Names containing\nnon-printable ASCII characters, forward and backward slashes\n(`/`, `\\`), as well as names with trailing spaces are\nprohibited.\n\nAdditionally, the names `.` and `..` are\nnot allowed either.",
                  "example": "New Folder",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "parent": {
                  "description": "The destination folder to copy the folder to.",
                  "properties": {
                    "id": {
                      "description": "The ID of parent folder",
                      "example": "0",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "parent"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a new folder object representing the copied folder.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "304": {
            "description": "Returns an empty response when the `If-None-Match` header matches\nthe current `etag` value of the folder. This indicates that the folder\nhas not changed since it was last requested."
          },
          "400": {
            "description": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `bad_request` when a parameter is missing.\n* `item_name_too_long` when the new folder name is too long.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if either the source or destination folder\ncould not be found, or the authenticated user does not\nhave access to either folders.\n\n* `not_found` when the authenticated user does not have access\n  to the parent folder",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error if a folder by this name already exists\nin the destination folder, or if the destination folder\nis locked.\n\n* `item_name_in_use` when a folder with the same name already\n  exists.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "Returns an error when trying to copy the root folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "description": "Creates a copy of a folder within a destination folder.\n\nThe original folder will not be changed.",
        "operationId": "post_folders_id_copy",
        "summary": "Copy folder",
        "x-box-enable-explorer": true,
        "x-box-tag": "folders"
      }
    },
    "/folders/{folder_id}/items": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n\nAdditionally this field can be used to query any metadata\napplied to the file by specifying the `metadata` field as well\nas the scope and key of the template to retrieve, for example\n`?field=metadata.enterprise_12345.contractTemplate`.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "Specifies whether to use marker-based pagination instead of\noffset-based pagination. Only one pagination method can\nbe used at a time.\n\nBy setting this value to true, the API will return a `marker` field\nthat can be passed as a parameter to this endpoint to get the next\npage of the response.",
            "in": "query",
            "name": "usemarker",
            "required": false,
            "type": "boolean",
            "x-example": true
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
            "in": "header",
            "name": "boxapi",
            "required": false,
            "type": "string",
            "x-example": "shared_link=[link]&shared_link_password=[password]"
          },
          {
            "description": "Defines the **second** attribute by which items\nare sorted.\n\nItems are always sorted by their `type` first, with\nfolders listed before files, and files listed\nbefore web links.\n\nThis parameter is not supported for marker-based pagination\non the root folder (the folder with an ID of `0`).",
            "enum": [
              "id",
              "name",
              "date",
              "size"
            ],
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "id"
          },
          {
            "description": "The direction to sort results in. This can be either in alphabetical ascending\n(`ASC`) or descending (`DESC`) order.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "in": "query",
            "name": "direction",
            "required": false,
            "type": "string",
            "x-example": "ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of files, folders, and web links contained in a folder.",
            "schema": {
              "$ref": "#/definitions/Items"
            }
          },
          "403": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the folder is not found, or the user does not\nhave access to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned if the `folder_id` is not in a recognized format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "description": "Retrieves a page of items in a folder. These items can be files,\nfolders, and web links.\n\nTo request more information about the folder itself, like its size,\nplease use the [Get a folder](#get-folders-id) endpoint instead.",
        "operationId": "get_folders_id_items",
        "summary": "List items in folder",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "folders"
      }
    },
    "/folders/{folder_id}/metadata": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all the metadata associated with a folder.\n\nThis API does not support pagination and will therefore always return\nall of the metadata associated to the folder.",
            "schema": {
              "$ref": "#/definitions/Metadatas"
            }
          },
          "403": {
            "description": "Returned when the request parameters are not valid.\n\n* `forbidden` - this operation is not allowed on the Root folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned when the user does not have access to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata instances (Folders)"
        ],
        "description": "Retrieves all metadata for a given folder. This can not be used on the root\nfolder with ID `0`.",
        "operationId": "get_folders_id_metadata",
        "summary": "List metadata instances on folder",
        "x-box-sanitized": true,
        "x-box-tag": "folder_metadata"
      }
    },
    "/folders/{folder_id}/metadata/enterprise/securityClassification-6VMVochwUWo": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the classification is\nsuccessfully deleted."
          },
          "400": {
            "description": "Returned when the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the folder does not have any classification applied\nto it, or when the user does not have access to the\nfolder.\n\n* `instance_not_found` - An instance of the classification metadata\ntemplate with the was not found on this folder.\n* `not_found` - The folder was not found, or the user does not have access\nto the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned when the method was not allowed.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Classifications on folders"
        ],
        "description": "Removes any classifications from a folder.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/folders/:id//enterprise_12345/securityClassification-6VMVochwUWo`.",
        "operationId": "delete_folders_id_metadata_enterprise_securityClassification-6VMVochwUWo",
        "summary": "Remove classification from folder",
        "x-box-sanitized": true,
        "x-box-tag": "folder_classifications"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "201": {
            "description": "Returns an instance of the `securityClassification` metadata\ntemplate, which contains a `Box__Security__Classification__Key`\nfield that lists all the classifications available to this\nenterprise.",
            "schema": {
              "$ref": "#/definitions/Classification"
            }
          },
          "403": {
            "description": "Returned when the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the metadata template specified\nwas not applied to this folder or the user does not have access to the\nfolder.\n\n* `instance_not_found` - The metadata template was not applied to the\nfolder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned when the method was not allowed.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Classifications on folders"
        ],
        "description": "Retrieves the classification metadata instance that\nhas been applied to a folder.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/folders/:id//enterprise_12345/securityClassification-6VMVochwUWo`.",
        "operationId": "get_folders_id_metadata_enterprise_securityClassification-6VMVochwUWo",
        "summary": "Get classification on folder",
        "x-box-sanitized": true,
        "x-box-tag": "folder_classifications"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "Box__Security__Classification__Key": {
                  "description": "The name of the classification to apply to this folder.\n\nTo list the available classifications in an enterprise,\nuse the classification API to retrieve the\n[classification template](e://get_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema)\nwhich lists all available classification keys.",
                  "example": "Sensitive",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the classification template instance\nthat was applied to the folder.",
            "schema": {
              "$ref": "#/definitions/Classification"
            }
          },
          "400": {
            "description": "Returns an error when the request body is not valid.\n\n* `schema_validation_failed` - The request body contains a value for a for\na field that either does not exist, or for which the value or type does\nnot match the expected field type. An example might be an unknown option\nfor an `enum` or `multiSelect` field.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the folder or metadata template could not be found.\n\n* `not_found` - The folder could not be found, or the user does not have\naccess to the folder.\n* `instance_tuple_not_found` - The metadata template could not be found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error when an instance of this metadata template is already\npresent on the folder.\n\n* `tuple_already_exists` - An instance of them metadata template already\nexists on the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Classifications on folders"
        ],
        "description": "Adds a classification to a folder by specifying the label of the\nclassification to add.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/folders/:id//enterprise_12345/securityClassification-6VMVochwUWo`.",
        "operationId": "post_folders_id_metadata_enterprise_securityClassification-6VMVochwUWo",
        "summary": "Add classification to folder",
        "x-box-sanitized": true,
        "x-box-tag": "folder_classifications"
      },
      "put": {
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "A list containing the one change to make, to\nupdate the classification label.",
              "items": {
                "description": "The operation to perform on the classification\nmetadata template instance. In this case, it use\nused to replace the value stored for the\n`Box__Security__Classification__Key` field with a new\nvalue.",
                "properties": {
                  "op": {
                    "description": "`replace`",
                    "enum": [
                      "replace"
                    ],
                    "example": "replace",
                    "type": "string"
                  },
                  "path": {
                    "description": "`/Box__Security__Classification__Key`",
                    "enum": [
                      "/Box__Security__Classification__Key"
                    ],
                    "example": "/Box__Security__Classification__Key",
                    "type": "string"
                  },
                  "value": {
                    "description": "The name of the classification to apply to this folder.\n\nTo list the available classifications in an enterprise,\nuse the classification API to retrieve the\n[classification template](e://get_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema)\nwhich lists all available classification keys.",
                    "example": "Sensitive",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated classification metadata template instance.",
            "schema": {
              "$ref": "#/definitions/Classification"
            }
          },
          "400": {
            "description": "Returns an error when the request body is not valid.\n\n* `bad_request` - The request body format is not an array of valid JSON\nPatch operations.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "Returns an error in some edge cases when the request body is not a valid\narray of JSON Patch items.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Classifications on folders"
        ],
        "description": "Updates a classification on a folder.\n\nThe classification can only be updated if a classification has already been\napplied to the folder before. When editing classifications, only values are\ndefined for the enterprise will be accepted.",
        "operationId": "put_folders_id_metadata_enterprise_securityClassification-6VMVochwUWo",
        "summary": "Update classification on folder",
        "x-box-sanitized": true,
        "x-box-tag": "folder_classifications"
      }
    },
    "/folders/{folder_id}/metadata/{scope}/{template_key}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "The scope of the metadata template",
            "enum": [
              "global",
              "enterprise"
            ],
            "in": "path",
            "name": "scope",
            "required": true,
            "type": "string",
            "x-example": "global"
          },
          {
            "description": "The name of the metadata template",
            "in": "path",
            "name": "template_key",
            "required": true,
            "type": "string",
            "x-example": "properties"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the metadata is\nsuccessfully deleted."
          },
          "400": {
            "description": "Returned when the request parameters are not valid. This may happen of the\n`scope` is not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the folder does not have an instance of the metadata\ntemplate applied to it, or when the user does not have access to the\nfolder.\n\n* `instance_not_found` - An instance of the metadata template with the\ngiven `scope` and `templateKey` was not found on this folder.\n* `not_found` - The folder was not found, or the user does not have access\nto the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned when the method was not allowed. This often happens when the\nfolder ID is not valid or the root folder with ID `0`.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata instances (Folders)"
        ],
        "description": "Deletes a piece of folder metadata.",
        "operationId": "delete_folders_id_metadata_id_id",
        "summary": "Remove metadata instance from folder",
        "x-box-sanitized": true,
        "x-box-tag": "folder_metadata"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "The scope of the metadata template",
            "enum": [
              "global",
              "enterprise"
            ],
            "in": "path",
            "name": "scope",
            "required": true,
            "type": "string",
            "x-example": "global"
          },
          {
            "description": "The name of the metadata template",
            "in": "path",
            "name": "template_key",
            "required": true,
            "type": "string",
            "x-example": "properties"
          }
        ],
        "responses": {
          "201": {
            "description": "An instance of the metadata template that includes\nadditional \"key:value\" pairs defined by the user or\nan application.",
            "schema": {
              "$ref": "#/definitions/Metadata"
            }
          },
          "403": {
            "description": "Returned when the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned if the metadata template specified\nwas not applied to this folder or the user does not have access to the\nfolder.\n\n* `instance_not_found` - The metadata template was not applied to the\nfolder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "405": {
            "description": "Returned when the method was not allowed. This often happens when the\nfolder ID is not valid or the root folder with ID `0`.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata instances (Folders)"
        ],
        "description": "Retrieves the instance of a metadata template that has been applied to a\nfolder. This can not be used on the root folder with ID `0`.",
        "operationId": "get_folders_id_metadata_id_id",
        "summary": "Get metadata instance on folder",
        "x-box-sanitized": true,
        "x-box-tag": "folder_metadata"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "The scope of the metadata template",
            "enum": [
              "global",
              "enterprise"
            ],
            "in": "path",
            "name": "scope",
            "required": true,
            "type": "string",
            "x-example": "global"
          },
          {
            "description": "The name of the metadata template",
            "in": "path",
            "name": "template_key",
            "required": true,
            "type": "string",
            "x-example": "properties"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "additionalProperties": {
                "description": "A value for each of the fields that are present on the metadata\ntemplate.\n\nFor the `global.properties` template this can be an a list of zero\nor more fields, as this template allows for any generic key-value\npairs to be stored on the template.",
                "example": "Aaron Levie",
                "type": "string",
                "x-box-example-key": "name"
              },
              "example": {
                "name": "Aaron Levie"
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the instance of the template that was applied to the folder,\nincluding the data that was applied to the template.",
            "schema": {
              "$ref": "#/definitions/Metadata"
            }
          },
          "400": {
            "description": "Returns an error when the request body is not valid.\n\n* `schema_validation_failed` - The request body contains a value for a for\na field that either does not exist, or for which the value or type does\nnot match the expected field type. An example might be an unknown option\nfor an `enum` or `multiSelect` field.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the folder or metadata template could not be found.\n\n* `not_found` - The folder could not be found, or the user does not have\naccess to the folder.\n* `instance_tuple_not_found` - The metadata template could not be found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error when an instance of this metadata template is already\npresent on the folder.\n\n* `tuple_already_exists` - An instance of them metadata template already\nexists on the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata instances (Folders)"
        ],
        "description": "Applies an instance of a metadata template to a folder.\n\nIn most cases only values that are present in the metadata template\nwill be accepted, except for the `global.properties` template which accepts\nany key-value pair.\n\nTo display the metadata template in the Box web app the enterprise needs to be\nconfigured to enable **Cascading Folder Level Metadata** for the user in the\nadmin console.",
        "operationId": "post_folders_id_metadata_id_id",
        "summary": "Create metadata instance on folder",
        "x-box-enable-explorer": false,
        "x-box-sanitized": true,
        "x-box-tag": "folder_metadata"
      },
      "put": {
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "The scope of the metadata template",
            "enum": [
              "global",
              "enterprise"
            ],
            "in": "path",
            "name": "scope",
            "required": true,
            "type": "string",
            "x-example": "global"
          },
          {
            "description": "The name of the metadata template",
            "in": "path",
            "name": "template_key",
            "required": true,
            "type": "string",
            "x-example": "properties"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902)\nspecification for the changes to make to the metadata\ninstance.\n\nThe changes are represented as a JSON array of\noperation objects.",
              "items": {
                "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902) operation for a\nchange to make to the metadata instance.",
                "properties": {
                  "from": {
                    "description": "The location in the metadata JSON object to move or copy a value\nfrom. Required for `move` or `copy` operations and must be in the\nformat of a [JSON-Pointer](https://tools.ietf.org/html/rfc6901).",
                    "example": "/nextState",
                    "type": "string"
                  },
                  "op": {
                    "description": "The type of change to perform on the template. Some\nof these are hazardous as they will change existing templates.",
                    "enum": [
                      "add",
                      "replace",
                      "remove",
                      "test",
                      "move",
                      "copy"
                    ],
                    "example": "add",
                    "type": "string"
                  },
                  "path": {
                    "description": "The location in the metadata JSON object\nto apply the changes to, in the format of a\n[JSON-Pointer](https://tools.ietf.org/html/rfc6901).\n\nThe path must always be prefixed with a `/` to represent the root\nof the template. The characters `~` and `/` are reserved\ncharacters and must be escaped in the key.",
                    "example": "/currentState",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value to be set or tested.\n\nRequired for `add`, `replace`, and `test` operations. For `add`,\nif the value exists already the previous value will be overwritten\nby the new value. For `replace`, the value must exist before\nreplacing.\n\nFor `test`, the existing value at the `path` location must match\nthe specified value.",
                    "example": "reviewed",
                    "type": "string"
                  }
                },
                "title": "A metadata instance update operation",
                "type": "object"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated metadata template instance, with the\ncustom template data included.",
            "schema": {
              "$ref": "#/definitions/Metadata"
            }
          },
          "400": {
            "description": "Returns an error when the request body is not valid.\n\n* `bad_request` - The request body format is not an array of valid JSON\nPatch objects.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "Returns an error in some edge cases when the request body is not a valid\narray of JSON Patch items.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata instances (Folders)"
        ],
        "description": "Updates a piece of metadata on a folder.\n\nThe metadata instance can only be updated if the template has already been\napplied to the folder before. When editing metadata, only values that match\nthe metadata template schema will be accepted.\n\nThe update is applied atomically. If any errors occur during the\napplication of the operations, the metadata instance will not be changed.",
        "operationId": "put_folders_id_metadata_id_id",
        "summary": "Update metadata instance on folder",
        "x-box-sanitized": true,
        "x-box-tag": "folder_metadata"
      }
    },
    "/folders/{folder_id}/trash": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the folder was\npermanently deleted."
          },
          "404": {
            "description": "Returns an error if the folder is not in the trash.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Trashed folders"
        ],
        "description": "Permanently deletes a folder that is in the trash.\nThis action cannot be undone.",
        "operationId": "delete_folders_id_trash",
        "summary": "Permanently remove folder",
        "x-box-tag": "trashed_folders"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the folder that was trashed,\nincluding information about when the it\nwas moved to the trash.",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "404": {
            "description": "Returns an error if the folder can not be found directly\nin the trash.\n\nPlease note that a `HTTP 404` is also returned if any of\nthe folder's parent folders have been moved to the trash.\n\nIn that case, only that parent folder can be inspected using\nthe [`GET /folders/:id/trash`](e://get_folders_id_trash) API.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Trashed folders"
        ],
        "description": "Retrieves a folder that has been moved to the trash.\n\nPlease note that only if the folder itself has been moved to the\ntrash can it be retrieved with this API call. If instead one of\nits parent folders was moved to the trash, only that folder\ncan be inspected using the\n[`GET /folders/:id/trash`](e://get_folders_id_trash) API.\n\nTo list all items that have been moved to the trash, please\nuse the [`GET /folders/trash/items`](e://get-folders-trash-items/)\nAPI.",
        "operationId": "get_folders_id_trash",
        "summary": "Get trashed folder",
        "x-box-tag": "trashed_folders"
      }
    },
    "/folders/{folder_id}/watermark": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "204": {
            "description": "An empty response will be returned when the watermark\nwas successfully deleted."
          },
          "404": {
            "description": "Returns an error if the folder did not have\na watermark applied to it",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Watermarks (Folders)"
        ],
        "description": "Removes the watermark from a folder.",
        "operationId": "delete_folders_id_watermark",
        "summary": "Remove watermark from folder",
        "x-box-tag": "folder_watermarks"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object containing information about the\nwatermark associated for to this folder.",
            "schema": {
              "$ref": "#/definitions/Watermark"
            }
          },
          "404": {
            "description": "Returns an error if the folder does not have a watermark applied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Watermarks (Folders)"
        ],
        "description": "Retrieve the watermark for a folder.",
        "operationId": "get_folders_id_watermark",
        "summary": "Get watermark for folder",
        "x-box-tag": "folder_watermarks"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.",
            "in": "path",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "watermark": {
                  "description": "The watermark to imprint on the folder",
                  "properties": {
                    "imprint": {
                      "description": "The type of watermark to apply.\n\nCurrently only supports one option.",
                      "enum": [
                        "default"
                      ],
                      "example": "default",
                      "type": "string"
                    }
                  },
                  "required": [
                    "imprint"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "watermark"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an updated watermark if a watermark already\nexisted on this folder.",
            "schema": {
              "$ref": "#/definitions/Watermark"
            }
          },
          "201": {
            "description": "Returns a new watermark if no watermark existed on\nthis folder yet.",
            "schema": {
              "$ref": "#/definitions/Watermark"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Watermarks (Folders)"
        ],
        "description": "Applies or update a watermark on a folder.",
        "operationId": "put_folders_id_watermark",
        "summary": "Apply watermark to folder",
        "x-box-tag": "folder_watermarks"
      }
    },
    "/group_memberships": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "configurable_permissions": {
                  "additionalProperties": {
                    "description": "A key value pair of custom permissions.",
                    "example": true,
                    "type": "boolean",
                    "x-box-example-key": "can_run_reports"
                  },
                  "description": "Custom configuration for the permissions an admin\nif a group will receive. This option has no effect\non members with a role of `member`.\n\nSetting these permissions overwrites the default\naccess levels of an admin.\n\nSpecifying a value of \"null\" for this object will disable\nall configurable permissions. Specifying permissions will set\nthem accordingly, omitted permissions will be enabled by default.",
                  "example": {
                    "can_run_reports": true
                  },
                  "type": "object"
                },
                "group": {
                  "description": "The group to add the user to.",
                  "properties": {
                    "id": {
                      "description": "The ID of the group to add the user to",
                      "example": "4545523",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "role": {
                  "description": "The role of the user in the group.",
                  "enum": [
                    "member",
                    "admin"
                  ],
                  "example": "member",
                  "type": "string"
                },
                "user": {
                  "description": "The user to add to the group.",
                  "properties": {
                    "id": {
                      "description": "The ID of the user to add to the group",
                      "example": "1434325",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "user",
                "group"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a new group membership object.",
            "schema": {
              "$ref": "#/definitions/GroupMembership"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Group memberships"
        ],
        "description": "Creates a group membership. Only users with\nadmin-level permissions will be able to use this API.",
        "operationId": "post_group_memberships",
        "summary": "Add user to group",
        "x-box-tag": "memberships"
      }
    },
    "/group_memberships/{group_membership_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the group membership.",
            "in": "path",
            "name": "group_membership_id",
            "required": true,
            "type": "string",
            "x-example": "434534"
          }
        ],
        "responses": {
          "204": {
            "description": "A blank response is returned if the membership was\nsuccessfully deleted."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Group memberships"
        ],
        "description": "Deletes a specific group membership. Only admins of this\ngroup or users with admin-level permissions will be able to\nuse this API.",
        "operationId": "delete_group_memberships_id",
        "summary": "Remove user from group",
        "x-box-tag": "memberships"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the group membership.",
            "in": "path",
            "name": "group_membership_id",
            "required": true,
            "type": "string",
            "x-example": "434534"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the group membership object.",
            "schema": {
              "$ref": "#/definitions/GroupMembership"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Group memberships"
        ],
        "description": "Retrieves a specific group membership. Only admins of this\ngroup or users with admin-level permissions will be able to\nuse this API.",
        "operationId": "get_group_memberships_id",
        "summary": "Get group membership",
        "x-box-tag": "memberships"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the group membership.",
            "in": "path",
            "name": "group_membership_id",
            "required": true,
            "type": "string",
            "x-example": "434534"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "configurable_permissions": {
                  "additionalProperties": {
                    "description": "A key value pair of custom permissions.",
                    "example": true,
                    "type": "boolean",
                    "x-box-example-key": "can_run_reports"
                  },
                  "description": "Custom configuration for the permissions an admin\nif a group will receive. This option has no effect\non members with a role of `member`.\n\nSetting these permissions overwrites the default\naccess levels of an admin.\n\nSpecifying a value of \"null\" for this object will disable\nall configurable permissions. Specifying permissions will set\nthem accordingly, omitted permissions will be enabled by default.",
                  "example": {
                    "can_run_reports": true
                  },
                  "type": "object"
                },
                "role": {
                  "description": "The role of the user in the group.",
                  "enum": [
                    "member",
                    "admin"
                  ],
                  "example": "member",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a new group membership object.",
            "schema": {
              "$ref": "#/definitions/GroupMembership"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Group memberships"
        ],
        "description": "Updates a user's group membership. Only admins of this\ngroup or users with admin-level permissions will be able to\nuse this API.",
        "operationId": "put_group_memberships_id",
        "summary": "Update group membership",
        "x-box-tag": "memberships"
      }
    },
    "/groups": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Limits the results to only groups whose `name` starts\nwith the search term.",
            "in": "query",
            "name": "filter_term",
            "required": false,
            "type": "string",
            "x-example": "Engineering"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of group objects. If there are no groups, an\nempty collection will be returned.",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Retrieves all of the groups for a given enterprise. The user\nmust have admin permissions to inspect enterprise's groups.",
        "operationId": "get_groups",
        "summary": "List groups for enterprise",
        "x-box-tag": "groups"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "description": {
                  "description": "A human readable description of the group.",
                  "example": "\"Customer Support Group - as imported from Active Directory\"",
                  "maxLength": 255,
                  "type": "string"
                },
                "external_sync_identifier": {
                  "description": "An arbitrary identifier that can be used by\nexternal group sync tools to link this Box Group to\nan external group.\n\nExample values of this field\ncould be an **Active Directory Object ID** or a **Google\nGroup ID**.\n\nWe recommend you use of this field in\norder to avoid issues when group names are updated in\neither Box or external systems.",
                  "example": "AD:123456",
                  "type": "string"
                },
                "invitability_level": {
                  "description": "Specifies who can invite the group to collaborate\non folders.\n\nWhen set to `admins_only` the enterprise admin, co-admins,\nand the group's admin can invite the group.\n\nWhen set to `admins_and_members` all the admins listed\nabove and group members can invite the group.\n\nWhen set to `all_managed_users` all managed users in the\nenterprise can invite the group.",
                  "enum": [
                    "admins_only",
                    "admins_and_members",
                    "all_managed_users"
                  ],
                  "example": "admins_only",
                  "type": "string"
                },
                "member_viewability_level": {
                  "description": "Specifies who can see the members of the group.\n\n* `admins_only` - the enterprise admin, co-admins, group's\n  group admin\n* `admins_and_members` - all admins and group members\n* `all_managed_users` - all managed users in the\n  enterprise",
                  "enum": [
                    "admins_only",
                    "admins_and_members",
                    "all_managed_users"
                  ],
                  "example": "admins_only",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the new group to be created. This name must be unique\nwithin the enterprise.",
                  "example": "Customer Support",
                  "type": "string"
                },
                "provenance": {
                  "description": "Keeps track of which external source this group is\ncoming, for example `Active Directory`, or `Okta`.\n\nSetting this will also prevent Box admins from editing\nthe group name and its members directly via the Box\nweb application.\n\nThis is desirable for one-way syncing of groups.",
                  "example": "Active Directory",
                  "maxLength": 255,
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the new group object.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "409": {
            "description": "Returns an error a conflict is stopping the group from being created.\n\n* `invalid_parameter`: Often returned if the group name is not unique in\nthe enterprise.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Creates a new group of users in an enterprise. Only users with admin\npermissions can create new groups.",
        "operationId": "post_groups",
        "summary": "Create group",
        "x-box-tag": "groups"
      }
    },
    "/groups/{group_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the group.",
            "in": "path",
            "name": "group_id",
            "required": true,
            "type": "string",
            "x-example": "57645"
          }
        ],
        "responses": {
          "204": {
            "description": "A blank response is returned if the group was\nsuccessfully deleted."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Permanently deletes a group. Only users with\nadmin-level permissions will be able to use this API.",
        "operationId": "delete_groups_id",
        "summary": "Remove group",
        "x-box-tag": "groups"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the group.",
            "in": "path",
            "name": "group_id",
            "required": true,
            "type": "string",
            "x-example": "57645"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the group object",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Retrieves information about a group. Only members of this\ngroup or users with admin-level permissions will be able to\nuse this API.",
        "operationId": "get_groups_id",
        "summary": "Get group",
        "x-box-tag": "groups"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the group.",
            "in": "path",
            "name": "group_id",
            "required": true,
            "type": "string",
            "x-example": "57645"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "description": {
                  "description": "A human readable description of the group.",
                  "example": "\"Customer Support Group - as imported from Active Directory\"",
                  "maxLength": 255,
                  "type": "string"
                },
                "external_sync_identifier": {
                  "description": "An arbitrary identifier that can be used by\nexternal group sync tools to link this Box Group to\nan external group.\n\nExample values of this field\ncould be an **Active Directory Object ID** or a **Google\nGroup ID**.\n\nWe recommend you use of this field in\norder to avoid issues when group names are updated in\neither Box or external systems.",
                  "example": "AD:123456",
                  "type": "string"
                },
                "invitability_level": {
                  "description": "Specifies who can invite the group to collaborate\non folders.\n\nWhen set to `admins_only` the enterprise admin, co-admins,\nand the group's admin can invite the group.\n\nWhen set to `admins_and_members` all the admins listed\nabove and group members can invite the group.\n\nWhen set to `all_managed_users` all managed users in the\nenterprise can invite the group.",
                  "enum": [
                    "admins_only",
                    "admins_and_members",
                    "all_managed_users"
                  ],
                  "example": "admins_only",
                  "type": "string"
                },
                "member_viewability_level": {
                  "description": "Specifies who can see the members of the group.\n\n* `admins_only` - the enterprise admin, co-admins, group's\n  group admin\n* `admins_and_members` - all admins and group members\n* `all_managed_users` - all managed users in the\n  enterprise",
                  "enum": [
                    "admins_only",
                    "admins_and_members",
                    "all_managed_users"
                  ],
                  "example": "admins_only",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the new group to be created. Must be unique within the\nenterprise.",
                  "example": "Customer Support",
                  "type": "string"
                },
                "provenance": {
                  "description": "Keeps track of which external source this group is\ncoming, for example `Active Directory`, or `Okta`.\n\nSetting this will also prevent Box admins from editing\nthe group name and its members directly via the Box\nweb application.\n\nThis is desirable for one-way syncing of groups.",
                  "example": "Active Directory",
                  "maxLength": 255,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated group object.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "409": {
            "description": "Returns an error a conflict is stopping the group from being created.\n\n* `invalid_parameter`: Often returned if the group name is not unique in\nthe enterprise.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Updates a specific group. Only admins of this\ngroup or users with admin-level permissions will be able to\nuse this API.",
        "operationId": "put_groups_id",
        "summary": "Update group",
        "x-box-tag": "groups"
      }
    },
    "/groups/{group_id}/collaborations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the group.",
            "in": "path",
            "name": "group_id",
            "required": true,
            "type": "string",
            "x-example": "57645"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of collaboration objects. If there are no\ncollaborations, an empty collection will be returned.",
            "schema": {
              "$ref": "#/definitions/Collaborations"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Collaborations (List)"
        ],
        "description": "Retrieves all the collaborations for a group. The user\nmust have admin permissions to inspect enterprise's groups.\n\nEach collaboration object has details on which files or\nfolders the group has access to and with what role.",
        "operationId": "get_groups_id_collaborations",
        "summary": "List collaborations for group",
        "x-box-tag": "list_collaborations"
      }
    },
    "/groups/{group_id}/memberships": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the group.",
            "in": "path",
            "name": "group_id",
            "required": true,
            "type": "string",
            "x-example": "57645"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of membership objects. If there are no\nmemberships, an empty collection will be returned.",
            "schema": {
              "$ref": "#/definitions/GroupMemberships"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Group memberships"
        ],
        "description": "Retrieves all the members for a group. Only members of this\ngroup or users with admin-level permissions will be able to\nuse this API.",
        "operationId": "get_groups_id_memberships",
        "summary": "List members of group",
        "x-box-tag": "memberships"
      }
    },
    "/invites": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "actionable_by": {
                  "description": "The user to invite",
                  "properties": {
                    "login": {
                      "description": "The login of the invited user",
                      "example": "john@example.com",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "enterprise": {
                  "description": "The enterprise to invite the user to",
                  "properties": {
                    "id": {
                      "description": "The ID of the enterprise",
                      "example": "1232234",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "enterprise",
                "actionable_by"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a new invite object.",
            "schema": {
              "$ref": "#/definitions/Invite"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Invites"
        ],
        "description": "Invites an existing external user to join an enterprise.\n\nThe existing user can not be part of another enterprise and\nmust already have a Box account. Once invited, the user will receive an\nemail and are prompted to accept the invitation within the\nBox web application.\n\nThis method requires the \"Manage An Enterprise\" scope enabled for\nthe application, which can be enabled within the developer console.",
        "operationId": "post_invites",
        "summary": "Create user invite",
        "x-box-tag": "invites"
      }
    },
    "/invites/{invite_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of an invite.",
            "in": "path",
            "name": "invite_id",
            "required": true,
            "type": "string",
            "x-example": "213723"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an invite object",
            "schema": {
              "$ref": "#/definitions/Invite"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Invites"
        ],
        "description": "Returns the status of a user invite.",
        "operationId": "get_invites_id",
        "summary": "Get user invite status",
        "x-box-tag": "invites"
      }
    },
    "/legal_hold_policies": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Limits results to policies for which the names start with\nthis search term. This is a case-insensitive prefix.",
            "in": "query",
            "name": "policy_name",
            "required": false,
            "type": "string",
            "x-example": "Sales Policy"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of legal hold policies.",
            "schema": {
              "$ref": "#/definitions/LegalHoldPolicies"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Legal hold policies"
        ],
        "description": "Retrieves a list of legal hold policies that belong to\nan enterprise.",
        "operationId": "get_legal_hold_policies",
        "summary": "List all legal hold policies",
        "x-box-tag": "legal_hold_policies"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "description": {
                  "description": "A description for the policy.",
                  "example": "A custom policy for the sales team",
                  "maxLength": 500,
                  "type": "string"
                },
                "filter_ended_at": {
                  "description": "The filter end date.\n\nWhen this policy is applied using a `custodian` legal\nhold assignments, it will only apply to file versions\ncreated or uploaded inside of the\ndate range. Other assignment types, such as folders and\nfiles, will ignore the date filter.\n\nRequired if `is_ongoing` is set to `false`.",
                  "example": "2012-12-18T10:53:43-08:00",
                  "format": "date-time",
                  "maxLength": 500,
                  "type": "string"
                },
                "filter_started_at": {
                  "description": "The filter start date.\n\nWhen this policy is applied using a `custodian` legal\nhold assignments, it will only apply to file versions\ncreated or uploaded inside of the\ndate range. Other assignment types, such as folders and\nfiles, will ignore the date filter.\n\nRequired if `is_ongoing` is set to `false`.",
                  "example": "2012-12-12T10:53:43-08:00",
                  "format": "date-time",
                  "maxLength": 500,
                  "type": "string"
                },
                "is_ongoing": {
                  "description": "Whether new assignments under this policy should\ncontinue applying to files even after initialization.\n\nWhen this policy is applied using a legal hold assignment,\nit will continue applying the policy to any new file versions\neven after it has been applied.\n\nFor example, if a legal hold assignment is placed on a user\ntoday, and that user uploads a file tomorrow, that file will\nget held. This will continue until the policy is retired.\n\nRequired if no filter dates are set.",
                  "example": true,
                  "type": "boolean"
                },
                "policy_name": {
                  "description": "The name of the policy.",
                  "example": "Sales Policy",
                  "maxLength": 254,
                  "type": "string"
                }
              },
              "required": [
                "policy_name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a new legal hold policy object.",
            "schema": {
              "$ref": "#/definitions/LegalHoldPolicy"
            }
          },
          "400": {
            "description": "Returns an error if required parameters are missing,\nor neither `is_ongoing` or filter dates are specified.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error if a policy with this name already exists.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Legal hold policies"
        ],
        "description": "Create a new legal hold policy.",
        "operationId": "post_legal_hold_policies",
        "summary": "Create legal hold policy",
        "x-box-tag": "legal_hold_policies"
      }
    },
    "/legal_hold_policies/{legal_hold_policy_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the legal hold policy",
            "in": "path",
            "name": "legal_hold_policy_id",
            "required": true,
            "type": "string",
            "x-example": "324432"
          }
        ],
        "responses": {
          "202": {
            "description": "A blank response is returned if the policy was\nsuccessfully deleted."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Legal hold policies"
        ],
        "description": "Delete an existing legal hold policy.\n\nThis is an asynchronous process. The policy will not be\nfully deleted yet when the response returns.",
        "operationId": "delete_legal_hold_policies_id",
        "summary": "Remove legal hold policy",
        "x-box-tag": "legal_hold_policies"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the legal hold policy",
            "in": "path",
            "name": "legal_hold_policy_id",
            "required": true,
            "type": "string",
            "x-example": "324432"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a legal hold policy object.",
            "schema": {
              "$ref": "#/definitions/LegalHoldPolicy"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Legal hold policies"
        ],
        "description": "Retrieve a legal hold policy.",
        "operationId": "get_legal_hold_policies_id",
        "summary": "Get legal hold policy",
        "x-box-tag": "legal_hold_policies"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the legal hold policy",
            "in": "path",
            "name": "legal_hold_policy_id",
            "required": true,
            "type": "string",
            "x-example": "324432"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "description": {
                  "description": "A description for the policy.",
                  "example": "A custom policy for the sales team",
                  "maxLength": 500,
                  "type": "string"
                },
                "policy_name": {
                  "description": "The name of the policy.",
                  "example": "Sales Policy",
                  "maxLength": 254,
                  "type": "string"
                },
                "release_notes": {
                  "description": "Notes around why the policy was released.",
                  "example": "Required for GDPR",
                  "maxLength": 500,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a new legal hold policy object.",
            "schema": {
              "$ref": "#/definitions/LegalHoldPolicy"
            }
          },
          "409": {
            "description": "Returns an error if a policy with this name already exists.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Legal hold policies"
        ],
        "description": "Update legal hold policy.",
        "operationId": "put_legal_hold_policies_id",
        "summary": "Update legal hold policy",
        "x-box-tag": "legal_hold_policies"
      }
    },
    "/legal_hold_policy_assignments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the legal hold policy",
            "in": "query",
            "name": "policy_id",
            "required": true,
            "type": "string",
            "x-example": "324432"
          },
          {
            "description": "Filters the results by the type of item the\npolicy was applied to.",
            "enum": [
              "file",
              "file_version",
              "folder",
              "user"
            ],
            "in": "query",
            "name": "assign_to_type",
            "type": "string",
            "x-example": "file"
          },
          {
            "description": "Filters the results by the ID of item the\npolicy was applied to.",
            "in": "query",
            "name": "assign_to_id",
            "type": "string",
            "x-example": "1234323"
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of legal hold policy assignments.",
            "schema": {
              "$ref": "#/definitions/LegalHoldPolicyAssignments"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Legal hold policy assignments"
        ],
        "description": "Retrieves a list of items a legal hold policy has been assigned to.",
        "operationId": "get_legal_hold_policy_assignments",
        "summary": "List legal hold policy assignments",
        "x-box-tag": "legal_hold_policy_assignments"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "assign_to": {
                  "description": "The item to assign the policy to",
                  "properties": {
                    "id": {
                      "description": "The ID of item to assign the policy to",
                      "example": "6564564",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of item to assign the policy to",
                      "enum": [
                        "file",
                        "file_version",
                        "folder",
                        "user"
                      ],
                      "example": "folder",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "id"
                  ],
                  "type": "object"
                },
                "policy_id": {
                  "description": "The ID of the policy to assign.",
                  "example": "123244",
                  "type": "string"
                }
              },
              "required": [
                "policy_id",
                "assign_to"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a new legal hold policy assignment.",
            "schema": {
              "$ref": "#/definitions/LegalHoldPolicyAssignment"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Legal hold policy assignments"
        ],
        "description": "Assign a legal hold to a file, file version, folder, or user.",
        "operationId": "post_legal_hold_policy_assignments",
        "summary": "Assign legal hold policy",
        "x-box-tag": "legal_hold_policy_assignments"
      }
    },
    "/legal_hold_policy_assignments/{legal_hold_policy_assignment_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the legal hold policy assignment",
            "in": "path",
            "name": "legal_hold_policy_assignment_id",
            "required": true,
            "type": "string",
            "x-example": "753465"
          }
        ],
        "responses": {
          "202": {
            "description": "A blank response is returned if the assignment was\nsuccessfully deleted."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Legal hold policy assignments"
        ],
        "description": "Remove a legal hold from an item.\n\nThis is an asynchronous process. The policy will not be\nfully removed yet when the response returns.",
        "operationId": "delete_legal_hold_policy_assignments_id",
        "summary": "Unassign legal hold policy",
        "x-box-tag": "legal_hold_policy_assignments"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the legal hold policy assignment",
            "in": "path",
            "name": "legal_hold_policy_assignment_id",
            "required": true,
            "type": "string",
            "x-example": "753465"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a legal hold policy object.",
            "schema": {
              "$ref": "#/definitions/LegalHoldPolicyAssignment"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Legal hold policy assignments"
        ],
        "description": "Retrieve a legal hold policy assignment.",
        "operationId": "get_legal_hold_policy_assignments_id",
        "summary": "Get legal hold policy assignment",
        "x-box-tag": "legal_hold_policy_assignments"
      }
    },
    "/legal_hold_policy_assignments/{legal_hold_policy_assignment_id}/file_versions_on_hold": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the legal hold policy assignment",
            "in": "path",
            "name": "legal_hold_policy_assignment_id",
            "required": true,
            "type": "string",
            "x-example": "753465"
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of previous file versions held under legal hold for a\nspecific legal hold policy assignment.",
            "schema": {
              "$ref": "#/definitions/FileVersionLegalHolds"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Legal hold policy assignments"
        ],
        "description": "Get a list of previous file versions for a legal hold\nassignment.\n\nIn some cases you may only need the latest file versions instead. In these\ncases, use the `GET  /legal_hold_policy_assignments/:id/files_on_hold` API\ninstead to return any current (latest) versions of a file for this legal hold\npolicy assignment.\n\nDue to ongoing re-architecture efforts this API might not return all files\nheld for this policy ID. Instead, this API will only return past file versions\nheld in the newly developed architecture. The `GET /file_version_legal_holds`\nAPI can be used to fetch current and past versions of files held within the\nlegacy architecture.\n\nThe `GET /legal_hold_policy_assignments?policy_id={id}` API can be used to\nfind a list of policy assignments for a given policy ID.",
        "operationId": "get_legal_hold_policy_assignments_id_file_versions_on_hold",
        "summary": "List previous file versions for legal hold policy assignment",
        "x-box-tag": "legal_hold_policy_assignments"
      }
    },
    "/legal_hold_policy_assignments/{legal_hold_policy_assignment_id}/files_on_hold": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the legal hold policy assignment",
            "in": "path",
            "name": "legal_hold_policy_assignment_id",
            "required": true,
            "type": "string",
            "x-example": "753465"
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of current file versions held under legal hold for a\nspecific legal hold policy assignment.",
            "schema": {
              "$ref": "#/definitions/FileVersionLegalHolds"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Legal hold policy assignments"
        ],
        "description": "Get a list of current file versions for a legal hold\nassignment.\n\nIn some cases you may want to get previous file versions instead. In these\ncases, use the `GET  /legal_hold_policy_assignments/:id/file_versions_on_hold`\nAPI instead to return any previous versions of a file for this legal hold\npolicy assignment.\n\nDue to ongoing re-architecture efforts this API might not return all file\nversions held for this policy ID. Instead, this API will only return the\nlatest file version held in the newly developed architecture. The `GET\n/file_version_legal_holds` API can be used to fetch current and past versions\nof files held within the legacy architecture.\n\nThe `GET /legal_hold_policy_assignments?policy_id={id}` API can be used to\nfind a list of policy assignments for a given policy ID.",
        "operationId": "get_legal_hold_policy_assignments_id_files_on_hold",
        "summary": "List current file versions for legal hold policy assignment",
        "x-box-tag": "legal_hold_policy_assignments"
      }
    },
    "/metadata_cascade_policies": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which folder to return policies for. This can not be used on the\nroot folder with ID `0`.",
            "in": "query",
            "name": "folder_id",
            "required": true,
            "type": "string",
            "x-example": "31232"
          },
          {
            "description": "The ID of the enterprise ID for which to find metadata\ncascade policies. If not specified, it defaults to the\ncurrent enterprise.",
            "in": "query",
            "name": "owner_enterprise_id",
            "type": "string",
            "x-example": "31232"
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of metadata cascade policies",
            "schema": {
              "$ref": "#/definitions/MetadataCascadePolicies"
            }
          },
          "400": {
            "description": "Returns an error when any of the parameters are not in a valid format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returns an error when the folder can not be accessed. This error often\nhappens when accessing the root folder with ID `0`.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the folder can not be found or the user does not\nhave access to the folder.\n\n* `not_found` - The folder could not be found or the user does not have\n  access to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata cascade policies"
        ],
        "description": "Retrieves a list of all the metadata cascade policies\nthat are applied to a given folder. This can not be used on the root\nfolder with ID `0`.",
        "operationId": "get_metadata_cascade_policies",
        "summary": "List metadata cascade policies",
        "x-box-sanitized": true,
        "x-box-tag": "metadata_cascade_policies"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "folder_id": {
                  "description": "The ID of the folder to apply the policy to. This folder will\nneed to already have an instance of the targeted metadata\ntemplate applied to it.",
                  "example": "1234567",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope of the targeted metadata template. This template will\nneed to already have an instance applied to the targeted folder.",
                  "enum": [
                    "global",
                    "enterprise"
                  ],
                  "example": "enterprise",
                  "type": "string"
                },
                "templateKey": {
                  "description": "The key of the targeted metadata template. This template will\nneed to already have an instance applied to the targeted folder.\n\nIn many cases the template key is automatically derived\nof its display name, for example `Contract Template` would\nbecome `contractTemplate`. In some cases the creator of the\ntemplate will have provided its own template key.\n\nPlease [list the templates for an enterprise][list], or\nget all instances on a [file][file] or [folder][folder]\nto inspect a template's key.\n\n[list]: e://get-metadata-templates-enterprise\n[file]: e://get-files-id-metadata\n[folder]: e://get-folders-id-metadata",
                  "example": "productInfo",
                  "type": "string"
                }
              },
              "required": [
                "folder_id",
                "scope",
                "templateKey"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a new of metadata cascade policy",
            "schema": {
              "$ref": "#/definitions/MetadataCascadePolicy"
            }
          },
          "400": {
            "description": "Returns an error when any of the parameters are not in a valid format.\n\n* `bad_request` - Either the `scope`, `templateKey`, or `folder_id` are\nnot in a valid format.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returns an error when trying to apply a policy to a restricted folder, for\nexample the root folder with ID `0`.\n\n* `forbidden` - Although the folder ID was valid and the user has access\nto the folder, the policy could not be applied to this folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the template or folder can not be found, or when the\nuser does not have access to the folder or template.\n\n* `instance_tuple_not_found` - The template could not be found or the user\ndoes not have access to the template.\n* `not_found` - The folder could not be found or the user\ndoes not have access to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error when a policy for this folder and template is already in\nplace.\n\n* `tuple_already_exists` - A cascade policy for this combination of\n`folder_id`, `scope` and `templateKey` already exists.",
            "schema": {
              "$ref": "#/definitions/ConflictError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata cascade policies"
        ],
        "description": "Creates a new metadata cascade policy that applies a given\nmetadata template to a given folder and automatically\ncascades it down to any files within that folder.\n\nIn order for the policy to be applied a metadata instance must first\nbe applied to the folder the policy is to be applied to.",
        "operationId": "post_metadata_cascade_policies",
        "summary": "Create metadata cascade policy",
        "x-box-sanitized": true,
        "x-box-tag": "metadata_cascade_policies"
      }
    },
    "/metadata_cascade_policies/{metadata_cascade_policy_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the metadata cascade policy.",
            "in": "path",
            "name": "metadata_cascade_policy_id",
            "required": true,
            "type": "string",
            "x-example": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the policy\nis successfully deleted."
          },
          "404": {
            "description": "Returns an error when the policy can not be found or the user does not\nhave access to the folder.\n\n* `instance_not_found` - The policy could not be found\n* `not_found` - The folder could not be found or the user does not have\n  access to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata cascade policies"
        ],
        "description": "Deletes a metadata cascade policy.",
        "operationId": "delete_metadata_cascade_policies_id",
        "summary": "Remove metadata cascade policy",
        "x-box-sanitized": true,
        "x-box-tag": "metadata_cascade_policies"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the metadata cascade policy.",
            "in": "path",
            "name": "metadata_cascade_policy_id",
            "required": true,
            "type": "string",
            "x-example": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a metadata cascade policy",
            "schema": {
              "$ref": "#/definitions/MetadataCascadePolicy"
            }
          },
          "404": {
            "description": "Returns an error when the policy can not be found or the user does not\nhave access to the folder.\n\n* `instance_not_found` - The policy could not be found\n* `not_found` - The folder could not be found or the user does not have\n  access to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata cascade policies"
        ],
        "description": "Retrieve a specific metadata cascade policy assigned to a folder.",
        "operationId": "get_metadata_cascade_policies_id",
        "summary": "Get metadata cascade policy",
        "x-box-sanitized": true,
        "x-box-tag": "metadata_cascade_policies"
      }
    },
    "/metadata_cascade_policies/{metadata_cascade_policy_id}/apply": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the cascade policy to force-apply.",
            "in": "path",
            "name": "metadata_cascade_policy_id",
            "required": true,
            "type": "string",
            "x-example": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "conflict_resolution": {
                  "description": "Describes the desired behavior when dealing with the conflict\nwhere a metadata template already has an instance applied\nto a child.\n\n* `none` will preserve the existing value on the file\n* `overwrite` will force-apply the templates values over\n  any existing values.",
                  "enum": [
                    "none",
                    "overwrite"
                  ],
                  "example": "none",
                  "type": "string"
                }
              },
              "required": [
                "conflict_resolution"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Returns an empty response when the API call was successful. The metadata\ncascade operation will be performed asynchronously.\n\nThe API call will return directly, before the cascade operation\nis complete. There is currently no API to check for the status of this\noperation."
          },
          "404": {
            "description": "Returns an error when the policy can not be found or the user does not\nhave access to the folder.\n\n* `instance_not_found` - The policy could not be found\n* `not_found` - The folder could not be found or the user does not have\n  access to the folder.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata cascade policies"
        ],
        "description": "Force the metadata on a folder with a metadata cascade policy to be applied to\nall of its children. This can be used after creating a new cascade policy to\nenforce the metadata to be cascaded down to all existing files within that\nfolder.",
        "operationId": "post_metadata_cascade_policies_id_apply",
        "summary": "Force-apply metadata cascade policy to folder",
        "x-box-sanitized": true,
        "x-box-tag": "metadata_cascade_policies"
      }
    },
    "/metadata_queries/execute_read": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/MetadataQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of files and folders that match this metadata query.",
            "schema": {
              "$ref": "#/definitions/MetadataQueryResults"
            }
          },
          "400": {
            "description": "Returns an error when the request body is not valid.\n\n* `invalid_query` - Any of the provided body parameters might be\nincorrect. This can mean the `query` is incorrect, as well as some cases\nwhere the `from` value does not represent a valid template.\n* `unexpected_json_type` - An argument from the `query` string is not\npresent in `query_param`. For example, `query` of `name = :name` requires\nthe `query_param` to include a value for the `name` argument, for example\n`{ \"name\": \"Box, Inc\" }`.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when a metadata template with the given `scope` and\n`templateKey` can not be found. The error response will include extra\ndetails.\n\n* `instance_not_found` - The template could not be found. Please make sure\nto use the full template scope including the enterprise ID, like\n`enterprise_12345`.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Search"
        ],
        "description": "Create a search using SQL-like syntax to return items that match specific\nmetadata.\n\nBy default, this endpoint returns only the most basic info about the items for\nwhich the query matches. To get additional fields for each item, including any\nof the metadata, use the `fields` attribute in the query.",
        "operationId": "post_metadata_queries_execute_read",
        "summary": "Query files/folders by metadata",
        "x-box-enable-explorer": true,
        "x-box-sanitized": true,
        "x-box-tag": "search"
      }
    },
    "/metadata_templates": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of an instance of the metadata template to find.",
            "format": "uuid",
            "in": "query",
            "name": "metadata_instance_id",
            "required": true,
            "type": "string",
            "x-example": "01234500-12f1-1234-aa12-b1d234cb567e"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list containing the 1 metadata template that matches the\ninstance ID.",
            "schema": {
              "$ref": "#/definitions/MetadataTemplates"
            }
          },
          "400": {
            "description": "Returned when the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata templates"
        ],
        "description": "Finds a metadata template by searching for the ID of an instance of the\ntemplate.",
        "operationId": "get_metadata_templates",
        "summary": "Find metadata template by instance ID",
        "x-box-sanitized": true,
        "x-box-tag": "metadata_templates"
      }
    },
    "/metadata_templates/enterprise": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all of the metadata templates within an enterprise\nand their corresponding schema.",
            "schema": {
              "$ref": "#/definitions/MetadataTemplates"
            }
          },
          "400": {
            "description": "Returned when the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata templates"
        ],
        "description": "Used to retrieve all metadata templates created to be used specifically within\nthe user's enterprise",
        "operationId": "get_metadata_templates_enterprise",
        "summary": "List all metadata templates for enterprise",
        "x-box-sanitized": true,
        "x-box-tag": "metadata_templates"
      }
    },
    "/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Returns an empty response when the metadata\ntemplate for classifications is successfully deleted."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Classifications"
        ],
        "description": "Delete all classifications by deleting the classification\nmetadata template.",
        "operationId": "delete_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema",
        "summary": "Delete all classifications",
        "x-box-sanitized": true,
        "x-box-tag": "classifications"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns the `securityClassification` metadata template, which contains\na `Box__Security__Classification__Key` field that lists all the\nclassifications available to this enterprise.",
            "schema": {
              "$ref": "#/definitions/ClassificationTemplate"
            }
          },
          "400": {
            "description": "Returned if any of the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned when a template name is not correct. Please make sure\nthe URL for the request is correct.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Classifications"
        ],
        "description": "Retrieves the classification metadata template and lists all the\nclassifications available to this enterprise.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/metadata_templates/enterprise_12345/securityClassification-6VMVochwUWo/schema`.",
        "operationId": "get_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema",
        "summary": "List all classifications",
        "x-box-sanitized": true,
        "x-box-tag": "classifications"
      }
    },
    "/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#add": {
      "put": {
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "An array that contains one or more classifications to add to\nthe enterprise's list of classifications.",
              "items": {
                "description": "A single classification to add to the enterprise.",
                "properties": {
                  "data": {
                    "description": "The details of the classification to add.",
                    "properties": {
                      "classification": {
                        "description": "Additional details for the classification.",
                        "properties": {
                          "classificationDefinition": {
                            "description": "A longer description of the classification.",
                            "example": "Sensitive information that must not be shared.",
                            "type": "string"
                          },
                          "colorID": {
                            "description": "An internal Box identifier used to assign a color to\na classification label.\n\nMapping between a `colorID` and a color may change\nwithout notice. Currently, the color mappings are as\nfollows.\n\n* `0`: Yellow\n* `1`: Orange\n* `2`: Watermelon red\n* `3`: Purple rain\n* `4`: Light blue\n* `5`: Dark blue\n* `6`: Light green\n* `7`: Gray",
                            "example": 4,
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "key": {
                        "description": "The label of the classification as shown in the web and\nmobile interfaces. This is the only field required to\nadd a classification.",
                        "example": "Sensitive",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  "fieldKey": {
                    "description": "`Box__Security__Classification__Key`",
                    "example": "Box__Security__Classification__Key",
                    "type": "string"
                  },
                  "op": {
                    "description": "`addEnumOption`",
                    "example": "addEnumOption",
                    "type": "string"
                  }
                },
                "required": [
                  "op",
                  "fieldKey",
                  "data"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated `securityClassification` metadata template, which\ncontains a `Box__Security__Classification__Key` field that lists all\nthe classifications available to this enterprise.",
            "schema": {
              "$ref": "#/definitions/ClassificationTemplate"
            }
          },
          "400": {
            "description": "Returned if any of the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned when a template name is not correct. Please make sure\nthe URL for the request is correct.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Classifications"
        ],
        "description": "Adds one or more new classifications to the list of classifications\navailable to the enterprise.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/metadata_templates/enterprise_12345/securityClassification-6VMVochwUWo/schema`.",
        "operationId": "put_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema#add",
        "summary": "Add classification",
        "x-box-sanitized": true,
        "x-box-tag": "classifications"
      }
    },
    "/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#delete": {
      "put": {
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "An array that contains one or more classifications to remove.",
              "items": {
                "description": "A single classification to remove.",
                "properties": {
                  "enumOptionKey": {
                    "description": "The label of the classification to remove.",
                    "example": "Sensitive",
                    "type": "string"
                  },
                  "fieldKey": {
                    "description": "`Box__Security__Classification__Key`",
                    "example": "Box__Security__Classification__Key",
                    "type": "string"
                  },
                  "op": {
                    "description": "`removeEnumOption`",
                    "example": "removeEnumOption",
                    "type": "string"
                  }
                },
                "required": [
                  "op",
                  "fieldKey",
                  "enumOptionKey"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated `securityClassification` metadata template, which\ncontains a `Box__Security__Classification__Key` field that lists all\nthe classifications available to this enterprise.",
            "schema": {
              "$ref": "#/definitions/ClassificationTemplate"
            }
          },
          "400": {
            "description": "Returned if any of the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned when a template name is not correct. Please make sure\nthe URL for the request is correct.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Classifications"
        ],
        "description": "Removes a classification from the list of classifications\navailable to the enterprise.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/metadata_templates/enterprise_12345/securityClassification-6VMVochwUWo/schema`.",
        "operationId": "put_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema#delete",
        "summary": "Delete classification",
        "x-box-sanitized": true,
        "x-box-tag": "classifications"
      }
    },
    "/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#update": {
      "put": {
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "An array that contains one or more classifications to update.",
              "items": {
                "description": "A single classification to update.",
                "properties": {
                  "data": {
                    "description": "The details of the updated classification.",
                    "properties": {
                      "classification": {
                        "description": "Additional details for the classification.",
                        "properties": {
                          "classificationDefinition": {
                            "description": "A longer description of the classification.",
                            "example": "Sensitive information that must not be shared.",
                            "type": "string"
                          },
                          "colorID": {
                            "description": "An internal Box identifier used to assign a color to\na classification label.\n\nMapping between a `colorID` and a color may change\nwithout notice. Currently, the color mappings are as\nfollows.\n\n* `0`: Yellow\n* `1`: Orange\n* `2`: Watermelon red\n* `3`: Purple rain\n* `4`: Light blue\n* `5`: Dark blue\n* `6`: Light green\n* `7`: Gray",
                            "example": 4,
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "key": {
                        "description": "A new label for the classification, as it will be\nshown in the web and mobile interfaces.",
                        "example": "Very Sensitive",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  "enumOptionKey": {
                    "description": "The original label of the classification to change.",
                    "example": "Sensitive",
                    "type": "string"
                  },
                  "fieldKey": {
                    "description": "`Box__Security__Classification__Key`",
                    "example": "Box__Security__Classification__Key",
                    "type": "string"
                  },
                  "op": {
                    "description": "`editEnumOption`",
                    "example": "editEnumOption",
                    "type": "string"
                  }
                },
                "required": [
                  "op",
                  "fieldKey",
                  "enumOptionKey",
                  "data"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated `securityClassification` metadata template, which\ncontains a `Box__Security__Classification__Key` field that lists all\nthe classifications available to this enterprise.",
            "schema": {
              "$ref": "#/definitions/ClassificationTemplate"
            }
          },
          "400": {
            "description": "Returned if any of the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned when a template name is not correct. Please make sure\nthe URL for the request is correct.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Classifications"
        ],
        "description": "Updates the labels and descriptions of one or more classifications\navailable to the enterprise.\n\nThis API can also be called by including the enterprise ID in the\nURL explicitly, for example\n`/metadata_templates/enterprise_12345/securityClassification-6VMVochwUWo/schema`.",
        "operationId": "put_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema#update",
        "summary": "Update classification",
        "x-box-sanitized": true,
        "x-box-tag": "classifications"
      }
    },
    "/metadata_templates/global": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all of the metadata templates available to all enterprises\nand their corresponding schema.",
            "schema": {
              "$ref": "#/definitions/MetadataTemplates"
            }
          },
          "400": {
            "description": "Returned when the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata templates"
        ],
        "description": "Used to retrieve all generic, global metadata templates available to all\nenterprises using Box.",
        "operationId": "get_metadata_templates_global",
        "summary": "List all global metadata templates",
        "x-box-sanitized": true,
        "x-box-tag": "metadata_templates"
      }
    },
    "/metadata_templates/schema": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "copyInstanceOnItemCopy": {
                  "default": false,
                  "description": "Whether or not to copy any metadata attached to a file or folder\nwhen it is copied. By default, metadata is not copied along with a\nfile or folder when it is copied.",
                  "example": true,
                  "type": "boolean"
                },
                "displayName": {
                  "description": "The display name of the template.",
                  "example": "Product Info",
                  "maxLength": 4096,
                  "type": "string"
                },
                "fields": {
                  "description": "An ordered list of template fields which are part of the template.\nEach field can be a regular text field, date field, number field,\nas well as a single or multi-select list.",
                  "items": {
                    "description": "A field within a metadata template. Fields can be a basic text, date, or\nnumber field, or a list of options.",
                    "properties": {
                      "description": {
                        "description": "A description of the field. This is not shown to the user.",
                        "example": "The category",
                        "maxLength": 4096,
                        "type": "string"
                      },
                      "displayName": {
                        "description": "The display name of the field as it is shown to the user in the web and\nmobile apps.",
                        "example": "Category",
                        "maxLength": 4096,
                        "type": "string"
                      },
                      "hidden": {
                        "description": "Whether this field is hidden in the UI for the user and can only be set\nthrough the API instead.",
                        "example": true,
                        "type": "boolean"
                      },
                      "key": {
                        "description": "A unique identifier for the field. The identifier must\nbe unique within the template to which it belongs.",
                        "example": "category",
                        "maxLength": 256,
                        "type": "string"
                      },
                      "options": {
                        "description": "A list of options for this field. This is used in combination with the\n`enum` and `multiSelect` field types.",
                        "items": {
                          "description": "An option for a Metadata Template Field.\n\nOptions only need to be provided for fields of type `enum` and `multiSelect`.\nOptions represent the value(s) a user can select for the field either through\nthe UI or through the API.",
                          "properties": {
                            "key": {
                              "description": "The text value of the option. This represents both the display name of the\noption and the internal key used when updating templates.",
                              "example": "Category 1",
                              "type": "string"
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "title": "Metadata Option (Write)",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "type": {
                        "description": "The type of field. The basic fields are a `string` field for text, a\n`float` field for numbers, and a `date` fields to present the user with a\ndate-time picker.\n\nAdditionally, metadata templates support an `enum` field for a basic list\nof items, and ` multiSelect` field for a similar list of items where the\nuser can select more than one value.",
                        "enum": [
                          "string",
                          "float",
                          "date",
                          "enum",
                          "multiSelect"
                        ],
                        "example": "string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "key",
                      "displayName"
                    ],
                    "title": "Metadata Field (Write)",
                    "type": "object"
                  },
                  "type": "array"
                },
                "hidden": {
                  "default": false,
                  "description": "Defines if this template is visible in the Box web app UI, or if\nit is purely intended for usage through the API.",
                  "example": true,
                  "type": "boolean"
                },
                "scope": {
                  "description": "The scope of the metadata template to create. Applications can\nonly create templates for use within the authenticated user's\nenterprise.\n\nThis value needs to be set to `enterprise`, as `global` scopes can\nnot be created by applications.",
                  "example": "enterprise",
                  "type": "string"
                },
                "templateKey": {
                  "description": "A unique identifier for the template. This identifier needs to be\nunique across the enterprise for which the metadata template is\nbeing created.\n\nWhen not provided, the API will create a unique `templateKey`\nbased on the value of the `displayName`.",
                  "example": "productInfo",
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z_][-a-zA-Z0-9_]*$",
                  "type": "string"
                }
              },
              "required": [
                "scope",
                "displayName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The schema representing the metadata template created.",
            "schema": {
              "$ref": "#/definitions/MetadataTemplate"
            }
          },
          "400": {
            "description": "Returned if the request parameters or body is not valid.\n\n* `bad_request` when the body does not contain a valid request. In many\ncases this response will include extra details on what fields are missing.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returned when the user does not have the permission to create the metadata\ntemplate. This can happen for a few reasons, most commonly when the user\ndoes not have (co-)admin permissions, or the application tries to create a\ntemplate with the `global` scope.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata templates"
        ],
        "description": "Creates a new metadata template that can be applied to\nfiles and folders.",
        "operationId": "post_metadata_templates_schema",
        "summary": "Create metadata template",
        "x-box-requires-admin": true,
        "x-box-sanitized": true,
        "x-box-tag": "metadata_templates"
      }
    },
    "/metadata_templates/schema#classifications": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "copyInstanceOnItemCopy": {
                  "description": "`false`",
                  "example": false,
                  "type": "boolean"
                },
                "displayName": {
                  "description": "`Classification`",
                  "enum": [
                    "Classification"
                  ],
                  "example": "Classification",
                  "type": "string"
                },
                "fields": {
                  "description": "The classification template holds one field, which holds\nall the valid classification values.",
                  "items": {
                    "description": "The `enum` field which holds all the valid classification\nvalues.",
                    "properties": {
                      "displayName": {
                        "description": "`Classification`",
                        "enum": [
                          "Classification"
                        ],
                        "example": "Classification",
                        "type": "string"
                      },
                      "hidden": {
                        "description": "`false`",
                        "example": false,
                        "type": "boolean"
                      },
                      "key": {
                        "description": "`Box__Security__Classification__Key`",
                        "enum": [
                          "Box__Security__Classification__Key"
                        ],
                        "example": "Box__Security__Classification__Key",
                        "type": "string"
                      },
                      "options": {
                        "description": "The actual list of classifications that are present on\nthis template.",
                        "items": {
                          "description": "An individual classification.",
                          "properties": {
                            "key": {
                              "description": "The display name and key this classification. This\nwill be show in the Box UI.",
                              "example": "Sensitive",
                              "type": "string"
                            },
                            "staticConfig": {
                              "description": "Additional information about the classification.",
                              "properties": {
                                "classification": {
                                  "description": "Additional information about the classification.",
                                  "properties": {
                                    "classificationDefinition": {
                                      "description": "A longer description of the classification.",
                                      "example": "Sensitive information",
                                      "type": "string"
                                    },
                                    "colorID": {
                                      "description": "An identifier used to assign a color to\na classification label.\n\nMapping between a `colorID` and a color may\nchange without notice. Currently, the color\nmappings are as follows.\n\n* `0`: Yellow\n* `1`: Orange\n* `2`: Watermelon red\n* `3`: Purple rain\n* `4`: Light blue\n* `5`: Dark blue\n* `6`: Light green\n* `7`: Gray",
                                      "example": 4,
                                      "type": "number"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "type": {
                        "description": "`enum`",
                        "enum": [
                          "enum"
                        ],
                        "example": "enum",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "hidden": {
                  "description": "`false`",
                  "example": false,
                  "type": "boolean"
                },
                "scope": {
                  "description": "The scope in which to create the classifications. This should\nbe `enterprise` or `enterprise_{id}` where `id` is the unique\nID of the enterprise.",
                  "enum": [
                    "enterprise"
                  ],
                  "example": "enterprise",
                  "type": "string"
                },
                "templateKey": {
                  "description": "`securityClassification-6VMVochwUWo`",
                  "enum": [
                    "securityClassification-6VMVochwUWo"
                  ],
                  "example": "securityClassification-6VMVochwUWo",
                  "type": "string"
                }
              },
              "required": [
                "scope",
                "displayName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a new `securityClassification` metadata template, which\ncontains a `Box__Security__Classification__Key` field that lists all\nthe classifications available to this enterprise.",
            "schema": {
              "$ref": "#/definitions/ClassificationTemplate"
            }
          },
          "400": {
            "description": "Returned if any of the request parameters are not valid.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned when a template name is not correct. Please make sure\nthe URL for the request is correct.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Classifications"
        ],
        "description": "When an enterprise does not yet have any classifications, this API call\ninitializes the classification template with an initial set of\nclassifications.\n\nIf an enterprise already has a classification, the template will already\nexist and instead an API call should be made to add additional\nclassifications.",
        "operationId": "post_metadata_templates_schema#classifications",
        "summary": "Add initial classifications",
        "x-box-sanitized": true,
        "x-box-tag": "classifications"
      }
    },
    "/metadata_templates/{scope}/{template_key}/schema": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The scope of the metadata template",
            "enum": [
              "global",
              "enterprise"
            ],
            "in": "path",
            "name": "scope",
            "required": true,
            "type": "string",
            "x-example": "global"
          },
          {
            "description": "The name of the metadata template",
            "in": "path",
            "name": "template_key",
            "required": true,
            "type": "string",
            "x-example": "properties"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the metadata\ntemplate is successfully deleted."
          },
          "400": {
            "description": "Request body does not contain a valid metadata schema.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Request body contains a scope that the user is not allowed to\ncreate a template for.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata templates"
        ],
        "description": "Delete a metadata template and its instances.\nThis deletion is permanent and can not be reversed.",
        "operationId": "delete_metadata_templates_id_id_schema",
        "summary": "Remove metadata template",
        "x-box-sanitized": true,
        "x-box-tag": "metadata_templates"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The scope of the metadata template",
            "enum": [
              "global",
              "enterprise"
            ],
            "in": "path",
            "name": "scope",
            "required": true,
            "type": "string",
            "x-example": "global"
          },
          {
            "description": "The name of the metadata template",
            "in": "path",
            "name": "template_key",
            "required": true,
            "type": "string",
            "x-example": "properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the metadata template matching the `scope`\nand `template` name.",
            "schema": {
              "$ref": "#/definitions/MetadataTemplate"
            }
          },
          "400": {
            "description": "Returned if any of the request parameters are not valid.\n\n* `bad_request`: Often returned when the scope of the template is not\n  recognised. Please make sure to use either `enterprise` or `global` as\n  the `scope` value.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returned when a template with the given `scope` and `template_key` can not\nbe found.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata templates"
        ],
        "description": "Retrieves a metadata template by its `scope` and `templateKey` values.\n\nTo find the `scope` and `templateKey` for a template, list all templates for\nan enterprise or globally, or list all templates applied to a file or folder.",
        "operationId": "get_metadata_templates_id_id_schema",
        "summary": "Get metadata template by name",
        "x-box-sanitized": true,
        "x-box-tag": "metadata_templates"
      },
      "put": {
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The scope of the metadata template",
            "enum": [
              "global",
              "enterprise"
            ],
            "in": "path",
            "name": "scope",
            "required": true,
            "type": "string",
            "x-example": "global"
          },
          {
            "description": "The name of the metadata template",
            "in": "path",
            "name": "template_key",
            "required": true,
            "type": "string",
            "x-example": "properties"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902)\nspecification for the changes to make to the metadata\ntemplate.\n\nThe changes are represented as a JSON array of\noperation objects.",
              "items": {
                "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902) operation for a\nchange to make to the metadata instance.",
                "properties": {
                  "data": {
                    "additionalProperties": {
                      "description": "The value of a custom data entry.",
                      "example": "Aaron Levie",
                      "type": "string",
                      "x-box-example-key": "name"
                    },
                    "description": "The data for the operation. This will vary depending on the\noperation being performed.",
                    "example": {
                      "name": "Aaron Levie"
                    },
                    "type": "object"
                  },
                  "enumOptionKey": {
                    "description": "For operations that affect a single `enum` option this defines\nthe key of the option that is affected.",
                    "example": "option1",
                    "type": "string"
                  },
                  "enumOptionKeys": {
                    "description": "For operations that affect multiple `enum` options this defines\nthe keys of the options that are affected.",
                    "example": [
                      "option1",
                      "option2",
                      "option3"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "fieldKey": {
                    "description": "For operations that affect a single field this defines the key of\nthe field that is affected.",
                    "example": "category",
                    "type": "string"
                  },
                  "fieldKeys": {
                    "description": "For operations that affect multiple fields this defines the keys\nof the fields that are affected.",
                    "example": [
                      "category",
                      "name"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "multiSelectOptionKey": {
                    "description": "For operations that affect a single multi select option this\ndefines the key of the option that is affected.",
                    "example": "option1",
                    "type": "string"
                  },
                  "multiSelectOptionKeys": {
                    "description": "For operations that affect multiple multi select options this\ndefines the keys of the options that are affected.",
                    "example": [
                      "option1",
                      "option2",
                      "option3"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "op": {
                    "description": "The type of change to perform on the template. Some\nof these are hazardous as they will change existing templates.",
                    "enum": [
                      "editTemplate",
                      "addField",
                      "reorderFields",
                      "addEnumOption",
                      "reorderEnumOptions",
                      "reorderMultiSelectOptions",
                      "addMultiSelectOption",
                      "editField",
                      "removeField",
                      "editEnumOption",
                      "removeEnumOption",
                      "editMultiSelectOption",
                      "removeMultiSelectOption"
                    ],
                    "example": "addEnumOption",
                    "type": "string"
                  }
                },
                "required": [
                  "op"
                ],
                "title": "A metadata template update operation",
                "type": "object"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated metadata template, with the\ncustom template data included.",
            "schema": {
              "$ref": "#/definitions/MetadataTemplate"
            }
          },
          "400": {
            "description": "The request body does not contain a valid metadata schema.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "The request body contains a scope that the user is not\nallowed to create templates for.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "The requested template could not be found",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata templates"
        ],
        "description": "Updates a metadata template.\n\nThe metadata template can only be updated if the template\nalready exists.\n\nThe update is applied atomically. If any errors occur during the\napplication of the operations, the metadata template will not be changed.",
        "operationId": "put_metadata_templates_id_id_schema",
        "summary": "Update metadata template",
        "x-box-sanitized": true,
        "x-box-tag": "metadata_templates"
      }
    },
    "/metadata_templates/{template_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the template",
            "in": "path",
            "name": "template_id",
            "required": true,
            "type": "string",
            "x-example": "f7a9891f"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the metadata template that matches the ID.",
            "schema": {
              "$ref": "#/definitions/MetadataTemplate"
            }
          },
          "400": {
            "description": "Returned if any of the request parameters are not valid.\n\n* `bad_request`: Often returned with a message when the ID of the template\n  is not recognised.",
            "schema": {
              "$ref": "#/definitions/MetadataTemplate"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Metadata templates"
        ],
        "description": "Retrieves a metadata template by its ID.",
        "operationId": "get_metadata_templates_id",
        "summary": "Get metadata template by ID",
        "x-box-sanitized": true,
        "x-box-tag": "metadata_templates"
      }
    },
    "/oauth2/revoke": {
      "post": {
        "servers": [
          {
            "description": "Server for server-side authentication",
            "url": "https://api.box.com"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Client ID of the application requesting to revoke the\naccess token.",
            "in": "formData",
            "name": "client_id",
            "type": "string"
          },
          {
            "description": "The client secret of the application requesting to revoke\nan access token.",
            "in": "formData",
            "name": "client_secret",
            "type": "string"
          },
          {
            "description": "The access token to revoke.",
            "format": "token",
            "in": "formData",
            "name": "token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an empty response when the token was successfully revoked."
          },
          "400": {
            "description": "An authentication error.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          },
          "default": {
            "description": "An authentication error.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          }
        },
        "security": [],
        "tags": [
          "Authorization"
        ],
        "description": "Revoke an active Access Token, effectively logging a user out\nthat has been previously authenticated.",
        "operationId": "post_oauth2_revoke",
        "summary": "Revoke access token",
        "x-box-tag": "authorization"
      }
    },
    "/oauth2/token": {
      "post": {
        "servers": [
          {
            "description": "Server for server-side authentication",
            "url": "https://api.box.com"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The token used to create an annotator token.\nThis is a JWT assertion.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
            "format": "token",
            "in": "formData",
            "name": "actor_token",
            "type": "string"
          },
          {
            "description": "The type of `actor_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
            "enum": [
              "urn:ietf:params:oauth:token-type:id_token"
            ],
            "format": "urn",
            "in": "formData",
            "name": "actor_token_type",
            "type": "string"
          },
          {
            "description": "A JWT assertion for which to request a new access token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:jwt-bearer`\nas the `grant_type`.",
            "format": "jwt",
            "in": "formData",
            "name": "assertion",
            "type": "string"
          },
          {
            "description": "Used in combination with `client_credentials` as the `grant_type`.\nValue is determined by `box_subject_type`. If `user` use user ID and if\n`enterprise` use enterprise ID.",
            "in": "formData",
            "name": "box_subject_id",
            "type": "string"
          },
          {
            "description": "Used in combination with `client_credentials` as the `grant_type`.",
            "enum": [
              "enterprise",
              "user"
            ],
            "in": "formData",
            "name": "box_subject_type",
            "type": "string"
          },
          {
            "description": "The Client ID of the application requesting an access token.\n\nUsed in combination with `authorization_code`, `client_credentials`, or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.",
            "in": "formData",
            "name": "client_id",
            "type": "string"
          },
          {
            "description": "The client secret of the application requesting an access token.\n\nUsed in combination with `authorization_code`, `client_credentials`, or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.",
            "in": "formData",
            "name": "client_secret",
            "type": "string"
          },
          {
            "description": "The client-side authorization code passed to your application by\nBox in the browser redirect after the user has successfully\ngranted your application permission to make API calls on their\nbehalf.\n\nUsed in combination with `authorization_code` as the `grant_type`.",
            "format": "token",
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "description": "The type of request being made, either using a client-side obtained\nauthorization code, a refresh token, a JWT assertion, client credentials\ngrant or another access token for the purpose of downscoping a token.",
            "enum": [
              "authorization_code",
              "refresh_token",
              "client_credentials",
              "urn:ietf:params:oauth:grant-type:jwt-bearer",
              "urn:ietf:params:oauth:grant-type:token-exchange"
            ],
            "format": "urn",
            "in": "formData",
            "name": "grant_type",
            "required": true,
            "type": "string"
          },
          {
            "description": "A refresh token used to get a new access token with.\n\nUsed in combination with `refresh_token` as the `grant_type`.",
            "format": "token",
            "in": "formData",
            "name": "refresh_token",
            "type": "string"
          },
          {
            "description": "Full URL for the file that the token should be generated for.",
            "format": "url",
            "in": "formData",
            "name": "resource",
            "type": "string"
          },
          {
            "description": "The space-delimited list of scopes that you want apply to the\nnew access token.\n\nThe `subject_token` will need to have all of these scopes or\nthe call will error with **401 Unauthorized**.",
            "format": "space_delimited_list",
            "in": "formData",
            "name": "scope",
            "type": "string"
          },
          {
            "description": "The token to exchange for a downscoped token. This can be a regular\naccess token, a JWT assertion, or an app token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
            "format": "token",
            "in": "formData",
            "name": "subject_token",
            "type": "string"
          },
          {
            "description": "The type of `subject_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
            "enum": [
              "urn:ietf:params:oauth:token-type:access_token"
            ],
            "in": "formData",
            "name": "subject_token_type",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a new Access Token that can be used to make authenticated\nAPI calls by passing along the token in a authorization header as\nfollows `Authorization: Bearer <Token>`.",
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          },
          "400": {
            "description": "An authentication error.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          },
          "default": {
            "description": "An authentication error.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          }
        },
        "security": [],
        "tags": [
          "Authorization"
        ],
        "description": "Request an Access Token using either a client-side obtained OAuth 2.0\nauthorization code or a server-side JWT assertion.\n\nAn Access Token is a string that enables Box to verify that a\nrequest belongs to an authorized session. In the normal order of\noperations you will begin by requesting authentication from the\n[authorize](#get-authorize) endpoint and Box will send you an\nauthorization code.\n\nYou will then send this code to this endpoint to exchange it for\nan Access Token. The returned Access Token can then be used to to make\nBox API calls.",
        "operationId": "post_oauth2_token",
        "summary": "Request access token",
        "x-box-tag": "authorization"
      }
    },
    "/oauth2/token#refresh": {
      "post": {
        "servers": [
          {
            "description": "Server for server-side authentication",
            "url": "https://api.box.com"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The client ID of the application requesting to refresh the token.",
            "in": "formData",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The client secret of the application requesting to refresh the token.",
            "in": "formData",
            "name": "client_secret",
            "required": true,
            "type": "string"
          },
          {
            "description": "The type of request being made, in this case a refresh request.",
            "enum": [
              "refresh_token"
            ],
            "format": "urn",
            "in": "formData",
            "name": "grant_type",
            "required": true,
            "type": "string"
          },
          {
            "description": "The refresh token to refresh.",
            "format": "token",
            "in": "formData",
            "name": "refresh_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a new Access Token that can be used to make authenticated\nAPI calls by passing along the token in a authorization header as\nfollows `Authorization: Bearer <Token>`.",
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          },
          "400": {
            "description": "An authentication error.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          },
          "default": {
            "description": "An authentication error.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          }
        },
        "security": [],
        "tags": [
          "Authorization"
        ],
        "description": "Refresh an Access Token using its client ID, secret, and refresh token.",
        "operationId": "post_oauth2_token#refresh",
        "summary": "Refresh access token",
        "x-box-is-variation": true,
        "x-box-tag": "authorization"
      }
    },
    "/recent_items": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list recent items access by a user.",
            "schema": {
              "$ref": "#/definitions/RecentItems"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Recent items"
        ],
        "description": "Returns information about the recent items accessed\nby a user, either in the last 90 days or up to the last\n1000 items accessed.",
        "operationId": "get_recent_items",
        "summary": "List recently accessed items",
        "x-box-enable-explorer": true,
        "x-box-tag": "recent_items"
      }
    },
    "/retention_policies": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Filters results by a case sensitive prefix of the name of\nretention policies.",
            "in": "query",
            "name": "policy_name",
            "required": false,
            "type": "string",
            "x-example": "Sales Policy"
          },
          {
            "description": "Filters results by the type of retention policy.",
            "enum": [
              "finite",
              "indefinite"
            ],
            "in": "query",
            "name": "policy_type",
            "required": false,
            "type": "string",
            "x-example": "finite"
          },
          {
            "description": "Filters results by the ID of the user who created policy.",
            "in": "query",
            "name": "created_by_user_id",
            "required": false,
            "type": "string",
            "x-example": "21312321"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list retention policies in the enterprise.",
            "schema": {
              "$ref": "#/definitions/RetentionPolicies"
            }
          },
          "400": {
            "description": "Returns a `bad_request` if a non existent `policy_type` was specified.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns a `not_found` error if the user specified in `created_by_user_id`\ndoes not exist.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Retention policies"
        ],
        "description": "Retrieves all of the retention policies for an enterprise.",
        "operationId": "get_retention_policies",
        "summary": "List retention policies",
        "x-box-tag": "retention_policies"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "are_owners_notified": {
                  "description": "Whether owner and co-owners of a file are notified\nwhen the policy nears expiration.",
                  "example": true,
                  "type": "boolean"
                },
                "can_owner_extend_retention": {
                  "description": "Whether the owner of a file will be allowed to\nextend the retention.",
                  "example": true,
                  "type": "boolean"
                },
                "custom_notification_recipients": {
                  "items": {
                    "description": "A user that is notified of an event.",
                    "properties": {
                      "id": {
                        "description": "The id of the user to notify",
                        "example": "12312312",
                        "type": "string"
                      },
                      "login": {
                        "description": "The email address the user uses to notify",
                        "example": "apple@example.com",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the user to notify",
                        "example": "Tim Apple",
                        "type": "string"
                      },
                      "type": {
                        "description": "The type of item to notify",
                        "enum": [
                          "user"
                        ],
                        "example": "user",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "disposition_action": {
                  "description": "The disposition action of the retention policy.\nThis action can be `permanently_delete`, which\nwill cause the content retained by the policy\nto be permanently deleted, or `remove_retention`,\nwhich will lift the retention policy from the content,\nallowing it to be deleted by users,\nonce the retention policy has expired.",
                  "enum": [
                    "permanently_delete",
                    "remove_retention"
                  ],
                  "example": "permanently_delete",
                  "type": "string"
                },
                "policy_name": {
                  "description": "The name for the retention policy",
                  "example": "Some Policy Name",
                  "type": "string"
                },
                "policy_type": {
                  "description": "The type of the retention policy. A retention\npolicy type can either be `finite`, where a\nspecific amount of time to retain the content is known\nupfront, or `indefinite`, where the amount of time\nto retain the content is still unknown.",
                  "enum": [
                    "finite",
                    "indefinite"
                  ],
                  "example": "finite",
                  "type": "string"
                },
                "retention_length": {
                  "description": "The length of the retention policy. This length\nspecifies the duration in days that the retention\npolicy will be active for after being assigned to\ncontent.  If the policy has A `policy_type` of\n`indefinite`, the `retention_length` will also be\n`indefinite`.",
                  "example": "365",
                  "format": "int32",
                  "minimum": 1,
                  "type": "string"
                }
              },
              "required": [
                "policy_name",
                "policy_type",
                "disposition_action"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a new retention policy object.",
            "schema": {
              "$ref": "#/definitions/RetentionPolicy"
            }
          },
          "400": {
            "description": "Returns a `bad_request` error with the `retention_length` was\nspecified for a `infinite` retention policy, or an incorrect\n`disposition_action` was set.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error if a retention policy with the given name already exists",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Retention policies"
        ],
        "description": "Creates a retention policy.",
        "operationId": "post_retention_policies",
        "summary": "Create retention policy",
        "x-box-tag": "retention_policies"
      }
    },
    "/retention_policies/{retention_policy_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the retention policy.",
            "in": "path",
            "name": "retention_policy_id",
            "required": true,
            "type": "string",
            "x-example": "982312"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the retention policy object.",
            "schema": {
              "$ref": "#/definitions/RetentionPolicy"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Retention policies"
        ],
        "description": "Retrieves a retention policy.",
        "operationId": "get_retention_policies_id",
        "summary": "Get retention policy",
        "x-box-tag": "retention_policies"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the retention policy.",
            "in": "path",
            "name": "retention_policy_id",
            "required": true,
            "type": "string",
            "x-example": "982312"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "disposition_action": {
                  "description": "The disposition action of the retention policy.\nThis action can be `permanently_delete`, which\nwill cause the content retained by the policy\nto be permanently deleted, or `remove_retention`,\nwhich will lift the retention policy from the content,\nallowing it to be deleted by users,\nonce the retention policy has expired.",
                  "enum": [
                    "permanently_delete",
                    "remove_retention"
                  ],
                  "example": "permanently_delete",
                  "type": "string"
                },
                "policy_name": {
                  "description": "The name for the retention policy",
                  "example": "Some Policy Name",
                  "type": "string"
                },
                "status": {
                  "description": "Used to retire a retention policy.\n\nIf not retiring a policy, do not include this parameter\nor set it to `null`.",
                  "enum": [
                    "retired"
                  ],
                  "example": "retired",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated retention policy object.",
            "schema": {
              "$ref": "#/definitions/RetentionPolicy"
            }
          },
          "400": {
            "description": "Returns a `bad_request` if an incorrect\n`disposition_action` was set.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error if a retention policy with the given name already exists",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Retention policies"
        ],
        "description": "Updates a retention policy.",
        "operationId": "put_retention_policies_id",
        "summary": "Update retention policy",
        "x-box-tag": "retention_policies"
      }
    },
    "/retention_policies/{retention_policy_id}/assignments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the retention policy.",
            "in": "path",
            "name": "retention_policy_id",
            "required": true,
            "type": "string",
            "x-example": "982312"
          },
          {
            "description": "The type of the retention policy assignment to retrieve.",
            "enum": [
              "folder",
              "enterprise"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string",
            "x-example": "folder"
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of the retention policy assignments associated with the\nspecified retention policy.",
            "schema": {
              "$ref": "#/definitions/RetentionPolicyAssignments"
            }
          },
          "400": {
            "description": "Returns an error if an unknown `type` is specified.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Retention policy assignments"
        ],
        "description": "Returns a list of all retention policy assignments associated with a specified\nretention policy.",
        "operationId": "get_retention_policies_id_assignments",
        "summary": "List retention policy assignments",
        "x-box-tag": "retention_policy_assignments"
      }
    },
    "/retention_policy_assignments": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "assign_to": {
                  "description": "The item to assign the policy to",
                  "properties": {
                    "id": {
                      "description": "The ID of item to assign the policy to.\n\nSet to `null` or omit when `type` is set to\n`enterprise`.",
                      "example": "6564564",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of item to assign the policy to.",
                      "enum": [
                        "enterprise",
                        "folder",
                        "metadata_template"
                      ],
                      "example": "folder",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "id"
                  ],
                  "type": "object"
                },
                "policy_id": {
                  "description": "The ID of the retention policy to assign",
                  "example": "173463",
                  "type": "string"
                }
              },
              "required": [
                "policy_id",
                "assign_to"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a new retention policy assignment object.",
            "schema": {
              "$ref": "#/definitions/RetentionPolicyAssignment"
            }
          },
          "400": {
            "description": "Returns an error if an `id` is specified while assigning a the\nretention policy to an enterprise.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if no retention policy with the given `policy_id` exists.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error if a retention policy of equal or greater length has\nalready been assigned to this item.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Retention policy assignments"
        ],
        "description": "Assigns a retention policy to an item.",
        "operationId": "post_retention_policy_assignments",
        "summary": "Assign retention policy",
        "x-box-tag": "retention_policy_assignments"
      }
    },
    "/retention_policy_assignments/{retention_policy_assignment_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the retention policy assignment.",
            "in": "path",
            "name": "retention_policy_assignment_id",
            "required": true,
            "type": "string",
            "x-example": "1233123"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the retention policy assignment object.",
            "schema": {
              "$ref": "#/definitions/RetentionPolicyAssignment"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Retention policy assignments"
        ],
        "description": "Retrieves a retention policy assignment",
        "operationId": "get_retention_policy_assignments_id",
        "summary": "Get retention policy assignment",
        "x-box-tag": "retention_policy_assignments"
      }
    },
    "/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The string to search for. This query is matched against item names,\ndescriptions, text content of files, and various other fields of\nthe different item types.\n\nThis parameter supports a variety of operators to further refine\nthe results returns.\n\n* `\"\"` - by wrapping a query in double quotes only exact matches are\n  returned by the API. Exact searches do not return search matches\n  based on specific character sequences. Instead, they return\n  matches based on phrases, that is, word sequences. For example:\n  A search for `\"Blue-Box\"` may return search results including\n  the sequence `\"blue.box\"`, `\"Blue Box\"`, and `\"Blue-Box\"`;\n  any item containing the words `Blue` and `Box` consecutively, in\n  the order specified.\n* `AND` - returns items that contain both the search terms. For\n  example, a search for `marketing AND BoxWorks` returns items\n  that have both `marketing` and `BoxWorks` within its text in any order.\n  It does not return a result that only has `BoxWorks` in its text.\n* `OR` - returns items that contain either of the search terms. For\n  example, a search for `marketing OR BoxWorks` returns a result that\n  has either `marketing` or `BoxWorks` within its text. Using this\n  operator is not necessary as we implicitly interpret multi-word\n  queries as `OR` unless another supported boolean term is used.\n* `NOT` - returns items that do not contain the search term provided.\n  For example, a search for `marketing AND NOT BoxWorks` returns a result\n  that has only `marketing` within its text. Results containing\n  `BoxWorks` are omitted.\n\nPlease note that we do not support lower case (that is,\n`and`, `or`, and `not`) or mixed case (that is, `And`, `Or`, and `Not`)\noperators.\n\nThis field is required unless the `mdfilters` parameter is defined.",
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string",
            "x-example": "sales"
          },
          {
            "default": "user_content",
            "description": "Limits the search results to either the files that the user has\naccess to, or to files available to the entire enterprise.\n\nThe scope defaults to `user_content`, which limits the search\nresults to content that is available to the currently authenticated\nuser.\n\nThe `enterprise_content` can be requested by an admin through our\nsupport channels. Once this scope has been enabled for a user, it\nwill allow that use to query for content across the entire\nenterprise and not only the content that they have access to.",
            "enum": [
              "user_content",
              "enterprise_content"
            ],
            "in": "query",
            "name": "scope",
            "required": false,
            "type": "string",
            "x-example": "user_content"
          },
          {
            "collectionFormat": "csv",
            "description": "Limits the search results to any files that match any of the provided\nfile extensions. This list is a comma-separated list of file extensions\nwithout the dots.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "file_extensions",
            "required": false,
            "type": "array",
            "x-example": [
              "pdf",
              "png",
              "gif"
            ]
          },
          {
            "collectionFormat": "csv",
            "description": "Limits the search results to any items created within\na given date range.\n\nDate ranges are defined as comma separated RFC3339\ntimestamps.\n\nIf the the start date is omitted (`,2014-05-17T13:35:01-07:00`)\nanything created before the end date will be returned.\n\nIf the end date is omitted (`2014-05-15T13:35:01-07:00,`) the\ncurrent date will be used as the end date instead.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "created_at_range",
            "required": false,
            "type": "array",
            "x-example": [
              "2014-05-15T13:35:01-07:00",
              "2014-05-17T13:35:01-07:00"
            ]
          },
          {
            "collectionFormat": "csv",
            "description": "Limits the search results to any items updated within\na given date range.\n\nDate ranges are defined as comma separated RFC3339\ntimestamps.\n\nIf the start date is omitted (`,2014-05-17T13:35:01-07:00`)\nanything updated before the end date will be returned.\n\nIf the end date is omitted (`2014-05-15T13:35:01-07:00,`) the\ncurrent date will be used as the end date instead.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "updated_at_range",
            "required": false,
            "type": "array",
            "x-example": [
              "2014-05-15T13:35:01-07:00",
              "2014-05-17T13:35:01-07:00"
            ]
          },
          {
            "collectionFormat": "csv",
            "description": "Limits the search results to any items with a size within\na given file size range. This applied to files and folders.\n\nSize ranges are defined as comma separated list of a lower\nand upper byte size limit (inclusive).\n\nThe upper and lower bound can be omitted to create open ranges.",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "size_range",
            "required": false,
            "type": "array",
            "x-example": [
              1000000,
              5000000
            ]
          },
          {
            "collectionFormat": "csv",
            "description": "Limits the search results to any items that are owned\nby the given list of owners, defined as a list of comma separated\nuser IDs.\n\nPlease note that the items still need to be owned or shared with\nthe currently authenticated user for them to show up in the search\nresults. If the user does not have access to any files owned by any of\nthe users an empty result set will be returned.\n\nTo search across an entire enterprise, we recommend using the\n`enterprise_content` scope parameter which can be requested with our\nsupport team.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "owner_user_ids",
            "required": false,
            "type": "array",
            "x-example": [
              "123422",
              "23532",
              "3241212"
            ]
          },
          {
            "collectionFormat": "csv",
            "description": "Limits the search results to items within the given\nlist of folders, defined as a comma separated lists\nof folder IDs.\n\nSearch results will also include items within any subfolders\nof those ancestor folders.\n\nPlease note that the folders still need to be owned or shared with\nthe currently authenticated user. If the folder is not accessible by this\nuser, or it does not exist, a `HTTP 404` error code will be returned\ninstead.\n\nTo search across an entire enterprise, we recommend using the\n`enterprise_content` scope parameter which can be requested with our\nsupport team.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "ancestor_folder_ids",
            "required": false,
            "type": "array",
            "x-example": [
              "4535234",
              "234123235",
              "2654345"
            ]
          },
          {
            "collectionFormat": "csv",
            "description": "Limits the search results to any items that match the search query\nfor a specific part of the file, for example the file description.\n\nContent types are defined as a comma separated lists\nof Box recognized content types. The allowed content types are as follows.\n\n* `name` - The name of the item, as defined by its `name` field.\n* `description` - The description of the item, as defined by its\n  `description` field.\n* `file_content` - The actual content of the file.\n* `comments` - The content of any of the comments on a file or\n   folder.\n* `tag` - Any tags that are applied to an item, as defined by its\n   `tag` field.",
            "in": "query",
            "items": {
              "enum": [
                "name",
                "description",
                "file_content",
                "comments",
                "tag"
              ],
              "type": "string"
            },
            "name": "content_types",
            "required": false,
            "type": "array",
            "x-example": [
              "name",
              "description"
            ]
          },
          {
            "description": "Limits the search results to any items of this type. This\nparameter only takes one value. By default the API returns\nitems that match any of these types.\n\n* `file` - Limits the search results to files\n* `folder` - Limits the search results to folders\n* `web_link` - Limits the search results to web links, also known\n   as bookmarks",
            "enum": [
              "file",
              "folder",
              "web_link"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string",
            "x-example": "file"
          },
          {
            "default": "non_trashed_only",
            "description": "Determines if the search should look in the trash for items.\n\nBy default, this API only returns search results for items\nnot currently in the trash (`non_trashed_only`).\n\n* `trashed_only` - Only searches for items currently in the trash\n* `non_trashed_only` - Only searches for items currently not in\n  the trash",
            "enum": [
              "non_trashed_only",
              "trashed_only"
            ],
            "in": "query",
            "name": "trash_content",
            "required": false,
            "type": "string",
            "x-example": "non_trashed_only"
          },
          {
            "collectionFormat": "multi",
            "description": "Limits the search results to any items for which the metadata matches\nthe provided filter.\n\nThis parameter contains a list of 1 metadata template to filter\nthe search results by. This list can currently only\ncontain one entry, though this might be expanded in the future.\n\nThis parameter is required unless the `query` parameter is provided.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/MetadataFilter"
            },
            "maxItems": 1,
            "minItems": 1,
            "name": "mdfilters",
            "required": false,
            "type": "array",
            "x-example": [
              {
                "filters": {
                  "category": "online"
                },
                "scope": "enterprise",
                "templateKey": "contract"
              }
            ]
          },
          {
            "default": "relevance",
            "description": "Defines the order in which search results are returned. This API\ndefaults to returning items by relevance unless this parameter is\nexplicitly specified.\n\n* `relevance` (default) returns the results sorted by relevance to the\nquery search term. The relevance is based on the occurrence of the search\nterm in the items name, description, content, and additional properties.\n* `modified_at` returns the results ordered in descending order by date\nat which the item was last modified.",
            "enum": [
              "modified_at",
              "relevance"
            ],
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "modified_at"
          },
          {
            "default": "DESC",
            "description": "Defines the direction in which search results are ordered. This API\ndefaults to returning items in descending (`DESC`) order unless this\nparameter is explicitly specified.\n\nWhen results are sorted by `relevance` the ordering is locked to returning\nitems in descending order of relevance, and this parameter is ignored.",
            "enum": [
              "DESC",
              "ASC"
            ],
            "in": "query",
            "name": "direction",
            "required": false,
            "type": "string",
            "x-example": "ASC"
          },
          {
            "default": 30,
            "description": "Defines the maximum number of items to return as part of a page of\nresults.",
            "format": "int64",
            "in": "query",
            "maximum": 200,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 100
          },
          {
            "default": false,
            "description": "Defines whether the search results should include any items\nthat the user recently accessed through a shared link.\n\nPlease note that when this parameter has been set to true,\nthe format of the response of this API changes to return\na list of [Search Results with\nShared Links](r://search_results_with_shared_links)",
            "in": "query",
            "name": "include_recent_shared_links",
            "required": false,
            "type": "boolean",
            "x-example": true
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of search results. If there are no matching\nsearch results, the `entries` array will be empty.",
            "schema": {}
          },
          "400": {
            "description": "Returns an error when the request was not valid. This can have multiple\nreasons and the `context_info` object will provide you with more details.\n\n* `missing_parameter` - Please provide at least the `query` or `mdfilters`\n  query parameter in a search.\n* `invalid_parameter` - Any of the fields might not be in the right\n  format. This could for example mean that one of the RFC3339 dates is\n  incorrect, or a string is provided where an integer is expected.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returns an error when the user does not have the permission to make\nthis API call.\n\n* The developer provided a `scope` of `enterprise_content` but did\n  not request this scope to be enabled for the user through our\n  support channels.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the user does not have access to an item\nmentioned in the request.\n\n* The developer provided a folder ID in `ancestor_folder_ids`\n  that either does not exist or the user does not have access to.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Search"
        ],
        "description": "Searches for files, folders, web links, and shared files across the\nusers content or across the entire enterprise.",
        "operationId": "get_search",
        "summary": "Search for content",
        "x-box-enable-explorer": true,
        "x-box-tag": "search"
      }
    },
    "/shared_items": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
            "in": "header",
            "name": "if-none-match",
            "required": false,
            "type": "string",
            "x-example": "1"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "A header containing the shared link and optional password for the\nshared link.\n\nThe format for this header is as follows.\n\n`shared_link=[link]&shared_link_password=[password]`",
            "in": "header",
            "name": "boxapi",
            "required": true,
            "type": "string",
            "x-example": "shared_link=[link]&shared_link_password=[password]"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a full file resource if the shared link is valid and\nthe user has access to it.",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "304": {
            "description": "Returns an empty response when the `If-None-Match` header matches\nthe current `etag` value of the folder. This indicates that the folder\nhas not changed since it was last requested."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Shared links (Files)"
        ],
        "description": "Return the file represented by a shared link.\n\nA shared file can be represented by a shared link,\nwhich can originate within the current enterprise or within another.\n\nThis endpoint allows an application to retrieve information about a\nshared file when only given a shared link.",
        "operationId": "get_shared_items",
        "summary": "Find file for shared link",
        "x-box-enable-explorer": true,
        "x-box-tag": "shared_links_files"
      }
    },
    "/shared_items#folders": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
            "in": "header",
            "name": "if-none-match",
            "required": false,
            "type": "string",
            "x-example": "1"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "A header containing the shared link and optional password for the\nshared link.\n\nThe format for this header is as follows.\n\n`shared_link=[link]&shared_link_password=[password]`",
            "in": "header",
            "name": "boxapi",
            "required": true,
            "type": "string",
            "x-example": "shared_link=[link]&shared_link_password=[password]"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a full folder resource if the shared link is valid and\nthe user has access to it.",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "304": {
            "description": "Returns an empty response when the `If-None-Match` header matches\nthe current `etag` value of the folder. This indicates that the folder\nhas not changed since it was last requested."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Shared links (Folders)"
        ],
        "description": "Return the folder represented by a shared link.\n\nA shared folder can be represented by a shared link,\nwhich can originate within the current enterprise or within another.\n\nThis endpoint allows an application to retrieve information about a\nshared folder when only given a shared link.",
        "operationId": "get_shared_items#folders",
        "summary": "Find folder for shared link",
        "x-box-enable-explorer": true,
        "x-box-tag": "shared_links_folders"
      }
    },
    "/skill_invocations/{skill_id}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the skill to apply this metadata for.",
            "in": "path",
            "name": "skill_id",
            "required": true,
            "type": "string",
            "x-example": "33243242"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "file": {
                  "description": "The file to assign the cards to.",
                  "properties": {
                    "id": {
                      "description": "The ID of the file",
                      "example": "3243244",
                      "type": "string"
                    },
                    "type": {
                      "description": "`file`",
                      "enum": [
                        "file"
                      ],
                      "example": "file",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "file_version": {
                  "description": "The optional file version to assign the cards to.",
                  "properties": {
                    "id": {
                      "description": "The ID of the file version",
                      "example": "731381601045",
                      "type": "string"
                    },
                    "type": {
                      "description": "`file_version`",
                      "enum": [
                        "file_version"
                      ],
                      "example": "file_version",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "metadata": {
                  "description": "The metadata to set for this skill. This is a list of\nBox Skills cards. These cards will overwrite any existing Box\nskill cards on the file.",
                  "properties": {
                    "cards": {
                      "description": "A list of Box Skill cards to apply to this file.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "description": "Defines the status of this invocation. Set this to `success` when setting Skill cards.",
                  "enum": [
                    "invoked",
                    "processing",
                    "success",
                    "transient_failure",
                    "permanent_failure"
                  ],
                  "example": "success",
                  "type": "string"
                },
                "usage": {
                  "description": "A descriptor that defines what items are affected by this call.\n\nSet this to the default values when setting a card to a `success`\nstate, and leave it out in most other situations.",
                  "properties": {
                    "unit": {
                      "description": "`file`",
                      "example": "file",
                      "type": "string"
                    },
                    "value": {
                      "description": "`1`",
                      "example": 1,
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "status",
                "metadata",
                "file"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an empty response when the card has been successfully updated."
          },
          "400": {
            "description": "Returns an error when the request body is not valid.\n\n* `schema_validation_failed` - The request body contains a value for a for\na field that either does not exist, or for which the value or type does\nnot match the expected field type. An example might be an unknown option\nfor an `enum` or `multiSelect` field.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the file could not be found or the user does not\nhave access.\n\n* `not_found` - The file could not be found, or the user does not have\naccess to the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Skills"
        ],
        "description": "An alternative method that can be used to overwrite and update all Box Skill\nmetadata cards on a file.",
        "operationId": "put_skill_invocations_id",
        "summary": "Update all Box Skill cards on file",
        "x-box-tag": "skills"
      }
    },
    "/storage_policies": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of storage policies.",
            "schema": {
              "$ref": "#/definitions/StoragePolicies"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Storage policies"
        ],
        "description": "Fetches all the storage policies in the enterprise.",
        "operationId": "get_storage_policies",
        "summary": "List storage policies",
        "x-box-tag": "storage_policies"
      }
    },
    "/storage_policies/{storage_policy_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the storage policy.",
            "in": "path",
            "name": "storage_policy_id",
            "required": true,
            "type": "string",
            "x-example": "34342"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a storage policy object.",
            "schema": {
              "$ref": "#/definitions/StoragePolicy"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Storage policies"
        ],
        "description": "Fetches a specific storage policy.",
        "operationId": "get_storage_policies_id",
        "summary": "Get storage policy",
        "x-box-tag": "storage_policies"
      }
    },
    "/storage_policy_assignments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The target type to return assignments for",
            "enum": [
              "user",
              "enterprise"
            ],
            "in": "query",
            "name": "resolved_for_type",
            "required": true,
            "type": "string",
            "x-example": "user"
          },
          {
            "description": "The ID of the user or enterprise to return assignments for",
            "in": "query",
            "name": "resolved_for_id",
            "required": true,
            "type": "string",
            "x-example": "984322"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of storage policies for\nthe enterprise or user.",
            "schema": {
              "$ref": "#/definitions/StoragePolicyAssignments"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Storage policy assignments"
        ],
        "description": "Fetches all the storage policy assignment for an enterprise or user.",
        "operationId": "get_storage_policy_assignments",
        "summary": "List storage policy assignments",
        "x-box-tag": "storage_policy_assignments"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "assigned_to": {
                  "description": "The user or enterprise to assign the storage\npolicy to.",
                  "properties": {
                    "id": {
                      "description": "The ID of the user or enterprise",
                      "example": "9987987",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type to assign the policy to.",
                      "enum": [
                        "user",
                        "enterprise"
                      ],
                      "example": "user",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "id"
                  ],
                  "type": "object"
                },
                "storage_policy": {
                  "description": "The storage policy to assign to the user or\nenterprise",
                  "properties": {
                    "id": {
                      "description": "The ID of the storage policy to assign.",
                      "example": "1434325",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type to assign.",
                      "enum": [
                        "storage_policy"
                      ],
                      "example": "storage_policy",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "storage_policy",
                "assigned_to"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the new storage policy assignment created.",
            "schema": {
              "$ref": "#/definitions/StoragePolicyAssignment"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Storage policy assignments"
        ],
        "description": "Creates a storage policy assignment for an enterprise or user.",
        "operationId": "post_storage_policy_assignments",
        "summary": "Assign storage policy",
        "x-box-tag": "storage_policy_assignments"
      }
    },
    "/storage_policy_assignments/{storage_policy_assignment_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the storage policy assignment.",
            "in": "path",
            "name": "storage_policy_assignment_id",
            "required": true,
            "type": "string",
            "x-example": "932483"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the storage policy\nassignment is successfully deleted."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Storage policy assignments"
        ],
        "description": "Delete a storage policy assignment.\n\nDeleting a storage policy assignment on a user\nwill have the user inherit the enterprise's default\nstorage policy.\n\nThere is a rate limit for calling this endpoint of only\ntwice per user in a 24 hour time frame.",
        "operationId": "delete_storage_policy_assignments_id",
        "summary": "Unassign storage policy",
        "x-box-tag": "storage_policy_assignments"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the storage policy assignment.",
            "in": "path",
            "name": "storage_policy_assignment_id",
            "required": true,
            "type": "string",
            "x-example": "932483"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a storage policy assignment object.",
            "schema": {
              "$ref": "#/definitions/StoragePolicyAssignment"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Storage policy assignments"
        ],
        "description": "Fetches a specific storage policy assignment.",
        "operationId": "get_storage_policy_assignments_id",
        "summary": "Get storage policy assignment",
        "x-box-tag": "storage_policy_assignments"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the storage policy assignment.",
            "in": "path",
            "name": "storage_policy_assignment_id",
            "required": true,
            "type": "string",
            "x-example": "932483"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "storage_policy": {
                  "description": "The storage policy to assign to the user or\nenterprise",
                  "properties": {
                    "id": {
                      "description": "The ID of the storage policy to assign.",
                      "example": "1434325",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type to assign.",
                      "enum": [
                        "storage_policy"
                      ],
                      "example": "storage_policy",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "storage_policy"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an updated storage policy assignment object.",
            "schema": {
              "$ref": "#/definitions/StoragePolicyAssignment"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Storage policy assignments"
        ],
        "description": "Updates a specific storage policy assignment.",
        "operationId": "put_storage_policy_assignments_id",
        "summary": "Update storage policy assignment",
        "x-box-tag": "storage_policy_assignments"
      }
    },
    "/task_assignments": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "assign_to": {
                  "description": "The user to assign the task to.",
                  "properties": {
                    "id": {
                      "description": "The ID of the user to assign to the\ntask.\n\nTo specify a user by their email\naddress use the `login` parameter.",
                      "example": "3242343",
                      "type": "string"
                    },
                    "login": {
                      "description": "The email address of the user to assign to the task.\nTo specify a user by their user ID please use the `id` parameter.",
                      "example": "john@example.com",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "task": {
                  "description": "The task to assign to a user.",
                  "properties": {
                    "id": {
                      "description": "The ID of the task",
                      "example": "11446498",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of the item to assign.",
                      "enum": [
                        "task"
                      ],
                      "example": "task",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "task",
                "assign_to"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a new task assignment object.",
            "schema": {
              "$ref": "#/definitions/TaskAssignment"
            }
          },
          "403": {
            "description": "Returns an error if a change to a completed task is attempted",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the task could not be found or the user does not\nhave access to the file the task is assigned to.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "Returns an error if any of the IDs for this request were not valid, or if\nthe targeted user does not have access to the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Task assignments"
        ],
        "description": "Assigns a task to a user.\n\nA task can be assigned to more than one user by creating multiple\nassignments.",
        "operationId": "post_task_assignments",
        "summary": "Assign task",
        "x-box-sanitized": true,
        "x-box-tag": "task_assignments"
      }
    },
    "/task_assignments/{task_assignment_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the task assignment.",
            "in": "path",
            "name": "task_assignment_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the task\nassignment was successfully deleted."
          },
          "404": {
            "description": "Returns an error if the task assignment for the given ID does not exist\nor is inaccessible to your account.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Task assignments"
        ],
        "description": "Deletes a specific task assignment.",
        "operationId": "delete_task_assignments_id",
        "summary": "Unassign task",
        "x-box-sanitized": true,
        "x-box-tag": "task_assignments"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the task assignment.",
            "in": "path",
            "name": "task_assignment_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a task assignment, specifying who the task has been assigned to\nand by whom.",
            "schema": {
              "$ref": "#/definitions/TaskAssignment"
            }
          },
          "404": {
            "description": "Returns an error when the task assignment could not be found or the user\ndoes not have access to the file the task is assigned to.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Task assignments"
        ],
        "description": "Retrieves information about a task assignment.",
        "operationId": "get_task_assignments_id",
        "summary": "Get task assignment",
        "x-box-sanitized": true,
        "x-box-tag": "task_assignments"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the task assignment.",
            "in": "path",
            "name": "task_assignment_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "message": {
                  "description": "An optional message by the assignee that can be added to the task.",
                  "example": "Looks good to me",
                  "type": "string"
                },
                "resolution_state": {
                  "description": "The state of the task assigned to the user.\n\n* For a task with an `action` value of `complete` this can be\n`incomplete` or `completed`.\n* For a task with an `action` of `review` this can be\n`incomplete`, `approved`, or `rejected`.",
                  "enum": [
                    "completed",
                    "incomplete",
                    "approved",
                    "rejected"
                  ],
                  "example": "completed",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated task assignment object.",
            "schema": {
              "$ref": "#/definitions/TaskAssignment"
            }
          },
          "400": {
            "description": "Returns an error if a resolution state is incompatible with the action\ntype of the task.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the task assignment could not be found or the user\ndoes not have access to the file the task is assigned to.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Task assignments"
        ],
        "description": "Updates a task assignment. This endpoint can be\nused to update the state of a task assigned to a user.",
        "operationId": "put_task_assignments_id",
        "summary": "Update task assignment",
        "x-box-sanitized": true,
        "x-box-tag": "task_assignments"
      }
    },
    "/tasks": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "action": {
                  "default": "review",
                  "description": "The action the task assignee will be prompted to do. Must be\n\n* `review` defines an approval task that can be approved or\nrejected\n* `complete` defines a general task which can be completed",
                  "enum": [
                    "review",
                    "complete"
                  ],
                  "example": "review",
                  "type": "string"
                },
                "completion_rule": {
                  "default": "all_assignees",
                  "description": "Defines which assignees need to complete this task before the task\nis considered completed.\n\n* `all_assignees` (default) requires all assignees to review or\napprove the the task in order for it to be considered completed.\n* `any_assignee` accepts any one assignee to review or\napprove the the task in order for it to be considered completed.",
                  "enum": [
                    "all_assignees",
                    "any_assignee"
                  ],
                  "example": "all_assignees",
                  "type": "string"
                },
                "due_at": {
                  "description": "Defines when the task is due. Defaults to `null` if not\nprovided.",
                  "example": "2012-12-12T10:53:43-08:00",
                  "format": "date-time",
                  "type": "string"
                },
                "item": {
                  "description": "The file to attach the task to.",
                  "properties": {
                    "id": {
                      "description": "The ID of the file",
                      "example": "11446498",
                      "type": "string"
                    },
                    "type": {
                      "description": "`file`",
                      "enum": [
                        "file"
                      ],
                      "example": "file",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ],
                  "type": "object"
                },
                "message": {
                  "default": "",
                  "description": "An optional message to include with the task.",
                  "example": "Please review",
                  "type": "string"
                }
              },
              "required": [
                "item"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the newly created task.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "400": {
            "description": "Returned if the request parameters or body is not valid.\n\n* `bad_request` when the body does not contain a valid request. This may\nbe because the `action` or `completion_rule` are not one of the allowed\nvalues.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returns an error when the user does not have the permission to create a\ntask on the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the file could not be found or the user does not\nhave access to the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "description": "Creates a single task on a file. This task is not assigned to any user and\nwill need to be assigned separately.",
        "operationId": "post_tasks",
        "summary": "Create task",
        "x-box-santized": true,
        "x-box-tag": "tasks"
      }
    },
    "/tasks/{task_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the task.",
            "in": "path",
            "name": "task_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the task was successfully deleted."
          },
          "404": {
            "description": "Returns an error when the task could not be found or the user does not\nhave access to the file the task is assigned to.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "description": "Removes a task from a file.",
        "operationId": "delete_tasks_id",
        "summary": "Remove task",
        "x-box-sanitized": true,
        "x-box-tag": "tasks"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the task.",
            "in": "path",
            "name": "task_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a task object.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "Returns an error when the task could not be found or the user does not\nhave access to the file the task is assigned to.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "description": "Retrieves information about a specific task.",
        "operationId": "get_tasks_id",
        "summary": "Get task",
        "x-box-sanitized": true,
        "x-box-tag": "tasks"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the task.",
            "in": "path",
            "name": "task_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "action": {
                  "description": "The action the task assignee will be prompted to do. Must be\n\n* `review` defines an approval task that can be approved or\nrejected\n* `complete` defines a general task which can be completed",
                  "enum": [
                    "review",
                    "complete"
                  ],
                  "example": "review",
                  "type": "string"
                },
                "completion_rule": {
                  "description": "Defines which assignees need to complete this task before the task\nis considered completed.\n\n* `all_assignees` (default) requires all assignees to review or\napprove the the task in order for it to be considered completed.\n* `any_assignee` accepts any one assignee to review or\napprove the the task in order for it to be considered completed.",
                  "enum": [
                    "all_assignees",
                    "any_assignee"
                  ],
                  "example": "all_assignees",
                  "type": "string"
                },
                "due_at": {
                  "description": "When the task is due at.",
                  "example": "2012-12-12T10:53:43-08:00",
                  "format": "date-time",
                  "type": "string"
                },
                "message": {
                  "description": "The message included with the task.",
                  "example": "Please review",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated task object",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "400": {
            "description": "Returned if the request parameters or body is not valid.\n\n* `bad_request` when the body does not contain a valid request. This may\nbe because the `action` or `completion_rule` are not one of the allowed\nvalues.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returns an error when the user does not have the permission to update a\ntask on the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error when the file could not be found or the user does not\nhave access to the file.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "description": "Updates a task. This can be used to update a task's configuration, or to\nupdate its completion state.",
        "operationId": "put_tasks_id",
        "summary": "Update task",
        "x-box-sanitized": true,
        "x-box-tag": "tasks"
      }
    },
    "/tasks/{task_id}/assignments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the task.",
            "in": "path",
            "name": "task_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of task assignment defining what task on\na file has been assigned to which users and by who.",
            "schema": {
              "$ref": "#/definitions/TaskAssignments"
            }
          },
          "404": {
            "description": "Returns an error when the task could not be found or the user does not\nhave access to the file the task is assigned to.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "Returns an error if the task assignment ID was omitted in\nthe request.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Task assignments"
        ],
        "description": "Lists all of the assignments for a given task.",
        "operationId": "get_tasks_id_assignments",
        "summary": "List task assignments",
        "x-box-sanitized": true,
        "x-box-tag": "task_assignments"
      }
    },
    "/terms_of_service_user_statuses": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the terms of service.",
            "in": "query",
            "name": "tos_id",
            "required": true,
            "type": "string",
            "x-example": "324234"
          },
          {
            "description": "Limits results to the given user ID.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "type": "string",
            "x-example": "123334"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of terms of service statuses.",
            "schema": {
              "$ref": "#/definitions/TermsOfServiceUserStatuses"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Terms of service user statuses"
        ],
        "description": "Retrieves an overview of users and their status for a\nterms of service, including Whether they have accepted\nthe terms and when.",
        "operationId": "get_terms_of_service_user_statuses",
        "summary": "List terms of service user statuses",
        "x-box-tag": "terms_of_service_user_statuses"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "is_accepted": {
                  "description": "Whether the user has accepted the terms.",
                  "example": true,
                  "type": "boolean"
                },
                "tos": {
                  "description": "The terms of service to set the status for.",
                  "properties": {
                    "id": {
                      "description": "The ID of terms of service",
                      "example": "1232132",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of object.",
                      "enum": [
                        "terms_of_service"
                      ],
                      "example": "terms_of_service",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ],
                  "type": "object"
                },
                "user": {
                  "description": "The user to set the status for.",
                  "properties": {
                    "id": {
                      "description": "The ID of user",
                      "example": "3423423",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of object.",
                      "enum": [
                        "user"
                      ],
                      "example": "user",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "tos",
                "user",
                "is_accepted"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a terms of service status object.",
            "schema": {
              "$ref": "#/definitions/TermsOfServiceUserStatus"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Terms of service user statuses"
        ],
        "description": "Sets the status for a terms of service for a user.",
        "operationId": "post_terms_of_service_user_statuses",
        "summary": "Create terms of service status for new user",
        "x-box-tag": "terms_of_service_user_statuses"
      }
    },
    "/terms_of_service_user_statuses/{terms_of_service_user_status_id}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the terms of service status.",
            "in": "path",
            "name": "terms_of_service_user_status_id",
            "required": true,
            "type": "string",
            "x-example": "324234"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "is_accepted": {
                  "description": "Whether the user has accepted the terms.",
                  "example": true,
                  "type": "boolean"
                }
              },
              "required": [
                "is_accepted"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated terms of service status object.",
            "schema": {
              "$ref": "#/definitions/TermsOfServiceUserStatus"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Terms of service user statuses"
        ],
        "description": "Updates the status for a terms of service for a user.",
        "operationId": "put_terms_of_service_user_statuses_id",
        "summary": "Update terms of service status for existing user",
        "x-box-tag": "terms_of_service_user_statuses"
      }
    },
    "/terms_of_services": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Limits the results to the terms of service of the given type.",
            "enum": [
              "external",
              "managed"
            ],
            "in": "query",
            "name": "tos_type",
            "required": false,
            "type": "string",
            "x-example": "managed"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of terms of service text and settings for the\nenterprise.",
            "schema": {
              "$ref": "#/definitions/TermsOfServices"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Terms of service"
        ],
        "description": "Returns the current terms of service text and settings\nfor the enterprise.",
        "operationId": "get_terms_of_services",
        "summary": "List terms of services",
        "x-box-tag": "terms_of_services"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "status": {
                  "description": "Whether this terms of service is active.",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "example": "enabled",
                  "type": "string"
                },
                "text": {
                  "description": "The terms of service text to display to users.\n\nThe text can be set to empty if the `status` is set to `disabled`.",
                  "example": "By collaborating on this file you are accepting...",
                  "type": "string"
                },
                "tos_type": {
                  "description": "The type of user to set the terms of\nservice for.",
                  "enum": [
                    "external",
                    "managed"
                  ],
                  "example": "managed",
                  "type": "string"
                }
              },
              "required": [
                "status",
                "text"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a new task object",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Terms of service"
        ],
        "description": "Creates a terms of service for a given enterprise\nand type of user.",
        "operationId": "post_terms_of_services",
        "summary": "Create terms of service",
        "x-box-tag": "terms_of_services"
      }
    },
    "/terms_of_services/{terms_of_service_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the terms of service.",
            "in": "path",
            "name": "terms_of_service_id",
            "required": true,
            "type": "string",
            "x-example": "324234"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a terms of service object.",
            "schema": {
              "$ref": "#/definitions/TermsOfService"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Terms of service"
        ],
        "description": "Fetches a specific terms of service.",
        "operationId": "get_terms_of_services_id",
        "summary": "Get terms of service",
        "x-box-tag": "terms_of_services"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the terms of service.",
            "in": "path",
            "name": "terms_of_service_id",
            "required": true,
            "type": "string",
            "x-example": "324234"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "status": {
                  "description": "Whether this terms of service is active.",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "example": "enabled",
                  "type": "string"
                },
                "text": {
                  "description": "The terms of service text to display to users.\n\nThe text can be set to empty if the `status` is set to `disabled`.",
                  "example": "By collaborating on this file you are accepting...",
                  "type": "string"
                }
              },
              "required": [
                "status",
                "text"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an updated terms of service object.",
            "schema": {
              "$ref": "#/definitions/TermsOfService"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Terms of service"
        ],
        "description": "Updates a specific terms of service.",
        "operationId": "put_terms_of_services_id",
        "summary": "Update terms of service",
        "x-box-tag": "terms_of_services"
      }
    },
    "/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Limits the results to only users who's `name` or\n`login` start with the search term.\n\nFor externally managed users, the search term needs\nto completely match the in order to find the user, and\nit will only return one user at a time.",
            "in": "query",
            "name": "filter_term",
            "required": false,
            "type": "string",
            "x-example": "john"
          },
          {
            "description": "Limits the results to the kind of user specified.\n\n* `all` returns every kind of user for whom the\n  `login` or `name` partially matches the\n  `filter_term`. It will only return an external user\n  if the login matches the `filter_term` completely,\n  and in that case it will only return that user.\n* `managed` returns all managed and app users for whom\n  the `login` or `name` partially matches the\n  `filter_term`.\n* `external` returns all external users for whom the\n  `login` matches the `filter_term` exactly.",
            "enum": [
              "all",
              "managed",
              "external"
            ],
            "in": "query",
            "name": "user_type",
            "required": false,
            "type": "string",
            "x-example": "managed"
          },
          {
            "description": "Limits the results to app users with the given\n`external_app_user_id` value.\n\nWhen creating an app user, an\n`external_app_user_id` value can be set. This value can\nthen be used in this endpoint to find any users that\nmatch that `external_app_user_id` value.",
            "in": "query",
            "name": "external_app_user_id",
            "required": false,
            "type": "string",
            "x-example": "my-user-1234"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "description": "Specifies whether to use marker-based pagination instead of\noffset-based pagination. Only one pagination method can\nbe used at a time.\n\nBy setting this value to true, the API will return a `marker` field\nthat can be passed as a parameter to this endpoint to get the next\npage of the response.",
            "in": "query",
            "name": "usemarker",
            "required": false,
            "type": "boolean",
            "x-example": true
          },
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all of the users in the enterprise.",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Returns a list of all users for the Enterprise along with their `user_id`,\n`public_name`, and `login`.\n\nThe application and the authenticated user need to\nhave the permission to look up users in the entire\nenterprise.",
        "operationId": "get_users",
        "summary": "List enterprise users",
        "x-box-tag": "users"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "description": "The user’s address",
                  "example": "900 Jefferson Ave, Redwood City, CA 94063",
                  "maxLength": 255,
                  "type": "string"
                },
                "can_see_managed_users": {
                  "description": "Whether the user can see other enterprise users in their\ncontact list",
                  "example": true,
                  "type": "boolean"
                },
                "external_app_user_id": {
                  "description": "An external identifier for an app user, which can be used to look\nup the user. This can be used to tie user IDs from external\nidentity providers to Box users.",
                  "example": "my-user-1234",
                  "type": "string"
                },
                "is_exempt_from_device_limits": {
                  "description": "Whether to exempt the user from enterprise device limits",
                  "example": true,
                  "type": "boolean"
                },
                "is_exempt_from_login_verification": {
                  "description": "Whether the user must use two-factor authentication",
                  "example": true,
                  "type": "boolean"
                },
                "is_external_collab_restricted": {
                  "description": "Whether the user is allowed to collaborate with users outside\ntheir enterprise",
                  "example": true,
                  "type": "boolean"
                },
                "is_platform_access_only": {
                  "description": "Specifies that the user is an app user.",
                  "example": true,
                  "type": "boolean"
                },
                "is_sync_enabled": {
                  "description": "Whether the user can use Box Sync",
                  "example": true,
                  "type": "boolean"
                },
                "job_title": {
                  "description": "The user’s job title",
                  "example": "CEO",
                  "maxLength": 100,
                  "type": "string"
                },
                "language": {
                  "description": "The language of the user, formatted in modified version of the\n[ISO 639-1](/guides/api-calls/language-codes) format.",
                  "example": "en",
                  "type": "string"
                },
                "login": {
                  "description": "The email address the user uses to log in\n\nRequired, unless `is_platform_access_only`\nis set to `true`.",
                  "example": "boss@box.com",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the user",
                  "example": "Aaron Levie",
                  "maxLength": 50,
                  "type": "string"
                },
                "phone": {
                  "description": "The user’s phone number",
                  "example": "6509241374",
                  "maxLength": 100,
                  "type": "string"
                },
                "role": {
                  "description": "The user’s enterprise role",
                  "enum": [
                    "coadmin",
                    "user"
                  ],
                  "example": "user",
                  "type": "string"
                },
                "space_amount": {
                  "description": "The user’s total available space in bytes. Set this to `-1` to\nindicate unlimited storage.",
                  "example": 11345156112,
                  "format": "int64",
                  "type": "integer"
                },
                "status": {
                  "description": "The user's account status",
                  "enum": [
                    "active",
                    "inactive",
                    "cannot_delete_edit",
                    "cannot_delete_edit_upload"
                  ],
                  "example": "active",
                  "type": "string"
                },
                "timezone": {
                  "description": "The user's timezone",
                  "example": "Africa/Bujumbura",
                  "format": "timezone",
                  "type": "string"
                },
                "tracking_codes": {
                  "description": "Tracking codes allow an admin to generate reports from the\nadmin console and assign an attribute to a specific group\nof users. This setting must be enabled for an enterprise before it\ncan be used.",
                  "example": [
                    "code1: 12345"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a user object for the newly created user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Creates a new managed user in an enterprise. This endpoint\nis only available to users and applications with the right\nadmin permissions.",
        "operationId": "post_users",
        "summary": "Create user",
        "x-box-tag": "users"
      }
    },
    "/users/me": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single user object.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Retrieves information about the user who is currently authenticated.\n\nIn the case of a client-side authenticated OAuth 2.0 application\nthis will be the user who authorized the app.\n\nIn the case of a JWT, server-side authenticated application\nthis will be the service account that belongs to the application\nby default.\n\nUse the `As-User` header to change who this API call is made on behalf of.",
        "operationId": "get_users_me",
        "summary": "Get current user",
        "x-box-tag": "users"
      }
    },
    "/users/{user_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "Whether the user will receive email notification of\nthe deletion",
            "in": "query",
            "name": "notify",
            "type": "boolean",
            "x-example": true
          },
          {
            "description": "Whether the user should be deleted even if this user\nstill own files",
            "in": "query",
            "name": "force",
            "type": "boolean",
            "x-example": true
          }
        ],
        "responses": {
          "204": {
            "description": "Removes the user and returns an empty response."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Deletes a user. By default this will fail if the user\nstill owns any content. Move their owned content first\nbefore proceeding, or use the `force` field to delete\nthe user and their files.",
        "operationId": "delete_users_id",
        "summary": "Delete user",
        "x-box-tag": "users"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single user object.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields using the [fields](#get-users-id--request--fields)\nparameter.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Retrieves information about a user in the enterprise.\n\nThe application and the authenticated user need to\nhave the permission to look up users in the entire\nenterprise.\n\nThis endpoint also returns a limited set of information\nfor external users who are collaborated on content\nowned by the enterprise for authenticated users with the\nright scopes. In this case, disallowed fields will return\nnull instead.",
        "operationId": "get_users_id",
        "summary": "Get user",
        "x-box-tag": "users"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "description": "The user’s address",
                  "example": "900 Jefferson Ave, Redwood City, CA 94063",
                  "maxLength": 255,
                  "type": "string"
                },
                "can_see_managed_users": {
                  "description": "Whether the user can see other enterprise users in their\ncontact list",
                  "example": true,
                  "type": "boolean"
                },
                "enterprise": {
                  "description": "Set this to `null` to roll the user out of the enterprise\nand make them a free user",
                  "example": null,
                  "type": "string",
                  "x-nullable": true
                },
                "is_exempt_from_device_limits": {
                  "description": "Whether to exempt the user from enterprise device limits",
                  "example": true,
                  "type": "boolean"
                },
                "is_exempt_from_login_verification": {
                  "description": "Whether the user must use two-factor authentication",
                  "example": true,
                  "type": "boolean"
                },
                "is_external_collab_restricted": {
                  "description": "Whether the user is allowed to collaborate with users outside\ntheir enterprise",
                  "example": true,
                  "type": "boolean"
                },
                "is_password_reset_required": {
                  "description": "Whether the user is required to reset their password",
                  "example": true,
                  "type": "boolean"
                },
                "is_sync_enabled": {
                  "description": "Whether the user can use Box Sync",
                  "example": true,
                  "type": "boolean"
                },
                "job_title": {
                  "description": "The user’s job title",
                  "example": "CEO",
                  "maxLength": 100,
                  "type": "string"
                },
                "language": {
                  "description": "The language of the user, formatted in modified version of the\n[ISO 639-1](/guides/api-calls/language-codes) format.",
                  "example": "en",
                  "type": "string"
                },
                "login": {
                  "description": "The email address the user uses to log in",
                  "example": "boss@box.com",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the user",
                  "example": "Aaron Levie",
                  "maxLength": 50,
                  "type": "string"
                },
                "notification_email": {
                  "description": "An alternate notification email address to which email\nnotifications are sent. When it's confirmed, this will be\nthe email address to which notifications are sent instead of\nto the primary email address.\n\nSet this value to `null` to remove the notification email.",
                  "properties": {
                    "email": {
                      "description": "The email address to send the notifications to.",
                      "example": "notifications@example.com",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-nullable": true
                },
                "notify": {
                  "description": "Whether the user should receive an email when they\nare rolled out of an enterprise",
                  "example": true,
                  "type": "boolean"
                },
                "phone": {
                  "description": "The user’s phone number",
                  "example": "6509241374",
                  "maxLength": 100,
                  "type": "string"
                },
                "role": {
                  "description": "The user’s enterprise role",
                  "enum": [
                    "coadmin",
                    "user"
                  ],
                  "example": "user",
                  "type": "string"
                },
                "space_amount": {
                  "description": "The user’s total available space in bytes. Set this to `-1` to\nindicate unlimited storage.",
                  "example": 11345156112,
                  "format": "int64",
                  "type": "integer"
                },
                "status": {
                  "description": "The user's account status",
                  "enum": [
                    "active",
                    "inactive",
                    "cannot_delete_edit",
                    "cannot_delete_edit_upload"
                  ],
                  "example": "active",
                  "type": "string"
                },
                "timezone": {
                  "description": "The user's timezone",
                  "example": "Africa/Bujumbura",
                  "format": "timezone",
                  "type": "string"
                },
                "tracking_codes": {
                  "description": "Tracking codes allow an admin to generate reports from the\nadmin console and assign an attribute to a specific group\nof users. This setting must be enabled for an enterprise before it\ncan be used.",
                  "example": [
                    "code1: 12345"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated user object.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Returns an error if some of the parameters are missing or\nnot valid.\n\n* `invalid_parameter` when a parameter is formatted incorrectly,\n  for example when the `notification_email` has an incorrectly formatted\n  email address.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returns an error if the user is not allowed to make the changes.\n\n* `access_denied_insufficient_permissions` when the user does not have\n  the right permissions, for example when updating the notification email\n  is turned off for the enterprise.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Updates a managed user in an enterprise. This endpoint\nis only available to users and applications with the right\nadmin permissions.",
        "operationId": "put_users_id",
        "summary": "Update user",
        "x-box-enable-explorer": true,
        "x-box-tag": "users"
      }
    },
    "/users/{user_id}/avatar": {
      "get": {
        "produces": [
          "image/jpg",
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "200": {
            "description": "When an avatar can be found for the user the\nimage data will be returned in the body of the\nresponse.",
            "schema": {
              "description": "The avatar",
              "format": "binary",
              "type": "string"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "User avatars"
        ],
        "description": "Retrieves an image of a the user's avatar.",
        "operationId": "get_users_id_avatar",
        "summary": "Get user avatar",
        "x-box-tag": "avatars"
      }
    },
    "/users/{user_id}/email_aliases": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of email aliases.",
            "schema": {
              "$ref": "#/definitions/EmailAliases"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Email aliases"
        ],
        "description": "Retrieves all email aliases for a user. The collection\ndoes not include the primary login for the user.",
        "operationId": "get_users_id_email_aliases",
        "summary": "List user's email aliases",
        "x-box-tag": "email_aliases"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "email": {
                  "description": "The email address to add to the account as an alias.",
                  "example": "alias@example.com",
                  "type": "string"
                }
              },
              "required": [
                "email"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the newly created email alias object.",
            "schema": {
              "$ref": "#/definitions/EmailAlias"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Email aliases"
        ],
        "description": "Adds a new email alias to a user account..",
        "operationId": "post_users_id_email_aliases",
        "summary": "Create email alias",
        "x-box-tag": "email_aliases"
      }
    },
    "/users/{user_id}/email_aliases/{email_alias_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "The ID of the email alias.",
            "in": "path",
            "name": "email_alias_id",
            "required": true,
            "type": "string",
            "x-example": "23432"
          }
        ],
        "responses": {
          "204": {
            "description": "Removes the alias and returns an empty response."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Email aliases"
        ],
        "description": "Removes an email alias from a user.",
        "operationId": "delete_users_id_email_aliases_id",
        "summary": "Remove email alias",
        "x-box-tag": "email_aliases"
      }
    },
    "/users/{user_id}/folders/0": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "description": "Determines if users should receive email notification\nfor the action performed.",
            "in": "query",
            "name": "notify",
            "required": false,
            "type": "boolean",
            "x-example": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "owned_by": {
                  "description": "The user who the folder will be transferred to",
                  "properties": {
                    "id": {
                      "description": "The ID of the user who the folder will be\ntransferred to",
                      "example": "1232234",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "owned_by"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the information for the newly created\ndestination folder.",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Transfer folders"
        ],
        "description": "Move all of the items (files, folders and workflows) owned by a user into\nanother user's account\n\nOnly the root folder (`0`) can be transferred.\n\nFolders can only be moved across users by users with administrative\npermissions.\n\nThis call will be performed synchronously which might lead to a slow response\nwhen the source user has a large number of items in all of its folders.\n\nIf the destination path has a metadata cascade policy attached to any of\nthe parent folders, a metadata cascade operation will be kicked off\nasynchronously.\n\nThere is currently no way to check for when this operation is finished.\n\nThe destination folder's name will be in the format `{User}'s Files and\nFolders`, where `{User}` is the display name of the user.\n\nTo make this API call your application will need to have the \"Read and write\nall files and folders stored in Box\" scope enabled.\n\nPlease make sure the destination user has access to `Relay` or `Relay Lite`,\nand has access to the files and folders involved in the workflows being\ntransferred.\n\nAdmins will receive an email when the operation is completed.",
        "operationId": "put_users_id_folders_0",
        "summary": "Transfer owned folders",
        "x-box-tag": "transfer"
      }
    },
    "/users/{user_id}/memberships": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          },
          {
            "default": 0,
            "description": "The offset of the item at which to begin the response.",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of membership objects. If there are no\nmemberships, an empty collection will be returned.",
            "schema": {
              "$ref": "#/definitions/GroupMemberships"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Group memberships"
        ],
        "description": "Retrieves all the groups for a user. Only members of this\ngroup or users with admin-level permissions will be able to\nuse this API.",
        "operationId": "get_users_id_memberships",
        "summary": "List user's groups",
        "x-box-tag": "memberships"
      }
    },
    "/web_links": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "description": {
                  "description": "Description of the web link.",
                  "example": "Cloud Content Management",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the web link. Defaults to the URL if not set.",
                  "example": "Box Website",
                  "type": "string"
                },
                "parent": {
                  "description": "The parent folder to create the web link within.",
                  "properties": {
                    "id": {
                      "description": "The ID of parent folder",
                      "example": "0",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "url": {
                  "description": "The URL that this web link links to. Must start with\n`\"http://\"` or `\"https://\"`.",
                  "example": "https://box.com",
                  "type": "string"
                }
              },
              "required": [
                "parent",
                "url"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the newly created web link object.",
            "schema": {
              "$ref": "#/definitions/WebLink"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Web links"
        ],
        "description": "Creates a web link object within a folder.",
        "operationId": "post_web_links",
        "summary": "Create web link",
        "x-box-tag": "web_links"
      }
    },
    "/web_links/{web_link_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the web link.",
            "in": "path",
            "name": "web_link_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "204": {
            "description": "An empty response will be returned when the web link\nwas successfully deleted."
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Web links"
        ],
        "description": "Deletes a web link.",
        "operationId": "delete_web_links_id",
        "summary": "Remove web link",
        "x-box-tag": "web_links"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the web link.",
            "in": "path",
            "name": "web_link_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
            "in": "header",
            "name": "boxapi",
            "required": false,
            "type": "string",
            "x-example": "shared_link=[link]&shared_link_password=[password]"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the web link object.",
            "schema": {
              "$ref": "#/definitions/WebLink"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Web links"
        ],
        "description": "Retrieve information about a web link.",
        "operationId": "get_web_links_id",
        "summary": "Get web link",
        "x-box-tag": "web_links"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the web link.",
            "in": "path",
            "name": "web_link_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "name": {
                  "description": "An optional new name for the web link.",
                  "example": "Restored.docx",
                  "type": "string"
                },
                "parent": {
                  "allOf": [
                    {
                      "description": "The parent for this item",
                      "properties": {
                        "id": {
                          "description": "The ID of parent item",
                          "example": "123",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "Specifies an optional ID of a folder to restore the web link\nto when the original folder no longer exists.\n\nPlease be aware that this ID will only be used if the original\nfolder no longer exists. Use this ID to provide a fallback\nlocation to restore the web link to if the original location\nhas been deleted."
                    }
                  ]
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a web link object when it has been restored.",
            "schema": {
              "$ref": "#/definitions/WebLink"
            }
          },
          "403": {
            "description": "Returns an error if the user does not have access to the folder\nthe web link is being restored to, or the user does not have permission\nto restore web link from the trash.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if the web link is not in the trash.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error if there is an web link with the same name\nin the folder the web link is being restored to.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Trashed web links"
        ],
        "description": "Restores a web link that has been moved to the trash.\n\nAn optional new parent ID can be provided to restore the  web link to in case\nthe original folder has been deleted.",
        "operationId": "post_web_links_id",
        "summary": "Restore web link",
        "x-box-tag": "trashed_web_links"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the web link.",
            "in": "path",
            "name": "web_link_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "description": {
                  "description": "A new description of the web link.",
                  "example": "Cloud Content Management",
                  "type": "string"
                },
                "name": {
                  "description": "A new name for the web link. Defaults to the URL if not set.",
                  "example": "Box Website",
                  "type": "string"
                },
                "parent": {
                  "allOf": [
                    {
                      "description": "The parent for this item",
                      "properties": {
                        "id": {
                          "description": "The ID of parent item",
                          "example": "123",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "The new parent folder to put the web link in.\nUse this to move the web link to a different folder."
                    }
                  ]
                },
                "url": {
                  "description": "The new URL that the web link links to. Must start with\n`\"http://\"` or `\"https://\"`.",
                  "example": "https://box.com",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated web link object.",
            "schema": {
              "$ref": "#/definitions/WebLink"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Web links"
        ],
        "description": "Updates a web link object.",
        "operationId": "put_web_links_id",
        "summary": "Update web link",
        "x-box-tag": "web_links"
      }
    },
    "/web_links/{web_link_id}/trash": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the web link.",
            "in": "path",
            "name": "web_link_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the web link was\npermanently deleted."
          },
          "404": {
            "description": "Returns an error if the web link is not in the trash.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Trashed web links"
        ],
        "description": "Permanently deletes a web link that is in the trash.\nThis action cannot be undone.",
        "operationId": "delete_web_links_id_trash",
        "summary": "Permanently remove web link",
        "x-box-tag": "trashed_web_links"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the web link.",
            "in": "path",
            "name": "web_link_id",
            "required": true,
            "type": "string",
            "x-example": "12345"
          },
          {
            "collectionFormat": "csv",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array",
            "x-example": [
              "id",
              "type",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the web link that was trashed,\nincluding information about when the it\nwas moved to the trash.",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "404": {
            "description": "Returns an error if the web link is not in the trash.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Trashed web links"
        ],
        "description": "Retrieves a web link that has been moved to the trash.",
        "operationId": "get_web_links_id_trash",
        "summary": "Get trashed web link",
        "x-box-tag": "trashed_web_links"
      }
    },
    "/webhooks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "in": "query",
            "name": "marker",
            "required": false,
            "type": "string",
            "x-example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "description": "The maximum number of items to return per page.",
            "format": "int64",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer",
            "x-example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of webhooks.",
            "schema": {
              "$ref": "#/definitions/Webhooks"
            }
          },
          "403": {
            "description": "Returns an error if the application does not\nhave the permission to manage webhooks.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Webhooks"
        ],
        "description": "Returns all defined webhooks for the requesting application.\n\nThis API only returns webhooks that are applied to files or folders that are\nowned by the authenticated user. This means that an admin can not see webhooks\ncreated by a service account unless the admin has access to those folders, and\nvice versa.",
        "operationId": "get_webhooks",
        "summary": "List all webhooks",
        "x-box-tag": "webhooks"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "description": "The URL that is notified by this webhook",
                  "example": "https://example.com/webhooks",
                  "type": "string"
                },
                "target": {
                  "description": "The item that will trigger the webhook",
                  "properties": {
                    "id": {
                      "description": "The ID of the item to trigger a webhook",
                      "example": "1231232",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of item to trigger a webhook",
                      "enum": [
                        "file",
                        "folder"
                      ],
                      "example": "file",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "triggers": {
                  "description": "An array of event names that this webhook is\nto be triggered for",
                  "example": [
                    "FILE.UPLOADED"
                  ],
                  "items": {
                    "description": "The event name that triggered this webhook",
                    "enum": [
                      "FILE.UPLOADED",
                      "FILE.PREVIEWED",
                      "FILE.DOWNLOADED",
                      "FILE.TRASHED",
                      "FILE.DELETED",
                      "FILE.RESTORED",
                      "FILE.COPIED",
                      "FILE.MOVED",
                      "FILE.LOCKED",
                      "FILE.UNLOCKED",
                      "FILE.RENAMED",
                      "COMMENT.CREATED",
                      "COMMENT.UPDATED",
                      "COMMENT.DELETED",
                      "TASK_ASSIGNMENT.CREATED",
                      "TASK_ASSIGNMENT.UPDATED",
                      "METADATA_INSTANCE.CREATED",
                      "METADATA_INSTANCE.UPDATED",
                      "METADATA_INSTANCE.DELETED",
                      "FOLDER.CREATED",
                      "FOLDER.RENAMED",
                      "FOLDER.DOWNLOADED",
                      "FOLDER.RESTORED",
                      "FOLDER.DELETED",
                      "FOLDER.COPIED",
                      "FOLDER.MOVED",
                      "FOLDER.TRASHED",
                      "WEBHOOK.DELETED",
                      "COLLABORATION.CREATED",
                      "COLLABORATION.ACCEPTED",
                      "COLLABORATION.REJECTED",
                      "COLLABORATION.REMOVED",
                      "COLLABORATION.UPDATED",
                      "SHARED_LINK.DELETED",
                      "SHARED_LINK.CREATED",
                      "SHARED_LINK.UPDATED"
                    ],
                    "example": "FILE.UPLOADED",
                    "title": "Webhook Trigger",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "target",
                "triggers",
                "address"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the new webhook object.",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "400": {
            "description": "Returns an error if the parameters were\nincorrect.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returns an error if the application does not\nhave the permission to manage webhooks.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if the target item could\nnot be found",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error if the a webhook for this\ncombination of target, application, and user\nalready exists.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Webhooks"
        ],
        "description": "Creates a webhook.",
        "operationId": "post_webhooks",
        "summary": "Create webhook",
        "x-box-tag": "webhooks"
      }
    },
    "/webhooks/{webhook_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the webhook.",
            "in": "path",
            "name": "webhook_id",
            "required": true,
            "type": "string",
            "x-example": "3321123"
          }
        ],
        "responses": {
          "204": {
            "description": "An empty response will be returned when the webhook\nwas successfully deleted."
          },
          "403": {
            "description": "Returns an error if the application does not\nhave the permission to manage webhooks.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if the webhook could not be found",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Webhooks"
        ],
        "description": "Deletes a webhook.",
        "operationId": "delete_webhooks_id",
        "summary": "Remove webhook",
        "x-box-tag": "webhooks"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the webhook.",
            "in": "path",
            "name": "webhook_id",
            "required": true,
            "type": "string",
            "x-example": "3321123"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a webhook object",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "403": {
            "description": "Returns an error if the application does not\nhave the permission to manage webhooks.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if the webhook could not be found",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Webhooks"
        ],
        "description": "Retrieves a specific webhook",
        "operationId": "get_webhooks_id",
        "summary": "Get webhook",
        "x-box-tag": "webhooks"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the webhook.",
            "in": "path",
            "name": "webhook_id",
            "required": true,
            "type": "string",
            "x-example": "3321123"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "description": "The URL that is notified by this webhook",
                  "example": "https://example.com/webhooks",
                  "type": "string"
                },
                "target": {
                  "description": "The item that will trigger the webhook",
                  "properties": {
                    "id": {
                      "description": "The ID of the item to trigger a webhook",
                      "example": "1231232",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of item to trigger a webhook",
                      "enum": [
                        "file",
                        "folder"
                      ],
                      "example": "file",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "triggers": {
                  "description": "An array of event names that this webhook is\nto be triggered for",
                  "example": [
                    "FILE.UPLOADED"
                  ],
                  "items": {
                    "description": "The event name that triggered this webhook",
                    "enum": [
                      "FILE.UPLOADED",
                      "FILE.PREVIEWED",
                      "FILE.DOWNLOADED",
                      "FILE.TRASHED",
                      "FILE.DELETED",
                      "FILE.RESTORED",
                      "FILE.COPIED",
                      "FILE.MOVED",
                      "FILE.LOCKED",
                      "FILE.UNLOCKED",
                      "FILE.RENAMED",
                      "COMMENT.CREATED",
                      "COMMENT.UPDATED",
                      "COMMENT.DELETED",
                      "TASK_ASSIGNMENT.CREATED",
                      "TASK_ASSIGNMENT.UPDATED",
                      "METADATA_INSTANCE.CREATED",
                      "METADATA_INSTANCE.UPDATED",
                      "METADATA_INSTANCE.DELETED",
                      "FOLDER.CREATED",
                      "FOLDER.RENAMED",
                      "FOLDER.DOWNLOADED",
                      "FOLDER.RESTORED",
                      "FOLDER.DELETED",
                      "FOLDER.COPIED",
                      "FOLDER.MOVED",
                      "FOLDER.TRASHED",
                      "WEBHOOK.DELETED",
                      "COLLABORATION.CREATED",
                      "COLLABORATION.ACCEPTED",
                      "COLLABORATION.REJECTED",
                      "COLLABORATION.REMOVED",
                      "COLLABORATION.UPDATED",
                      "SHARED_LINK.DELETED",
                      "SHARED_LINK.CREATED",
                      "SHARED_LINK.UPDATED"
                    ],
                    "example": "FILE.UPLOADED",
                    "title": "Webhook Trigger",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the new webhook object.",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "400": {
            "description": "Returns an error if the parameters were\nincorrect.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returns an error if the application does not\nhave the permission to manage webhooks.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if the target item or webhook\ncould not be found",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "409": {
            "description": "Returns an error if the a webhook for this\ncombination of target, application, and user\nalready exists.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Webhooks"
        ],
        "description": "Updates a webhook.",
        "operationId": "put_webhooks_id",
        "summary": "Update webhook",
        "x-box-tag": "webhooks"
      }
    },
    "/zip_downloads": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ZipDownloadRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "If the `zip` archive is ready to be downloaded, the API will return a\nresponse that will include a `download_url`, a `status_url`, as well as\nany conflicts that might have occurred when creating the request.",
            "schema": {
              "$ref": "#/definitions/ZipDownload"
            }
          },
          "400": {
            "description": "Returns an error if some of the parameters are missing or\nnot valid.\n\nIn most cases, this error might happen because the JSON request body is\nnot valid JSON, any of the items has an incorrect or missing ID, any of\nthe items is not a file or folder, or the root folder with ID `0` has been\nadded to the list of folders to add to the archive.\n\nThe following is a list of common error codes for this response.\n\n* `bad_request` - the request body is missing, invalid, or both the list\nof files and folders are empty. Additionally, it this error might be\nreturned when attempting to add the root folder with ID `0` to an archive.\n* `zip_download_file_count_exceeded_limit` - the requested files and\nfolders would result in an archive with more than 10,000 files. The\nrequest will have to be split into multiple requests to reduce the number\nof files per archive.\n* `zip_download_pre_compressed_bytes_exceeded_limit` - the requested files\nand folders would result in an archive with more than 32GB of content. The\nrequest will have to be split into multiple requests to reduce the size of\nthe archive.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returned when an authorization header is provided but the user does not\nhave access to the items.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Zip Downloads"
        ],
        "description": "Creates a request to download multiple files and folders as a single `zip`\narchive file. This API does not return the archive but instead performs all\nthe checks to ensure that the user has access to all the items, and then\nreturns a `download_url` and a `status_url` that can be used to download the\narchive.\n\nThe limit for an archive is either 32GB or 10,000 files, whichever\nlimitation is met first.",
        "operationId": "post_zip_downloads",
        "summary": "Create zip download",
        "x-box-reference-category": "zip_downloads",
        "x-box-tag": "zip_downloads"
      }
    },
    "/zip_downloads/{zip_download_id}/content": {
      "get": {
        "servers": [
          {
            "description": "An opaque server URL for downloading zip downloads. The format\nof this URL might change over time.",
            "url": "https://dl.boxcloud.com/2.0"
          }
        ],
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent this `zip` archive.",
            "in": "path",
            "name": "zip_download_id",
            "required": true,
            "type": "string",
            "x-example": "Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the content of the items requested for this download, formatted as\na stream of files and folders in a `zip` archive.",
            "headers": {
              "Content-Disposition": {
                "description": "The name of the archive to be downloaded",
                "type": "string"
              }
            },
            "schema": {
              "description": "The binary content of the archive, which will include the items\nrequested for this download.",
              "format": "binary",
              "type": "string"
            }
          },
          "404": {
            "description": "Returns an error if the ID of this download request is not valid. This\nerror can also be returned if this URL has been called before. To\nre-download this archive, please create a new request for a zip download.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "429": {
            "description": "Returns an error if the number of concurrent zip downloads has been\nreached for either the user or the enterprise.\n\n* `user_too_many_concurrent_downloads` - the maximum of 5 parallel\ndownloads of zip archives per user has been met.\n* `enterprise_too_many_concurrent_downloads` - the maximum of 10 parallel\ndownloads of zip archives per enterprise has been met.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "security": [],
        "tags": [
          "Zip Downloads"
        ],
        "description": "Returns the contents of a `zip` archive in binary format. This URL does not\nrequire any form of authentication and could be used in a user's browser to\ndownload the archive to a user's device.\n\nBy default, this URL is only valid for a few seconds from the creation of\nthe request for this archive. Once a download has started it can not be\nstopped and resumed, instead a new request for a zip archive would need to\nbe created.\n\nThe URL of this endpoint should not be considered as fixed. Instead, use\nthe [Create zip download](e://post_zip_downloads) API to request to create a\n`zip` archive, and then follow the `download_url` field in the response to\nthis endpoint.",
        "operationId": "get_zip_downloads_id_content",
        "summary": "Download zip archive",
        "x-box-reference-category": "zip_downloads",
        "x-box-tag": "zip_downloads"
      }
    },
    "/zip_downloads/{zip_download_id}/status": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier that represent this `zip` archive.",
            "in": "path",
            "name": "zip_download_id",
            "required": true,
            "type": "string",
            "x-example": "Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the status of the `zip` archive that is being downloaded.",
            "schema": {
              "$ref": "#/definitions/ZipDownloadStatus"
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "Returned when an authorization header is provided but the user does not\nhave access to the items.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "404": {
            "description": "Returns an error if the ID of this download request is not valid, or if\nthe status of a download is requested before the download has been\nstarted.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        },
        "tags": [
          "Zip Downloads"
        ],
        "description": "Returns the download status of a `zip` archive, allowing an application to\ninspect the progress of the download as well as the number of items that\nmight have been skipped.\n\nThis endpoint can only be accessed once the download has started.\nSubsequently this endpoint is valid for 12 hours from the start of the\ndownload.\n\nThe URL of this endpoint should not be considered as fixed. Instead, use\nthe [Create zip download](e://post_zip_downloads) API to request to create a\n`zip` archive, and then follow the `status_url` field in the response to\nthis endpoint.",
        "operationId": "get_zip_downloads_id_status",
        "summary": "Get zip download status",
        "x-box-reference-category": "zip_downloads",
        "x-box-tag": "zip_downloads"
      }
    }
  },
  "definitions": {
    "AccessToken": {
      "description": "A token that can be used to make authenticated API calls.",
      "properties": {
        "access_token": {
          "description": "The requested access token.",
          "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
          "format": "token",
          "type": "string"
        },
        "expires_in": {
          "description": "The time in seconds in seconds by which this token will expire.",
          "example": 3600,
          "format": "int64",
          "type": "integer"
        },
        "issued_token_type": {
          "description": "The type of downscoped access token returned. This is only\nreturned if an access token has been downscoped.",
          "enum": [
            "urn:ietf:params:oauth:token-type:access_token"
          ],
          "example": "urn:ietf:params:oauth:token-type:access_token",
          "format": "urn",
          "type": "string"
        },
        "refresh_token": {
          "description": "The refresh token for this access token, which can be used\nto request a new access token when the current one expires.",
          "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
          "format": "token",
          "type": "string"
        },
        "restricted_to": {
          "description": "The permissions that this access token permits,\nproviding a list of resources (files, folders, etc)\nand the scopes permitted for each of those resources.",
          "items": {
            "$ref": "#/definitions/FileScope"
          },
          "type": "array"
        },
        "token_type": {
          "description": "The type of access token returned.",
          "enum": [
            "bearer"
          ],
          "example": "bearer",
          "type": "string"
        }
      },
      "title": "Access token",
      "type": "object",
      "x-box-resource-id": "access_token",
      "x-box-tag": "authorization"
    },
    "Classification": {
      "description": "An instance of the classification metadata template, containing\nthe classification applied to the file or folder.\n\nTo get more details about the classification applied to an item,\nrequest the classification metadata template.",
      "properties": {
        "$canEdit": {
          "description": "Whether an end user can change the classification.",
          "example": true,
          "type": "boolean"
        },
        "$parent": {
          "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`.",
          "example": "folder_59449484661,",
          "type": "string"
        },
        "$scope": {
          "description": "The scope of the enterprise that this classification has been\napplied for.\n\nThis will be in the format `enterprise_{enterprise_id}`.",
          "example": "enterprise_27335",
          "type": "string"
        },
        "$template": {
          "description": "`securityClassification-6VMVochwUWo`",
          "enum": [
            "securityClassification-6VMVochwUWo"
          ],
          "example": "securityClassification-6VMVochwUWo",
          "type": "string"
        },
        "$type": {
          "description": "The unique ID of this classification instance. This will be include\nthe name of the classification template and a unique ID.",
          "example": "securityClassification-6VMVochwUWo-fd31537a-0f95-4d86-9f2b-5974a29978f8",
          "type": "string"
        },
        "$typeVersion": {
          "description": "The version of the metadata template. This version starts at 0 and\nincreases every time the template is updated. This is mostly for internal\nuse.",
          "example": 5,
          "type": "number"
        },
        "$version": {
          "description": "The version of the metadata instance. This version starts at 0 and\nincreases every time a classification is updated.",
          "example": 1,
          "type": "integer"
        },
        "Box__Security__Classification__Key": {
          "description": "The name of the classification applied to the item.",
          "example": "Sensitive",
          "type": "string"
        }
      },
      "title": "Classification",
      "type": "object",
      "x-box-resource-id": "classification",
      "x-box-tag": "classifications"
    },
    "ClassificationTemplate": {
      "description": "A metadata template that holds the security classifications\ndefined by an enterprise.",
      "properties": {
        "copyInstanceOnItemCopy": {
          "description": "Classifications are always copied along when the file or folder is\ncopied.",
          "example": true,
          "type": "boolean"
        },
        "displayName": {
          "description": "The name of this template as shown in web and mobile interfaces.",
          "enum": [
            "Classification"
          ],
          "example": "Classification",
          "type": "string"
        },
        "fields": {
          "description": "A list of fields for this classification template. This includes\nonly one field, the `Box__Security__Classification__Key`, which defines\nthe different classifications available in this enterprise.",
          "items": {
            "description": "The metadata template field that represents the available\nclassifications.",
            "properties": {
              "displayName": {
                "description": "`Classification`",
                "enum": [
                  "Classification"
                ],
                "example": "Classification",
                "type": "string"
              },
              "hidden": {
                "description": "Classifications are always visible to web and mobile users.",
                "example": false,
                "type": "boolean"
              },
              "id": {
                "description": "The unique ID of the field.",
                "example": "822227e0-47a5-921b-88a8-494760b2e6d2",
                "type": "string"
              },
              "key": {
                "description": "`Box__Security__Classification__Key`",
                "enum": [
                  "Box__Security__Classification__Key"
                ],
                "example": "Box__Security__Classification__Key",
                "type": "string"
              },
              "options": {
                "description": "A list of classifications available in this enterprise.",
                "items": {
                  "description": "A single classification available in this enterprise.",
                  "properties": {
                    "id": {
                      "description": "The unique ID of this classification.",
                      "example": "46aea176-3483-4431-856c-6b5b13d1cc50",
                      "type": "string"
                    },
                    "key": {
                      "description": "The display name and key for this classification.",
                      "example": "Sensitive",
                      "type": "string"
                    },
                    "staticConfig": {
                      "description": "Additional information about the classification.",
                      "properties": {
                        "classification": {
                          "description": "Additional information about the classification.\n\nThis is not an exclusive list of properties, and\nmore object fields might be returned. These fields\nare used for internal Box Shield and Box Governance\npurposes and no additional value must be derived from\nthese fields.",
                          "properties": {
                            "classificationDefinition": {
                              "description": "A longer description of the classification.",
                              "example": "Sensitive information",
                              "type": "string"
                            },
                            "colorID": {
                              "description": "An internal Box identifier used to assign a color to\na classification label.\n\nMapping between a `colorID` and a color may change\nwithout notice. Currently, the color mappings are as\nfollows.\n\n* `0`: Yellow\n* `1`: Orange\n* `2`: Watermelon red\n* `3`: Purple rain\n* `4`: Light blue\n* `5`: Dark blue\n* `6`: Light green\n* `7`: Gray",
                              "example": 4,
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "minItems": 1,
                "type": "array"
              },
              "type": {
                "description": "`enum`",
                "enum": [
                  "enum"
                ],
                "example": "enum",
                "type": "string"
              }
            },
            "type": "object"
          },
          "maxItems": 1,
          "minItems": 1,
          "type": "array"
        },
        "hidden": {
          "description": "This template is always available in web and mobile interfaces.",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "The ID of the classification template.",
          "example": "58063d82-4128-7b43-bba9-92f706befcdf",
          "type": "string"
        },
        "scope": {
          "description": "The scope of the classification template. This is in the format\n`enterprise_{id}` where the `id` is the enterprise ID.",
          "example": "enterprise_123456",
          "type": "string"
        },
        "templateKey": {
          "description": "`securityClassification-6VMVochwUWo`",
          "enum": [
            "securityClassification-6VMVochwUWo"
          ],
          "example": "securityClassification-6VMVochwUWo",
          "type": "string"
        },
        "type": {
          "description": "`metadata_template`",
          "enum": [
            "metadata_template"
          ],
          "example": "metadata_template",
          "nullable": false,
          "type": "string"
        }
      },
      "title": "Classification Template",
      "type": "object",
      "x-box-resource-id": "classification_template",
      "x-box-tag": "classifications"
    },
    "ClientError": {
      "description": "A generic error",
      "properties": {
        "code": {
          "description": "A Box-specific error code",
          "enum": [
            "created",
            "accepted",
            "no_content",
            "redirect",
            "not_modified",
            "bad_request",
            "unauthorized",
            "forbidden",
            "not_found",
            "method_not_allowed",
            "conflict",
            "precondition_failed",
            "too_many_requests",
            "internal_server_error",
            "unavailable",
            "item_name_invalid"
          ],
          "example": "item_name_invalid",
          "type": "string"
        },
        "help_url": {
          "description": "A URL that links to more information about why this error occurred.",
          "example": "http://developers.box.com/docs/#errors",
          "nullable": false,
          "type": "string"
        },
        "message": {
          "description": "A short message describing the error.",
          "example": "Method Not Allowed",
          "nullable": false,
          "type": "string"
        },
        "request_id": {
          "description": "A unique identifier for this response, which can be used\nwhen contacting Box support.",
          "example": "abcdef123456",
          "nullable": false,
          "type": "string"
        },
        "status": {
          "description": "The HTTP status of the response.",
          "example": 400,
          "format": "int32",
          "nullable": false,
          "type": "integer"
        },
        "type": {
          "description": "`error`",
          "enum": [
            "error"
          ],
          "example": "error",
          "nullable": false,
          "type": "string"
        }
      },
      "title": "Client error",
      "type": "object",
      "x-box-resource-id": "client_error"
    },
    "Collaboration": {
      "description": "Collaborations define access permissions for users and groups to files and\nfolders, similar to access control lists. A collaboration object grants a\nuser or group access to a file or folder with permissions defined by a\nspecific role.",
      "properties": {
        "acceptance_requirements_status": {
          "properties": {
            "strong_password_requirement": {
              "properties": {
                "enterprise_has_strong_password_required_for_external_users": {
                  "description": "Whether or not the enterprise that owns the content requires\na strong password to collaborate on the content.",
                  "example": true,
                  "type": "boolean"
                },
                "user_has_strong_password": {
                  "description": "Whether or not the user has a strong password set for their\naccount. The field is `null` when a strong password is not\nrequired.",
                  "example": true,
                  "type": "boolean",
                  "x-nullable": true
                }
              },
              "type": "object"
            },
            "terms_of_service_requirement": {
              "properties": {
                "is_accepted": {
                  "description": "Whether or not the terms of service have been accepted.  The\nfield is `null` when there is no terms of service required.",
                  "example": true,
                  "type": "boolean",
                  "x-nullable": true
                },
                "terms_of_service": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/TermsOfService--Mini"
                    },
                    {
                      "description": "The terms of service that must be accepted before the\ncollaboration can be accepted. The field is `null` when\nthere is no terms of service required."
                    }
                  ]
                }
              },
              "type": "object"
            },
            "two_factor_authentication_requirement": {
              "properties": {
                "enterprise_has_two_factor_auth_enabled": {
                  "description": "Whether or not the enterprise that owns the content requires\ntwo-factor authentication to be enabled in order to\ncollaborate on the content.",
                  "example": true,
                  "type": "boolean"
                },
                "user_has_two_factor_authentication_enabled": {
                  "description": "Whether or not the user has two-factor authentication\nenabled. The field is `null` when two-factor\nauthentication is not required.",
                  "example": true,
                  "type": "boolean",
                  "x-nullable": true
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "accessible_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user or group that is granted access"
            }
          ]
        },
        "acknowledged_at": {
          "description": "When the `status` of the collaboration object changed to\n`accepted` or `rejected`",
          "example": "2012-12-12T10:55:20-08:00",
          "format": "date-time",
          "type": "string"
        },
        "created_at": {
          "description": "When the collaboration object was created",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "created_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user who created the collaboration object"
            },
            {
              "example": [
                {
                  "id": 33224412
                },
                {
                  "type": "user"
                },
                {
                  "login": "dylan@example.com"
                },
                {
                  "name": "Dylan Smith"
                }
              ]
            }
          ]
        },
        "expires_at": {
          "description": "When the collaboration will expire, or `null` if no expiration\ndate is set.",
          "example": "2012-12-26T10:53:43-08:00",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "The unique identifier for this collaboration.",
          "example": "12345678",
          "type": "string"
        },
        "invite_email": {
          "description": "The email address used to invite an unregistered collaborator, if\nthey are not a registered user.",
          "example": "john@example.com",
          "type": "string",
          "x-nullable": true
        },
        "item": {
          "allOf": [
            {},
            {
              "description": "The file or folder to which access is granted. The field is\n`null` when the collaboration `status` is `pending`."
            }
          ],
          "x-nullable": true
        },
        "modified_at": {
          "description": "When the collaboration object was last modified",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "role": {
          "description": "The level of access granted.",
          "enum": [
            "editor",
            "viewer",
            "previewer",
            "uploader",
            "previewer uploader",
            "viewer uploader",
            "co-owner",
            "owner"
          ],
          "example": "editor",
          "type": "string"
        },
        "status": {
          "description": "The status of the collaboration invitation.",
          "enum": [
            "accepted",
            "pending",
            "rejected"
          ],
          "example": "accepted",
          "type": "string"
        },
        "type": {
          "description": "`collaboration`",
          "enum": [
            "collaboration"
          ],
          "example": "collaboration",
          "type": "string"
        }
      },
      "title": "Collaboration",
      "type": "object",
      "x-box-resource-id": "collaboration",
      "x-box-tag": "user_collaborations"
    },
    "CollaborationAllowlistEntries": {
      "allOf": [
        {
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "example": 3000,
              "format": "int64",
              "type": "integer"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/CollaborationAllowlistEntry"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of allowed domains for collaboration.",
      "title": "Allowed collaboration domains",
      "type": "object",
      "x-box-resource-id": "collaboration_allowlist_entries",
      "x-box-tag": "collaboration_allowlist_entries"
    },
    "CollaborationAllowlistEntry": {
      "description": "An entry that describes an approved domain for which users can collaborate\nwith files and folders in your enterprise or vice versa.",
      "properties": {
        "created_at": {
          "description": "The time the entry was created at",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "direction": {
          "description": "The direction of the collaborations to allow.",
          "enum": [
            "inbound",
            "outbound",
            "both"
          ],
          "example": "both",
          "type": "string"
        },
        "domain": {
          "description": "The whitelisted domain",
          "example": "example.com",
          "type": "string"
        },
        "enterprise": {
          "allOf": [
            {
              "description": "A representation of a Box enterprise",
              "properties": {
                "id": {
                  "description": "The unique identifier for this enterprise.",
                  "example": "11446498",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the enterprise",
                  "example": "Acme Inc.",
                  "type": "string"
                },
                "type": {
                  "description": "`enterprise`",
                  "enum": [
                    "enterprise"
                  ],
                  "example": "enterprise",
                  "type": "string"
                }
              },
              "title": "Enterprise",
              "type": "object"
            },
            {
              "description": "The enterprise this list is applied to"
            }
          ]
        },
        "id": {
          "description": "The unique identifier for this entry",
          "example": "11446498",
          "type": "string"
        },
        "type": {
          "description": "`collaboration_whitelist_entry`",
          "enum": [
            "collaboration_whitelist_entry"
          ],
          "example": "collaboration_whitelist_entry",
          "type": "string"
        }
      },
      "title": "Allowed collaboration domain",
      "type": "object",
      "x-box-resource-id": "collaboration_allowlist_entry",
      "x-box-tag": "collaboration_allowlist_entries"
    },
    "CollaborationAllowlistExemptTarget": {
      "description": "The user that is exempt from any of the restrictions\nimposed by the list of allowed collaboration domains for this enterprise.",
      "properties": {
        "created_at": {
          "description": "The time the entry was created",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "enterprise": {
          "allOf": [
            {
              "description": "A representation of a Box enterprise",
              "properties": {
                "id": {
                  "description": "The unique identifier for this enterprise.",
                  "example": "11446498",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the enterprise",
                  "example": "Acme Inc.",
                  "type": "string"
                },
                "type": {
                  "description": "`enterprise`",
                  "enum": [
                    "enterprise"
                  ],
                  "example": "enterprise",
                  "type": "string"
                }
              },
              "title": "Enterprise",
              "type": "object"
            },
            {
              "description": "The enterprise this entry belongs to"
            }
          ]
        },
        "id": {
          "description": "The unique identifier for this exemption",
          "example": "11446498",
          "type": "string"
        },
        "modified_at": {
          "description": "The time the entry was modified",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "type": {
          "description": "`collaboration_whitelist`",
          "enum": [
            "collaboration_whitelist"
          ],
          "example": "collaboration_whitelist",
          "type": "string"
        },
        "user": {
          "allOf": [
            {
              "description": "A representation of a Box enterprise",
              "properties": {
                "id": {
                  "description": "The unique identifier for this enterprise.",
                  "example": "11446498",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the enterprise",
                  "example": "Acme Inc.",
                  "type": "string"
                },
                "type": {
                  "description": "`enterprise`",
                  "enum": [
                    "enterprise"
                  ],
                  "example": "enterprise",
                  "type": "string"
                }
              },
              "title": "Enterprise",
              "type": "object"
            },
            {
              "description": "The user that has been exempt"
            }
          ]
        }
      },
      "title": "Allowed collaboration domains user exemption",
      "type": "object",
      "x-box-resource-id": "collaboration_allowlist_exempt_target",
      "x-box-tag": "collaboration_allowlist_exempt_targets"
    },
    "CollaborationAllowlistExemptTargets": {
      "allOf": [
        {
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "example": 3000,
              "format": "int64",
              "type": "integer"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/CollaborationAllowlistExemptTarget"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of users that is exempt from any of the restrictions\nimposed by the list of allowed collaboration domains for this enterprise.",
      "title": "Allowed collaboration domains user exemptions",
      "type": "object",
      "x-box-resource-id": "collaboration_allowlist_exempt_targets",
      "x-box-tag": "collaboration_allowlist_exempt_targets"
    },
    "Collaborations": {
      "allOf": [
        {
          "description": "The part of an API response that describes pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 2000,
              "format": "int64",
              "type": "integer"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "items": {
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "example": "type",
                    "type": "string"
                  },
                  "direction": {
                    "description": "The direction to order by, either ascending or descending",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "example": "ASC",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 5000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/Collaboration"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of collaborations",
      "title": "Collaborations",
      "type": "object",
      "x-box-resource-id": "collaborations",
      "x-box-tag": "user_collaborations"
    },
    "Collection": {
      "description": "A collection of items, including files and folders.\n\nCurrently, the only collection available\nis the `favorites` collection.\n\nThe contents of a collection can be explored in a\nsimilar way to which the contents of a folder is\nexplored.",
      "properties": {
        "collection_type": {
          "description": "The type of the collection. This is used to\ndetermine the proper visual treatment for\ncollections.",
          "enum": [
            "favorites"
          ],
          "example": "favorites",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for this collection.",
          "example": "11446498",
          "type": "string"
        },
        "name": {
          "description": "The name of the collection.",
          "enum": [
            "Favorites"
          ],
          "example": "Favorites",
          "type": "string"
        },
        "type": {
          "description": "`collection`",
          "enum": [
            "collection"
          ],
          "example": "collection",
          "type": "string"
        }
      },
      "title": "Collection",
      "type": "object",
      "x-box-resource-id": "collection",
      "x-box-tag": "collections"
    },
    "Collections": {
      "allOf": [
        {
          "description": "The part of an API response that describes pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 2000,
              "format": "int64",
              "type": "integer"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "items": {
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "example": "type",
                    "type": "string"
                  },
                  "direction": {
                    "description": "The direction to order by, either ascending or descending",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "example": "ASC",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 5000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/Collection"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of collections",
      "title": "Collections",
      "type": "object",
      "x-box-resource-id": "collections",
      "x-box-tag": "collections"
    },
    "Comment": {
      "allOf": [
        {
          "$ref": "#/definitions/Comment--Base"
        },
        {
          "properties": {
            "created_at": {
              "description": "The time this comment was created",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "created_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "A mini user object representing the author of the\ncomment"
                }
              ]
            },
            "is_reply_comment": {
              "description": "Whether or not this comment is a reply to another\ncomment",
              "example": true,
              "type": "boolean"
            },
            "item": {
              "allOf": [
                {
                  "description": "The bare basic reference for an object",
                  "properties": {
                    "id": {
                      "description": "The unique identifier for this object",
                      "example": "11446498",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type for this object",
                      "example": "file",
                      "type": "string"
                    }
                  },
                  "title": "Reference",
                  "type": "object"
                },
                {
                  "description": "The file this comment was placed on"
                }
              ]
            },
            "message": {
              "description": "The text of the comment, as provided by the user",
              "example": "@Aaron Levie these tigers are cool!",
              "type": "string"
            },
            "modified_at": {
              "description": "The time this comment was last modified",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            }
          }
        }
      ],
      "description": "Standard representation of a comment.",
      "title": "Comment",
      "type": "object",
      "x-box-resource-id": "comment",
      "x-box-variant": "standard"
    },
    "Comment--Base": {
      "description": "Base representation of a comment.",
      "properties": {
        "id": {
          "description": "The unique identifier for this comment.",
          "example": "11446498",
          "type": "string"
        },
        "type": {
          "description": "`comment`",
          "enum": [
            "comment"
          ],
          "example": "comment",
          "type": "string"
        }
      },
      "title": "Comment (Base)",
      "type": "object",
      "x-box-resource-id": "comment--base",
      "x-box-sanitized": true,
      "x-box-tag": "comments",
      "x-box-variant": "base",
      "x-box-variants": [
        "base",
        "standard",
        "full"
      ]
    },
    "Comment--Full": {
      "allOf": [
        {
          "$ref": "#/definitions/Comment"
        },
        {
          "properties": {
            "tagged_message": {
              "description": "The string representing the comment text with\n@mentions included. @mention format is @[id:username]\nwhere `id` is user's Box ID and `username` is\ntheir display name.",
              "example": "@[1234567:Aaron Levie] these tigers are cool!",
              "type": "string"
            }
          }
        }
      ],
      "description": "Comments are messages created on files. Comments\ncan be made independently or created as responses to other\ncomments",
      "title": "Comment (Full)",
      "type": "object",
      "x-box-resource-id": "comment--full",
      "x-box-variant": "full"
    },
    "Comments": {
      "allOf": [
        {
          "description": "The part of an API response that describes pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 2000,
              "format": "int64",
              "type": "integer"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "items": {
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "example": "type",
                    "type": "string"
                  },
                  "direction": {
                    "description": "The direction to order by, either ascending or descending",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "example": "ASC",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 5000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/Comment"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of comments",
      "title": "Comments",
      "type": "object",
      "x-box-resource-id": "comments",
      "x-box-tag": "comments"
    },
    "ConflictError": {
      "allOf": [
        {
          "$ref": "#/definitions/ClientError"
        },
        {
          "properties": {
            "context_info": {
              "properties": {
                "conflicts": {
                  "description": "A list of the file conflicts that caused this error.",
                  "items": {
                    "$ref": "#/definitions/FileConflict"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        }
      ],
      "description": "The error that occurs when a file can not be created due\nto a conflict.",
      "title": "Conflict error",
      "type": "object",
      "x-box-resource-id": "conflict_error",
      "x-box-tag": "uploads"
    },
    "DevicePinner": {
      "description": "Device pins allow enterprises to control what devices can\nuse native Box applications.",
      "properties": {
        "created_at": {
          "description": "The time the device pin was created",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for this device pin.",
          "example": "11446498",
          "type": "string"
        },
        "modified_at": {
          "description": "The time the device pin was modified",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "owned_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user that the device pin belongs to"
            }
          ]
        },
        "product_name": {
          "description": "The type of device being pinned",
          "example": "iPad",
          "type": "string"
        },
        "type": {
          "description": "`device_pinner`",
          "enum": [
            "device_pinner"
          ],
          "example": "device_pinner",
          "type": "string"
        }
      },
      "title": "Device pinner",
      "type": "object",
      "x-box-resource-id": "device_pinner",
      "x-box-tag": "device_pinners"
    },
    "DevicePinners": {
      "description": "A list of device pins",
      "properties": {
        "entries": {
          "items": {
            "$ref": "#/definitions/DevicePinner"
          },
          "type": "array"
        },
        "limit": {
          "default": 100,
          "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed.",
          "example": 200,
          "format": "int64",
          "type": "integer"
        },
        "next_marker": {
          "description": "The marker for the start of the next page of results.",
          "example": 3000,
          "format": "int64",
          "type": "integer"
        },
        "order": {
          "description": "The order by which items are returned.",
          "items": {
            "description": "The order in which a pagination is ordered",
            "properties": {
              "by": {
                "description": "The field that is ordered by",
                "enum": [
                  "id"
                ],
                "example": "id",
                "type": "string"
              },
              "direction": {
                "description": "The direction to order by, either ascending or descending",
                "enum": [
                  "asc",
                  "desc"
                ],
                "example": "asc",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "title": "Device pinners",
      "type": "object",
      "x-box-resource-id": "device_pinners",
      "x-box-tag": "device_pinners"
    },
    "EmailAlias": {
      "description": "An email alias for a user.",
      "properties": {
        "email": {
          "description": "The email address",
          "example": "alias@example.com",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for this object",
          "example": "11446498",
          "type": "string"
        },
        "is_confirmed": {
          "description": "Whether the email address has been confirmed",
          "example": true,
          "type": "boolean"
        },
        "type": {
          "description": "`email_alias`",
          "enum": [
            "email_alias"
          ],
          "example": "email_alias",
          "type": "string"
        }
      },
      "title": "Email alias",
      "type": "object",
      "x-box-resource-id": "email_alias",
      "x-box-tag": "email_aliases"
    },
    "EmailAliases": {
      "description": "A list of email aliases",
      "properties": {
        "entries": {
          "items": {
            "$ref": "#/definitions/EmailAlias"
          },
          "type": "array"
        },
        "total_count": {
          "description": "The number of email aliases.",
          "example": 5000,
          "format": "int64",
          "type": "integer"
        }
      },
      "title": "Email aliases",
      "type": "object",
      "x-box-resource-id": "email_aliases",
      "x-box-tag": "email_aliases"
    },
    "Event": {
      "description": "The description of an event that happened within Box",
      "properties": {
        "additional_details": {
          "description": "This object provides additional information about the event if available.\n\nThis can include how a user performed an event as well as additional\ninformation to correlate an event to external KeySafe logs. Not all events\nhave an `additional_details` object.  This object is only available in the\nEnterprise Events.",
          "example": {
            "key": "value"
          },
          "type": "object"
        },
        "created_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user that performed the action represented by the event.\nSome events may be performed by users not logged into Box.\nIn that case, not all attributes of the object are populated and the\nevent is attributed to a unknown user (`user_id = 2`)"
            }
          ]
        },
        "event_id": {
          "description": "The ID of the event object. You can use this to detect duplicate events",
          "example": "f82c3ba03e41f7e8a7608363cc6c0390183c3f83",
          "type": "string"
        },
        "event_type": {
          "allOf": [
            {
              "description": "An event type that can trigger an event",
              "enum": [
                "ACCESS_GRANTED",
                "ACCESS_REVOKED",
                "ADD_DEVICE_ASSOCIATION",
                "ADD_LOGIN_ACTIVITY_DEVICE",
                "ADMIN_LOGIN",
                "APPLICATION_CREATED",
                "APPLICATION_PUBLIC_KEY_ADDED",
                "APPLICATION_PUBLIC_KEY_DELETED",
                "CHANGE_ADMIN_ROLE",
                "CHANGE_FOLDER_PERMISSION",
                "COLLABORATION_ACCEPT",
                "COLLABORATION_EXPIRATION",
                "COLLABORATION_INVITE",
                "COLLABORATION_REMOVE",
                "COLLABORATION_ROLE_CHANGE",
                "COLLAB_ADD_COLLABORATOR",
                "COLLAB_INVITE_COLLABORATOR",
                "COLLAB_REMOVE_COLLABORATOR",
                "COLLAB_ROLE_CHANGE",
                "COMMENT_CREATE",
                "COMMENT_DELETE",
                "CONTENT_ACCESS",
                "CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY",
                "CONTENT_WORKFLOW_AUTOMATION_ADD",
                "CONTENT_WORKFLOW_AUTOMATION_DELETE",
                "CONTENT_WORKFLOW_POLICY_ADD",
                "CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION",
                "CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION",
                "COPY",
                "DATA_RETENTION_CREATE_RETENTION",
                "DATA_RETENTION_REMOVE_RETENTION",
                "DELETE",
                "DELETE_USER",
                "DEVICE_TRUST_CHECK_FAILED",
                "DOWNLOAD",
                "EDIT",
                "EDIT_USER",
                "EMAIL_ALIAS_CONFIRM",
                "EMAIL_ALIAS_REMOVE",
                "ENABLE_TWO_FACTOR_AUTH",
                "ENTERPRISE_APP_AUTHORIZATION_UPDATE",
                "FAILED_LOGIN",
                "FILE_MARKED_MALICIOUS",
                "FILE_WATERMARKED_DOWNLOAD",
                "GROUP_ADD_ITEM",
                "GROUP_ADD_USER",
                "GROUP_CREATION",
                "GROUP_DELETION",
                "GROUP_EDITED",
                "GROUP_REMOVE_ITEM",
                "GROUP_REMOVE_USER",
                "ITEM_COPY",
                "ITEM_CREATE",
                "ITEM_DOWNLOAD",
                "ITEM_MAKE_CURRENT_VERSION",
                "ITEM_MODIFY",
                "ITEM_MOVE",
                "ITEM_OPEN",
                "ITEM_PREVIEW",
                "ITEM_RENAME",
                "ITEM_SHARED",
                "ITEM_SHARED_CREATE",
                "ITEM_SHARED_UNSHARE",
                "ITEM_SHARED_UPDATE",
                "ITEM_SYNC",
                "ITEM_TRASH",
                "ITEM_UNDELETE_VIA_TRASH",
                "ITEM_UNSYNC",
                "ITEM_UPLOAD",
                "LEGAL_HOLD_ASSIGNMENT_CREATE",
                "LEGAL_HOLD_ASSIGNMENT_DELETE",
                "LEGAL_HOLD_POLICY_CREATE",
                "LEGAL_HOLD_POLICY_DELETE",
                "LEGAL_HOLD_POLICY_UPDATE",
                "LOCK",
                "LOCK_CREATE",
                "LOCK_DESTROY",
                "LOGIN",
                "MASTER_INVITE_ACCEPT",
                "MASTER_INVITE_REJECT",
                "METADATA_INSTANCE_CREATE",
                "METADATA_INSTANCE_DELETE",
                "METADATA_INSTANCE_UPDATE",
                "METADATA_TEMPLATE_CREATE",
                "METADATA_TEMPLATE_DELETE",
                "METADATA_TEMPLATE_UPDATE",
                "MOVE",
                "NEW_USER",
                "PREVIEW",
                "REMOVE_DEVICE_ASSOCIATION",
                "REMOVE_LOGIN_ACTIVITY_DEVICE",
                "RENAME",
                "RETENTION_POLICY_ASSIGNMENT_ADD",
                "SHARE",
                "SHARE_EXPIRATION",
                "SHIELD_ALERT",
                "STORAGE_EXPIRATION",
                "TAG_ITEM_CREATE",
                "TASK_ASSIGNMENT_CREATE",
                "TASK_ASSIGNMENT_DELETE",
                "TASK_ASSIGNMENT_UPDATE",
                "TASK_CREATE",
                "TASK_UPDATE",
                "TERMS_OF_SERVICE_ACCEPT",
                "TERMS_OF_SERVICE_REJECT",
                "UNDELETE",
                "UNLOCK",
                "UNSHARE",
                "UPDATE_COLLABORATION_EXPIRATION",
                "UPDATE_SHARE_EXPIRATION",
                "UPLOAD",
                "USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE",
                "WATERMARK_LABEL_CREATE",
                "WATERMARK_LABEL_DELETE"
              ],
              "example": "FILE_MARKED_MALICIOUS",
              "title": "Event Type",
              "type": "string"
            },
            {
              "description": "The event type that triggered this event"
            }
          ]
        },
        "session_id": {
          "description": "The session of the user that performed the action. Not all events will\npopulate this attribute.",
          "example": "70090280850c8d2a1933c1",
          "type": "string"
        },
        "source": {
          "allOf": [
            {},
            {
              "description": "The item that triggered this event"
            }
          ]
        },
        "type": {
          "description": "`event`",
          "example": "event",
          "type": "string"
        }
      },
      "title": "Event",
      "type": "object",
      "x-box-resource-id": "event",
      "x-box-tag": "events"
    },
    "EventSource": {
      "description": "The source file or folder that triggered an event in\nthe event stream.",
      "properties": {
        "item_id": {
          "description": "The unique identifier that represents the\nitem.\n",
          "example": "560284318361",
          "nullable": false,
          "type": "string"
        },
        "item_name": {
          "description": "The name of the item.\n",
          "example": "report.pdf",
          "nullable": false,
          "type": "string"
        },
        "item_type": {
          "description": "The type of the item that the event\nrepresents. Can be `file` or `folder`.\n",
          "enum": [
            "file",
            "folder"
          ],
          "example": "file",
          "nullable": false,
          "type": "string"
        },
        "owned_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user who owns this item."
            },
            {
              "nullable": false
            }
          ]
        },
        "parent": {
          "allOf": [
            {
              "$ref": "#/definitions/Folder--Mini"
            },
            {
              "description": "The optional folder that this folder is located within.\n\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
            }
          ],
          "x-nullable": true
        }
      },
      "title": "Event source",
      "type": "object",
      "x-box-resource-id": "event_source"
    },
    "Events": {
      "description": "A list of event objects",
      "properties": {
        "chunk_size": {
          "description": "The number of events returned in this response.",
          "example": 2,
          "format": "int64",
          "type": "integer"
        },
        "entries": {
          "items": {
            "$ref": "#/definitions/Event"
          },
          "type": "array"
        },
        "next_stream_position": {
          "description": "The stream position of the start of the next page (chunk)\nof events.",
          "example": "1152922976252290886",
          "type": "string"
        }
      },
      "title": "Events",
      "type": "object",
      "x-box-resource-id": "events",
      "x-box-tag": "events"
    },
    "File": {
      "allOf": [
        {
          "$ref": "#/definitions/File--Mini"
        },
        {
          "properties": {
            "content_created_at": {
              "description": "The date and time at which this file was originally\ncreated, which might be before it was uploaded to Box.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "content_modified_at": {
              "description": "The date and time at which this file was last updated,\nwhich might be before it was uploaded to Box.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "created_at": {
              "description": "The date and time when the file was created on Box.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": false,
              "type": "string"
            },
            "created_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who created this file"
                }
              ]
            },
            "description": {
              "description": "The optional description of this file",
              "example": "Contract for Q1 renewal",
              "maxLength": 256,
              "nullable": false,
              "type": "string"
            },
            "item_status": {
              "description": "Defines if this item has been deleted or not.\n\n* `active` when the item has is not in the trash\n* `trashed` when the item has been moved to the trash but not deleted\n* `deleted` when the item has been permanently deleted.",
              "enum": [
                "active",
                "trashed",
                "deleted"
              ],
              "example": "active",
              "nullable": false,
              "type": "string"
            },
            "modified_at": {
              "description": "The date and time when the file was last updated on Box.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": false,
              "type": "string"
            },
            "modified_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who last modified this file"
                },
                {
                  "nullable": false
                }
              ]
            },
            "owned_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who owns this file"
                },
                {
                  "nullable": false
                }
              ]
            },
            "parent": {
              "allOf": [
                {
                  "$ref": "#/definitions/Folder--Mini"
                },
                {
                  "description": "The folder that this file is located within."
                }
              ],
              "nullable": true
            },
            "path_collection": {
              "allOf": [
                {
                  "description": "A list of parent folders for an item.",
                  "properties": {
                    "entries": {
                      "description": "The parent folders for this item",
                      "items": {
                        "$ref": "#/definitions/Folder--Mini"
                      },
                      "nullable": false,
                      "type": "array"
                    },
                    "total_count": {
                      "description": "The number of folders in this list.",
                      "example": 1,
                      "format": "int64",
                      "nullable": false,
                      "type": "integer"
                    }
                  },
                  "title": "Path collection",
                  "type": "object"
                },
                {
                  "description": "The tree of folders that this file is contained in,\nstarting at the root."
                },
                {
                  "nullable": false
                }
              ]
            },
            "purged_at": {
              "description": "The time at which this file is expected to be purged\nfrom the trash.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "shared_link": {
              "allOf": [
                {
                  "description": "Shared links provide direct, read-only access to files or folder on Box.\n\nShared links with open access level allow anyone with the URL\nto access the item, while shared links with company or collaborators access\nlevels can only be accessed by appropriately authenticated Box users.",
                  "properties": {
                    "access": {
                      "description": "The access level for this shared link.\n\n* `open` - provides access to this item to anyone with this link\n* `company` - only provides access to this item to people the same company\n* `collaborators` - only provides access to this item to people who are\n   collaborators on this item\n\nIf this field is omitted when creating the shared link, the access level\nwill be set to the default access level specified by the enterprise admin.",
                      "enum": [
                        "open",
                        "company",
                        "collaborators"
                      ],
                      "example": "open",
                      "nullable": false,
                      "type": "string"
                    },
                    "download_count": {
                      "description": "The number of times this item has been downloaded.",
                      "example": 3,
                      "nullable": false,
                      "type": "integer"
                    },
                    "download_url": {
                      "description": "A URL that can be used to download the file. This URL can be used in\na browser to download the file. This URL includes the file\nextension so that the file will be saved with the right file type.\n\nThis property will be `null` for folders.",
                      "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                      "format": "url",
                      "nullable": true,
                      "type": "string",
                      "x-box-premium-feature": true
                    },
                    "effective_access": {
                      "description": "The effective access level for the shared link. This can be a more\nrestrictive access level than the value in the `access` field when the\nenterprise settings restrict the allowed access levels.",
                      "enum": [
                        "open",
                        "company",
                        "collaborators"
                      ],
                      "example": "company",
                      "nullable": false,
                      "type": "string"
                    },
                    "effective_permission": {
                      "description": "The effective permissions for this shared link.",
                      "enum": [
                        "can_download",
                        "can_preview"
                      ],
                      "example": "can_download",
                      "nullable": false,
                      "type": "string"
                    },
                    "is_password_enabled": {
                      "description": "Defines if the shared link requires a password to access the item.",
                      "example": true,
                      "nullable": false,
                      "type": "boolean"
                    },
                    "permissions": {
                      "description": "Defines if this link allows a user to preview and download an item.",
                      "properties": {
                        "can_download": {
                          "description": "Defines if the shared link allows for the item to be downloaded. For\nshared links on folders, this also applies to any items in the folder.\n\nThis value can be set to `true` when the effective access level is\nset to `open` or `company`, not `collaborators`.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_preview": {
                          "description": "Defines if the shared link allows for the item to be previewed.\n\nThis value is always `true`. For shared links on folders this also\napplies to any items in the folder.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "preview_count": {
                      "description": "The number of times this item has been previewed.",
                      "example": 3,
                      "nullable": false,
                      "type": "integer"
                    },
                    "unshared_at": {
                      "description": "The date and time when this link will be unshared. This field can only be\nset by users with paid accounts.",
                      "example": "2018-04-13T13:53:23-07:00",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL that can be used to access the item on Box.\n\nThis URL will display the item in Box's preview UI where the file\ncan be downloaded if allowed.\n\nThis URL will continue to work even when a custom `vanity_url`\nhas been set for this shared link.",
                      "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                      "format": "url",
                      "nullable": false,
                      "type": "string"
                    },
                    "vanity_name": {
                      "description": "The custom name of a shared link, as used in the `vanity_url` field.",
                      "example": "my_url",
                      "nullable": true,
                      "type": "string"
                    },
                    "vanity_url": {
                      "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom\nURLs can only be created or modified in the Box Web application.",
                      "example": "https://acme.app.box.com/v/my_url/",
                      "format": "url",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "title": "Shared link",
                  "type": "object"
                },
                {
                  "description": "The shared link for this file. This will be\n`null` if no shared link has been created for this\nfile."
                },
                {
                  "nullable": true
                }
              ]
            },
            "size": {
              "description": "The file size in bytes. Be careful parsing this integer as it can\nget very large and cause an integer overflow.",
              "example": 629644,
              "nullable": false,
              "type": "integer"
            },
            "trashed_at": {
              "description": "The time at which this file was put in the trash.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          }
        }
      ],
      "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
      "title": "File",
      "type": "object",
      "x-box-resource-id": "file",
      "x-box-variant": "standard"
    },
    "File--Base": {
      "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
      "properties": {
        "etag": {
          "description": "The HTTP `etag` of this file. This can be used within some API\nendpoints in the `If-Match` and `If-None-Match` headers to only\nperform changes on the file if (no) changes have happened.",
          "example": "1",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
          "example": "12345",
          "nullable": false,
          "type": "string"
        },
        "type": {
          "description": "`file`",
          "enum": [
            "file"
          ],
          "example": "file",
          "nullable": false,
          "type": "string"
        }
      },
      "title": "File (Base)",
      "type": "object",
      "x-box-resource-id": "file--base",
      "x-box-sanitized": true,
      "x-box-tag": "files",
      "x-box-variant": "base",
      "x-box-variants": [
        "base",
        "mini",
        "standard",
        "full"
      ]
    },
    "File--Full": {
      "allOf": [
        {
          "$ref": "#/definitions/File"
        },
        {
          "properties": {
            "tags": {
              "allOf": [
                {
                  "description": "The tags for this item. These tags are shown in\nthe Box web app and mobile apps next to an item.\n\nTo add or remove a tag, retrieve the item's current tags,\nmodify them, and then update this field.\n\nThere is a limit of 100 tags per item, and 10,000\nunique tags per enterprise.",
                  "example": [
                    "approved"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 100,
                  "minItems": 1,
                  "type": "array"
                },
                {
                  "nullable": false
                }
              ]
            },
            "allowed_invitee_roles": {
              "description": "A list of the types of roles that user can be invited at\nwhen sharing this file.",
              "example": [
                "editor"
              ],
              "items": {
                "enum": [
                  "editor",
                  "viewer",
                  "previewer",
                  "uploader",
                  "previewer uploader",
                  "viewer uploader",
                  "co-owner"
                ],
                "type": "string"
              },
              "nullable": false,
              "type": "array"
            },
            "classification": {
              "allOf": [
                {
                  "description": "The classification applied to an item",
                  "properties": {
                    "color": {
                      "description": "The color that is used to display the\nclassification label in a user-interface. Colors are defined by the admin\nor co-admin who created the classification in the Box web app.",
                      "example": "#FF0000",
                      "type": "string"
                    },
                    "definition": {
                      "description": "An explanation of the meaning of this classification.",
                      "example": "Content that should not be shared outside the company.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the classification",
                      "example": "Top Secret",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "description": "Details about the classification applied to this file."
                },
                {
                  "nullable": true
                }
              ]
            },
            "comment_count": {
              "description": "The number of comments on this file",
              "example": 10,
              "type": "integer"
            },
            "expires_at": {
              "description": "When the file will automatically be deleted",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "expiring_embed_link": {
              "allOf": [
                {
                  "allOf": [
                    {
                      "description": "The basics of an access token",
                      "properties": {
                        "access_token": {
                          "description": "The requested access token.",
                          "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
                          "format": "token",
                          "type": "string"
                        },
                        "expires_in": {
                          "description": "The time in seconds in seconds by which this token will expire.",
                          "example": 3600,
                          "format": "int64",
                          "type": "integer"
                        },
                        "restricted_to": {
                          "description": "The permissions that this access token permits,\nproviding a list of resources (files, folders, etc)\nand the scopes permitted for each of those resources.",
                          "items": {
                            "$ref": "#/definitions/FileScope"
                          },
                          "type": "array"
                        },
                        "token_type": {
                          "description": "The type of access token returned.",
                          "enum": [
                            "bearer"
                          ],
                          "example": "bearer",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "url": {
                          "description": "The actual expiring embed URL for this file, constructed\nfrom the file ID and access tokens specified in this object.",
                          "example": "https://cloud.app.box.com/preview/expiring_embed/...",
                          "format": "url",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "An expiring Box Embed Link.",
                  "title": "Expiring embed link",
                  "type": "object"
                },
                {
                  "description": "Requesting this field creates an expiring Box Embed URL for an\nembedded preview session in an `iframe`.\n\nThis URL will expire after 60 seconds and the session will\nexpire after 60 minutes.\n\nNot all file types are supported for these embed URLs. Box Embed\nis not optimized for mobile browsers and should not be used in web\nexperiences designed for mobile devices. Many UI elements, like\nthe **download** and **print** options might not show in mobile\nbrowsers."
                }
              ]
            },
            "extension": {
              "description": "Indicates the (optional) file extension for this file. By default,\nthis is set to an empty string.",
              "example": "pdf",
              "type": "string"
            },
            "has_collaborations": {
              "description": "Specifies if this file has any other collaborators.",
              "example": true,
              "nullable": false,
              "type": "boolean"
            },
            "is_externally_owned": {
              "description": "Specifies if this file is owned by a user outside of the\nauthenticated enterprise.",
              "example": true,
              "nullable": false,
              "type": "boolean"
            },
            "is_package": {
              "description": "Indicates if the file is a package. Packages are commonly used\nby Mac Applications and can include iWork files.",
              "example": true,
              "type": "boolean"
            },
            "lock": {
              "allOf": [
                {
                  "description": "The lock held on a file. A lock prevents a file from being moved,\nrenamed, or otherwise changed by anyone else than the user who created the\nlock.",
                  "properties": {
                    "created_at": {
                      "description": "The time this lock was created at.",
                      "example": "2012-12-12T10:53:43-08:00",
                      "format": "date-time",
                      "type": "string"
                    },
                    "created_by": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/User--Mini"
                        },
                        {
                          "description": "The user who created the lock."
                        }
                      ]
                    },
                    "expired_at": {
                      "description": "The time this lock is to expire at, which might be in the past.",
                      "example": "2012-12-12T10:53:43-08:00",
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "description": "The unique identifier for this lock",
                      "example": "11446498",
                      "type": "string"
                    },
                    "is_download_prevented": {
                      "description": "Whether or not the file can be downloaded while locked.",
                      "example": true,
                      "type": "boolean"
                    },
                    "type": {
                      "description": "`lock`",
                      "enum": [
                        "lock"
                      ],
                      "example": "lock",
                      "type": "string"
                    }
                  },
                  "title": "Lock",
                  "type": "object"
                },
                {
                  "description": "The lock held on this file. If there is no lock, this can either\nbe `null` or have a timestamp in the past."
                }
              ],
              "nullable": true
            },
            "metadata": {
              "allOf": [
                {
                  "additionalProperties": {
                    "additionalProperties": {
                      "$ref": "#/definitions/Metadata"
                    },
                    "description": "A list of metadata instances, nested within key-value pairs of their `scope`\nand `templateKey`.",
                    "example": {
                      "marketingCollateral": {
                        "$canEdit": true,
                        "$id": "01234500-12f1-1234-aa12-b1d234cb567e",
                        "$parent": "folder_59449484661",
                        "$scope": "enterprise_27335",
                        "$template": "marketingCollateral",
                        "$type": "properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0",
                        "$typeVersion": 2,
                        "$version": 1
                      }
                    },
                    "type": "object"
                  },
                  "description": "A list of metadata instances, nested within key-value pairs of their `scope`\nand `templateKey`.\n\nTo access the metadata for a file or folder, first use the\nmetadata endpoints to determine the metadata templates available to your\nenterprise.\n\nThen use the `GET /files/:id` or `GET /folder/:id`\nendpoint with the `fields` query parameter to get\nthe metadata by ID.\n\nTo request a metadata instance for a particular `scope` and `templateKey`\nuse the following format for the `fields` parameter:\n`metadata.<scope>.<templateKey>`\n\nFor example, `?fields=metadata.enterprise_27335.marketingCollateral`.",
                  "example": {
                    "enterprise_27335": {
                      "marketingCollateral": {
                        "$canEdit": true,
                        "$id": "01234500-12f1-1234-aa12-b1d234cb567e",
                        "$parent": "folder_59449484661",
                        "$scope": "enterprise_27335",
                        "$template": "marketingCollateral",
                        "$type": "properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0",
                        "$typeVersion": 2,
                        "$version": 1
                      }
                    }
                  },
                  "title": "Item metadata instances",
                  "type": "object"
                },
                {
                  "description": "An object containing the metadata instances that have been\nattached to this file.\n\nEach metadata instance is uniquely identified by its `scope` and\n`templateKey`. There can only be one instance of any metadata\ntemplate attached to each file. Each metadata instance is nested\nwithin an object with the `templateKey` as the key, which again\nitself is nested in an object with the `scope` as the key."
                }
              ]
            },
            "permissions": {
              "allOf": [
                {
                  "allOf": [
                    {
                      "description": "The permissions that the authenticated user has for an item.",
                      "properties": {
                        "can_delete": {
                          "description": "Specifies if the current user can delete this item.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_download": {
                          "description": "Specifies if the current user can download this item.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_invite_collaborator": {
                          "description": "Specifies if the current user can invite new\nusers to collaborate on this item, and if the user can\nupdate the role of a user already collaborated on this\nitem.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_rename": {
                          "description": "Specifies if the user can rename this item.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_set_share_access": {
                          "description": "Specifies if the user can change the access level of an\nexisting shared link on this item.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_share": {
                          "description": "Specifies if the user can create a shared link for this item.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "can_annotate": {
                          "description": "Specifies if the user can place annotations on this file.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_comment": {
                          "description": "Specifies if the user can place comments on this file.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_preview": {
                          "description": "Specifies if the user can preview this file.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_upload": {
                          "description": "Specifies if the user can upload a new version of this file.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_view_annotations_all": {
                          "description": "Specifies if the user view all annotations placed on this file",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_view_annotations_self": {
                          "description": "Specifies if the user view annotations placed by themselves\non this file",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        }
                      }
                    }
                  ],
                  "description": "The permissions that the authenticated user has for a file.",
                  "type": "object"
                },
                {
                  "description": "Describes the permissions that the current user has\nfor this file."
                },
                {
                  "nullable": false
                }
              ]
            },
            "representations": {
              "allOf": [
                {
                  "description": "A list of file representations",
                  "properties": {
                    "entries": {
                      "description": "A list of files",
                      "items": {
                        "description": "A file representation",
                        "properties": {
                          "info": {
                            "description": "An object containing the URL that can be used to fetch more info\non this representation.",
                            "properties": {
                              "url": {
                                "description": "The API URL that can be used to get more info on this file\nrepresentation. Make sure to make an authenticated API call\nto this endpoint.",
                                "example": "https://api.box.com/2.0/internal_files/123/versions/345/representations/png_paged_2048x2048",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "content": {
                            "description": "An object containing the URL that can be used to actually fetch\nthe representation.",
                            "properties": {
                              "url_template": {
                                "description": "The download URL that can be used to fetch the representation.\nMake sure to make an authenticated API call to this endpoint.\n\nThis URL is a template and will require the `{+asset_path}` to\nbe replaced by a path. In general, for unpaged representations\nit can be replaced by an empty string.\n\nFor paged representations, replace the `{+asset_path}` with the\npage to request plus the extension for the file, for example\n`1.pdf`.\n\nWhen requesting the download URL the following additional\nquery params can be passed along.\n\n* `set_content_disposition_type` - Sets the\n`Content-Disposition` header in the API response with the\nspecified disposition type of either `inline` or `attachment`.\nIf not supplied, the `Content-Disposition` header is not\nincluded in the response.\n\n* `set_content_disposition_filename` - Allows the application to\n  define the representation's file name used in the\n  `Content-Disposition` header.  If not defined, the filename\n  is derived from the source file name in Box combined with the\n  extension of the representation.",
                                "example": "https://dl.boxcloud.com/api/2.0/internal_files/123/versions/345/representations/png_paged_2048x2048/content/{+asset_path}?watermark_content=4567",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "properties": {
                            "description": "An object containing the size and type of this presentation.",
                            "properties": {
                              "dimensions": {
                                "description": "The width by height size of this representation in pixels.",
                                "example": "2048x2048",
                                "format": "<width>x<height>",
                                "type": "string"
                              },
                              "paged": {
                                "description": "Indicates if the representation is build up out of multiple\npages.",
                                "example": true,
                                "type": "boolean"
                              },
                              "thumb": {
                                "description": "Indicates if the representation can be used as a thumbnail of\nthe file.",
                                "example": true,
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "representation": {
                            "description": "Indicates the file type of the returned representation.",
                            "example": "png",
                            "type": "string"
                          },
                          "status": {
                            "description": "An object containing the status of this representation.",
                            "properties": {
                              "state": {
                                "description": "The status of the representation.\n\n* `success` defines the representation as ready to be viewed.\n* `viewable` defines a video to be ready for viewing.\n* `pending` defines the representation as to be generated. Retry\n  this endpoint to re-check the status.\n* `none` defines that the representation will be created when\n  requested. Request the URL defined in the `info` object to\n  trigger this generation.",
                                "enum": [
                                  "success",
                                  "viewable",
                                  "pending",
                                  "none"
                                ],
                                "example": "success",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "title": "Representations",
                  "type": "object"
                },
                {
                  "description": "A list of representations for a file that can be used to\ndisplay a placeholder of the file in your application. By default\nthis returns all representations and we recommend using the\n`X-Rep-Hints` header to further customize the desired\nrepresentations."
                }
              ]
            },
            "uploader_display_name": {
              "allOf": [
                {
                  "description": "The display name of the user that uploaded the file. In most cases\nthis is the name of the logged in user at the time of upload.\n\nIf this file was uploaded by a logged out user and an email address\nwas provided on upload, then this field will return that email address.\n\nIf this file was uploaded using a **File Request form** then this field\nwill be set to return a value of `File Request`. No email address will\nbe added.\n\nIn all other anonymous cases where no email was provided this field\nwill default to a value of \"Someone\".",
                  "example": "Ellis Wiggins",
                  "nullable": false,
                  "title": "Uploader display name",
                  "type": "string"
                }
              ]
            },
            "version_number": {
              "description": "The version number of this file",
              "example": "1",
              "type": "string"
            },
            "watermark_info": {
              "allOf": [
                {
                  "description": "Details about the watermark applied to this item",
                  "properties": {
                    "is_watermarked": {
                      "description": "Specifies if this item has a watermark applied.",
                      "example": true,
                      "nullable": false,
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                {
                  "description": "Details about the watermark applied to this file"
                }
              ]
            }
          }
        }
      ],
      "description": "A full representation of a file, as can be returned from any\nfile API endpoints by default",
      "title": "File (Full)",
      "type": "object",
      "x-box-resource-id": "file--full",
      "x-box-variant": "full"
    },
    "File--Mini": {
      "allOf": [
        {
          "$ref": "#/definitions/File--Base"
        },
        {
          "properties": {
            "file_version": {
              "allOf": [
                {
                  "$ref": "#/definitions/FileVersion--Mini"
                },
                {
                  "description": "The information about the current version of the file."
                }
              ]
            },
            "name": {
              "description": "The name of the file",
              "example": "Contract.pdf",
              "type": "string"
            },
            "sequence_id": {
              "allOf": [
                {
                  "description": "A numeric identifier that represents the most recent user event\nthat has been applied to this item.\n\nThis can be used in combination with the `GET /events`-endpoint\nto filter out user events that would have occurred before this\nidentifier was read.\n\nAn example would be where a Box Drive-like application\nwould fetch an item via the API, and then listen to incoming\nuser events for changes to the item. The application would\nignore any user events where the `sequence_id` in the event\nis smaller than or equal to the `sequence_id` in the originally\nfetched resource.",
                  "example": "3",
                  "nullable": false,
                  "type": "string"
                },
                {
                  "nullable": false
                }
              ]
            },
            "sha1": {
              "description": "The SHA1 hash of the file. This can be used to compare the contents\nof a file on Box with a local file.",
              "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
              "format": "digest",
              "nullable": false,
              "type": "string"
            }
          }
        }
      ],
      "description": "A mini representation of a file, used when\nnested under another resource.",
      "title": "File (Mini)",
      "type": "object",
      "x-box-resource-id": "file--mini",
      "x-box-variant": "mini"
    },
    "FileConflict": {
      "allOf": [
        {
          "$ref": "#/definitions/File--Mini"
        },
        {
          "properties": {
            "file_version": {
              "$ref": "#/definitions/FileVersion--Mini"
            },
            "sha1": {
              "description": "The SHA1 hash of the file.",
              "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
              "type": "string"
            }
          }
        }
      ],
      "description": "A representation of a file that is used to show",
      "title": "File (Conflict)",
      "type": "object",
      "x-box-resource-id": "file_conflict",
      "x-box-sanitized": true,
      "x-box-tag": null
    },
    "FileRequest": {
      "description": "A standard representation of a file request, as returned\nfrom any file request API endpoints by default.",
      "properties": {
        "created_at": {
          "description": "The date and time when the file request was created.",
          "example": "2020-09-28T10:53:43-08:00",
          "format": "date-time",
          "nullable": false,
          "type": "string"
        },
        "created_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user who created this file request."
            }
          ]
        },
        "description": {
          "description": "The optional description of this file request. This is\nshown in the Box UI to users uploading files.\n\nThis defaults to description of the file request that was\ncopied to create this file request.",
          "example": "Following documents are requested for your process",
          "type": "string",
          "x-nullable": true
        },
        "etag": {
          "description": "The HTTP `etag` of this file. This can be used in combination with\nthe `If-Match` header when updating a file request. By providing that\nheader, a change will only be performed on the  file request if the `etag`\non the file request still matches the `etag` provided in the `If-Match`\nheader.",
          "example": "1",
          "type": "string",
          "x-nullable": true
        },
        "expires_at": {
          "description": "The date after which a file request will no longer accept new\nsubmissions.\n\nAfter this date, the `status` will automatically be set to\n`inactive`.",
          "example": "2020-09-28T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "folder": {
          "allOf": [
            {
              "$ref": "#/definitions/Folder--Mini"
            },
            {
              "description": "The folder that this file request is associated with.\n\nFiles submitted through the file request form will be\nuploaded to this folder."
            }
          ],
          "nullable": false
        },
        "id": {
          "description": "The unique identifier for this file request.",
          "example": "42037322",
          "readOnly": true,
          "type": "string"
        },
        "is_description_required": {
          "description": "Whether a file request submitter is required to provide\na description of the files they are submitting.\n\nWhen this setting is set to true, the Box UI will show\na description field on the file request form.\n\nThis defaults to setting of file request that was\ncopied to create this file request.",
          "example": true,
          "type": "boolean"
        },
        "is_email_required": {
          "description": "Whether a file request submitter is required to provide\ntheir email address.\n\nWhen this setting is set to true, the Box UI will show\nan email field on the file request form.\n\nThis defaults to setting of file request that was\ncopied to create this file request.",
          "example": true,
          "type": "boolean"
        },
        "status": {
          "description": "The status of the file request. This defaults\nto `active`.\n\nWhen the status is set to `inactive`, the file request\nwill no longer accept new submissions, and any visitor\nto the file request URL will receive a `HTTP 404` status\ncode.\n\nThis defaults to status of file request that was\ncopied to create this file request.",
          "enum": [
            "active",
            "inactive"
          ],
          "example": "active",
          "type": "string"
        },
        "title": {
          "description": "The title of file request. This is shown\nin the Box UI to users uploading files.\n\nThis defaults to title of the file request that was\ncopied to create this file request.",
          "example": "Please upload documents",
          "type": "string"
        },
        "type": {
          "description": "`file-request`",
          "enum": [
            "file-request"
          ],
          "example": "file-request",
          "readOnly": true,
          "type": "string"
        },
        "updated_at": {
          "description": "The date and time when the file request was last updated.",
          "example": "2020-09-28T10:53:43-08:00",
          "format": "date-time",
          "nullable": false,
          "type": "string"
        },
        "updated_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user who last modified this file request."
            },
            {
              "nullable": false
            }
          ]
        },
        "url": {
          "description": "The generated URL for this file request. This URL can be shared\nwith users to let them upload files to the associated folder.",
          "example": "https://cloud.app.box.com/f/19e57f40ace247278a8e3d336678c64a",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "File Request",
      "type": "object",
      "x-box-resource-id": "file_request",
      "x-box-tag": "file_requests"
    },
    "FileRequestCopyRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/FileRequestUpdateRequest"
        },
        {
          "properties": {
            "folder": {
              "description": "The folder to associate the new file request to.",
              "properties": {
                "id": {
                  "description": "The ID of the folder to associate the new\nfile request to.",
                  "example": "42037322",
                  "type": "string"
                },
                "type": {
                  "description": "`folder`",
                  "enum": [
                    "folder"
                  ],
                  "example": "folder",
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        }
      ],
      "description": "The request body to copy a file request.",
      "required": [
        "folder"
      ],
      "title": "File Request (Copy)",
      "type": "object"
    },
    "FileRequestUpdateRequest": {
      "description": "The request body to update a file request.",
      "properties": {
        "description": {
          "description": "An optional new description for the file request. This can be\nused to change the description of the file request.\n\nThis will default to the value on the existing file request.",
          "example": "Please upload required documents",
          "type": "string"
        },
        "expires_at": {
          "description": "The date after which a file request will no longer accept new\nsubmissions.\n\nAfter this date, the `status` will automatically be set to\n`inactive`.\n\nThis will default to the value on the existing file request.",
          "example": "2020-09-28T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "is_description_required": {
          "description": "Whether a file request submitter is required to provide\na description of the files they are submitting.\n\nWhen this setting is set to true, the Box UI will show\na description field on the file request form.\n\nThis will default to the value on the existing file request.",
          "example": true,
          "type": "boolean"
        },
        "is_email_required": {
          "description": "Whether a file request submitter is required to provide\ntheir email address.\n\nWhen this setting is set to true, the Box UI will show\nan email field on the file request form.\n\nThis will default to the value on the existing file request.",
          "example": true,
          "type": "boolean"
        },
        "status": {
          "description": "An optional new status of the file request.\n\nWhen the status is set to `inactive`, the file request\nwill no longer accept new submissions, and any visitor\nto the file request URL will receive a `HTTP 404` status\ncode.\n\nThis will default to the value on the existing file request.",
          "enum": [
            "active",
            "inactive"
          ],
          "example": "active",
          "type": "string"
        },
        "title": {
          "description": "An optional new title for the file request. This can be\nused to change the title of the file request.\n\nThis will default to the value on the existing file request.",
          "example": "Please upload required documents",
          "type": "string"
        }
      },
      "title": "File Request (Update)",
      "type": "object"
    },
    "FileScope": {
      "description": "A relation between a file and the scopes for which the file can be accessed",
      "properties": {
        "object": {
          "allOf": [
            {
              "$ref": "#/definitions/File--Mini"
            },
            {
              "description": "The file for which the file can be accessed"
            }
          ]
        },
        "scope": {
          "description": "The file scopes for the file access",
          "enum": [
            "annotation_edit",
            "annotation_view_all",
            "annotation_view_self",
            "base_explorer",
            "base_picker",
            "base_preview",
            "base_upload",
            "item_delete",
            "item_download",
            "item_preview",
            "item_rename",
            "item_share"
          ],
          "example": "item_download",
          "type": "string"
        }
      },
      "title": "File scope",
      "type": "object"
    },
    "FileVersion": {
      "allOf": [
        {
          "$ref": "#/definitions/FileVersion--Mini"
        },
        {
          "properties": {
            "created_at": {
              "description": "When the file version object was created",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "modified_at": {
              "description": "When the file version object was last updated",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "modified_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who last updated the file version"
                }
              ]
            },
            "name": {
              "description": "The name of the file version",
              "example": "tigers.jpeg",
              "type": "string"
            },
            "purged_at": {
              "description": "When the file version object will be permanently deleted.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "restored_at": {
              "description": "When the file version was restored from the trash.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "restored_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who restored the file version from the trash."
                }
              ]
            },
            "size": {
              "description": "Size of the file version in bytes",
              "example": 629644,
              "format": "int64",
              "type": "integer"
            },
            "trashed_at": {
              "description": "When the file version object was trashed.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "trashed_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who trashed the file version"
                }
              ]
            },
            "uploader_display_name": {
              "allOf": [
                {
                  "description": "The display name of the user that uploaded the file. In most cases\nthis is the name of the logged in user at the time of upload.\n\nIf this file was uploaded by a logged out user and an email address\nwas provided on upload, then this field will return that email address.\n\nIf this file was uploaded using a **File Request form** then this field\nwill be set to return a value of `File Request`. No email address will\nbe added.\n\nIn all other anonymous cases where no email was provided this field\nwill default to a value of \"Someone\".",
                  "example": "Ellis Wiggins",
                  "nullable": false,
                  "title": "Uploader display name",
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "description": "A standard representation of a file version",
      "title": "File version",
      "type": "object",
      "x-box-resource-id": "file_version",
      "x-box-variant": "standard"
    },
    "FileVersion--Base": {
      "description": "The bare basic representation of a file version, the minimal\namount of fields returned when using the `fields` query\nparameter.",
      "properties": {
        "id": {
          "description": "The unique identifier that represent a file version.",
          "example": "12345",
          "nullable": false,
          "type": "string"
        },
        "type": {
          "description": "`file_version`",
          "enum": [
            "file_version"
          ],
          "example": "file_version",
          "nullable": false,
          "type": "string"
        }
      },
      "title": "File version (Base)",
      "type": "object",
      "x-box-resource-id": "file_version--base",
      "x-box-sanitized": true,
      "x-box-variant": "base",
      "x-box-variants": [
        "base",
        "mini",
        "standard"
      ]
    },
    "FileVersion--Mini": {
      "allOf": [
        {
          "$ref": "#/definitions/FileVersion--Base"
        },
        {
          "properties": {
            "sha1": {
              "description": "The SHA1 hash of this version of the file.",
              "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
              "type": "string"
            }
          }
        }
      ],
      "description": "A mini representation of a file version, used when\nnested within another resource.",
      "title": "File version (Mini)",
      "type": "object",
      "x-box-resource-id": "file_version--mini",
      "x-box-variant": "mini"
    },
    "FileVersionLegalHold": {
      "description": "File-Version-Legal-Hold is an entity representing all\nholds on a File Version.",
      "properties": {
        "deleted_at": {
          "description": "Time that this File-Version-Legal-Hold was\ndeleted.",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "file": {
          "allOf": [
            {
              "$ref": "#/definitions/File--Mini"
            },
            {
              "description": "The file for the file version held.\nNote that there is no guarantee that the current\nversion of this file is held."
            }
          ]
        },
        "file_version": {
          "allOf": [
            {
              "$ref": "#/definitions/FileVersion--Mini"
            },
            {
              "description": "The file version that is held"
            }
          ]
        },
        "id": {
          "description": "The unique identifier for this file version legal hold",
          "example": "11446498",
          "type": "string"
        },
        "legal_hold_policy_assignments": {
          "description": "List of assignments contributing to this Hold.",
          "items": {
            "$ref": "#/definitions/LegalHoldPolicyAssignment"
          },
          "type": "array"
        },
        "type": {
          "description": "`file_version_legal_hold`",
          "enum": [
            "file_version_legal_hold"
          ],
          "example": "file_version_legal_hold",
          "type": "string"
        }
      },
      "title": "File version legal hold",
      "type": "object",
      "x-box-resource-id": "file_version_legal_hold",
      "x-box-tag": "file_version_legal_holds"
    },
    "FileVersionLegalHolds": {
      "allOf": [
        {
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "example": 3000,
              "format": "int64",
              "type": "integer"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/FileVersionLegalHold"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of file version legal holds.",
      "title": "File version legal holds",
      "type": "object",
      "x-box-resource-id": "file_version_legal_holds",
      "x-box-tag": "file_version_legal_holds"
    },
    "FileVersionRetention": {
      "description": "A retention policy blocks permanent deletion of content\nfor a specified amount of time. Admins can apply policies to\nspecified folders, or an entire enterprise. A file version retention\nis a  record for a retained file version. To use this feature,\nyou must  have the manage retention policies scope enabled for your\nAPI key via  your application management console. For more information\nabout retention policies, please visit our help documentation",
      "properties": {
        "applied_at": {
          "description": "When this file version retention object was\ncreated",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "disposition_at": {
          "description": "When the retention expires on this file\nversion retention",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "file": {
          "allOf": [
            {
              "$ref": "#/definitions/File--Mini"
            },
            {
              "description": "The file this file version retention was applied to"
            }
          ]
        },
        "file_version": {
          "allOf": [
            {
              "$ref": "#/definitions/FileVersion--Mini"
            },
            {
              "description": "The file version this file version retention was\napplied to"
            }
          ]
        },
        "id": {
          "description": "The unique identifier for this file version retention.",
          "example": "11446498",
          "type": "string"
        },
        "type": {
          "description": "`file_version_retention`",
          "enum": [
            "file_version_retention"
          ],
          "example": "file_version_retention",
          "type": "string"
        },
        "winning_retention_policy": {
          "allOf": [
            {
              "$ref": "#/definitions/RetentionPolicy--Mini"
            },
            {
              "description": "The winning retention policy applied to this file\nversion retention. A file version can have multiple\nretention policies applied."
            }
          ]
        }
      },
      "title": "File version retention",
      "type": "object",
      "x-box-resource-id": "file_version_retention",
      "x-box-tag": "file_version_retentions"
    },
    "FileVersionRetentions": {
      "allOf": [
        {
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "example": 3000,
              "format": "int64",
              "type": "integer"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/FileVersionRetention"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of file version retentions.",
      "title": "File version retentions",
      "type": "object",
      "x-box-resource-id": "file_version_retentions",
      "x-box-tag": "file_version_retentions"
    },
    "FileVersions": {
      "allOf": [
        {
          "description": "The part of an API response that describes pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 2000,
              "format": "int64",
              "type": "integer"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "items": {
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "example": "type",
                    "type": "string"
                  },
                  "direction": {
                    "description": "The direction to order by, either ascending or descending",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "example": "ASC",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 5000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/FileVersion"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of file versions",
      "title": "File versions",
      "type": "object",
      "x-box-resource-id": "file_versions",
      "x-box-tag": "file_versions"
    },
    "Files": {
      "description": "A list of files",
      "properties": {
        "entries": {
          "description": "A list of files",
          "items": {
            "$ref": "#/definitions/File"
          },
          "type": "array"
        },
        "total_count": {
          "description": "The number of files.",
          "example": 1,
          "format": "int64",
          "type": "integer"
        }
      },
      "title": "Files",
      "type": "object",
      "x-box-resource-id": "files",
      "x-box-tag": "files"
    },
    "Folder": {
      "allOf": [
        {
          "$ref": "#/definitions/Folder--Mini"
        },
        {
          "properties": {
            "content_created_at": {
              "description": "The date and time at which this folder was originally\ncreated.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "content_modified_at": {
              "description": "The date and time at which this folder was last updated.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "created_at": {
              "description": "The date and time when the folder was created. This value may\nbe `null` for some folders such as the root folder or the trash\nfolder.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "created_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who created this folder"
                },
                {
                  "nullable": false
                }
              ]
            },
            "description": {
              "allOf": [
                {
                  "description": "The optional description of this folder",
                  "example": "Legal contracts for the new ACME deal",
                  "maxLength": 256,
                  "nullable": false,
                  "type": "string"
                },
                {
                  "nullable": false
                }
              ]
            },
            "expires_at": {
              "description": "The time and which the folder will be automatically be deleted.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "folder_upload_email": {
              "nullable": true,
              "properties": {
                "access": {
                  "description": "When this parameter has been set, users can email files\nto the email address that has been automatically\ncreated for this folder.\n\nTo create an email address, set this property either when\ncreating or updating the folder.\n\nWhen set to `collaborators`, only emails from registered email\naddresses for collaborators will be accepted. This includes\nany email aliases a user might have registered.\n\nWhen set to `open` it will accept emails from any email\naddress.",
                  "enum": [
                    "open",
                    "collaborators"
                  ],
                  "example": "open",
                  "nullable": false,
                  "type": "string"
                },
                "email": {
                  "description": "The optional upload email address for this folder.",
                  "example": "upload.Contracts.asd7asd@u.box.com",
                  "format": "email",
                  "nullable": false,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "item_collection": {
              "allOf": [
                {
                  "$ref": "#/definitions/Items"
                },
                {
                  "description": "A page of the items that are in the folder.\n\nThis field can only be requested when querying a folder's\ninformation, not when querying a folder's items."
                },
                {
                  "nullable": false
                }
              ]
            },
            "item_status": {
              "description": "Defines if this item has been deleted or not.\n\n* `active` when the item has is not in the trash\n* `trashed` when the item has been moved to the trash but not deleted\n* `deleted` when the item has been permanently deleted.",
              "enum": [
                "active",
                "trashed",
                "deleted"
              ],
              "example": "active",
              "nullable": false,
              "type": "string"
            },
            "modified_at": {
              "description": "The date and time when the folder was last updated. This value may\nbe `null` for some folders such as the root folder or the trash\nfolder.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "modified_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who last modified this folder."
                },
                {
                  "nullable": false
                }
              ]
            },
            "owned_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who owns this folder."
                },
                {
                  "nullable": false
                }
              ]
            },
            "parent": {
              "allOf": [
                {
                  "$ref": "#/definitions/Folder--Mini"
                },
                {
                  "description": "The optional folder that this folder is located within.\n\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                }
              ],
              "nullable": true
            },
            "path_collection": {
              "allOf": [
                {
                  "description": "A list of parent folders for an item.",
                  "properties": {
                    "entries": {
                      "description": "The parent folders for this item",
                      "items": {
                        "$ref": "#/definitions/Folder--Mini"
                      },
                      "nullable": false,
                      "type": "array"
                    },
                    "total_count": {
                      "description": "The number of folders in this list.",
                      "example": 1,
                      "format": "int64",
                      "nullable": false,
                      "type": "integer"
                    }
                  },
                  "title": "Path collection",
                  "type": "object"
                },
                {
                  "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                },
                {
                  "nullable": false
                }
              ]
            },
            "purged_at": {
              "description": "The time at which this folder is expected to be purged\nfrom the trash.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "shared_link": {
              "allOf": [
                {
                  "description": "Shared links provide direct, read-only access to files or folder on Box.\n\nShared links with open access level allow anyone with the URL\nto access the item, while shared links with company or collaborators access\nlevels can only be accessed by appropriately authenticated Box users.",
                  "properties": {
                    "access": {
                      "description": "The access level for this shared link.\n\n* `open` - provides access to this item to anyone with this link\n* `company` - only provides access to this item to people the same company\n* `collaborators` - only provides access to this item to people who are\n   collaborators on this item\n\nIf this field is omitted when creating the shared link, the access level\nwill be set to the default access level specified by the enterprise admin.",
                      "enum": [
                        "open",
                        "company",
                        "collaborators"
                      ],
                      "example": "open",
                      "nullable": false,
                      "type": "string"
                    },
                    "download_count": {
                      "description": "The number of times this item has been downloaded.",
                      "example": 3,
                      "nullable": false,
                      "type": "integer"
                    },
                    "download_url": {
                      "description": "A URL that can be used to download the file. This URL can be used in\na browser to download the file. This URL includes the file\nextension so that the file will be saved with the right file type.\n\nThis property will be `null` for folders.",
                      "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                      "format": "url",
                      "nullable": true,
                      "type": "string",
                      "x-box-premium-feature": true
                    },
                    "effective_access": {
                      "description": "The effective access level for the shared link. This can be a more\nrestrictive access level than the value in the `access` field when the\nenterprise settings restrict the allowed access levels.",
                      "enum": [
                        "open",
                        "company",
                        "collaborators"
                      ],
                      "example": "company",
                      "nullable": false,
                      "type": "string"
                    },
                    "effective_permission": {
                      "description": "The effective permissions for this shared link.",
                      "enum": [
                        "can_download",
                        "can_preview"
                      ],
                      "example": "can_download",
                      "nullable": false,
                      "type": "string"
                    },
                    "is_password_enabled": {
                      "description": "Defines if the shared link requires a password to access the item.",
                      "example": true,
                      "nullable": false,
                      "type": "boolean"
                    },
                    "permissions": {
                      "description": "Defines if this link allows a user to preview and download an item.",
                      "properties": {
                        "can_download": {
                          "description": "Defines if the shared link allows for the item to be downloaded. For\nshared links on folders, this also applies to any items in the folder.\n\nThis value can be set to `true` when the effective access level is\nset to `open` or `company`, not `collaborators`.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_preview": {
                          "description": "Defines if the shared link allows for the item to be previewed.\n\nThis value is always `true`. For shared links on folders this also\napplies to any items in the folder.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "preview_count": {
                      "description": "The number of times this item has been previewed.",
                      "example": 3,
                      "nullable": false,
                      "type": "integer"
                    },
                    "unshared_at": {
                      "description": "The date and time when this link will be unshared. This field can only be\nset by users with paid accounts.",
                      "example": "2018-04-13T13:53:23-07:00",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL that can be used to access the item on Box.\n\nThis URL will display the item in Box's preview UI where the file\ncan be downloaded if allowed.\n\nThis URL will continue to work even when a custom `vanity_url`\nhas been set for this shared link.",
                      "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                      "format": "url",
                      "nullable": false,
                      "type": "string"
                    },
                    "vanity_name": {
                      "description": "The custom name of a shared link, as used in the `vanity_url` field.",
                      "example": "my_url",
                      "nullable": true,
                      "type": "string"
                    },
                    "vanity_url": {
                      "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom\nURLs can only be created or modified in the Box Web application.",
                      "example": "https://acme.app.box.com/v/my_url/",
                      "format": "url",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "title": "Shared link",
                  "type": "object"
                },
                {
                  "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                }
              ],
              "nullable": true
            },
            "size": {
              "description": "The folder size in bytes.\n\nBe careful parsing this integer as its\nvalue can get very large.",
              "example": 629644,
              "format": "int64",
              "nullable": false,
              "type": "integer"
            },
            "trashed_at": {
              "description": "The time at which this folder was put in the trash.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          }
        }
      ],
      "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
      "title": "Folder",
      "type": "object",
      "x-box-resource-id": "folder",
      "x-box-variant": "standard"
    },
    "Folder--Base": {
      "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
      "properties": {
        "etag": {
          "description": "The HTTP `etag` of this folder. This can be used within some API\nendpoints in the `If-Match` and `If-None-Match` headers to only\nperform changes on the folder if (no) changes have happened.",
          "example": "1",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`.",
          "example": "12345",
          "nullable": false,
          "type": "string"
        },
        "type": {
          "description": "`folder`",
          "enum": [
            "folder"
          ],
          "example": "folder",
          "nullable": false,
          "type": "string"
        }
      },
      "title": "Folder (Base)",
      "type": "object",
      "x-box-resource-id": "folder--base",
      "x-box-sanitized": true,
      "x-box-tag": "folders",
      "x-box-variant": "base",
      "x-box-variants": [
        "base",
        "mini",
        "standard",
        "full"
      ]
    },
    "Folder--Full": {
      "allOf": [
        {
          "$ref": "#/definitions/Folder"
        },
        {
          "properties": {
            "tags": {
              "allOf": [
                {
                  "description": "The tags for this item. These tags are shown in\nthe Box web app and mobile apps next to an item.\n\nTo add or remove a tag, retrieve the item's current tags,\nmodify them, and then update this field.\n\nThere is a limit of 100 tags per item, and 10,000\nunique tags per enterprise.",
                  "example": [
                    "approved"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 100,
                  "minItems": 1,
                  "type": "array"
                },
                {
                  "nullable": false
                }
              ]
            },
            "allowed_invitee_roles": {
              "description": "A list of the types of roles that user can be invited at\nwhen sharing this folder.",
              "example": [
                "editor"
              ],
              "items": {
                "enum": [
                  "editor",
                  "viewer",
                  "previewer",
                  "uploader",
                  "previewer uploader",
                  "viewer uploader",
                  "co-owner"
                ],
                "type": "string"
              },
              "nullable": false,
              "type": "array"
            },
            "allowed_shared_link_access_levels": {
              "description": "A list of access levels that are available\nfor this folder.\n\nFor some folders, like the root folder, this will always\nbe an empty list as sharing is not allowed at that level.",
              "example": [
                "open"
              ],
              "items": {
                "enum": [
                  "open",
                  "company",
                  "collaborators"
                ],
                "type": "string"
              },
              "nullable": false,
              "type": "array"
            },
            "can_non_owners_invite": {
              "allOf": [
                {
                  "description": "Specifies if users who are not the owner\nof the folder can invite new collaborators to the folder.",
                  "example": true,
                  "type": "boolean"
                },
                {
                  "nullable": false
                }
              ]
            },
            "can_non_owners_view_collaborators": {
              "description": "Specifies if collaborators who are not owners\nof this folder are restricted from viewing other\ncollaborations on this folder.\n\nIt also restricts non-owners from inviting new\ncollaborators.",
              "example": true,
              "type": "boolean"
            },
            "classification": {
              "allOf": [
                {
                  "description": "The classification applied to an item",
                  "properties": {
                    "color": {
                      "description": "The color that is used to display the\nclassification label in a user-interface. Colors are defined by the admin\nor co-admin who created the classification in the Box web app.",
                      "example": "#FF0000",
                      "type": "string"
                    },
                    "definition": {
                      "description": "An explanation of the meaning of this classification.",
                      "example": "Content that should not be shared outside the company.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the classification",
                      "example": "Top Secret",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "description": "Details about the classification applied to this folder."
                },
                {
                  "nullable": true
                }
              ]
            },
            "has_collaborations": {
              "description": "Specifies if this folder has any other collaborators.",
              "example": true,
              "nullable": false,
              "type": "boolean"
            },
            "is_collaboration_restricted_to_enterprise": {
              "allOf": [
                {
                  "description": "Specifies if new invites to this folder are restricted to users\nwithin the enterprise. This does not affect existing\ncollaborations.",
                  "example": true,
                  "type": "boolean"
                },
                {
                  "nullable": false
                }
              ]
            },
            "is_externally_owned": {
              "description": "Specifies if this folder is owned by a user outside of the\nauthenticated enterprise.",
              "example": true,
              "nullable": false,
              "type": "boolean"
            },
            "metadata": {
              "allOf": [
                {
                  "additionalProperties": {
                    "additionalProperties": {
                      "$ref": "#/definitions/Metadata"
                    },
                    "description": "A list of metadata instances, nested within key-value pairs of their `scope`\nand `templateKey`.",
                    "example": {
                      "marketingCollateral": {
                        "$canEdit": true,
                        "$id": "01234500-12f1-1234-aa12-b1d234cb567e",
                        "$parent": "folder_59449484661",
                        "$scope": "enterprise_27335",
                        "$template": "marketingCollateral",
                        "$type": "properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0",
                        "$typeVersion": 2,
                        "$version": 1
                      }
                    },
                    "type": "object"
                  },
                  "description": "A list of metadata instances, nested within key-value pairs of their `scope`\nand `templateKey`.\n\nTo access the metadata for a file or folder, first use the\nmetadata endpoints to determine the metadata templates available to your\nenterprise.\n\nThen use the `GET /files/:id` or `GET /folder/:id`\nendpoint with the `fields` query parameter to get\nthe metadata by ID.\n\nTo request a metadata instance for a particular `scope` and `templateKey`\nuse the following format for the `fields` parameter:\n`metadata.<scope>.<templateKey>`\n\nFor example, `?fields=metadata.enterprise_27335.marketingCollateral`.",
                  "example": {
                    "enterprise_27335": {
                      "marketingCollateral": {
                        "$canEdit": true,
                        "$id": "01234500-12f1-1234-aa12-b1d234cb567e",
                        "$parent": "folder_59449484661",
                        "$scope": "enterprise_27335",
                        "$template": "marketingCollateral",
                        "$type": "properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0",
                        "$typeVersion": 2,
                        "$version": 1
                      }
                    }
                  },
                  "title": "Item metadata instances",
                  "type": "object"
                },
                {
                  "description": "An object containing the metadata instances that have been\nattached to this folder.\n\nEach metadata instance is uniquely identified by its `scope` and\n`templateKey`. There can only be one instance of any metadata\ntemplate attached to each folder. Each metadata instance is nested\nwithin an object with the `templateKey` as the key, which again\nitself is nested in an object with the `scope` as the key."
                }
              ]
            },
            "permissions": {
              "allOf": [
                {
                  "allOf": [
                    {
                      "description": "The permissions that the authenticated user has for an item.",
                      "properties": {
                        "can_delete": {
                          "description": "Specifies if the current user can delete this item.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_download": {
                          "description": "Specifies if the current user can download this item.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_invite_collaborator": {
                          "description": "Specifies if the current user can invite new\nusers to collaborate on this item, and if the user can\nupdate the role of a user already collaborated on this\nitem.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_rename": {
                          "description": "Specifies if the user can rename this item.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_set_share_access": {
                          "description": "Specifies if the user can change the access level of an\nexisting shared link on this item.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_share": {
                          "description": "Specifies if the user can create a shared link for this item.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "can_upload": {
                          "description": "Specifies if the user can upload into this folder.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        }
                      }
                    }
                  ],
                  "description": "The permissions that the authenticated user has for a folder.",
                  "type": "object"
                },
                {
                  "description": "Describes the permissions that the current user has\nfor this folder"
                },
                {
                  "nullable": false
                }
              ]
            },
            "sync_state": {
              "allOf": [
                {
                  "description": "Specifies whether a folder should be synced to a\nuser's device or not. This is used by Box Sync\n(discontinued) and is not used by Box Drive.",
                  "enum": [
                    "synced",
                    "not_synced",
                    "partially_synced"
                  ],
                  "example": "synced",
                  "nullable": false,
                  "type": "string"
                }
              ]
            },
            "watermark_info": {
              "allOf": [
                {
                  "description": "Details about the watermark applied to this item",
                  "properties": {
                    "is_watermarked": {
                      "description": "Specifies if this item has a watermark applied.",
                      "example": true,
                      "nullable": false,
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                {
                  "description": "Details about the watermark applied to this folder"
                },
                {
                  "nullable": false
                }
              ]
            }
          }
        }
      ],
      "description": "A full representation of a folder, as can be returned from any\nfolder API endpoints by default",
      "title": "Folder (Full)",
      "type": "object",
      "x-box-resource-id": "folder--full",
      "x-box-variant": "full"
    },
    "Folder--Mini": {
      "allOf": [
        {
          "$ref": "#/definitions/Folder--Base"
        },
        {
          "properties": {
            "name": {
              "description": "The name of the folder.",
              "example": "Contracts",
              "nullable": false,
              "type": "string"
            },
            "sequence_id": {
              "allOf": [
                {
                  "description": "A numeric identifier that represents the most recent user event\nthat has been applied to this item.\n\nThis can be used in combination with the `GET /events`-endpoint\nto filter out user events that would have occurred before this\nidentifier was read.\n\nAn example would be where a Box Drive-like application\nwould fetch an item via the API, and then listen to incoming\nuser events for changes to the item. The application would\nignore any user events where the `sequence_id` in the event\nis smaller than or equal to the `sequence_id` in the originally\nfetched resource.",
                  "example": "3",
                  "nullable": false,
                  "type": "string"
                },
                {
                  "nullable": false
                }
              ]
            }
          }
        }
      ],
      "description": "A mini representation of a file version, used when\nnested under another resource.",
      "title": "Folder (Mini)",
      "type": "object",
      "x-box-resource-id": "folder--mini",
      "x-box-variant": "mini"
    },
    "FolderLock": {
      "description": "Folder locks define access restrictions placed by folder owners\nto prevent specific folders from being moved or deleted.",
      "properties": {
        "created_at": {
          "description": "When the folder lock object was created.",
          "example": "2020-09-14T23:12:53Z",
          "format": "date-time",
          "type": "string"
        },
        "created_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Base"
            },
            {
              "description": "The user or group that created the lock."
            }
          ]
        },
        "folder": {
          "allOf": [
            {
              "$ref": "#/definitions/Folder--Mini"
            },
            {
              "description": "The folder that the lock applies to."
            }
          ]
        },
        "id": {
          "description": "The unique identifier for this folder lock.",
          "example": "12345678",
          "type": "string"
        },
        "lock_type": {
          "description": "The lock type, always `freeze`.",
          "example": "freeze",
          "type": "string"
        },
        "locked_operations": {
          "description": "The operations that have been locked. Currently the `move`\nand `delete` operations cannot be locked separately, and both need to be\nset to `true`.\n",
          "properties": {
            "delete": {
              "description": "Whether deleting the folder is restricted.",
              "example": true,
              "nullable": false,
              "type": "boolean"
            },
            "move": {
              "description": "Whether moving the folder is restricted.",
              "example": true,
              "nullable": false,
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The object type, always `folder_lock`.",
          "example": "folder_lock",
          "type": "string"
        }
      },
      "title": "Folder Lock",
      "type": "object",
      "x-box-resource-id": "folder_lock",
      "x-box-tag": "folder_locks"
    },
    "FolderLocks": {
      "allOf": [
        {
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "example": 3000,
              "format": "int64",
              "type": "integer"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/FolderLock"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of folder locks",
      "title": "Folder Locks",
      "type": "object",
      "x-box-resource-id": "folder_locks",
      "x-box-tag": "folder_locks"
    },
    "Group": {
      "allOf": [
        {
          "$ref": "#/definitions/Group--Mini"
        },
        {
          "properties": {
            "created_at": {
              "description": "When the group object was created",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "modified_at": {
              "description": "When the group object was last modified",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            }
          }
        }
      ],
      "description": "A standard representation of a group, as returned from any\ngroup API endpoints by default",
      "title": "Group",
      "type": "object",
      "x-box-resource-id": "group",
      "x-box-variant": "standard"
    },
    "Group--Base": {
      "description": "A base representation of a group.",
      "properties": {
        "id": {
          "description": "The unique identifier for this object",
          "example": "11446498",
          "type": "string"
        },
        "type": {
          "description": "`group`",
          "enum": [
            "group"
          ],
          "example": "group",
          "type": "string"
        }
      },
      "title": "Group (Base)",
      "type": "object",
      "x-box-resource-id": "group--base",
      "x-box-sanitized": true,
      "x-box-tag": "groups",
      "x-box-variant": "base",
      "x-box-variants": [
        "base",
        "mini",
        "standard",
        "full"
      ]
    },
    "Group--Full": {
      "allOf": [
        {
          "$ref": "#/definitions/Group"
        },
        {
          "properties": {
            "description": {
              "description": "Human readable description of the group.",
              "example": "Support Group - as imported from Active Directory",
              "maxLength": 255,
              "type": "string"
            },
            "external_sync_identifier": {
              "description": "An arbitrary identifier that can be used by\nexternal group sync tools to link this Box Group to\nan external group. Example values of this field\ncould be an Active Directory Object ID or a Google\nGroup ID.  We recommend you use of this field in\norder to avoid issues when group names are updated in\neither Box or external systems.",
              "example": "AD:123456",
              "type": "string"
            },
            "invitability_level": {
              "description": "Specifies who can invite the group to collaborate\non items.\n\nWhen set to `admins_only` the enterprise admin, co-admins,\nand the group's admin can invite the group.\n\nWhen set to `admins_and_members` all the admins listed\nabove and group members can invite the group.\n\nWhen set to `all_managed_users` all managed users in the\nenterprise can invite the group.",
              "enum": [
                "admins_only",
                "admins_and_members",
                "all_managed_users"
              ],
              "example": "admins_only",
              "type": "string"
            },
            "member_viewability_level": {
              "description": "Specifies who can view the members of the group\n(Get Memberships for Group).\n\n* `admins_only` - the enterprise admin, co-admins, group's\n  group admin\n* `admins_and_members` - all admins and group members\n* `all_managed_users` - all managed users in the\n  enterprise",
              "enum": [
                "admins_only",
                "admins_and_members",
                "all_managed_users"
              ],
              "example": "admins_only",
              "type": "string"
            },
            "permissions": {
              "allOf": [
                {
                  "description": "The permissions that the authenticated user has for a group.",
                  "properties": {
                    "can_invite_as_collaborator": {
                      "description": "Specifies if the user can invite the group to collaborate on any items.",
                      "example": true,
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                {
                  "description": "Describes the permissions that the current user has\nfor this group."
                }
              ]
            },
            "provenance": {
              "description": "Keeps track of which external source this group is\ncoming from (e.g. \"Active Directory\", \"Google Groups\",\n\"Facebook Groups\").  Setting this will\nalso prevent Box users from editing the group name\nand its members directly via the Box web application.\nThis is desirable for one-way syncing of groups.",
              "example": "Active Directory",
              "maxLength": 255,
              "type": "string"
            }
          }
        }
      ],
      "description": "Groups contain a set of users, and can be used in place of\nusers in some operations, such as collaborations.",
      "title": "Group",
      "type": "object",
      "x-box-resource-id": "group--full",
      "x-box-variant": "full"
    },
    "Group--Mini": {
      "allOf": [
        {
          "$ref": "#/definitions/Group--Base"
        },
        {
          "properties": {
            "group_type": {
              "description": "The type of the group.",
              "enum": [
                "managed_group",
                "all_users_group"
              ],
              "example": "managed_group",
              "type": "string"
            },
            "name": {
              "description": "The name of the group",
              "example": "Support",
              "type": "string"
            }
          }
        }
      ],
      "description": "Mini representation of a group, including id and name of\ngroup.",
      "title": "Group (Mini)",
      "type": "object",
      "x-box-resource-id": "group--mini",
      "x-box-variant": "mini"
    },
    "GroupMembership": {
      "description": "Membership is used to signify that a user is part of a\ngroup.",
      "properties": {
        "created_at": {
          "description": "The time this membership was created.",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "group": {
          "allOf": [
            {
              "$ref": "#/definitions/Group--Mini"
            },
            {
              "description": "The group that the membership applies to"
            }
          ]
        },
        "id": {
          "description": "The unique identifier for this group membership",
          "example": "11446498",
          "type": "string"
        },
        "modified_at": {
          "description": "The time this membership was last modified.",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "role": {
          "description": "The role of the user in the group.",
          "enum": [
            "member",
            "admin"
          ],
          "example": "member",
          "type": "string"
        },
        "type": {
          "description": "`group_membership`",
          "enum": [
            "group_membership"
          ],
          "example": "group_membership",
          "type": "string"
        },
        "user": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user that the membership applies to"
            }
          ]
        }
      },
      "title": "Group membership",
      "type": "object",
      "x-box-resource-id": "group_membership",
      "x-box-tag": "memberships"
    },
    "GroupMemberships": {
      "allOf": [
        {
          "description": "The part of an API response that describes pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 2000,
              "format": "int64",
              "type": "integer"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "items": {
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "example": "type",
                    "type": "string"
                  },
                  "direction": {
                    "description": "The direction to order by, either ascending or descending",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "example": "ASC",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 5000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/GroupMembership"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of group memberships.",
      "title": "Group memberships",
      "type": "object",
      "x-box-resource-id": "group_memberships",
      "x-box-tag": "memberships"
    },
    "Groups": {
      "allOf": [
        {
          "description": "The part of an API response that describes pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 2000,
              "format": "int64",
              "type": "integer"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "items": {
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "example": "type",
                    "type": "string"
                  },
                  "direction": {
                    "description": "The direction to order by, either ascending or descending",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "example": "ASC",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 5000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/Group--Mini"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of groups.",
      "title": "Groups",
      "type": "object",
      "x-box-resource-id": "groups",
      "x-box-tag": "groups"
    },
    "Invite": {
      "description": "An invite for a user to an enterprise.",
      "properties": {
        "actionable_by": {
          "$ref": "#/definitions/User--Mini"
        },
        "created_at": {
          "description": "When the invite was created",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for this invite",
          "example": "11446498",
          "type": "string"
        },
        "invited_by": {
          "$ref": "#/definitions/User--Mini"
        },
        "invited_to": {
          "description": "A representation of a Box enterprise",
          "properties": {
            "id": {
              "description": "The unique identifier for this enterprise.",
              "example": "11446498",
              "type": "string"
            },
            "name": {
              "description": "The name of the enterprise",
              "example": "Acme Inc.",
              "type": "string"
            },
            "type": {
              "description": "`enterprise`",
              "enum": [
                "enterprise"
              ],
              "example": "enterprise",
              "type": "string"
            }
          },
          "title": "Enterprise",
          "type": "object"
        },
        "modified_at": {
          "description": "When the invite was modified.",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status of the invite",
          "example": "pending",
          "type": "string"
        },
        "type": {
          "description": "`invite`",
          "enum": [
            "invite"
          ],
          "example": "invite",
          "type": "string"
        }
      },
      "title": "Invite",
      "type": "object",
      "x-box-resource-id": "invite",
      "x-box-tag": "invites"
    },
    "Items": {
      "allOf": [
        {
          "description": "The part of an API response that describes pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 2000,
              "format": "int64",
              "type": "integer"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "items": {
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "example": "type",
                    "type": "string"
                  },
                  "direction": {
                    "description": "The direction to order by, either ascending or descending",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "example": "ASC",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 5000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "description": "The items in this collection.",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/File--Mini"
                  },
                  {
                    "$ref": "#/definitions/Folder--Mini"
                  },
                  {
                    "$ref": "#/definitions/WebLink--Mini"
                  }
                ]
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of files, folders, and web links in\ntheir mini representation.",
      "title": "Items",
      "type": "object",
      "x-box-resource-id": "items",
      "x-box-tag": "folders"
    },
    "KeywordSkillCard": {
      "description": "A skill card that contains a set of keywords",
      "properties": {
        "created_at": {
          "description": "The optional date and time this card was created at.",
          "example": "2018-04-13T13:53:23-07:00",
          "format": "date-time",
          "type": "string"
        },
        "entries": {
          "description": "An list of entries in the metadata card.",
          "items": {
            "description": "An entry in the `entries` attribute of a metadata card",
            "properties": {
              "text": {
                "description": "The text of the keyword.",
                "example": "keyword1",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "invocation": {
          "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata.",
          "properties": {
            "id": {
              "description": "A custom identifier that represent the instance of\nthe service that applied this metadata. For example,\nif your `image-recognition-service` runs on multiple\nnodes, this field can be used to identify the ID of\nthe node that was used to apply the metadata.",
              "example": "image-recognition-service-123",
              "type": "string"
            },
            "type": {
              "description": "`skill_invocation`",
              "enum": [
                "skill_invocation"
              ],
              "example": "skill_invocation",
              "type": "string"
            }
          },
          "required": [
            "type",
            "id"
          ],
          "type": "object"
        },
        "skill": {
          "description": "The service that applied this metadata.",
          "properties": {
            "id": {
              "description": "A custom identifier that represent the service that\napplied this metadata.",
              "example": "image-recognition-service",
              "type": "string"
            },
            "type": {
              "description": "`service`",
              "enum": [
                "service"
              ],
              "example": "service",
              "type": "string"
            }
          },
          "required": [
            "type",
            "id"
          ],
          "type": "object"
        },
        "skill_card_title": {
          "description": "The title of the card.",
          "properties": {
            "code": {
              "description": "An optional identifier for the title.",
              "example": "labels",
              "type": "string"
            },
            "message": {
              "description": "The actual title to show in the UI.",
              "example": "Labels",
              "type": "string"
            }
          },
          "required": [
            "message"
          ],
          "type": "object"
        },
        "skill_card_type": {
          "description": "`keyword`",
          "enum": [
            "keyword"
          ],
          "example": "keyword",
          "type": "string"
        },
        "type": {
          "description": "`skill_card`",
          "enum": [
            "skill_card"
          ],
          "example": "skill_card",
          "type": "string"
        }
      },
      "required": [
        "type",
        "skill_card_type",
        "skill",
        "invocation",
        "entries"
      ],
      "title": "Keyword Skill Card",
      "type": "object",
      "x-box-resource-id": "keyword_skill_card",
      "x-box-tag": "skills"
    },
    "LegalHoldPolicies": {
      "allOf": [
        {
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "example": 3000,
              "format": "int64",
              "type": "integer"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/LegalHoldPolicy"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of legal hold policies.",
      "title": "Legal hold policies",
      "type": "object",
      "x-box-resource-id": "legal_hold_policies",
      "x-box-tag": "legal_hold_policies"
    },
    "LegalHoldPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/LegalHoldPolicy--Mini"
        },
        {
          "properties": {
            "assignment_counts": {
              "description": "Counts of assignments within this a legal hold policy by item type",
              "properties": {
                "file": {
                  "description": "The number of files this policy is applied to",
                  "example": 3,
                  "format": "int64",
                  "type": "integer"
                },
                "file_version": {
                  "description": "The number of file versions this policy is applied to",
                  "example": 4,
                  "format": "int64",
                  "type": "integer"
                },
                "folder": {
                  "description": "The number of folders this policy is applied to",
                  "example": 2,
                  "format": "int64",
                  "type": "integer"
                },
                "user": {
                  "description": "The number of users this policy is applied to",
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "created_at": {
              "description": "When the legal hold policy object was created",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "created_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who created the legal hold policy object"
                }
              ]
            },
            "deleted_at": {
              "description": "When the policy release request was sent. (Because\nit can take time for a policy to fully delete, this\nisn't quite the same time that the policy is fully deleted).\n\nIf `null`, the policy was not deleted.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "description": {
              "description": "Description of the legal hold policy. Optional\nproperty with a 500 character limit.",
              "example": "Postman created policy",
              "maxLength": 500,
              "type": "string"
            },
            "filter_ended_at": {
              "description": "User-specified, optional date filter applies to\nCustodian assignments only",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "filter_started_at": {
              "description": "User-specified, optional date filter applies to\nCustodian assignments only",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "modified_at": {
              "description": "When the legal hold policy object was modified.\nDoes not update when assignments are added or removed.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "policy_name": {
              "description": "Name of the legal hold policy.",
              "example": "Policy 4",
              "maxLength": 254,
              "type": "string"
            },
            "release_notes": {
              "description": "Optional notes about why the policy was created.",
              "example": "Example",
              "maxLength": 500,
              "type": "string"
            },
            "status": {
              "description": "* 'active' - the policy is not in a transition state\n* 'applying' - that the policy is in the process of\n  being applied\n* 'releasing' - that the process is in the process\n  of being released\n* 'released' - the policy is no longer active",
              "enum": [
                "active",
                "applying",
                "releasing",
                "released"
              ],
              "example": "active",
              "type": "string"
            }
          }
        }
      ],
      "description": "Legal Hold Policy information describes the basic\ncharacteristics of the Policy, such as name, description,\nand filter dates.",
      "title": "Legal hold policy",
      "type": "object",
      "x-box-resource-id": "legal_hold_policy",
      "x-box-variant": "standard"
    },
    "LegalHoldPolicy--Mini": {
      "description": "A mini legal hold policy",
      "properties": {
        "id": {
          "description": "The unique identifier for this legal hold policy",
          "example": "11446498",
          "type": "string"
        },
        "type": {
          "description": "`legal_hold_policy`",
          "enum": [
            "legal_hold_policy"
          ],
          "example": "legal_hold_policy",
          "type": "string"
        }
      },
      "title": "Legal hold policy (Mini)",
      "type": "object",
      "x-box-resource-id": "legal_hold_policy--mini",
      "x-box-tag": "legal_hold_policies",
      "x-box-variant": "mini",
      "x-box-variants": [
        "mini",
        "standard"
      ]
    },
    "LegalHoldPolicyAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/LegalHoldPolicyAssignment--Base"
        },
        {
          "properties": {
            "assigned_at": {
              "description": "When the legal hold policy assignment object was\ncreated",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "assigned_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who created the legal hold policy\nassignment"
                }
              ]
            },
            "assigned_to": {
              "allOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/definitions/File"
                    },
                    {
                      "$ref": "#/definitions/Folder"
                    },
                    {
                      "$ref": "#/definitions/WebLink"
                    }
                  ]
                },
                {
                  "description": "The item that the the legal hold policy\nis assigned to. Includes type and ID."
                }
              ]
            },
            "deleted_at": {
              "description": "When the assignment release request was sent.\n(Because it can take time for an assignment to fully\ndelete, this isn't quite the same time that the\nassignment is fully deleted). If null, Assignment\nwas not deleted.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "legal_hold_policy": {
              "allOf": [
                {
                  "$ref": "#/definitions/LegalHoldPolicy--Mini"
                },
                {
                  "description": "The policy that the legal hold policy assignment\nis part of"
                }
              ]
            }
          }
        }
      ],
      "description": "Legal Hold Assignments are used to assign Legal Hold\nPolicies to Users, Folders, Files, or File Versions.\n\nCreating a Legal Hold Assignment puts a hold\non the File-Versions that belong to the Assignment's\n'apply-to' entity.",
      "title": "Legal hold policy assignment",
      "type": "object",
      "x-box-resource-id": "legal_hold_policy_assignment",
      "x-box-tag": "legal_hold_policy_assignments"
    },
    "LegalHoldPolicyAssignment--Base": {
      "description": "Legal Hold Assignments are used to assign Legal Hold\nPolicies to Users, Folders, Files, or File Versions.\n\nCreating a Legal Hold Assignment puts a hold\non the File-Versions that belong to the Assignment's\n'apply-to' entity.",
      "properties": {
        "id": {
          "description": "The unique identifier for this legal hold assignment",
          "example": "11446498",
          "type": "string"
        },
        "type": {
          "description": "`legal_hold_policy_assignment`",
          "enum": [
            "legal_hold_policy_assignment"
          ],
          "example": "legal_hold_policy_assignment",
          "type": "string"
        }
      },
      "title": "Legal hold policy assignment (Base)",
      "type": "object",
      "x-box-resource-id": "legal_hold_policy_assignment--base",
      "x-box-sanitized": true,
      "x-box-tag": "legal_hold_policy_assignments",
      "x-box-variant": "base",
      "x-box-variants": [
        "base",
        "standard"
      ]
    },
    "LegalHoldPolicyAssignments": {
      "allOf": [
        {
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "example": 3000,
              "format": "int64",
              "type": "integer"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/LegalHoldPolicyAssignment--Base"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of legal hold policies assignments.",
      "title": "Legal hold policy assignments",
      "type": "object",
      "x-box-resource-id": "legal_hold_policy_assignments",
      "x-box-tag": "legal_hold_policy_assignments"
    },
    "Metadata": {
      "allOf": [
        {
          "$ref": "#/definitions/Metadata--Base"
        }
      ],
      "description": "An instance of a metadata template, which has been applied to a file or\nfolder.",
      "title": "Metadata instance",
      "type": "object",
      "x-box-resource-id": "metadata",
      "x-box-tag": "file_metadata",
      "x-box-variant": "standard"
    },
    "Metadata--Base": {
      "description": "The base representation of a metadata instance.",
      "properties": {
        "$parent": {
          "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`.",
          "example": "folder_59449484661,",
          "type": "string"
        },
        "$scope": {
          "description": "An ID for the scope in which this template\nhas been applied. This will be `enterprise_{enterprise_id}` for templates\ndefined for use in this enterprise, and `global` for general templates\nthat are available to all enterprises using Box.",
          "example": "enterprise_27335",
          "type": "string"
        },
        "$template": {
          "description": "The name of the template",
          "example": "marketingCollateral",
          "type": "string"
        },
        "$version": {
          "description": "The version of the metadata instance. This version starts at 0 and\nincreases every time a user-defined property is modified.",
          "example": 1,
          "type": "integer"
        }
      },
      "title": "Metadata instance (Base)",
      "type": "object",
      "x-box-resource-id": "metadata--base",
      "x-box-sanitized": true,
      "x-box-tag": "file_metadata",
      "x-box-variant": "base",
      "x-box-variants": [
        "base",
        "standard",
        "full"
      ]
    },
    "Metadata--Full": {
      "allOf": [
        {
          "$ref": "#/definitions/Metadata"
        },
        {
          "properties": {
            "$canEdit": {
              "description": "Whether the user can edit this metadata instance.",
              "example": true,
              "type": "boolean"
            },
            "$id": {
              "description": "A UUID to identify the metadata instance.",
              "example": "01234500-12f1-1234-aa12-b1d234cb567e",
              "format": "uuid",
              "maxLength": 36,
              "type": "string"
            },
            "$type": {
              "description": "A unique identifier for the \"type\" of this instance. This is an\ninternal system property and should not be used by a client\napplication.",
              "example": "properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0",
              "type": "string"
            },
            "$typeVersion": {
              "description": "The last-known version of the template of the object. This is an\ninternal system property and should not be used by a client\napplication.",
              "example": 2,
              "type": "integer"
            }
          }
        },
        {
          "additionalProperties": {
            "example": "Aaron Levie",
            "x-box-example-key": "name"
          }
        }
      ],
      "description": "An instance of a metadata template, which has been applied to a file or\nfolder.",
      "title": "Metadata instance (Full)",
      "type": "object",
      "x-box-resource-id": "metadata--full",
      "x-box-variant": "full"
    },
    "MetadataCascadePolicies": {
      "allOf": [
        {
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "example": 3000,
              "format": "int64",
              "type": "integer"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/MetadataCascadePolicy"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of metadata cascade policies.",
      "title": "Metadata cascade policies",
      "type": "object",
      "x-box-resource-id": "metadata_cascade_policies",
      "x-box-tag": "metadata_cascade_policies"
    },
    "MetadataCascadePolicy": {
      "description": "A metadata cascade policy automatically applies a metadata template instance\nto all the files and folders within the targeted folder.",
      "properties": {
        "id": {
          "description": "The ID of the metadata cascade policy object",
          "example": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
          "type": "string"
        },
        "owner_enterprise": {
          "description": "The enterprise that owns this policy.",
          "properties": {
            "id": {
              "description": "The ID of the enterprise that owns the policy.",
              "example": "690678",
              "type": "string"
            },
            "type": {
              "description": "`enterprise`",
              "enum": [
                "enterprise"
              ],
              "example": "enterprise",
              "type": "string"
            }
          },
          "type": "object"
        },
        "parent": {
          "description": "Represent the folder the policy is applied to.",
          "properties": {
            "id": {
              "description": "The ID of the folder the policy is applied to.",
              "example": "1234567",
              "type": "string"
            },
            "type": {
              "description": "`folder`",
              "enum": [
                "folder"
              ],
              "example": "folder",
              "type": "string"
            }
          },
          "type": "object"
        },
        "scope": {
          "description": "The scope of the of the template that is cascaded down to the folder's\nchildren.",
          "enum": [
            "global",
            "enterprise_*"
          ],
          "example": "global",
          "type": "string"
        },
        "templateKey": {
          "description": "The key of the template that is cascaded down to the folder's\nchildren.\n\nIn many cases the template key is automatically derived\nof its display name, for example `Contract Template` would\nbecome `contractTemplate`. In some cases the creator of the\ntemplate will have provided its own template key.\n\nPlease [list the templates for an enterprise][list], or\nget all instances on a [file][file] or [folder][folder]\nto inspect a template's key.\n\n[list]: e://get-metadata-templates-enterprise\n[file]: e://get-files-id-metadata\n[folder]: e://get-folders-id-metadata",
          "example": "productInfo",
          "type": "string"
        },
        "type": {
          "description": "`metadata_cascade_policy`",
          "enum": [
            "metadata_cascade_policy"
          ],
          "example": "metadata_cascade_policy",
          "type": "string"
        }
      },
      "title": "Metadata cascade policy",
      "type": "object",
      "x-box-resource-id": "metadata_cascade_policy",
      "x-box-tag": "metadata_cascade_policies"
    },
    "MetadataFieldFilterDateRange": {
      "additionalProperties": {
        "description": "Match a `date` metadata field to a range of values.",
        "example": {
          "gt": "2016-08-01T00:00:00Z",
          "lt": "2017-08-01T00:00:00Z"
        },
        "properties": {
          "gt": {
            "description": "Specifies the (inclusive) lower bound for the metadata field\nvalue. The value of a field must be greater than (`gt`) or\nequal to this value for the search query to match this\ntemplate.",
            "example": "2016-08-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "lt": {
            "description": "Specifies the (inclusive) upper bound for the metadata field\nvalue. The value of a field must be lower than (`lt`) or\nequal to this value for the search query to match this\ntemplate.",
            "example": "2017-08-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-box-example-key": "expirationDate"
      },
      "description": "Specifies which `date` field on the template to filter the search\nresults by, specifying a range of dates that can match.",
      "example": {
        "expirationDate": {
          "gt": "2016-08-01T00:00:00Z",
          "lt": "2017-08-01T00:00:00Z"
        }
      },
      "title": "Metadata field filter (date range)",
      "type": "object",
      "x-box-resource-id": "metadata_field_filter_date_range"
    },
    "MetadataFieldFilterFloat": {
      "additionalProperties": {
        "description": "A mapping between a metadata `float` field key and\nthe value to match search results on.",
        "example": 10000,
        "type": "number",
        "x-box-example-key": "contractValue"
      },
      "description": "Specifies which `float` field on the template to filter the search\nresults by.",
      "example": {
        "contractValue": 10000
      },
      "title": "Metadata field filter (float)",
      "type": "object",
      "x-box-resource-id": "metadata_field_filter_float"
    },
    "MetadataFieldFilterFloatRange": {
      "additionalProperties": {
        "description": "Specifies which `float` field on the template to filter the search\nresults by, specifying a range of values that can match.",
        "example": {
          "gt": 100000,
          "lt": 200000
        },
        "properties": {
          "gt": {
            "description": "Specifies the (inclusive) lower bound for the metadata field\nvalue. The value of a field must be greater than (`gt`) or\nequal to this value for the search query to match this\ntemplate.",
            "example": 100000,
            "type": "number"
          },
          "lt": {
            "description": "Specifies the (inclusive) upper bound for the metadata field\nvalue. The value of a field must be lower than (`lt`) or\nequal to this value for the search query to match this\ntemplate.",
            "example": 200000,
            "type": "number"
          }
        },
        "type": "object",
        "x-box-example-key": "value"
      },
      "description": "Specifies which `float` field on the template to filter the search\nresults by, specifying a range of values that can match.",
      "example": {
        "contractValue": {
          "gt": 100000,
          "lt": 200000
        }
      },
      "title": "Metadata field filter (float range)",
      "type": "object",
      "x-box-resource-id": "metadata_field_filter_float_range"
    },
    "MetadataFieldFilterMultiSelect": {
      "additionalProperties": {
        "description": "A mapping between a metadata `multiSelect` field key and\nthe one or more values to match search results on.\n\nWhen performing a search, the query will essentially\nperform an `OR` operation to match any template where any of\nthe provided values match this field.",
        "example": [
          "online",
          "enterprise"
        ],
        "items": {
          "type": "string"
        },
        "type": "array",
        "x-box-example-key": "category"
      },
      "description": "Specifies the values to match for a `multiSelect` metadata\nfield. When performing a search, the query will essentially\nperform an `OR` operation to match any template where any of\nthe provided values match this field.",
      "example": {
        "category": [
          "online",
          "enterprise"
        ]
      },
      "title": "Metadata field filter (multi-select)",
      "type": "object",
      "x-box-resource-id": "metadata_field_filter_multi_select"
    },
    "MetadataFieldFilterString": {
      "additionalProperties": {
        "description": "A mapping between a metadata `string` field key and\nthe value to match search results on.",
        "example": "online",
        "type": "string",
        "x-box-example-key": "category"
      },
      "description": "Specifies which text field on the template to filter the search\nresults by.",
      "example": {
        "category": "online"
      },
      "title": "Metadata field filter (string)",
      "type": "object",
      "x-box-resource-id": "metadata_field_filter_string"
    },
    "MetadataFilter": {
      "description": "A metadata template to filter the search results by.",
      "properties": {
        "filters": {
          "allOf": [
            {},
            {
              "description": "Specifies which fields on the template to filter the search\nresults by. When more than one field is specified, the query\nperforms a logical `AND` to ensure that the instance of the\ntemplate matches each of the fields specified."
            },
            {
              "example": {
                "category": "online",
                "contractValue": 1000000
              }
            }
          ]
        },
        "scope": {
          "description": "Specifies the scope of the template to filter search results by.\n\nThis will be `enterprise_{enterprise_id}` for templates defined\nfor use in this enterprise, and `global` for general templates\nthat are available to all enterprises using Box.",
          "enum": [
            "global",
            "enterprise",
            "enterprise_{enterprise_id}"
          ],
          "example": "enterprise",
          "type": "string"
        },
        "templateKey": {
          "description": "The key of the template to filter search results by.\n\nIn many cases the template key is automatically derived\nof its display name, for example `Contract Template` would\nbecome `contractTemplate`. In some cases the creator of the\ntemplate will have provided its own template key.\n\nPlease [list the templates for an enterprise][list], or\nget all instances on a [file][file] or [folder][folder]\nto inspect a template's key.\n\n[list]: e://get-metadata-templates-enterprise\n[file]: e://get-files-id-metadata\n[folder]: e://get-folders-id-metadata",
          "example": "contract",
          "type": "string"
        }
      },
      "title": "Metadata filter",
      "type": "object",
      "x-box-resource-id": "metadata_filter",
      "x-box-tag": "search"
    },
    "MetadataQuery": {
      "description": "Create a search using SQL-like syntax to return items that match specific\nmetadata.",
      "properties": {
        "ancestor_folder_id": {
          "description": "The ID of the folder that you are restricting the query to. A\nvalue of zero will return results from all folders you have access\nto. A non-zero value will only return results found in the folder\ncorresponding to the ID or in any of its subfolders.",
          "example": "0",
          "type": "string"
        },
        "fields": {
          "description": "By default, this endpoint returns only the most basic info about the items for\nwhich the query matches. This attribute can be used to specify a list of\nadditional attributes to return for any item, including its metadata.\n\nThis attribute takes a list of item fields, metadata template identifiers,\nor metadata template field identifiers.\n\nFor example:\n\n* `created_by` will add the details of the user who created the item to\nthe response.\n* `metadata.<scope>.<templateKey>` will return the mini-representation\nof the metadata instance identified by the `scope` and `templateKey`.\n* `metadata.<scope>.<templateKey>.<field>` will return all the mini-representation\nof the metadata instance identified by the `scope` and `templateKey` plus\nthe field specified by the `field` name. Multiple fields for the same\n`scope` and `templateKey` can be defined.",
          "example": [
            "extension",
            "created_at",
            "item_status",
            "metadata.enterprise_1234.contracts",
            "metadata.enterprise_1234.regions.location"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "from": {
          "description": "Specifies the template used in the query. Must be in the form\n`scope.templateKey`. Not all templates can be used in this field,\nmost notably the built-in, Box-provided classification templates\ncan not be used in a query.",
          "example": "enterprise_123456.someTemplate",
          "type": "string"
        },
        "limit": {
          "default": 100,
          "description": "A value between 0 and 100 that indicates the maximum number of results\nto return for a single request. This only specifies a maximum\nboundary and will not guarantee the minimum number of results\nreturned.",
          "example": 50,
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        },
        "marker": {
          "description": "Marker to use for requesting the next page.",
          "example": "AAAAAmVYB1FWec8GH6yWu2nwmanfMh07IyYInaa7DZDYjgO1H4KoLW29vPlLY173OKsci6h6xGh61gG73gnaxoS+o0BbI1/h6le6cikjlupVhASwJ2Cj0tOD9wlnrUMHHw3/ISf+uuACzrOMhN6d5fYrbidPzS6MdhJOejuYlvsg4tcBYzjauP3+VU51p77HFAIuObnJT0ff",
          "type": "string"
        },
        "order_by": {
          "description": "A list of template fields and directions to sort the metadata query\nresults by.\n\nThe ordering `direction` must be the same for each item in the array.",
          "items": {
            "description": "An object representing one of the metadata template fields to sort the\nmetadata query results by.",
            "properties": {
              "direction": {
                "description": "The direction to order by, either ascending or descending.\n\nThe `ordering` direction must be the same for each item in the\narray.",
                "enum": [
                  "ASC",
                  "DESC",
                  "asc",
                  "desc"
                ],
                "example": "asc",
                "type": "string"
              },
              "field_key": {
                "description": "The metadata template field to order by.\n\nThe `field_key` represents the `key` value of a field from the\nmetadata template being searched for.",
                "example": "amount",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "query": {
          "description": "The query to perform. A query is a logical expression that is very similar\nto a SQL `SELECT` statement. Values in the search query can be turned into\nparameters specified in the `query_param` arguments list to prevent having\nto manually insert search values into the query string.\n\nFor example, a value of `:amount` would represent the `amount` value in\n`query_params` object.",
          "example": "value >= :amount",
          "type": "string"
        },
        "query_params": {
          "additionalProperties": {
            "description": "The value for the argument being used in the metadata search.\n\nThe type of this parameter must match the type of the corresponding\nmetadata template field.",
            "example": "100",
            "type": "string",
            "x-box-example-key": "amount"
          },
          "description": "Set of arguments corresponding to the parameters specified in the\n`query`. The type of each parameter used in the `query_params` must match\nthe type of the corresponding metadata template field.",
          "example": {
            "amount": "100"
          },
          "type": "object"
        },
        "use_index": {
          "description": "The name of the search index to use for this query. A search index is\nrequired when a metadata template is assigned to more than 10,000 files\nand folders.\n\nPlease contact our\n[Metadata Query team](mailto:metadata-query-feedback@box.com)\nto create a search index.",
          "example": "amountAsc",
          "type": "string"
        }
      },
      "required": [
        "from",
        "ancestor_folder_id"
      ],
      "title": "Metadata query search request",
      "type": "object"
    },
    "MetadataQueryResults": {
      "description": "A page of files and folders that matched the metadata query.",
      "properties": {
        "entries": {
          "description": "The mini representation of the files and folders that match the search\nterms.\n\nBy default, this endpoint returns only the most basic info about the\nitems. To get additional fields for each item, including any of the\nmetadata, use the `fields` attribute in the query.",
          "items": {},
          "type": "array",
          "x-box-resource-variant": 1
        },
        "limit": {
          "default": 100,
          "description": "The limit that was used for this search. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed.",
          "example": 100,
          "format": "int64",
          "type": "integer"
        },
        "next_marker": {
          "description": "The marker for the start of the next page of results.",
          "example": "0!-M7487OpVfBTNBV-XsQjU50gQFlbFFu5nArMWD7Ck61GH_Qo40M1S2xN5zWZPBzEjaQS1SOjJiQoo5BsXEl1bCVLRZ2pTqo4SKp9tyqzWQK2L51KR_nC1EgF5I_TJSFw7uO2Bx4HweGETOjh5_2oPSWw5iMkM-OvGApeR0lGFO48FDKoyzJyLgz5aogxoKd8VE09CesOOnTnmZvrW0puylDc-hFjY5YLmWFBKox3SOWiSDwKFkmZGNHyjEzza1nSwbZg6CYsAdGsDwGJhuCeTNsFzP5Mo5qx9wMloS0lSPuf2CcBInbIJzl2CKlXF3FvqhANttpm2nzdBTQRSoJyJnjVBpf4Q_HjV2eb4KIZBBlLy067UCVdv2AAWQFd5E2i6s1YiGRTtgMEZntOSUYD4IYLMWWm5Ra7ke_SP32SL3GSjbBQYIyCVQ..",
          "type": "string"
        }
      },
      "title": "Metadata query search results",
      "type": "object",
      "x-box-resource-id": "metadata_query_results",
      "x-box-tag": "search"
    },
    "MetadataTemplate": {
      "description": "A template for metadata that can be applied to files and folders",
      "properties": {
        "copyInstanceOnItemCopy": {
          "description": "Whether or not to include the metadata when a file or folder is copied.",
          "example": true,
          "type": "boolean"
        },
        "displayName": {
          "description": "The display name of the template. This can be seen in the Box web app\nand mobile apps.",
          "example": "Product Info",
          "maxLength": 4096,
          "type": "string"
        },
        "fields": {
          "description": "An ordered list of template fields which are part of the template. Each\nfield can be a regular text field, date field, number field, as well as a\nsingle or multi-select list.",
          "items": {
            "allOf": [
              {
                "description": "A field within a metadata template. Fields can be a basic text, date, or\nnumber field, or a list of options.",
                "properties": {
                  "description": {
                    "description": "A description of the field. This is not shown to the user.",
                    "example": "The category",
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "displayName": {
                    "description": "The display name of the field as it is shown to the user in the web and\nmobile apps.",
                    "example": "Category",
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "hidden": {
                    "description": "Whether this field is hidden in the UI for the user and can only be set\nthrough the API instead.",
                    "example": true,
                    "type": "boolean"
                  },
                  "key": {
                    "description": "A unique identifier for the field. The identifier must\nbe unique within the template to which it belongs.",
                    "example": "category",
                    "maxLength": 256,
                    "type": "string"
                  },
                  "options": {
                    "description": "A list of options for this field. This is used in combination with the\n`enum` and `multiSelect` field types.",
                    "items": {
                      "description": "An option for a Metadata Template Field.\n\nOptions only need to be provided for fields of type `enum` and `multiSelect`.\nOptions represent the value(s) a user can select for the field either through\nthe UI or through the API.",
                      "properties": {
                        "key": {
                          "description": "The text value of the option. This represents both the display name of the\noption and the internal key used when updating templates.",
                          "example": "Category 1",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key"
                      ],
                      "title": "Metadata Option (Write)",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of field. The basic fields are a `string` field for text, a\n`float` field for numbers, and a `date` fields to present the user with a\ndate-time picker.\n\nAdditionally, metadata templates support an `enum` field for a basic list\nof items, and ` multiSelect` field for a similar list of items where the\nuser can select more than one value.",
                    "enum": [
                      "string",
                      "float",
                      "date",
                      "enum",
                      "multiSelect"
                    ],
                    "example": "string",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "key",
                  "displayName"
                ],
                "title": "Metadata Field (Write)",
                "type": "object"
              },
              {
                "properties": {
                  "id": {
                    "description": "The unique ID of the metadata template field.",
                    "example": "822227e0-47a5-921b-88a8-494760b2e6d2",
                    "type": "string"
                  },
                  "options": {
                    "description": "A list of options for this field. This is used in combination\nwith the `enum` and `multiSelect` field types.",
                    "items": {
                      "allOf": [
                        {
                          "description": "An option for a Metadata Template Field.\n\nOptions only need to be provided for fields of type `enum` and `multiSelect`.\nOptions represent the value(s) a user can select for the field either through\nthe UI or through the API.",
                          "properties": {
                            "key": {
                              "description": "The text value of the option. This represents both the display name of the\noption and the internal key used when updating templates.",
                              "example": "Category 1",
                              "type": "string"
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "title": "Metadata Option (Write)",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "id": {
                              "description": "The internal unique identifier of the the option.",
                              "example": "45dc2849-a4a7-40a9-a751-4a699a589190",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "An option for a Metadata Template Field.\n\nOptions are only present for fields of type `enum` and\n`multiSelect`. Options represent the value(s) a user can\nselect for the field either through the UI or through the API.",
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              }
            ],
            "description": "A field within a metadata template. Fields can be a basic text, date, or\nnumber field, or a list of options.",
            "type": "object"
          },
          "type": "array"
        },
        "hidden": {
          "description": "Defines if this template is visible in the Box web app UI, or if\nit is purely intended for usage through the API.",
          "example": true,
          "type": "boolean"
        },
        "id": {
          "description": "The ID of the metadata template.",
          "example": "58063d82-4128-7b43-bba9-92f706befcdf",
          "type": "string"
        },
        "scope": {
          "description": "The scope of the metadata template can either be `global` or\n`enterprise_*`. The `global` scope is used for templates that are\navailable to any Box enterprise. The `enterprise_*` scope represents\ntemplates that have been created within a specific enterprise, where `*`\nwill be the ID of that enterprise.",
          "example": "enterprise_123456",
          "type": "string"
        },
        "templateKey": {
          "description": "A unique identifier for the template. This identifier is unique across\nthe `scope` of the enterprise to which the metadata template is being\napplied, yet is not necessarily unique across different enterprises.",
          "example": "productInfo",
          "maxLength": 64,
          "pattern": "^[a-zA-Z_][-a-zA-Z0-9_]*$",
          "type": "string"
        },
        "type": {
          "description": "`metadata_template`",
          "enum": [
            "metadata_template"
          ],
          "example": "metadata_template",
          "nullable": false,
          "type": "string"
        }
      },
      "title": "Metadata template",
      "type": "object",
      "x-box-resource-id": "metadata_template",
      "x-box-tag": "metadata_templates"
    },
    "MetadataTemplates": {
      "allOf": [
        {
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "example": 3000,
              "format": "int64",
              "type": "integer"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/MetadataTemplate"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of metadata templates",
      "title": "Metadata templates",
      "type": "object",
      "x-box-resource-id": "metadata_templates",
      "x-box-tag": "metadata_templates"
    },
    "Metadatas": {
      "description": "A list of metadata instances that have been applied to a file or folder.",
      "properties": {
        "entries": {
          "description": "A list of metadata instances, as applied to this file or folder.",
          "items": {
            "$ref": "#/definitions/Metadata"
          },
          "type": "array"
        },
        "limit": {
          "description": "The limit that was used for this page of results.",
          "example": 100,
          "type": "integer"
        }
      },
      "title": "Metadata instances",
      "type": "object",
      "x-box-resource-id": "metadatas",
      "x-box-tag": "file_metadata"
    },
    "OAuth2Error": {
      "description": "An OAuth 2.0 error",
      "properties": {
        "error": {
          "description": "The type of the error returned.",
          "example": "invalid_client",
          "type": "string"
        },
        "error_description": {
          "description": "The type of the error returned.",
          "example": "The client credentials are not valid",
          "type": "string"
        }
      },
      "title": "OAuth 2.0 error",
      "type": "object",
      "x-box-resource-id": "oauth2_error",
      "x-box-tag": "authorization"
    },
    "PostOAuth2Revoke": {
      "description": "A request to revoke an OAuth 2.0 token",
      "properties": {
        "client_id": {
          "description": "The Client ID of the application requesting to revoke the\naccess token.",
          "example": "ly1nj6n11vionaie65emwzk575hnnmrk",
          "type": "string"
        },
        "client_secret": {
          "description": "The client secret of the application requesting to revoke\nan access token.",
          "example": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1",
          "type": "string"
        },
        "token": {
          "description": "The access token to revoke.",
          "example": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW",
          "format": "token",
          "type": "string"
        }
      },
      "required": [
        "grant_type"
      ],
      "title": "Token revocation request",
      "type": "object"
    },
    "PostOAuth2Token": {
      "description": "A request for a new OAuth 2.0 token",
      "properties": {
        "actor_token": {
          "description": "The token used to create an annotator token.\nThis is a JWT assertion.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
          "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
          "format": "token",
          "type": "string"
        },
        "actor_token_type": {
          "description": "The type of `actor_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
          "enum": [
            "urn:ietf:params:oauth:token-type:id_token"
          ],
          "example": "urn:ietf:params:oauth:token-type:id_token",
          "format": "urn",
          "type": "string"
        },
        "assertion": {
          "description": "A JWT assertion for which to request a new access token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:jwt-bearer`\nas the `grant_type`.",
          "example": "xxxxx.yyyyy.zzzzz",
          "format": "jwt",
          "type": "string"
        },
        "box_subject_id": {
          "description": "Used in combination with `client_credentials` as the `grant_type`.\nValue is determined by `box_subject_type`. If `user` use user ID and if\n`enterprise` use enterprise ID.",
          "example": "123456789",
          "type": "string"
        },
        "box_subject_type": {
          "description": "Used in combination with `client_credentials` as the `grant_type`.",
          "enum": [
            "enterprise",
            "user"
          ],
          "example": "enterprise",
          "type": "string"
        },
        "client_id": {
          "description": "The Client ID of the application requesting an access token.\n\nUsed in combination with `authorization_code`, `client_credentials`, or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.",
          "example": "ly1nj6n11vionaie65emwzk575hnnmrk",
          "type": "string"
        },
        "client_secret": {
          "description": "The client secret of the application requesting an access token.\n\nUsed in combination with `authorization_code`, `client_credentials`, or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.",
          "example": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1",
          "type": "string"
        },
        "code": {
          "description": "The client-side authorization code passed to your application by\nBox in the browser redirect after the user has successfully\ngranted your application permission to make API calls on their\nbehalf.\n\nUsed in combination with `authorization_code` as the `grant_type`.",
          "example": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW",
          "format": "token",
          "type": "string"
        },
        "grant_type": {
          "description": "The type of request being made, either using a client-side obtained\nauthorization code, a refresh token, a JWT assertion, client credentials\ngrant or another access token for the purpose of downscoping a token.",
          "enum": [
            "authorization_code",
            "refresh_token",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
            "urn:ietf:params:oauth:grant-type:token-exchange"
          ],
          "example": "authorization_code",
          "format": "urn",
          "type": "string"
        },
        "refresh_token": {
          "description": "A refresh token used to get a new access token with.\n\nUsed in combination with `refresh_token` as the `grant_type`.",
          "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
          "format": "token",
          "type": "string"
        },
        "resource": {
          "description": "Full URL for the file that the token should be generated for.",
          "example": "https://api.box.com/2.0/files/123456",
          "format": "url",
          "type": "string"
        },
        "scope": {
          "description": "The space-delimited list of scopes that you want apply to the\nnew access token.\n\nThe `subject_token` will need to have all of these scopes or\nthe call will error with **401 Unauthorized**.",
          "example": "item_upload item_preview base_explorer",
          "format": "space_delimited_list",
          "type": "string"
        },
        "subject_token": {
          "description": "The token to exchange for a downscoped token. This can be a regular\naccess token, a JWT assertion, or an app token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
          "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
          "format": "token",
          "type": "string"
        },
        "subject_token_type": {
          "description": "The type of `subject_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
          "enum": [
            "urn:ietf:params:oauth:token-type:access_token"
          ],
          "example": "urn:ietf:params:oauth:token-type:access_token",
          "type": "string"
        }
      },
      "required": [
        "grant_type"
      ],
      "title": "Token request",
      "type": "object"
    },
    "PostOAuth2Token--RefreshAccessToken": {
      "description": "A request to refresh an Access Token. Use this API to refresh an expired\nAccess Token using a valid Refresh Token.",
      "properties": {
        "client_id": {
          "description": "The client ID of the application requesting to refresh the token.",
          "example": "ly1nj6n11vionaie65emwzk575hnnmrk",
          "type": "string"
        },
        "client_secret": {
          "description": "The client secret of the application requesting to refresh the token.",
          "example": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1",
          "type": "string"
        },
        "grant_type": {
          "description": "The type of request being made, in this case a refresh request.",
          "enum": [
            "refresh_token"
          ],
          "example": "refresh_token",
          "format": "urn",
          "type": "string"
        },
        "refresh_token": {
          "description": "The refresh token to refresh.",
          "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
          "format": "token",
          "type": "string"
        }
      },
      "required": [
        "grant_type",
        "client_id",
        "client_secret",
        "refresh_token"
      ],
      "title": "Refresh access token",
      "type": "object"
    },
    "RealtimeServer": {
      "description": "A real-time server that can be used for\nlong polling user events",
      "properties": {
        "max_retries": {
          "description": "The maximum number of retries this server will\nallow before a new long poll should be started by\ngetting a [new list of server](#options-events).",
          "example": 10,
          "type": "integer"
        },
        "retry_timeout": {
          "description": "The maximum number of seconds without a response\nafter which you should retry the long poll connection.\n\nThis helps to overcome network issues where the long\npoll looks to be working but no packages are coming\nthrough.",
          "example": 610,
          "type": "integer"
        },
        "ttl": {
          "description": "The time in minutes for which this server is available",
          "example": 10,
          "type": "integer"
        },
        "type": {
          "description": "`realtime_server`",
          "example": "realtime_server",
          "type": "string"
        },
        "url": {
          "description": "The URL for the server.",
          "example": "http://2.realtime.services.box.net/subscribe?channel=cc807c9c4869ffb1c81a&stream_type=all",
          "type": "string"
        }
      },
      "title": "Real-time server",
      "type": "object",
      "x-box-resource-id": "realtime_server"
    },
    "RealtimeServers": {
      "description": "A list of real-time servers that can\nbe used for long-polling.",
      "properties": {
        "chunk_size": {
          "description": "The number of items in this response.",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "entries": {
          "items": {
            "$ref": "#/definitions/RealtimeServer"
          },
          "type": "array"
        }
      },
      "title": "Real-time servers",
      "type": "object",
      "x-box-resource-id": "realtime_servers",
      "x-box-tag": "events"
    },
    "RecentItem": {
      "description": "A recent item accessed by a user.",
      "properties": {
        "interacted_at": {
          "description": "The time of the most recent interaction.",
          "example": "2018-04-13T13:53:23-07:00",
          "format": "date-time",
          "type": "string"
        },
        "interaction_shared_link": {
          "description": "If the item was accessed through a shared link it will appear here,\notherwise this will be null.",
          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
          "type": "string"
        },
        "interaction_type": {
          "description": "The most recent type of access the user performed on\nthe item.",
          "enum": [
            "item_preview",
            "item_upload",
            "item_comment",
            "item_open",
            "item_modify"
          ],
          "example": "item_preview",
          "type": "string"
        },
        "item": {
          "allOf": [
            {},
            {
              "description": "The item that was recently accessed."
            }
          ]
        },
        "type": {
          "description": "`recent_item`",
          "example": "recent_item",
          "type": "string"
        }
      },
      "title": "Recent item",
      "type": "object",
      "x-box-resource-id": "recent_item",
      "x-box-tag": "recent_items"
    },
    "RecentItems": {
      "allOf": [
        {
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "example": 3000,
              "format": "int64",
              "type": "integer"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/RecentItem"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of recent items.",
      "title": "Recent items",
      "type": "object",
      "x-box-resource-id": "recent_items"
    },
    "RetentionPolicies": {
      "description": "A list of retention policies",
      "properties": {
        "entries": {
          "items": {
            "$ref": "#/definitions/RetentionPolicy"
          },
          "type": "array"
        },
        "total_count": {
          "description": "The number of retention policies.",
          "example": 156,
          "format": "int64",
          "type": "integer"
        }
      },
      "title": "Retention policies",
      "type": "object",
      "x-box-resource-id": "retention_policies",
      "x-box-tag": "retention_policies"
    },
    "RetentionPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/RetentionPolicy--Mini"
        },
        {
          "properties": {
            "created_at": {
              "description": "When the retention policy object was created",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "created_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "A mini user object representing the user that\ncreated the retention policy"
                }
              ]
            },
            "modified_at": {
              "description": "When the retention policy object was last modified",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "policy_type": {
              "description": "The type of the retention policy. A retention\npolicy type can either be `finite`, where a\nspecific amount of time to retain the content is known\nupfront, or `indefinite`, where the amount of time\nto retain the content is still unknown.",
              "enum": [
                "finite",
                "indefinite"
              ],
              "example": "finite",
              "type": "string"
            },
            "status": {
              "description": "The status of the retention policy. The status of\na policy will be `active`, unless explicitly retired by an\nadministrator, in which case the status will be `retired`.\nOnce a policy has been retired, it cannot become\nactive again.",
              "enum": [
                "active",
                "retired"
              ],
              "example": "active",
              "type": "string"
            }
          }
        }
      ],
      "description": "A retention policy blocks permanent deletion of content\nfor a specified amount of time. Admins can create retention\npolicies and then later assign them to specific folders\nor their entire enterprise.  To use this feature, you must\nhave the manage retention policies scope enabled\nfor your API key via your application management console.",
      "title": "Retention policy",
      "type": "object",
      "x-box-resource-id": "retention_policy",
      "x-box-tag": "retention_policies",
      "x-box-variant": "standard"
    },
    "RetentionPolicy--Base": {
      "description": "The bare basic representation of a file version, the minimal\namount of fields returned when using the `fields` query\nparameter.",
      "properties": {
        "id": {
          "description": "The unique identifier that represent a file version.",
          "example": "12345",
          "nullable": false,
          "type": "string"
        },
        "type": {
          "description": "`file_version`",
          "enum": [
            "file_version"
          ],
          "example": "file_version",
          "nullable": false,
          "type": "string"
        }
      },
      "title": "Retention policy (Base)",
      "type": "object",
      "x-box-resource-id": "retention_policy--base",
      "x-box-tag": "retention_policies",
      "x-box-variant": "base",
      "x-box-variants": [
        "base",
        "mini",
        "standard"
      ]
    },
    "RetentionPolicy--Mini": {
      "allOf": [
        {
          "$ref": "#/definitions/RetentionPolicy--Base"
        },
        {
          "properties": {
            "disposition_action": {
              "description": "The disposition action of the retention policy.\nThis action can be `permanently_delete`, which\nwill cause the content retained by the policy\nto be permanently deleted, or `remove_retention`,\nwhich will lift the retention policy from the content,\nallowing it to be deleted by users,\nonce the retention policy has expired.",
              "enum": [
                "permanently_delete",
                "remove_retention"
              ],
              "example": "permanently_delete",
              "type": "string"
            },
            "policy_name": {
              "description": "The name given to the retention policy",
              "example": "Some Policy Name",
              "type": "string"
            },
            "retention_length": {
              "description": "The length of the retention policy. This length\nspecifies the duration in days that the retention\npolicy will be active for after being assigned to\ncontent.  If the policy has A `policy_type` of\n`indefinite`, the `retention_length` will also be\n`indefinite`.",
              "example": "365",
              "format": "int32",
              "minimum": 1,
              "type": "string"
            }
          }
        }
      ],
      "description": "A mini representation of a retention policy, used when\nnested within another resource.",
      "title": "Retention policy (Mini)",
      "type": "object",
      "x-box-resource-id": "retention_policy--mini",
      "x-box-variant": "mini"
    },
    "RetentionPolicyAssignment": {
      "description": "The retention policy assignment endpoint provides a way\nfor admins to apply a retention policy on a per-folder\nbasis, or place a blanket policy over the entire\nenterprise.",
      "properties": {
        "assigned_at": {
          "description": "When the retention policy assignment object was\ncreated",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "assigned_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "A mini user object representing the user that\ncreated the retention policy assignment object"
            }
          ]
        },
        "assigned_to": {
          "allOf": [
            {
              "description": "The bare basic reference for an object",
              "properties": {
                "id": {
                  "description": "The unique identifier for this object",
                  "example": "11446498",
                  "type": "string"
                },
                "type": {
                  "description": "The type for this object",
                  "example": "file",
                  "type": "string"
                }
              },
              "title": "Reference",
              "type": "object"
            },
            {
              "description": "The `type` and `id` of the content that is under\nretention. The `type` can either be `folder` or `\nenterprise`."
            }
          ]
        },
        "id": {
          "description": "The unique identifier for this retention policy assignment",
          "example": "11446498",
          "type": "string"
        },
        "retention_policy": {
          "allOf": [
            {
              "$ref": "#/definitions/RetentionPolicy--Mini"
            },
            {
              "description": "A mini retention policy object representing the\nretention policy that has been assigned to this content"
            }
          ]
        },
        "type": {
          "description": "`retention_policy_assignment`",
          "enum": [
            "retention_policy_assignment"
          ],
          "example": "retention_policy_assignment",
          "type": "string"
        }
      },
      "title": "Retention policy assignment",
      "type": "object",
      "x-box-resource-id": "retention_policy_assignment",
      "x-box-tag": "retention_policy_assignments"
    },
    "RetentionPolicyAssignments": {
      "allOf": [
        {
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "example": 3000,
              "format": "int64",
              "type": "integer"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/RetentionPolicyAssignment"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of retention policy assignments",
      "title": "Retention policy assignments",
      "type": "object",
      "x-box-resource-id": "retention_policy_assignments",
      "x-box-tag": "retention_policy_assignments"
    },
    "SearchResultWithSharedLink": {
      "description": "A single of files, folder or web link that matched the search query,\nincluding the additional information about the shared link through\nwhich the item has been shared with the user.\n\nThis response format is only returned when the\n`include_recent_shared_links` query parameter has been set to `true`.",
      "properties": {
        "accessible_via_shared_link": {
          "description": "The optional shared link through which the user has access to this\nitem. This value is only returned for items for which the user has\nrecently accessed the file through a shared link. For all other\nitems this value will return `null`.",
          "example": "https://www.box.com/s/vspke7y05sb214wjokpk"
        },
        "item": {
          "allOf": [
            {},
            {
              "description": "The file, folder or web link that matched the\nsearch query."
            }
          ]
        },
        "type": {
          "description": "The result type. The value is always `search_result`.",
          "example": "search_result"
        }
      },
      "title": "Search Result (including Shared Link)",
      "type": "object",
      "x-box-resource-id": "search_result_with_shared_link",
      "x-box-tag": "search"
    },
    "SearchResults": {
      "allOf": [
        {
          "properties": {
            "limit": {
              "description": "The limit that was used for this search. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter used.",
              "example": 2000,
              "format": "int64",
              "type": "integer"
            },
            "total_count": {
              "description": "One greater than the offset of the last entry in the search results.\nThe total number of entries in the collection may be less than\n`total_count`.",
              "example": 5000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "description": "The search results for the query provided.",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/File"
                  },
                  {
                    "$ref": "#/definitions/Folder"
                  },
                  {
                    "$ref": "#/definitions/WebLink"
                  }
                ]
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of files, folders and web links that matched the search query.",
      "title": "Search Results",
      "type": "object",
      "x-box-resource-id": "search_results",
      "x-box-tag": "search"
    },
    "SearchResultsWithSharedLinks": {
      "allOf": [
        {
          "properties": {
            "limit": {
              "description": "The limit that was used for this search. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter used.",
              "example": 2000,
              "format": "int64",
              "type": "integer"
            },
            "total_count": {
              "description": "One greater than the offset of the last entry in the search results.\nThe total number of entries in the collection may be less than\n`total_count`.",
              "example": 5000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "description": "The search results for the query provided, including the\nadditional information about any shared links through\nwhich the item has been shared with the user.",
              "items": {
                "$ref": "#/definitions/SearchResultWithSharedLink"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of files, folders and web links that matched the search query,\nincluding the additional information about any shared links through\nwhich the item has been shared with the user.\n\nThis response format is only returned when the `include_recent_shared_links`\nquery parameter has been set to `true`.",
      "title": "Search Results (including Shared Links)",
      "type": "object",
      "x-box-resource-id": "search_results_with_shared_links",
      "x-box-tag": "search"
    },
    "SkillCard": {
      "description": "A generic Box Skill metadata card.",
      "properties": {
        "created_at": {
          "description": "The optional date and time this card was created at.",
          "example": "2018-04-13T13:53:23-07:00",
          "format": "date-time",
          "type": "string"
        },
        "duration": {
          "description": "An optional total duration in seconds.\n\nUsed with a `skill_card_type` of `transcript` or\n`timeline`.",
          "example": 1000,
          "type": "integer"
        },
        "entries": {
          "description": "An optional list of entries in the metadata card.\n\nThis field is used with a `skill_card_type` of\n`transcript`, `keyword` or `timeline`.",
          "items": {
            "description": "An entry in the `entries` attribute of a metadata card",
            "properties": {
              "appears": {
                "description": "Defines a list of timestamps for an entry. This is\nused with a `skill_card_type` of `transcript` as\nwell as `timeline` to place items on a timeline.\n\nFor a `skill_card_type` of `transcript` there can\nonly be one entry in this list for each item, and\nonly the `start` time is used to place the\ntranscript on the timeline.",
                "items": {
                  "description": "The timestamp for an entry.",
                  "properties": {
                    "end": {
                      "description": "The time in seconds when an\nentry should stop appearing on a timeline. For\na `skill_card_type` of `transcript` this value\nis ignored.",
                      "example": 20,
                      "type": "integer"
                    },
                    "start": {
                      "description": "The time in seconds when an\nentry should start appearing on a timeline.",
                      "example": 1,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "required": [
                  "start",
                  "end"
                ],
                "type": "array"
              },
              "image_url": {
                "description": "The image to show on a for an entry that appears\non a timeline. This image URL is required for any\n`timeline` cards. The image will be shown in a\nlist of items (for example faces), and clicking\nthe image will show the user where that entry\nappears during the duration of this entry.",
                "example": "https://example.com/image1.jpg",
                "type": "string"
              },
              "text": {
                "description": "The text of the entry. This would be the actual\nkeyword in a `keyword` card, the line of a\ntranscript in a `transcript` card, or the display\nname for an item when using the `timeline` entry.",
                "example": "keyword1",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "invocation": {
          "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata.",
          "properties": {
            "id": {
              "description": "A custom identifier that represent the instance of\nthe service that applied this metadata. For example,\nif your `image-recognition-service` runs on multiple\nnodes, this field can be used to identify the ID of\nthe node that was used to apply the metadata.",
              "example": "image-recognition-service-123",
              "type": "string"
            },
            "type": {
              "description": "`skill_invocation`",
              "enum": [
                "skill_invocation"
              ],
              "example": "skill_invocation",
              "type": "string"
            }
          },
          "required": [
            "type",
            "id"
          ],
          "type": "object"
        },
        "skill": {
          "description": "The service that applied this metadata.",
          "properties": {
            "id": {
              "description": "A custom identifier that represent the service that\napplied this metadata.",
              "example": "image-recognition-service",
              "type": "string"
            },
            "type": {
              "description": "`service`",
              "enum": [
                "service"
              ],
              "example": "service",
              "type": "string"
            }
          },
          "required": [
            "type",
            "id"
          ],
          "type": "object"
        },
        "skill_card_title": {
          "description": "The title of the card.",
          "properties": {
            "code": {
              "description": "An optional identifier for the title.",
              "example": "my_transcripts",
              "type": "string"
            },
            "message": {
              "description": "The actual title to show in the UI.",
              "example": "My Transcripts",
              "type": "string"
            }
          },
          "required": [
            "message"
          ],
          "type": "object"
        },
        "skill_card_type": {
          "description": "The type of card to add to the file.",
          "enum": [
            "transcript",
            "keyword",
            "timeline",
            "status"
          ],
          "example": "status",
          "type": "string"
        },
        "status": {
          "description": "Used with a card of type `status` to set the status of the skill. This can be used to show a message to the user while the Skill is processing the data.",
          "properties": {
            "code": {
              "description": "A code for the status of this Skill invocation. By\ndefault each of these will have their own accompanied\nmessages. These can be adjusted by setting the `message`\nvalue on this object.",
              "enum": [
                "invoked",
                "processing",
                "success",
                "transient_failure",
                "permanent_failure"
              ],
              "example": "success",
              "type": "string"
            },
            "message": {
              "description": "A custom message that can be provided with this status.\nThis will be shown in the web app to the end user.",
              "example": "We're preparing to process your file. Please hold on!",
              "type": "string"
            }
          },
          "required": [
            "code"
          ],
          "type": "object"
        },
        "type": {
          "description": "`skill_card`",
          "enum": [
            "skill_card"
          ],
          "example": "skill_card",
          "type": "string"
        }
      },
      "required": [
        "type",
        "skill_card_type",
        "skill",
        "invocation"
      ],
      "title": "Skill Card",
      "type": "object",
      "x-box-resource-id": "skill_card",
      "x-box-tag": "skills"
    },
    "SkillCardsMetadata": {
      "description": "The metadata assigned to a using for Box skills.",
      "properties": {
        "$canEdit": {
          "description": "Whether the user can edit this metadata",
          "example": true,
          "type": "boolean"
        },
        "$id": {
          "description": "A UUID to identify the metadata object",
          "example": "01234500-12f1-1234-aa12-b1d234cb567e",
          "format": "uuid",
          "maxLength": 36,
          "type": "string"
        },
        "$parent": {
          "description": "An ID for the parent folder",
          "example": "folder_59449484661,",
          "type": "string"
        },
        "$scope": {
          "description": "An ID for the scope in which this template\nhas been applied",
          "example": "enterprise_27335",
          "type": "string"
        },
        "$template": {
          "description": "The name of the template",
          "example": "properties",
          "type": "string"
        },
        "$type": {
          "description": "A unique identifier for the \"type\" of this instance. This is an internal\nsystem property and should not be used by a client application.",
          "example": "properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0",
          "type": "string"
        },
        "$typeVersion": {
          "description": "The last-known version of the template of the object. This is an internal\nsystem property and should not be used by a client application.",
          "example": 2,
          "type": "integer"
        },
        "$version": {
          "description": "The version of the metadata object. Starts at 0 and increases every time\na user-defined property is modified.",
          "example": 1,
          "type": "integer"
        },
        "cards": {
          "description": "A list of Box Skill cards that have been applied to this file.",
          "items": {},
          "type": "array"
        }
      },
      "title": "Skills metadata instance",
      "type": "object",
      "x-box-resource-id": "skill_cards_metadata",
      "x-box-tag": "skills"
    },
    "SkillInvocation": {
      "description": "The payload of a Box skill as sent to a skill's\n`invocation_url`.",
      "properties": {
        "created_at": {
          "description": "The time this invocation was created.",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "enterprise": {
          "allOf": [
            {
              "description": "A representation of a Box enterprise",
              "properties": {
                "id": {
                  "description": "The unique identifier for this enterprise.",
                  "example": "11446498",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the enterprise",
                  "example": "Acme Inc.",
                  "type": "string"
                },
                "type": {
                  "description": "`enterprise`",
                  "enum": [
                    "enterprise"
                  ],
                  "example": "enterprise",
                  "type": "string"
                }
              },
              "title": "Enterprise",
              "type": "object"
            },
            {
              "description": "The enterprise that this invocation was triggered for"
            }
          ]
        },
        "event": {
          "allOf": [
            {
              "$ref": "#/definitions/Event"
            },
            {
              "description": "The event that triggered this invocation"
            }
          ]
        },
        "id": {
          "description": "Unique identifier for the invocation request.",
          "example": "fd1d2e53-35f5-41fb-9c25-4ba326daf2f9_341016304",
          "type": "string"
        },
        "skill": {
          "allOf": [
            {
              "description": "An object representing a skill",
              "properties": {
                "api_key": {
                  "description": "The client ID of the application",
                  "example": "hxel2s12wd2h9r8ne103c4gjbqefofih",
                  "type": "string"
                },
                "id": {
                  "description": "The unique identifier for this skill",
                  "example": "11446498",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the skill",
                  "example": "Hello World Skill",
                  "type": "string"
                },
                "type": {
                  "description": "`skill`",
                  "enum": [
                    "skill"
                  ],
                  "example": "skill",
                  "type": "string"
                }
              },
              "title": "Skill"
            },
            {
              "description": "The skill that triggered this invocation"
            }
          ]
        },
        "source": {
          "allOf": [
            {
              "oneOf": [
                {
                  "$ref": "#/definitions/File"
                },
                {
                  "$ref": "#/definitions/Folder"
                }
              ]
            },
            {
              "description": "The item that caused the invocation to trigger"
            }
          ]
        },
        "status": {
          "description": "The details status of this event.",
          "properties": {
            "additional_info": {
              "description": "Additional status information.",
              "example": "Example",
              "type": "string"
            },
            "error_code": {
              "description": "Error code information, if error occurred.",
              "example": "400",
              "type": "string"
            },
            "message": {
              "description": "Status information",
              "example": "Example",
              "type": "string"
            },
            "state": {
              "description": "The state of this event.\n\n* `invoked` - Triggered the skill with event details to start\n  applying skill on the file.\n* `processing` - Currently processing.\n* `success` - Completed processing with a success.\n* `transient_failure` - Encountered an issue which can be\n  retried.\n* `permanent_failure` -  Encountered a permanent issue and\n  retry would not help.",
              "enum": [
                "invoked",
                "processing",
                "success",
                "transient_failure",
                "permanent_failure"
              ],
              "example": "invoked",
              "type": "string"
            }
          },
          "type": "object"
        },
        "token": {
          "description": "The read-only and read-write access tokens for this item",
          "properties": {
            "read": {
              "description": "The basics of an access token",
              "properties": {
                "access_token": {
                  "description": "The requested access token.",
                  "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
                  "format": "token",
                  "type": "string"
                },
                "expires_in": {
                  "description": "The time in seconds in seconds by which this token will expire.",
                  "example": 3600,
                  "format": "int64",
                  "type": "integer"
                },
                "restricted_to": {
                  "description": "The permissions that this access token permits,\nproviding a list of resources (files, folders, etc)\nand the scopes permitted for each of those resources.",
                  "items": {
                    "$ref": "#/definitions/FileScope"
                  },
                  "type": "array"
                },
                "token_type": {
                  "description": "The type of access token returned.",
                  "enum": [
                    "bearer"
                  ],
                  "example": "bearer",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "write": {
              "description": "The basics of an access token",
              "properties": {
                "access_token": {
                  "description": "The requested access token.",
                  "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
                  "format": "token",
                  "type": "string"
                },
                "expires_in": {
                  "description": "The time in seconds in seconds by which this token will expire.",
                  "example": 3600,
                  "format": "int64",
                  "type": "integer"
                },
                "restricted_to": {
                  "description": "The permissions that this access token permits,\nproviding a list of resources (files, folders, etc)\nand the scopes permitted for each of those resources.",
                  "items": {
                    "$ref": "#/definitions/FileScope"
                  },
                  "type": "array"
                },
                "token_type": {
                  "description": "The type of access token returned.",
                  "enum": [
                    "bearer"
                  ],
                  "example": "bearer",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "trigger": {
          "description": "Action that triggered the invocation",
          "example": "FILE_CONTENT",
          "type": "string"
        },
        "type": {
          "description": "`skill_invocation`",
          "enum": [
            "skill_invocation"
          ],
          "example": "skill_invocation",
          "type": "string"
        }
      },
      "title": "Skill webhook payload",
      "x-box-resource-id": "skill_invocation",
      "x-box-tag": "skills"
    },
    "StatusSkillCard": {
      "description": "A Box Skill metadata card that puts a status message in the metadata sidebar.",
      "properties": {
        "created_at": {
          "description": "The optional date and time this card was created at.",
          "example": "2018-04-13T13:53:23-07:00",
          "format": "date-time",
          "type": "string"
        },
        "invocation": {
          "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata.",
          "properties": {
            "id": {
              "description": "A custom identifier that represent the instance of\nthe service that applied this metadata. For example,\nif your `image-recognition-service` runs on multiple\nnodes, this field can be used to identify the ID of\nthe node that was used to apply the metadata.",
              "example": "image-recognition-service-123",
              "type": "string"
            },
            "type": {
              "description": "`skill_invocation`",
              "enum": [
                "skill_invocation"
              ],
              "example": "skill_invocation",
              "type": "string"
            }
          },
          "required": [
            "type",
            "id"
          ],
          "type": "object"
        },
        "skill": {
          "description": "The service that applied this metadata.",
          "properties": {
            "id": {
              "description": "A custom identifier that represent the service that\napplied this metadata.",
              "example": "image-recognition-service",
              "type": "string"
            },
            "type": {
              "description": "`service`",
              "enum": [
                "service"
              ],
              "example": "service",
              "type": "string"
            }
          },
          "required": [
            "type",
            "id"
          ],
          "type": "object"
        },
        "skill_card_title": {
          "description": "The title of the card.",
          "properties": {
            "code": {
              "description": "An optional identifier for the title.",
              "example": "status",
              "type": "string"
            },
            "message": {
              "description": "The actual title to show in the UI.",
              "example": "Status",
              "type": "string"
            }
          },
          "required": [
            "message"
          ],
          "type": "object"
        },
        "skill_card_type": {
          "description": "`status`",
          "enum": [
            "status"
          ],
          "example": "status",
          "type": "string"
        },
        "status": {
          "description": "Sets the status of the skill. This can be used to show a message to the user while the Skill is processing the data, or if it was not able to process the file.",
          "properties": {
            "code": {
              "description": "A code for the status of this Skill invocation. By\ndefault each of these will have their own accompanied\nmessages. These can be adjusted by setting the `message`\nvalue on this object.",
              "enum": [
                "invoked",
                "processing",
                "success",
                "transient_failure",
                "permanent_failure"
              ],
              "example": "success",
              "type": "string"
            },
            "message": {
              "description": "A custom message that can be provided with this status.\nThis will be shown in the web app to the end user.",
              "example": "We're preparing to process your file. Please hold on!",
              "type": "string"
            }
          },
          "required": [
            "code"
          ],
          "type": "object"
        },
        "type": {
          "description": "`skill_card`",
          "enum": [
            "skill_card"
          ],
          "example": "skill_card",
          "type": "string"
        }
      },
      "required": [
        "type",
        "skill_card_type",
        "skill",
        "invocation",
        "status"
      ],
      "title": "Status Skill Card",
      "type": "object",
      "x-box-resource-id": "status_skill_card",
      "x-box-tag": "skills"
    },
    "StoragePolicies": {
      "allOf": [
        {
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "example": 3000,
              "format": "int64",
              "type": "integer"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/StoragePolicy"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of storage policies.",
      "title": "Storage policies",
      "type": "object",
      "x-box-resource-id": "storage_policies",
      "x-box-tag": "storage_policies"
    },
    "StoragePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/StoragePolicy--Mini"
        },
        {
          "properties": {
            "name": {
              "description": "A descriptive name of the region",
              "example": "Montreal / Dublin",
              "type": "string"
            }
          }
        }
      ],
      "description": "The Storage Policy object describes the storage zone.",
      "title": "Storage policy",
      "type": "object",
      "x-box-resource-id": "storage_policy",
      "x-box-variant": "standard"
    },
    "StoragePolicy--Mini": {
      "description": "A mini description of a Storage Policy object",
      "properties": {
        "id": {
          "description": "The unique identifier for this storage policy",
          "example": "11446498",
          "type": "string"
        },
        "type": {
          "description": "`storage_policy`",
          "enum": [
            "storage_policy"
          ],
          "example": "storage_policy",
          "type": "string"
        }
      },
      "title": "Storage policy (Mini)",
      "type": "object",
      "x-box-resource-id": "storage_policy--mini",
      "x-box-tag": "storage_policies",
      "x-box-variant": "mini",
      "x-box-variants": [
        "standard",
        "mini"
      ]
    },
    "StoragePolicyAssignment": {
      "description": "The assignment of a storage policy to a user or enterprise",
      "properties": {
        "assigned_to": {
          "allOf": [
            {
              "description": "The bare basic reference for an object",
              "properties": {
                "id": {
                  "description": "The unique identifier for this object",
                  "example": "11446498",
                  "type": "string"
                },
                "type": {
                  "description": "The type for this object",
                  "example": "file",
                  "type": "string"
                }
              },
              "title": "Reference",
              "type": "object"
            },
            {
              "description": "The enterprise or use the policy is assigned to"
            }
          ]
        },
        "storage_policy": {
          "allOf": [
            {
              "$ref": "#/definitions/StoragePolicy--Mini"
            },
            {
              "description": "The assigned storage policy"
            }
          ]
        }
      },
      "title": "Storage policy assignment",
      "type": "object",
      "x-box-resource-id": "storage_policy_assignment",
      "x-box-tag": "storage_policy_assignments"
    },
    "StoragePolicyAssignments": {
      "allOf": [
        {
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "example": 3000,
              "format": "int64",
              "type": "integer"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/StoragePolicyAssignment"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of storage policy assignments.",
      "title": "Storage policy assignments",
      "type": "object",
      "x-box-resource-id": "storage_policy_assignments",
      "x-box-tag": "storage_policy_assignments"
    },
    "Task": {
      "description": "A task allows for file-centric workflows within Box. Users can\ncreate tasks on files and assign them to other users for them to complete the\ntasks.",
      "properties": {
        "action": {
          "description": "The type of task the task assignee will be prompted to\nperform.",
          "enum": [
            "review",
            "complete"
          ],
          "example": "review",
          "type": "string"
        },
        "completion_rule": {
          "description": "Defines which assignees need to complete this task before the task\nis considered completed.\n\n* `all_assignees` requires all assignees to review or\napprove the the task in order for it to be considered completed.\n* `any_assignee` accepts any one assignee to review or\napprove the the task in order for it to be considered completed.",
          "enum": [
            "all_assignees",
            "any_assignee"
          ],
          "example": "all_assignees",
          "type": "string"
        },
        "created_at": {
          "description": "When the task object was created",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "created_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user who created the task"
            }
          ]
        },
        "due_at": {
          "description": "When the task is due",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for this task",
          "example": "11446498",
          "type": "string"
        },
        "is_completed": {
          "description": "Whether the task has been completed",
          "example": true,
          "type": "boolean"
        },
        "item": {
          "allOf": [
            {
              "$ref": "#/definitions/File--Mini"
            },
            {
              "description": "The file associated with the task"
            }
          ]
        },
        "message": {
          "description": "A message that will be included with the task",
          "example": "Legal review",
          "type": "string"
        },
        "task_assignment_collection": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskAssignments"
            },
            {
              "description": "A collection of task assignment objects\nassociated with the task"
            }
          ]
        },
        "type": {
          "description": "`task`",
          "enum": [
            "task"
          ],
          "example": "task",
          "type": "string"
        }
      },
      "title": "Task",
      "type": "object",
      "x-box-resource-id": "task",
      "x-box-tag": "tasks"
    },
    "TaskAssignment": {
      "description": "A task assignment defines which task is assigned to which user to complete.",
      "properties": {
        "assigned_at": {
          "description": "The date at which this task was assigned to the user.",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "assigned_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user who assigned this task."
            }
          ]
        },
        "assigned_to": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user that the task has been assigned to."
            }
          ]
        },
        "completed_at": {
          "description": "The date at which this task assignment was\ncompleted. This will be `null` if the task is not completed yet.",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for this task assignment",
          "example": "11446498",
          "type": "string"
        },
        "item": {
          "allOf": [
            {
              "$ref": "#/definitions/File--Mini"
            },
            {
              "description": "The file that the task has been assigned to."
            }
          ]
        },
        "message": {
          "description": "A message that will is included with the task\nassignment. This is visible to the assigned user in the web and mobile\nUI.",
          "example": "Please review",
          "type": "string"
        },
        "reminded_at": {
          "description": "The date at which the assigned user was reminded of this task\nassignment.",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "resolution_state": {
          "description": "The current state of the assignment. The available states depend on\nthe `action` value of the task object.",
          "enum": [
            "completed",
            "incomplete",
            "approved",
            "rejected"
          ],
          "example": "incomplete",
          "type": "string"
        },
        "type": {
          "description": "`task_assignment`",
          "enum": [
            "task_assignment"
          ],
          "example": "task_assignment",
          "type": "string"
        }
      },
      "title": "Task assignment",
      "type": "object",
      "x-box-resource-id": "task_assignment",
      "x-box-tag": "task_assignments"
    },
    "TaskAssignments": {
      "description": "A list of task assignments",
      "properties": {
        "entries": {
          "items": {
            "$ref": "#/definitions/TaskAssignment"
          },
          "type": "array"
        },
        "total_count": {
          "description": "The total number of items in this collection.",
          "example": 100,
          "format": "int64",
          "type": "integer"
        }
      },
      "title": "Task assignments",
      "type": "object",
      "x-box-resource-id": "task_assignments",
      "x-box-tag": "task_assignments"
    },
    "Tasks": {
      "description": "A list of tasks",
      "properties": {
        "entries": {
          "items": {
            "$ref": "#/definitions/Task"
          },
          "type": "array"
        },
        "total_count": {
          "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.",
          "example": 5000,
          "format": "int64",
          "type": "integer"
        }
      },
      "title": "Tasks",
      "type": "object",
      "x-box-resource-id": "tasks",
      "x-box-tag": "tasks"
    },
    "TermsOfService": {
      "allOf": [
        {
          "$ref": "#/definitions/TermsOfService--Mini"
        },
        {
          "properties": {
            "created_at": {
              "description": "When the legal item was created",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "enterprise": {
              "allOf": [
                {
                  "description": "A representation of a Box enterprise",
                  "properties": {
                    "id": {
                      "description": "The unique identifier for this enterprise.",
                      "example": "11446498",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the enterprise",
                      "example": "Acme Inc.",
                      "type": "string"
                    },
                    "type": {
                      "description": "`enterprise`",
                      "enum": [
                        "enterprise"
                      ],
                      "example": "enterprise",
                      "type": "string"
                    }
                  },
                  "title": "Enterprise",
                  "type": "object"
                },
                {
                  "description": "The enterprise these terms apply to"
                }
              ]
            },
            "modified_at": {
              "description": "When the legal item was modified.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "status": {
              "description": "Whether these terms are enabled or not",
              "enum": [
                "enabled",
                "disabled"
              ],
              "example": "enabled",
              "type": "string"
            },
            "text": {
              "description": "The text for your terms and conditions. This text could be\nempty if the `status` is set to `disabled`.",
              "example": "By using this service, you agree to ...",
              "type": "string"
            },
            "tos_type": {
              "description": "Whether to apply these terms to managed users or external users",
              "enum": [
                "managed",
                "external"
              ],
              "example": "managed",
              "type": "string"
            }
          }
        }
      ],
      "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
      "title": "Terms of service",
      "type": "object",
      "x-box-resource-id": "terms_of_service",
      "x-box-variant": "standard"
    },
    "TermsOfService--Mini": {
      "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
      "properties": {
        "id": {
          "description": "The unique identifier for this terms of service.",
          "example": "11446498",
          "type": "string"
        },
        "type": {
          "description": "`terms_of_service`",
          "enum": [
            "terms_of_service"
          ],
          "example": "terms_of_service",
          "type": "string"
        }
      },
      "title": "Terms of service (Mini)",
      "type": "object",
      "x-box-resource-id": "terms_of_service--mini",
      "x-box-tag": "terms_of_services",
      "x-box-variant": "mini",
      "x-box-variants": [
        "mini",
        "standard"
      ]
    },
    "TermsOfServiceUserStatus": {
      "description": "The association between a Terms of Service and a user",
      "properties": {
        "created_at": {
          "description": "When the legal item was created",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for this terms of service user status",
          "example": "11446498",
          "type": "string"
        },
        "is_accepted": {
          "description": "If the user has accepted the terms of services",
          "example": true,
          "type": "boolean"
        },
        "modified_at": {
          "description": "When the legal item was modified.",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "tos": {
          "allOf": [
            {
              "$ref": "#/definitions/TermsOfService--Mini"
            },
            {
              "description": "The terms of service"
            }
          ]
        },
        "type": {
          "description": "`terms_of_service_user_status`",
          "enum": [
            "terms_of_service_user_status"
          ],
          "example": "terms_of_service_user_status",
          "type": "string"
        },
        "user": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user"
            }
          ]
        }
      },
      "title": "Terms of service user status",
      "type": "object",
      "x-box-resource-id": "terms_of_service_user_status",
      "x-box-tag": "terms_of_service_user_statuses"
    },
    "TermsOfServiceUserStatuses": {
      "description": "A list of terms of service user statuses",
      "properties": {
        "entries": {
          "items": {
            "$ref": "#/definitions/TermsOfServiceUserStatus"
          },
          "type": "array"
        },
        "total_count": {
          "description": "The total number of objects.",
          "example": 2,
          "format": "int64",
          "type": "integer"
        }
      },
      "title": "Terms of service user statuses",
      "type": "object",
      "x-box-resource-id": "terms_of_services_user_statuses",
      "x-box-tag": "terms_of_service_user_statuses"
    },
    "TermsOfServices": {
      "description": "A list of terms of services",
      "properties": {
        "entries": {
          "items": {
            "$ref": "#/definitions/TermsOfService"
          },
          "type": "array"
        },
        "total_count": {
          "description": "The total number of objects.",
          "example": 2,
          "format": "int64",
          "type": "integer"
        }
      },
      "title": "Terms of services",
      "type": "object",
      "x-box-resource-id": "terms_of_services",
      "x-box-tag": "terms_of_services"
    },
    "TimelineSkillCard": {
      "description": "A Box Skill metadata card that places a list of images on a\ntimeline.",
      "properties": {
        "created_at": {
          "description": "The optional date and time this card was created at.",
          "example": "2018-04-13T13:53:23-07:00",
          "format": "date-time",
          "type": "string"
        },
        "duration": {
          "description": "An total duration in seconds of the timeline.",
          "example": 1000,
          "type": "integer"
        },
        "entries": {
          "description": "A list of entries on the timeline.",
          "items": {
            "description": "An single item that's placed on multiple items on the timeline.",
            "properties": {
              "appears": {
                "description": "Defines a list of timestamps for when this item should appear on the\ntimeline.",
                "items": {
                  "description": "The timestamp for an entry.",
                  "properties": {
                    "end": {
                      "description": "The time in seconds when an\nentry should stop appearing on a timeline.",
                      "example": 20,
                      "type": "integer"
                    },
                    "start": {
                      "description": "The time in seconds when an\nentry should start appearing on a timeline.",
                      "example": 1,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "required": [
                  "start",
                  "end"
                ],
                "type": "array"
              },
              "image_url": {
                "description": "The image to show on a for an entry that appears\non a timeline. This image URL is required for every entry.\n\nThe image will be shown in a\nlist of items (for example faces), and clicking\nthe image will show the user where that entry\nappears during the duration of this entry.",
                "example": "https://example.com/image1.jpg",
                "type": "string"
              },
              "text": {
                "description": "The text of the entry. This would be the display\nname for an item being placed on the timeline, for example the name\nof the person who was detected in a video.",
                "example": "John",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "invocation": {
          "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata.",
          "properties": {
            "id": {
              "description": "A custom identifier that represent the instance of\nthe service that applied this metadata. For example,\nif your `image-recognition-service` runs on multiple\nnodes, this field can be used to identify the ID of\nthe node that was used to apply the metadata.",
              "example": "image-recognition-service-123",
              "type": "string"
            },
            "type": {
              "description": "`skill_invocation`",
              "enum": [
                "skill_invocation"
              ],
              "example": "skill_invocation",
              "type": "string"
            }
          },
          "required": [
            "type",
            "id"
          ],
          "type": "object"
        },
        "skill": {
          "description": "The service that applied this metadata.",
          "properties": {
            "id": {
              "description": "A custom identifier that represent the service that\napplied this metadata.",
              "example": "image-recognition-service",
              "type": "string"
            },
            "type": {
              "description": "`service`",
              "enum": [
                "service"
              ],
              "example": "service",
              "type": "string"
            }
          },
          "required": [
            "type",
            "id"
          ],
          "type": "object"
        },
        "skill_card_title": {
          "description": "The title of the card.",
          "properties": {
            "code": {
              "description": "An optional identifier for the title.",
              "example": "Faces",
              "type": "string"
            },
            "message": {
              "description": "The actual title to show in the UI.",
              "example": "Faces",
              "type": "string"
            }
          },
          "required": [
            "message"
          ],
          "type": "object"
        },
        "skill_card_type": {
          "description": "`timeline`",
          "enum": [
            "timeline"
          ],
          "example": "timeline",
          "type": "string"
        },
        "type": {
          "description": "`skill_card`",
          "enum": [
            "skill_card"
          ],
          "example": "skill_card",
          "type": "string"
        }
      },
      "required": [
        "type",
        "skill_card_type",
        "skill",
        "invocation",
        "entries"
      ],
      "title": "Timeline Skill Card",
      "type": "object",
      "x-box-resource-id": "timeline_skill_card",
      "x-box-tag": "skills"
    },
    "TranscriptSkillCard": {
      "description": "A Box Skill metadata card that adds a transcript to a file.",
      "properties": {
        "created_at": {
          "description": "The optional date and time this card was created at.",
          "example": "2018-04-13T13:53:23-07:00",
          "format": "date-time",
          "type": "string"
        },
        "duration": {
          "description": "An optional total duration in seconds.\n\nUsed with a `skill_card_type` of `transcript` or\n`timeline`.",
          "example": 1000,
          "type": "integer"
        },
        "entries": {
          "description": "An list of entries for the card. This represents the individual entries of\nthe transcription.",
          "items": {
            "description": "An entry in the `entries` attribute of a metadata card",
            "properties": {
              "appears": {
                "description": "Defines when a transcribed bit of text appears. This only includes a\nstart time and no end time.",
                "items": {
                  "description": "The timestamp for an entry.",
                  "properties": {
                    "start": {
                      "description": "The time in seconds when an\nentry should start appearing on a timeline.",
                      "example": 1,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "required": [
                  "start"
                ],
                "type": "array"
              },
              "text": {
                "description": "The text of the entry. This would be the transcribed text assigned\nto the entry on the timeline.",
                "example": "Hi, and welcome to this video...",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "invocation": {
          "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata.",
          "properties": {
            "id": {
              "description": "A custom identifier that represent the instance of\nthe service that applied this metadata. For example,\nif your `image-recognition-service` runs on multiple\nnodes, this field can be used to identify the ID of\nthe node that was used to apply the metadata.",
              "example": "transciption-service-123",
              "type": "string"
            },
            "type": {
              "description": "`skill_invocation`",
              "enum": [
                "skill_invocation"
              ],
              "example": "skill_invocation",
              "type": "string"
            }
          },
          "required": [
            "type",
            "id"
          ],
          "type": "object"
        },
        "skill": {
          "description": "The service that applied this metadata.",
          "properties": {
            "id": {
              "description": "A custom identifier that represent the service that\napplied this metadata.",
              "example": "transciption-service",
              "type": "string"
            },
            "type": {
              "description": "`service`",
              "enum": [
                "service"
              ],
              "example": "service",
              "type": "string"
            }
          },
          "required": [
            "type",
            "id"
          ],
          "type": "object"
        },
        "skill_card_title": {
          "description": "The title of the card.",
          "properties": {
            "code": {
              "description": "An optional identifier for the title.",
              "example": "my_transcripts",
              "type": "string"
            },
            "message": {
              "description": "The actual title to show in the UI.",
              "example": "My Transcripts",
              "type": "string"
            }
          },
          "required": [
            "message"
          ],
          "type": "object"
        },
        "skill_card_type": {
          "description": "`transcript`",
          "enum": [
            "transcript"
          ],
          "example": "transcript",
          "type": "string"
        },
        "type": {
          "description": "`skill_card`",
          "enum": [
            "skill_card"
          ],
          "example": "skill_card",
          "type": "string"
        }
      },
      "required": [
        "type",
        "skill_card_type",
        "skill",
        "invocation",
        "entries"
      ],
      "title": "Transcript Skill Card",
      "type": "object",
      "x-box-resource-id": "transcript_skill_card",
      "x-box-tag": "skills"
    },
    "UploadPart": {
      "allOf": [
        {
          "$ref": "#/definitions/UploadPart--Mini"
        },
        {
          "properties": {
            "sha1": {
              "description": "The SHA1 hash of the chunk.",
              "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
              "type": "string"
            }
          }
        }
      ],
      "description": "The representation of an upload\nsession chunk.",
      "title": "Upload part",
      "type": "object",
      "x-box-resource-id": "upload_part",
      "x-box-variant": "standard"
    },
    "UploadPart--Mini": {
      "description": "The basic representation of an upload\nsession chunk.",
      "properties": {
        "offset": {
          "description": "The offset of the chunk within the file\nin bytes. The lower bound of the position\nof the chunk within the file.",
          "example": 16777216,
          "format": "int64",
          "type": "integer"
        },
        "part_id": {
          "description": "The unique ID of the chunk.",
          "example": "6F2D3486",
          "type": "string"
        },
        "size": {
          "description": "The size of the chunk in bytes.",
          "example": 3222784,
          "format": "int64",
          "type": "integer"
        }
      },
      "title": "Upload part (Mini)",
      "type": "object",
      "x-box-resource-id": "upload_part--mini",
      "x-box-tag": "chunked_uploads",
      "x-box-variant": "mini",
      "x-box-variants": [
        "mini",
        "standard"
      ]
    },
    "UploadParts": {
      "allOf": [
        {
          "description": "The part of an API response that describes pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 2000,
              "format": "int64",
              "type": "integer"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "items": {
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "example": "type",
                    "type": "string"
                  },
                  "direction": {
                    "description": "The direction to order by, either ascending or descending",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "example": "ASC",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 5000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/UploadPart"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of uploaded chunks for an upload\nsession.",
      "title": "Upload parts",
      "type": "object",
      "x-box-resource-id": "upload_parts",
      "x-box-tag": "chunked_uploads"
    },
    "UploadSession": {
      "description": "An upload session for chunk uploading a file.",
      "properties": {
        "id": {
          "description": "The unique identifier for this session",
          "example": "F971964745A5CD0C001BBE4E58196BFD",
          "type": "string"
        },
        "num_parts_processed": {
          "description": "The number of parts that have been uploaded and processed\nby the server. This starts at `0`.\n\nWhen committing a file files, inspecting this property can\nprovide insight if all parts have been uploaded correctly.",
          "example": 455,
          "format": "int32",
          "type": "integer"
        },
        "part_size": {
          "description": "The  size in bytes that must be used for all parts of of the\nupload.\n\nOnly the last part is allowed to be of a smaller size.",
          "example": 1024,
          "format": "int64",
          "type": "integer"
        },
        "session_endpoints": {
          "allOf": [
            {
              "description": "A list of endpoints for a chunked upload session.",
              "properties": {
                "abort": {
                  "description": "The URL for used to abort the session.",
                  "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD",
                  "type": "string"
                },
                "commit": {
                  "description": "The URL used to commit the file",
                  "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/commit",
                  "type": "string"
                },
                "list_parts": {
                  "description": "The URL users to list all parts.",
                  "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/parts",
                  "type": "string"
                },
                "log_event": {
                  "description": "The URL used to get the upload log from.",
                  "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/log",
                  "type": "string"
                },
                "status": {
                  "description": "The URL used to get the status of the upload.",
                  "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD",
                  "type": "string"
                },
                "upload_part": {
                  "description": "The URL to upload parts to",
                  "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD",
                  "type": "string"
                }
              },
              "title": "Session endpoints",
              "type": "object"
            },
            {
              "description": "A list of endpoints for this session."
            }
          ]
        },
        "session_expires_at": {
          "description": "The date and time when this session expires.",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "total_parts": {
          "description": "The total number of parts expected in this upload session,\nas determined by the file size and part size.",
          "example": 1000,
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "description": "`upload_session`",
          "enum": [
            "upload_session"
          ],
          "example": "upload_session",
          "type": "string"
        }
      },
      "title": "Upload session",
      "type": "object",
      "x-box-resource-id": "upload_session",
      "x-box-tag": "chunked_uploads"
    },
    "UploadUrl": {
      "description": "The details for the upload session for the file.",
      "properties": {
        "upload_token": {
          "description": "An optional access token to use to upload the file",
          "example": "Pc3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQP",
          "type": "string"
        },
        "upload_url": {
          "description": "A URL for an upload session that can be used to upload\nthe file.",
          "example": "https://upload-las.app.box.com/api/2.0/files/content?upload_session_id=1234",
          "type": "string"
        }
      },
      "title": "Upload URL",
      "type": "object",
      "x-box-resource-id": "upload_url",
      "x-box-tag": "uploads"
    },
    "UploadedPart": {
      "description": "A chunk of a file uploaded as part of\nan upload session, as returned by some endpoints.",
      "properties": {
        "part": {
          "$ref": "#/definitions/UploadPart"
        }
      },
      "title": "Uploaded part",
      "type": "object",
      "x-box-resource-id": "uploaded_part",
      "x-box-tag": "chunked_uploads"
    },
    "User": {
      "allOf": [
        {
          "$ref": "#/definitions/User--Mini"
        },
        {
          "properties": {
            "address": {
              "description": "The user’s address",
              "example": "900 Jefferson Ave, Redwood City, CA 94063",
              "maxLength": 255,
              "type": "string"
            },
            "avatar_url": {
              "description": "URL of the user’s avatar image",
              "example": "https://www.box.com/api/avatar/large/181216415",
              "type": "string"
            },
            "created_at": {
              "description": "When the user object was created",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "job_title": {
              "description": "The user’s job title",
              "example": "CEO",
              "maxLength": 100,
              "type": "string"
            },
            "language": {
              "description": "The language of the user, formatted in modified version of the\n[ISO 639-1](/guides/api-calls/language-codes) format.",
              "example": "en",
              "type": "string"
            },
            "max_upload_size": {
              "description": "The maximum individual file size in bytes the user can have",
              "example": 2147483648,
              "format": "int64",
              "type": "integer"
            },
            "modified_at": {
              "description": "When the user object was last modified",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "notification_email": {
              "description": "An alternate notification email address to which email\nnotifications are sent. When it's confirmed, this will be\nthe email address to which notifications are sent instead of\nto the primary email address.",
              "nullable": true,
              "properties": {
                "email": {
                  "description": "The email address to send the notifications to.",
                  "example": "notifications@example.com",
                  "type": "string"
                },
                "is_confirmed": {
                  "description": "Specifies if this email address has been confirmed.",
                  "example": true,
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "phone": {
              "description": "The user’s phone number",
              "example": "6509241374",
              "maxLength": 100,
              "type": "string"
            },
            "space_amount": {
              "description": "The user’s total available space amount in bytes",
              "example": 11345156112,
              "format": "int64",
              "type": "integer"
            },
            "space_used": {
              "description": "The amount of space in use by the user",
              "example": 1237009912,
              "format": "int64",
              "type": "integer"
            },
            "status": {
              "description": "The user's account status",
              "enum": [
                "active",
                "inactive",
                "cannot_delete_edit",
                "cannot_delete_edit_upload"
              ],
              "example": "active",
              "type": "string"
            },
            "timezone": {
              "description": "The user's timezone",
              "example": "Africa/Bujumbura",
              "format": "timezone",
              "type": "string"
            }
          }
        }
      ],
      "description": "A standard representation of a user, as returned from any\nuser API endpoints by default",
      "title": "User",
      "type": "object",
      "x-box-resource-id": "user",
      "x-box-variant": "standard"
    },
    "User--Base": {
      "description": "A mini representation of a user, used when\nnested within another resource.",
      "properties": {
        "id": {
          "description": "The unique identifier for this user",
          "example": "11446498",
          "type": "string"
        },
        "type": {
          "description": "`user`",
          "enum": [
            "user"
          ],
          "example": "user",
          "nullable": false,
          "type": "string"
        }
      },
      "title": "User (Base)",
      "type": "object",
      "x-box-resource-id": "user--base",
      "x-box-tag": "users",
      "x-box-variant": "base",
      "x-box-variants": [
        "base",
        "mini",
        "standard",
        "full"
      ]
    },
    "User--Full": {
      "allOf": [
        {
          "$ref": "#/definitions/User"
        },
        {
          "properties": {
            "can_see_managed_users": {
              "description": "Whether the user can see other enterprise users in their contact list",
              "example": true,
              "type": "boolean"
            },
            "enterprise": {
              "allOf": [
                {
                  "description": "A representation of a Box enterprise",
                  "properties": {
                    "id": {
                      "description": "The unique identifier for this enterprise.",
                      "example": "11446498",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the enterprise",
                      "example": "Acme Inc.",
                      "type": "string"
                    },
                    "type": {
                      "description": "`enterprise`",
                      "enum": [
                        "enterprise"
                      ],
                      "example": "enterprise",
                      "type": "string"
                    }
                  },
                  "title": "Enterprise",
                  "type": "object"
                },
                {
                  "description": "Representation of the user’s enterprise"
                }
              ]
            },
            "external_app_user_id": {
              "description": "An external identifier for an app user, which can be used to look up\nthe user. This can be used to tie user IDs from external identity\nproviders to Box users.",
              "example": "my-user-1234",
              "type": "string"
            },
            "hostname": {
              "description": "The root (protocol, subdomain, domain) of any links that need to be\ngenerated for the user",
              "example": "https://example.app.box.com/",
              "type": "string"
            },
            "is_exempt_from_device_limits": {
              "description": "Whether to exempt the user from Enterprise device limits",
              "example": true,
              "type": "boolean"
            },
            "is_exempt_from_login_verification": {
              "description": "Whether the user must use two-factor authentication",
              "example": true,
              "type": "boolean"
            },
            "is_external_collab_restricted": {
              "description": "Whether the user is allowed to collaborate with users outside their\nenterprise",
              "example": true,
              "type": "boolean"
            },
            "is_platform_access_only": {
              "description": "Whether the user is an App User",
              "example": true,
              "type": "boolean"
            },
            "is_sync_enabled": {
              "description": "Whether the user can use Box Sync",
              "example": true,
              "type": "boolean"
            },
            "my_tags": {
              "description": "Tags for all files and folders owned by the user. Values returned\nwill only contain tags that were set by the requester.",
              "example": [
                "important"
              ],
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "role": {
              "description": "The user’s enterprise role",
              "enum": [
                "admin",
                "coadmin",
                "user"
              ],
              "example": "admin",
              "type": "string"
            },
            "tracking_codes": {
              "description": "Tracking codes allow an admin to generate reports from the\nadmin console and assign an attribute to a specific group\nof users. This setting must be enabled for an enterprise\nbefore it can be used.",
              "items": {
                "description": "Custom tracking code for a user.",
                "properties": {
                  "name": {
                    "description": "The name of the tracking code, which must be preconfigured in\nthe Admin Console",
                    "example": "department",
                    "type": "string"
                  },
                  "type": {
                    "description": "`tracking_code`",
                    "enum": [
                      "tracking_code"
                    ],
                    "example": "tracking_code",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of the tracking code",
                    "example": "Sales",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A full representation of a user, as can be returned from any\nuser API endpoint.",
      "title": "User (Full)",
      "type": "object",
      "x-box-resource-id": "user--full",
      "x-box-variant": "full"
    },
    "User--Mini": {
      "allOf": [
        {
          "$ref": "#/definitions/User--Base"
        },
        {
          "properties": {
            "login": {
              "description": "The primary email address of this user",
              "example": "ceo@example.com",
              "format": "email",
              "nullable": false,
              "type": "string"
            },
            "name": {
              "description": "The display name of this user",
              "example": "Aaron Levie",
              "maxLength": 50,
              "nullable": false,
              "type": "string"
            }
          }
        }
      ],
      "description": "A mini representation of a user, as can be returned when nested within other\nresources.",
      "title": "User (Mini)",
      "type": "object",
      "x-box-resource-id": "user--mini",
      "x-box-variant": "mini"
    },
    "Users": {
      "allOf": [
        {
          "description": "The part of an API response that describes pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 2000,
              "format": "int64",
              "type": "integer"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "items": {
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "example": "type",
                    "type": "string"
                  },
                  "direction": {
                    "description": "The direction to order by, either ascending or descending",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "example": "ASC",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "example": 5000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of users.",
      "title": "Users",
      "type": "object",
      "x-box-resource-id": "users",
      "x-box-tag": "users"
    },
    "Watermark": {
      "description": "A watermark is a semi-transparent overlay on an embedded file\npreview that displays a viewer's email address or user ID\nand the time of access over a file's content",
      "properties": {
        "watermark": {
          "properties": {
            "created_at": {
              "description": "When this watermark was created",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "modified_at": {
              "description": "When this task was modified",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "title": "Watermark",
      "type": "object",
      "x-box-resource-id": "watermark",
      "x-box-tag": "file_watermarks"
    },
    "WebLink": {
      "allOf": [
        {
          "$ref": "#/definitions/WebLink--Mini"
        },
        {
          "properties": {
            "created_at": {
              "description": "When this file was created on Box’s servers.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "created_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who created this web link"
                }
              ]
            },
            "description": {
              "description": "The description accompanying the web link. This is\nvisible within the Box web application.",
              "example": "Example page",
              "type": "string"
            },
            "item_status": {
              "description": "Whether this item is deleted or not. Values include `active`,\n`trashed` if the file has been moved to the trash, and `deleted` if\nthe file has been permanently deleted",
              "enum": [
                "active",
                "trashed",
                "deleted"
              ],
              "example": "active",
              "type": "string"
            },
            "modified_at": {
              "description": "When this file was last updated on the Box\nservers.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "type": "string"
            },
            "modified_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who last modified this web link"
                }
              ]
            },
            "owned_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who owns this web link"
                }
              ]
            },
            "parent": {
              "allOf": [
                {
                  "$ref": "#/definitions/Folder--Mini"
                },
                {
                  "description": "The parent object the web link belongs to"
                }
              ]
            },
            "path_collection": {
              "description": "The path of folders to this link, starting at the root",
              "items": {
                "$ref": "#/definitions/Folder--Mini"
              },
              "type": "array"
            },
            "purged_at": {
              "description": "When this file will be permanently deleted.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "shared_link": {
              "allOf": [
                {
                  "description": "Shared links provide direct, read-only access to files or folder on Box.\n\nShared links with open access level allow anyone with the URL\nto access the item, while shared links with company or collaborators access\nlevels can only be accessed by appropriately authenticated Box users.",
                  "properties": {
                    "access": {
                      "description": "The access level for this shared link.\n\n* `open` - provides access to this item to anyone with this link\n* `company` - only provides access to this item to people the same company\n* `collaborators` - only provides access to this item to people who are\n   collaborators on this item\n\nIf this field is omitted when creating the shared link, the access level\nwill be set to the default access level specified by the enterprise admin.",
                      "enum": [
                        "open",
                        "company",
                        "collaborators"
                      ],
                      "example": "open",
                      "nullable": false,
                      "type": "string"
                    },
                    "download_count": {
                      "description": "The number of times this item has been downloaded.",
                      "example": 3,
                      "nullable": false,
                      "type": "integer"
                    },
                    "download_url": {
                      "description": "A URL that can be used to download the file. This URL can be used in\na browser to download the file. This URL includes the file\nextension so that the file will be saved with the right file type.\n\nThis property will be `null` for folders.",
                      "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                      "format": "url",
                      "nullable": true,
                      "type": "string",
                      "x-box-premium-feature": true
                    },
                    "effective_access": {
                      "description": "The effective access level for the shared link. This can be a more\nrestrictive access level than the value in the `access` field when the\nenterprise settings restrict the allowed access levels.",
                      "enum": [
                        "open",
                        "company",
                        "collaborators"
                      ],
                      "example": "company",
                      "nullable": false,
                      "type": "string"
                    },
                    "effective_permission": {
                      "description": "The effective permissions for this shared link.",
                      "enum": [
                        "can_download",
                        "can_preview"
                      ],
                      "example": "can_download",
                      "nullable": false,
                      "type": "string"
                    },
                    "is_password_enabled": {
                      "description": "Defines if the shared link requires a password to access the item.",
                      "example": true,
                      "nullable": false,
                      "type": "boolean"
                    },
                    "permissions": {
                      "description": "Defines if this link allows a user to preview and download an item.",
                      "properties": {
                        "can_download": {
                          "description": "Defines if the shared link allows for the item to be downloaded. For\nshared links on folders, this also applies to any items in the folder.\n\nThis value can be set to `true` when the effective access level is\nset to `open` or `company`, not `collaborators`.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "can_preview": {
                          "description": "Defines if the shared link allows for the item to be previewed.\n\nThis value is always `true`. For shared links on folders this also\napplies to any items in the folder.",
                          "example": true,
                          "nullable": false,
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "preview_count": {
                      "description": "The number of times this item has been previewed.",
                      "example": 3,
                      "nullable": false,
                      "type": "integer"
                    },
                    "unshared_at": {
                      "description": "The date and time when this link will be unshared. This field can only be\nset by users with paid accounts.",
                      "example": "2018-04-13T13:53:23-07:00",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL that can be used to access the item on Box.\n\nThis URL will display the item in Box's preview UI where the file\ncan be downloaded if allowed.\n\nThis URL will continue to work even when a custom `vanity_url`\nhas been set for this shared link.",
                      "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                      "format": "url",
                      "nullable": false,
                      "type": "string"
                    },
                    "vanity_name": {
                      "description": "The custom name of a shared link, as used in the `vanity_url` field.",
                      "example": "my_url",
                      "nullable": true,
                      "type": "string"
                    },
                    "vanity_url": {
                      "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom\nURLs can only be created or modified in the Box Web application.",
                      "example": "https://acme.app.box.com/v/my_url/",
                      "format": "url",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "title": "Shared link",
                  "type": "object"
                },
                {
                  "description": "The shared link object for this item. Will be\n`null` if no shared link has been created."
                },
                {
                  "nullable": true
                }
              ]
            },
            "trashed_at": {
              "description": "When this file was last moved to the trash.",
              "example": "2012-12-12T10:53:43-08:00",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          }
        }
      ],
      "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\n\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
      "title": "Web link",
      "type": "object",
      "x-box-resource-id": "web_link",
      "x-box-variant": "standard"
    },
    "WebLink--Base": {
      "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\n\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
      "properties": {
        "etag": {
          "description": "The entity tag of this web link. Used with `If-Match`\nheaders.",
          "example": "1",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for this web link",
          "example": "11446498",
          "type": "string"
        },
        "type": {
          "description": "`web_link`",
          "enum": [
            "web_link"
          ],
          "example": "web_link",
          "type": "string"
        }
      },
      "title": "Web link (Base)",
      "type": "object",
      "x-box-resource-id": "web_link--base",
      "x-box-tag": "web_links",
      "x-box-variant": "base",
      "x-box-variants": [
        "base",
        "mini",
        "standard"
      ]
    },
    "WebLink--Mini": {
      "allOf": [
        {
          "$ref": "#/definitions/WebLink--Base"
        },
        {
          "properties": {
            "name": {
              "description": "The name of the web link",
              "example": "My Bookmark",
              "type": "string"
            },
            "sequence_id": {
              "allOf": [
                {
                  "description": "A numeric identifier that represents the most recent user event\nthat has been applied to this item.\n\nThis can be used in combination with the `GET /events`-endpoint\nto filter out user events that would have occurred before this\nidentifier was read.\n\nAn example would be where a Box Drive-like application\nwould fetch an item via the API, and then listen to incoming\nuser events for changes to the item. The application would\nignore any user events where the `sequence_id` in the event\nis smaller than or equal to the `sequence_id` in the originally\nfetched resource.",
                  "example": "3",
                  "nullable": false,
                  "type": "string"
                },
                {
                  "nullable": false
                }
              ]
            },
            "url": {
              "description": "The URL this web link points to",
              "example": "https://www.example.com/example/1234",
              "type": "string"
            }
          }
        }
      ],
      "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\n\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
      "title": "Web link (Mini)",
      "type": "object",
      "x-box-resource-id": "web_link--mini",
      "x-box-variant": "mini"
    },
    "Webhook": {
      "description": "Represents a configured webhook.",
      "properties": {
        "address": {
          "description": "The URL that is notified by this webhook",
          "example": "https://example.com/webhooks",
          "type": "string"
        },
        "created_at": {
          "description": "A timestamp identifying the time that\nthe webhook was created.",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "created_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user who created the webhook"
            }
          ]
        },
        "id": {
          "description": "The unique identifier for this webhook.",
          "example": "11446498",
          "type": "string"
        },
        "target": {
          "description": "The item that will trigger the webhook",
          "properties": {
            "id": {
              "description": "The ID of the item to trigger a webhook",
              "example": "1231232",
              "type": "string"
            },
            "type": {
              "description": "The type of item to trigger a webhook",
              "enum": [
                "file",
                "folder"
              ],
              "example": "file",
              "type": "string"
            }
          },
          "type": "object"
        },
        "triggers": {
          "description": "An array of event names that this webhook is\nto be triggered for",
          "example": [
            "FILE.UPLOADED"
          ],
          "items": {
            "description": "The event name that triggered this webhook",
            "enum": [
              "FILE.UPLOADED",
              "FILE.PREVIEWED",
              "FILE.DOWNLOADED",
              "FILE.TRASHED",
              "FILE.DELETED",
              "FILE.RESTORED",
              "FILE.COPIED",
              "FILE.MOVED",
              "FILE.LOCKED",
              "FILE.UNLOCKED",
              "FILE.RENAMED",
              "COMMENT.CREATED",
              "COMMENT.UPDATED",
              "COMMENT.DELETED",
              "TASK_ASSIGNMENT.CREATED",
              "TASK_ASSIGNMENT.UPDATED",
              "METADATA_INSTANCE.CREATED",
              "METADATA_INSTANCE.UPDATED",
              "METADATA_INSTANCE.DELETED",
              "FOLDER.CREATED",
              "FOLDER.RENAMED",
              "FOLDER.DOWNLOADED",
              "FOLDER.RESTORED",
              "FOLDER.DELETED",
              "FOLDER.COPIED",
              "FOLDER.MOVED",
              "FOLDER.TRASHED",
              "WEBHOOK.DELETED",
              "COLLABORATION.CREATED",
              "COLLABORATION.ACCEPTED",
              "COLLABORATION.REJECTED",
              "COLLABORATION.REMOVED",
              "COLLABORATION.UPDATED",
              "SHARED_LINK.DELETED",
              "SHARED_LINK.CREATED",
              "SHARED_LINK.UPDATED"
            ],
            "example": "FILE.UPLOADED",
            "title": "Webhook Trigger",
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "description": "`webhook`",
          "enum": [
            "webhook"
          ],
          "example": "webhook",
          "type": "string"
        }
      },
      "title": "Webhook",
      "type": "object",
      "x-box-resource-id": "webhook",
      "x-box-tag": "webhooks"
    },
    "WebhookInvocation": {
      "description": "The event that is sent to a webhook address when an event happens.",
      "properties": {
        "created_at": {
          "description": "A timestamp identifying the time that\nthe webhook event was triggered.",
          "example": "2012-12-12T10:53:43-08:00",
          "format": "date-time",
          "type": "string"
        },
        "created_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user that triggered this event"
            }
          ]
        },
        "id": {
          "description": "The unique identifier for this webhook invocation",
          "example": "11446498",
          "type": "string"
        },
        "source": {
          "allOf": [
            {
              "oneOf": [
                {
                  "$ref": "#/definitions/File"
                },
                {
                  "$ref": "#/definitions/Folder"
                }
              ]
            },
            {
              "description": "The item that caused the event to trigger"
            }
          ]
        },
        "trigger": {
          "allOf": [
            {
              "description": "The event name that triggered this webhook",
              "enum": [
                "FILE.UPLOADED",
                "FILE.PREVIEWED",
                "FILE.DOWNLOADED",
                "FILE.TRASHED",
                "FILE.DELETED",
                "FILE.RESTORED",
                "FILE.COPIED",
                "FILE.MOVED",
                "FILE.LOCKED",
                "FILE.UNLOCKED",
                "FILE.RENAMED",
                "COMMENT.CREATED",
                "COMMENT.UPDATED",
                "COMMENT.DELETED",
                "TASK_ASSIGNMENT.CREATED",
                "TASK_ASSIGNMENT.UPDATED",
                "METADATA_INSTANCE.CREATED",
                "METADATA_INSTANCE.UPDATED",
                "METADATA_INSTANCE.DELETED",
                "FOLDER.CREATED",
                "FOLDER.RENAMED",
                "FOLDER.DOWNLOADED",
                "FOLDER.RESTORED",
                "FOLDER.DELETED",
                "FOLDER.COPIED",
                "FOLDER.MOVED",
                "FOLDER.TRASHED",
                "WEBHOOK.DELETED",
                "COLLABORATION.CREATED",
                "COLLABORATION.ACCEPTED",
                "COLLABORATION.REJECTED",
                "COLLABORATION.REMOVED",
                "COLLABORATION.UPDATED",
                "SHARED_LINK.DELETED",
                "SHARED_LINK.CREATED",
                "SHARED_LINK.UPDATED"
              ],
              "example": "FILE.UPLOADED",
              "title": "Webhook Trigger",
              "type": "string"
            },
            {
              "description": "The event name that triggered this webhook"
            }
          ]
        },
        "type": {
          "description": "`webhook_event`",
          "enum": [
            "webhook_event"
          ],
          "example": "webhook_event",
          "type": "string"
        },
        "webhook": {
          "allOf": [
            {
              "$ref": "#/definitions/Webhook"
            },
            {
              "description": "The webhook object that triggered this event"
            }
          ]
        }
      },
      "title": "Webhook (V2) payload",
      "x-box-resource-id": "webhook_invocation",
      "x-box-tag": "webhooks"
    },
    "Webhooks": {
      "allOf": [
        {
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "example": 3000,
              "format": "int64",
              "type": "integer"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "example": 1000,
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "entries": {
              "items": {
                "$ref": "#/definitions/Webhook"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "A list of webhooks.",
      "title": "Webhooks",
      "type": "object",
      "x-box-resource-id": "webhooks",
      "x-box-tag": "webhooks"
    },
    "ZipDownload": {
      "description": "Represents a successful request to create a `zip` archive of a list of files\nand folders.",
      "example": {
        "download_url": "https://dl.boxcloud.com/2.0/zip_downloads/29l00nfxDyHOt7RphI9zT_w==nDnZEDjY2S8iEWWCHEEiptFxwoWojjlibZjJ6geuE5xnXENDTPxzgbks_yY=/content",
        "expires_at": "2020-07-22T11:26:08Z",
        "name_conflicts": [
          [
            {
              "download_name": "3aa6a7.pdf",
              "id": "12345",
              "original_name": "Report.pdf",
              "type": "file"
            },
            {
              "download_name": "5d53f2.pdf",
              "id": "34325",
              "original_name": "Report.pdf",
              "type": "file"
            }
          ]
        ],
        "status_url": "https://api.box.com/2.0/zip_downloads/29l00nfxDyHOt7RphI9zT_w==nDnZEDjY2S8iEWWCHEEiptFxwoWojjlibZjJ6geuE5xnXENDTPxzgbks_yY=/status"
      },
      "properties": {
        "download_url": {
          "description": "The URL that can be used to download the `zip` archive. A `Get` request to\nthis URL will start streaming the items requested. By default, this URL\nis only valid for a few seconds, until the `exires_at` time, unless a\ndownload is started after which it is valid for the duration of the\ndownload.\n\nIt is important to note that the domain and path of this URL might change\nbetween API calls, and therefore it's important to use this URL as-is.",
          "example": "https://dl.boxcloud.com/2.0/zip_downloads/Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd/content",
          "type": "string"
        },
        "expires_at": {
          "description": "The time and date when this archive will expire. After this time the\n`status_url` and `download_url` will return an error.\n\nBy default, these URLs are only valid for a few seconds, unless a download\nis started after which the `download_url` is valid for the duration of the\ndownload, and the `status_url` is valid for 12 hours from the start of the\ndownload.",
          "example": "2019-08-29T23:59:00-07:00",
          "format": "date-time",
          "type": "string"
        },
        "name_conflicts": {
          "description": "A list of conflicts that occurred when trying to create the archive. This\nwould occur when multiple items have been requested with the\nsame name.\n\nTo solve these conflicts, the API will automatically rename an item\nand return a mapping between the original item's name and its new\nname.\n\nFor every conflict, both files will be renamed and therefore this list\nwill always be a multiple of 2.",
          "items": {
            "description": "An individual conflict that occurred when trying to create the archive.\nThis includes an array of 2 objects, each containing the original name\nand the renamed filename of a file or folder for which the names\nconflicted.",
            "items": {
              "description": "A file or folder for which a conflict was encountered, This object provides the type and identifier of the original item, as well as a mapping between its original name and it's new name as it will appear in the archive.",
              "properties": {
                "download_name": {
                  "description": "The new name of this item as it will appear in the\ndownloaded `zip` archive.",
                  "example": "3aa6a7.pdf",
                  "type": "string"
                },
                "id": {
                  "description": "The identifier of the item",
                  "example": "12345",
                  "type": "string"
                },
                "original_name": {
                  "description": "The original name of this item",
                  "example": "Report.pdf",
                  "type": "string"
                },
                "type": {
                  "description": "The type of this item",
                  "enum": [
                    "file",
                    "folder"
                  ],
                  "example": "file",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "type": "array"
        },
        "status_url": {
          "description": "The URL that can be used to get the status of the `zip` archive being\ndownloaded. A `Get` request to this URL will return the number of files\nin the archive as well as the number of items already downloaded or\nskipped. By default, this URL is only valid for a few seconds, until the\n`exires_at` time, unless a download is started after which the URL is\nvalid for 12 hours from the start of the download.\n\nIt is important to note that the domain and path of this URL might change\nbetween API calls, and therefore it's important to use this URL as-is.",
          "example": "https://api.box.com/2.0/zip_downloads/Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd/status",
          "type": "string"
        }
      },
      "title": "Zip download",
      "type": "object",
      "x-box-reference-category": "zip_downloads",
      "x-box-resource-id": "zip_download",
      "x-box-tag": "zip_downloads"
    },
    "ZipDownloadRequest": {
      "description": "A request to create a `zip` archive to download",
      "properties": {
        "download_file_name": {
          "description": "The optional name of the `zip` archive. This name will be appended by the\n`.zip` file extension, for example `January Financials.zip`.",
          "example": "January Financials",
          "type": "string"
        },
        "items": {
          "description": "A list of items to add to the `zip` archive. These can\nbe folders or files.",
          "items": {
            "description": "An item to add to the `zip` archive. This can be a file or a folder.",
            "properties": {
              "id": {
                "description": "The identifier of the item to add to the archive. When this item is\na folder then this can not be the root folder with ID `0`.",
                "example": "12345",
                "type": "string"
              },
              "type": {
                "description": "The type of the item to add to the archive.",
                "enum": [
                  "file",
                  "folder."
                ],
                "example": "file",
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "items"
      ],
      "title": "Create a `zip` archive",
      "type": "object"
    },
    "ZipDownloadStatus": {
      "description": "The status of a `zip` archive being downloaded.",
      "properties": {
        "downloaded_file_count": {
          "description": "The number of files that have already been downloaded.",
          "example": 10,
          "minimum": 0,
          "type": "integer"
        },
        "skipped_file_count": {
          "description": "The number of files that have been skipped as they could not be\ndownloaded. In many cases this is due to permission issues that have\nsurfaced between the creation of the request for the archive and the\narchive being downloaded.",
          "example": 5,
          "minimum": 0,
          "type": "integer"
        },
        "skipped_folder_count": {
          "description": "The number of folders that have been skipped as they could not be\ndownloaded. In many cases this is due to permission issues that have\nsurfaced between the creation of the request for the archive and the\narchive being downloaded.",
          "example": 5,
          "minimum": 0,
          "type": "integer"
        },
        "state": {
          "default": "in_progeress",
          "description": "The state of the archive being downloaded.",
          "enum": [
            "in_progress",
            "failed",
            "success"
          ],
          "example": "success",
          "type": "string"
        },
        "total_file_count": {
          "description": "The total number of files in the archive.",
          "example": 20,
          "maximum": 10000,
          "minimum": 0,
          "type": "integer"
        }
      },
      "title": "Zip download status",
      "type": "object",
      "x-box-reference-category": "zip_downloads",
      "x-box-resource-id": "zip_download_status",
      "x-box-tag": "zip_downloads"
    }
  },
  "securityDefinitions": {
    "OAuth2Security": {
      "authorizationUrl": "https://account.box.com/api/oauth2/authorize",
      "flow": "accessCode",
      "scopes": {
        "manage_app_users": "Provision and manage app users",
        "manage_data_retention": "Manage data retention polices",
        "manage_enterprise_properties": "Manage enterprise properties",
        "manage_groups": "Manage an enterprise's groups",
        "manage_legal_hold": "Manage Legal Holds",
        "manage_managed_users": "Provision and manage managed users",
        "manage_webhook": "Create webhooks programmatically through the API",
        "root_readonly": "Read all files and folders stored in Box",
        "root_readwrite": "Read and write all files and folders stored in Box"
      },
      "tokenUrl": "https://api.box.com/oauth2/token",
      "type": "oauth2"
    }
  },
  "security": [
    {
      "OAuth2Security": []
    }
  ],
  "tags": [
    {
      "name": "Authorization",
      "x-box-priority": true,
      "x-box-tag": "authorization"
    },
    {
      "name": "Classifications",
      "x-box-tag": "classifications"
    },
    {
      "name": "Classifications on files",
      "x-box-tag": "file_classifications"
    },
    {
      "name": "Classifications on folders",
      "x-box-tag": "folder_classifications"
    },
    {
      "name": "Collaborations",
      "x-box-tag": "user_collaborations"
    },
    {
      "name": "Collaborations (List)",
      "x-box-tag": "list_collaborations"
    },
    {
      "name": "Collections",
      "x-box-tag": "collections"
    },
    {
      "name": "Comments",
      "x-box-tag": "comments"
    },
    {
      "name": "Device pinners",
      "x-box-tag": "device_pinners"
    },
    {
      "name": "Domain restrictions (User exemptions)",
      "x-box-tag": "collaboration_allowlist_exempt_targets"
    },
    {
      "name": "Domain restrictions for collaborations",
      "x-box-tag": "collaboration_allowlist_entries"
    },
    {
      "name": "Downloads",
      "x-box-tag": "downloads"
    },
    {
      "name": "Email aliases",
      "x-box-tag": "email_aliases"
    },
    {
      "name": "Events",
      "x-box-tag": "events"
    },
    {
      "name": "File requests",
      "x-box-tag": "file_requests"
    },
    {
      "name": "File version legal holds",
      "x-box-tag": "file_version_legal_holds"
    },
    {
      "name": "File version retentions",
      "x-box-tag": "file_version_retentions"
    },
    {
      "name": "File versions",
      "x-box-tag": "file_versions"
    },
    {
      "name": "Files",
      "x-box-tag": "files"
    },
    {
      "name": "Folder Locks",
      "x-box-tag": "folder_locks"
    },
    {
      "name": "Folders",
      "x-box-tag": "folders"
    },
    {
      "name": "Group memberships",
      "x-box-tag": "memberships"
    },
    {
      "name": "Groups",
      "x-box-tag": "groups"
    },
    {
      "name": "Invites",
      "x-box-tag": "invites"
    },
    {
      "name": "Legal hold policies",
      "x-box-tag": "legal_hold_policies"
    },
    {
      "name": "Legal hold policy assignments",
      "x-box-tag": "legal_hold_policy_assignments"
    },
    {
      "name": "Metadata cascade policies",
      "x-box-tag": "metadata_cascade_policies"
    },
    {
      "name": "Metadata instances (Files)",
      "x-box-tag": "file_metadata"
    },
    {
      "name": "Metadata instances (Folders)",
      "x-box-tag": "folder_metadata"
    },
    {
      "name": "Metadata templates",
      "x-box-tag": "metadata_templates"
    },
    {
      "name": "Recent items",
      "x-box-tag": "recent_items"
    },
    {
      "name": "Retention policies",
      "x-box-tag": "retention_policies"
    },
    {
      "name": "Retention policy assignments",
      "x-box-tag": "retention_policy_assignments"
    },
    {
      "name": "Search",
      "x-box-tag": "search"
    },
    {
      "name": "Shared links (Files)",
      "x-box-tag": "shared_links_files"
    },
    {
      "name": "Shared links (Folders)",
      "x-box-tag": "shared_links_folders"
    },
    {
      "name": "Skills",
      "x-box-tag": "skills"
    },
    {
      "name": "Storage policies",
      "x-box-tag": "storage_policies"
    },
    {
      "name": "Storage policy assignments",
      "x-box-tag": "storage_policy_assignments"
    },
    {
      "name": "Task assignments",
      "x-box-tag": "task_assignments"
    },
    {
      "name": "Tasks",
      "x-box-tag": "tasks"
    },
    {
      "name": "Terms of service",
      "x-box-tag": "terms_of_services"
    },
    {
      "name": "Terms of service user statuses",
      "x-box-tag": "terms_of_service_user_statuses"
    },
    {
      "name": "Transfer folders",
      "x-box-tag": "transfer"
    },
    {
      "name": "Trashed files",
      "x-box-tag": "trashed_files"
    },
    {
      "name": "Trashed folders",
      "x-box-tag": "trashed_folders"
    },
    {
      "name": "Trashed items",
      "x-box-tag": "trashed_items"
    },
    {
      "name": "Trashed web links",
      "x-box-tag": "trashed_web_links"
    },
    {
      "name": "Uploads",
      "x-box-tag": "uploads"
    },
    {
      "name": "Uploads (Chunked)",
      "x-box-tag": "chunked_uploads"
    },
    {
      "name": "User avatars",
      "x-box-tag": "avatars"
    },
    {
      "name": "Users",
      "x-box-tag": "users"
    },
    {
      "name": "Watermarks (Files)",
      "x-box-tag": "file_watermarks"
    },
    {
      "name": "Watermarks (Folders)",
      "x-box-tag": "folder_watermarks"
    },
    {
      "name": "Web links",
      "x-box-tag": "web_links"
    },
    {
      "name": "Webhooks",
      "x-box-tag": "webhooks"
    },
    {
      "name": "Zip Downloads",
      "x-box-tag": "zip_downloads"
    }
  ],
  "externalDocs": {
    "description": "Box Developer Documentation",
    "url": "https://developer.box.com"
  },
  "x-components": {}
}