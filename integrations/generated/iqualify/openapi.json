{
  "swagger": "2.0",
  "info": {
    "contact": {
      "x-twitter": "hello_iqualify"
    },
    "description": "The iQualify API offers management responses for building\nlearning experiences using your iQualify instance data.\n\nOnce youâ€™ve registered with iQualify, you can request an API access token by\nnavigating to the API access section of the \"Account Settings\" area.\n\nFind out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token)\non our Knowledge base.\n\nAll endpoints are only accessible via https and are located at\napi.iqualify.com. For instance: you can find your current offerings by\naccessing the following URL:\n    https://api.iqualify.com/v1/offerings/current\n\n",
    "title": "iQualify Management API",
    "version": "v1",
    "x-apisguru-categories": [
      "education"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_hello_iqualify_profile_image.png"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://api.iqualify.com/v1/management.json",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "iqualify.com",
    "x-datafire": {
      "name": "iqualify",
      "type": "openapi"
    }
  },
  "host": "api.iqualify.com",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Supported endpoints",
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "API info"
        ],
        "description": "Responds with all supported endpoints URLs for v2 version.",
        "summary": "List supported endpoints URLs"
      }
    },
    "/course-mappings": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Course Mappings",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "title": "course mappings",
              "type": "object"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Course mappings"
        ],
        "description": "Returns all course mappings for course offerings.",
        "summary": "Find course mappings"
      }
    },
    "/course-mappings/externalcourse/{externalCourseId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "external course's id",
            "in": "path",
            "name": "externalCourseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Course Mapping",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Course mappings"
        ],
        "description": "Responds with course mapping details by externalCourseId.",
        "summary": "Find course mappings by externalCourseId"
      }
    },
    "/course-mappings/{offeringId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Course Mapping",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Course mappings"
        ],
        "description": "Responds with course mapping details by offeringId.",
        "summary": "Find course mappings by offeringId"
      }
    },
    "/course-mappings/{offeringId}/{externalCourseId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "external course's id",
            "in": "path",
            "name": "externalCourseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Course Mapping",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Course mappings"
        ],
        "description": "Removes the course mapping between the offering and the externalCourseId.",
        "summary": "Remove course mapping"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "external course's id",
            "in": "path",
            "name": "externalCourseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Course Mapping",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Course mappings"
        ],
        "description": "Creates a mapping between the offering and the externalCourseId.",
        "summary": "Add course mapping"
      }
    },
    "/courses": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "All courses (draft and published) in the organisation.",
            "schema": {
              "items": {
                "$ref": "#/definitions/CourseResponse"
              },
              "title": "Courses",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Courses"
        ],
        "description": "Responds with all courses (draft and published.)",
        "summary": "Find courses"
      }
    },
    "/courses/{contentId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The content Id",
            "in": "path",
            "name": "contentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Course detail",
            "schema": {
              "$ref": "#/definitions/CourseMetaResponse"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Courses"
        ],
        "description": "Responds with a course matching the contentId.",
        "summary": "Find course by contentId"
      }
    },
    "/courses/{contentId}/activations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The content Id",
            "in": "path",
            "name": "contentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Activation list.",
            "schema": {
              "$ref": "#/definitions/ActivationResponse"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Courses"
        ],
        "description": "Responds with all activations for the contentId provided.",
        "summary": "Find activations for a contentId"
      }
    },
    "/courses/{contentId}/metadata/category": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The content Id",
            "in": "path",
            "name": "contentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "category": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course detail",
            "schema": {
              "$ref": "#/definitions/CourseMetaResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Course metadata"
        ],
        "description": "Add or update course category in the metadata of a course.",
        "summary": "Update course category"
      }
    },
    "/courses/{contentId}/metadata/level": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The content Id",
            "in": "path",
            "name": "contentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course detail",
            "schema": {
              "$ref": "#/definitions/CourseMetaResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Course metadata"
        ],
        "description": "Add or update the course level in the metadata of a course.",
        "summary": "Update course level"
      }
    },
    "/courses/{contentId}/metadata/tags": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The content Id",
            "in": "path",
            "name": "contentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course detail",
            "schema": {
              "$ref": "#/definitions/CourseMetaResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Course metadata"
        ],
        "description": "Add or update course tags in the metadata of a course.",
        "summary": "Update course tags"
      }
    },
    "/courses/{contentId}/metadata/topic": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The content Id",
            "in": "path",
            "name": "contentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "topic": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course detail",
            "schema": {
              "$ref": "#/definitions/CourseMetaResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Course metadata"
        ],
        "description": "Add or update the course topic in the metadata of a course.",
        "summary": "Update course topic"
      }
    },
    "/courses/{contentId}/permissions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The content Id",
            "in": "path",
            "name": "contentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users who have access to the content ID provided.",
            "schema": {
              "$ref": "#/definitions/UserPermission"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Courses"
        ],
        "description": "Responds with users who have access to a specific course by contentId.",
        "summary": "Find users who have access to the contentId provided"
      }
    },
    "/courses/{rootContentId}/permissions/{userEmail}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The content Id",
            "in": "path",
            "name": "rootContentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The user email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "isBuilder": {
                  "default": true,
                  "type": "boolean"
                },
                "isReviewer": {
                  "default": false,
                  "type": "boolean"
                }
              },
              "title": "permission to be granted to the user.",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user successfully added to the course with the specified permission.",
            "schema": {
              "properties": {
                "contentId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Courses"
        ],
        "description": "Provide an array of users with access to a specific course.",
        "summary": "Update course access"
      }
    },
    "/offerings": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "all offerings (current, past and future ones)",
            "schema": {
              "items": {
                "$ref": "#/definitions/OfferingMetadataResponse"
              },
              "title": "Offerings",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offerings"
        ],
        "description": "Responds with all offerings for your organisation.",
        "summary": "Find current, past and future offerings"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OfferingRequired"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "offering created",
            "schema": {
              "$ref": "#/definitions/OfferingMetadataResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offerings"
        ],
        "description": "Creates a new offering.",
        "summary": "Create offering"
      }
    },
    "/offerings/current": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "current offerings",
            "schema": {
              "items": {
                "$ref": "#/definitions/OfferingMetadataResponse"
              },
              "title": "Offerings",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offerings"
        ],
        "description": "Responds with active offerings for your organisation.",
        "summary": "Find active offerings"
      }
    },
    "/offerings/future": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "future offerings",
            "schema": {
              "items": {
                "$ref": "#/definitions/OfferingMetadataResponse"
              },
              "title": "Offerings",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offerings"
        ],
        "description": "Responds with scheduled offerings for your organisation. Scheduled offerings have a start date after today's date (inclusive).",
        "summary": "Find scheduled offerings"
      }
    },
    "/offerings/info/{textPattern}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Text pattern to search for (minimum of 3 characters length).",
            "in": "path",
            "name": "textPattern",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Offerings",
            "schema": {
              "items": {
                "$ref": "#/definitions/PortfolioActivations"
              },
              "title": "Offerings",
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offerings"
        ],
        "description": "Find offerings where info field matches the specified text pattern.",
        "summary": "Find offerings where info field matches the specified textPattern"
      }
    },
    "/offerings/past": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "past offerings",
            "schema": {
              "items": {
                "$ref": "#/definitions/OfferingMetadataResponse"
              },
              "title": "Offerings",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offerings"
        ],
        "description": "Responds with past offerings for your organisation.",
        "summary": "Find past offerings"
      }
    },
    "/offerings/summary": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": "50",
            "description": "Returns only the first n results.",
            "in": "query",
            "name": "$top",
            "type": "string"
          },
          {
            "description": "Sorts the results.",
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "description": "Filters the results, based on a Boolean condition.",
            "in": "query",
            "name": "$filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "all offerings.",
            "schema": {
              "items": {
                "$ref": "#/definitions/PortfolioActivations"
              },
              "title": "Offerings",
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offerings"
        ],
        "description": "Responds with a summary of all offerings for your organisation.",
        "summary": "Offerings summary"
      }
    },
    "/offerings/{offeringId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "offering",
            "schema": {
              "$ref": "#/definitions/OfferingMetadataResponse"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offerings"
        ],
        "description": "Responds with an offering matching the offeringId.",
        "summary": "Find offering by ID"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Offering"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "offering updated",
            "schema": {
              "$ref": "#/definitions/OfferingMetadataResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offerings"
        ],
        "description": "Updates the offering.",
        "summary": "Update offering"
      }
    },
    "/offerings/{offeringId}/activities/openresponse": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "offering's learners",
            "schema": {
              "items": {
                "$ref": "#/definitions/OfferingActivitiesResponse"
              },
              "title": "Activities",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment management"
        ],
        "description": "Responds with the activities in a specific offering.",
        "summary": "Find offering's activities"
      }
    },
    "/offerings/{offeringId}/analytics/activities/responses": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Offering activity attempt open responses",
            "schema": {
              "items": {
                "$ref": "#/definitions/ActivityAttemptOpenResponse"
              },
              "title": "OfferingActivityAttemptOpenResponses",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment data"
        ],
        "description": "Responds with all learner activity attempts for open response activities in an offering matching the offeringId.",
        "summary": "Find open response activity attempts"
      }
    },
    "/offerings/{offeringId}/analytics/channels/{channelId}/comments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "channel's id",
            "in": "path",
            "name": "channelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "items": {
                "$ref": "#/definitions/Comment"
              },
              "title": "Comments",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Channels"
        ],
        "description": "Responds with a list of comments made in any posts in a specified channel, within an offering.",
        "summary": "Find comments"
      }
    },
    "/offerings/{offeringId}/analytics/channels/{channelId}/posts": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "channel's id",
            "in": "path",
            "name": "channelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "items": {
                "$ref": "#/definitions/httpPost"
              },
              "title": "Posts",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Channels"
        ],
        "description": "Responds with a list of posts made in a specified channel, within an offering.",
        "summary": "Find posts"
      }
    },
    "/offerings/{offeringId}/analytics/channels/{channelId}/replies": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "channel's id",
            "in": "path",
            "name": "channelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "items": {
                "$ref": "#/definitions/Comment"
              },
              "title": "Comments",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Channels"
        ],
        "description": "Responds with a list of replies to comments in any posts in a specified channel, within an offering.",
        "summary": "Find replies"
      }
    },
    "/offerings/{offeringId}/analytics/learners-progress": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Learners progress",
            "schema": {
              "items": {
                "$ref": "#/definitions/LearnerProgressResponse"
              },
              "title": "LearnersProgress",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Learner activity"
        ],
        "description": "Responds with all learner progress in the offering.",
        "summary": "Find learner progress in a specified offering"
      }
    },
    "/offerings/{offeringId}/analytics/marks/assignments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Assignments marks",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssignmentMarkResponse"
              },
              "title": "AssignmentsMarks",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment data"
        ],
        "description": "Responds with all learner assessment marks in an offering matching the offeringId.",
        "summary": "Find assessment marks"
      }
    },
    "/offerings/{offeringId}/analytics/marks/quizzes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Quizzes marks",
            "schema": {
              "items": {
                "$ref": "#/definitions/QuizMarkResponse"
              },
              "title": "QuizzesMarks",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment data"
        ],
        "description": "Responds with all learner quiz marks in an offering matching the offeringId.",
        "summary": "Find quiz marks"
      }
    },
    "/offerings/{offeringId}/analytics/pulses": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Pulses' ids",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Pulses"
        ],
        "description": "Responds with the IDs of all pulses that learners have responded to in a specified offering.",
        "summary": "Find all pulse IDs in the specified offering"
      }
    },
    "/offerings/{offeringId}/analytics/pulses/responses": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter pulse responses by type.",
            "enum": [
              "submit_text",
              "MCQ",
              "spatial_triangular",
              "spatial_planar",
              "spatial_linear"
            ],
            "in": "query",
            "name": "pulseType",
            "type": "string"
          },
          {
            "description": "Filter pulse responses by responseTime. Lower then (`lt`), lower then or equal (`lte`), greater then (`gt`) and greater then or equal (`gte`) operators are available. Example of filtering by time range __gte__2017-03-14T07:30:00Z__",
            "in": "query",
            "name": "responseTime"
          }
        ],
        "responses": {
          "200": {
            "description": "All pulses' responses",
            "schema": {
              "items": {
                "$ref": "#/definitions/PulseResponse"
              },
              "title": "Pulses",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Pulses"
        ],
        "description": "Responds with pulse's responses in an offering matching the offeringId.",
        "summary": "Find pulses by offeringId"
      }
    },
    "/offerings/{offeringId}/analytics/pulses/{pulseId}/responses": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "pulse's base id",
            "in": "path",
            "name": "pulseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Pulse data matching pulseId",
            "schema": {
              "items": {
                "$ref": "#/definitions/PulseResponse"
              },
              "title": "Pulses",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Pulses"
        ],
        "description": "Responds with pulse's responses, matching the pulseId, in an offering matching the offeringId.",
        "summary": "Find pulses by offeringId and pulseId"
      }
    },
    "/offerings/{offeringId}/analytics/social-notes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Offering social notes",
            "schema": {
              "items": {
                "$ref": "#/definitions/SocialNotesResponse"
              },
              "title": "OfferingSocialNotes",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Learner activity"
        ],
        "description": "Responds with all shared social notes in a specified offering.",
        "summary": "Find shared social notes in an offering"
      }
    },
    "/offerings/{offeringId}/analytics/submissions/assignments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Assignments submissions",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssignmentMarkResponse"
              },
              "title": "AssignmentsSubmissions",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment data"
        ],
        "description": "Responds with all learner assessment submissions and marks, if any, in an offering matching the offeringId.",
        "summary": "Find submissions to assessments, including marks if any"
      }
    },
    "/offerings/{offeringId}/analytics/submissions/open-response/{assessmentId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "assessment's id",
            "in": "path",
            "name": "assessmentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with assignment submissions for the specified assignment.",
            "schema": {
              "items": {
                "$ref": "#/definitions/SubmissionMarkResponse"
              },
              "title": "SubmissionMarkResponse",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment data"
        ],
        "description": "Responds with all learner assessment submissions and marks, if any, in a specified open response assessment.",
        "summary": "Find submissions to a specified open response assessment, including marks if any"
      }
    },
    "/offerings/{offeringId}/analytics/unit-reactions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unit Reactions",
            "schema": {
              "items": {
                "$ref": "#/definitions/UnitReactionsAnalyticsResponse"
              },
              "title": "UnitReactiosAnalytics",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Learner activity"
        ],
        "description": "Responds with user reactions to units in a specified offering.",
        "summary": "Find unit reactions"
      }
    },
    "/offerings/{offeringId}/assessments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "offering's assessments",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssessmentResponse"
              },
              "title": "Assessments",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment management"
        ],
        "description": "Responds with all assessments in an offering matching the offeringId.",
        "summary": "Find offering's assessments"
      }
    },
    "/offerings/{offeringId}/assessments/{assessmentId}": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "assessment's id",
            "in": "path",
            "name": "assessmentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Assessment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "assessment successfully updated",
            "schema": {
              "$ref": "#/definitions/AssessmentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment management"
        ],
        "description": "Updates the assessment details for a specified assessment in an offering.",
        "summary": "Update assessment details"
      }
    },
    "/offerings/{offeringId}/assessments/{assessmentId}/documents": {},
    "/offerings/{offeringId}/assessments/{assessmentId}/documents/{documentId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "assessment's id",
            "in": "path",
            "name": "assessmentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "documents's id",
            "in": "path",
            "name": "documentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "assessment document successfully removed"
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment management"
        ],
        "description": "Removes the assessment document file for a specified assessment in an offering.",
        "summary": "Remove assessment document"
      }
    },
    "/offerings/{offeringId}/assessments/{assessmentId}/{userEmail}": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "assessment's id",
            "in": "path",
            "name": "assessmentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "dueDate": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully updated assessment due date."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment management"
        ],
        "description": "Updates the due dates for a learner's quiz attempt specified by the assessmentId.",
        "summary": "Update the due dates for a learner's quiz attempt"
      }
    },
    "/offerings/{offeringId}/badges": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "badges",
            "schema": {
              "$ref": "#/definitions/Badge"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Badges"
        ],
        "description": "Responds with the badge for an offering matching the offeringId.",
        "summary": "Find offering badges"
      }
    },
    "/offerings/{offeringId}/channels": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesful response",
            "schema": {
              "items": {
                "$ref": "#/definitions/ChannelResponse"
              },
              "title": "List of channels in a offering",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Channels"
        ],
        "description": "Responds with a list of channels in an offering.",
        "summary": "Find channels"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChannelRequired"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "channel successfully added",
            "schema": {
              "$ref": "#/definitions/ChannelResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Channels"
        ],
        "description": "Adds new channel to the specified offering.",
        "summary": "Add channel"
      }
    },
    "/offerings/{offeringId}/channels/{channelId}": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "channel's id",
            "in": "path",
            "name": "channelId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Channel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "channel successfully updated",
            "schema": {
              "$ref": "#/definitions/ChannelResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Channels"
        ],
        "description": "Updates a channel in an offering.",
        "summary": "Update channel"
      }
    },
    "/offerings/{offeringId}/channels/{channelId}/learners": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "channel's id",
            "in": "path",
            "name": "channelId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Learner successfully removed from the channel."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Channels"
        ],
        "description": "Removes a learner from the specified group channel.",
        "summary": "Remove learners from a group channel"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "channel's id",
            "in": "path",
            "name": "channelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "channel data",
            "schema": {
              "$ref": "#/definitions/ChannelResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Channels"
        ],
        "description": "Finds all learners in a specified group channel.",
        "summary": "Find learners in a group channel"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "channel's id",
            "in": "path",
            "name": "channelId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Learner successfully added to the channel."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Channels"
        ],
        "description": "Adds a learner to a specified group channel.",
        "summary": "Add learners to a group channel"
      }
    },
    "/offerings/{offeringId}/cover-image": {},
    "/offerings/{offeringId}/groups": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesful response",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssessmentGroupResponse"
              },
              "title": "List of assessment groups in an offering",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment groups"
        ],
        "description": "Responds with a list of assessment groups in an offering.",
        "summary": "Find assessment groups"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssessmentGroupRequired"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "assessment group successfully added",
            "schema": {
              "$ref": "#/definitions/AssessmentGroupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment groups"
        ],
        "description": "Creates a new assessment group in an offering.",
        "summary": "Add an assessment group"
      }
    },
    "/offerings/{offeringId}/groups/{groupId}/learners": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Assessment group id",
            "in": "path",
            "name": "groupId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesful response",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserResponse"
              },
              "title": "List of learners",
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment groups"
        ],
        "description": "Responds with a list of learners in a specified assessment group.",
        "summary": "Find learners in an assessment group"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Assessment group id",
            "in": "path",
            "name": "groupId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "email": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesful response",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment groups"
        ],
        "description": "Adds a learner into the specified assessment group.",
        "summary": "Add a learner to an assessment group"
      }
    },
    "/offerings/{offeringId}/groups/{groupId}/learners/{userEmail}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Assessment group id",
            "in": "path",
            "name": "groupId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "required": true,
            "type": "string"
          },
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "user successfully removed from the assessment group"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment groups"
        ],
        "description": "Removes a learner from the specified assessment group.",
        "summary": "Remove a learner from an assessment group"
      }
    },
    "/offerings/{offeringId}/learners/pending-submission": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "days to assessment due date. Default is 3 days",
            "in": "query",
            "name": "days",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "offering's learners",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssessmentPendingSubmission"
              },
              "title": "Assessments",
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment management"
        ],
        "description": "Responds with learners who have one or more assessments due x days before the due date, with each assessment that is due, where x = the number of days specified in the request. The default is 3 days.",
        "summary": "Find learners with assessments pending x days before due date within the specified offeringId"
      }
    },
    "/offerings/{offeringId}/metadata/category": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "category": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "offering updated",
            "schema": {
              "$ref": "#/definitions/OfferingMetadataResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offering metadata"
        ],
        "description": "Updates the offering category metadata.",
        "summary": "Update offering category metadata"
      }
    },
    "/offerings/{offeringId}/metadata/level": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "offering updated",
            "schema": {
              "$ref": "#/definitions/OfferingMetadataResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offering metadata"
        ],
        "description": "Updates the offering level metadata.",
        "summary": "Update offering level metadata"
      }
    },
    "/offerings/{offeringId}/metadata/tags": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "offering updated",
            "schema": {
              "$ref": "#/definitions/OfferingMetadataResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offering metadata"
        ],
        "description": "Updates the offering tags metadata.",
        "summary": "Update offering tags metadata"
      }
    },
    "/offerings/{offeringId}/metadata/topic": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "topic": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "offering updated",
            "schema": {
              "$ref": "#/definitions/OfferingMetadataResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offering metadata"
        ],
        "description": "Updates the offering topic metadata.",
        "summary": "Update offering topic metadata"
      }
    },
    "/offerings/{offeringId}/study-plan": {},
    "/offerings/{offeringId}/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "default": "true",
            "description": "If true, facilitators are included in the results.",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "facilitators",
            "type": "string"
          },
          {
            "default": "true",
            "description": "If true, learners are included in the results.",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "learners",
            "type": "string"
          },
          {
            "default": "true",
            "description": "If true, markers are included in the results.",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "markers",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "offering's users",
            "schema": {
              "items": {
                "$ref": "#/definitions/OfferingUserResponse"
              },
              "title": "offering's users",
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offering learners"
        ],
        "description": "Responds with a list of users in the offering (facilitators, learners and markers.).",
        "summary": "Find offering's users"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/OfferingUser"
              },
              "title": "users to be added to the offering.",
              "type": "array"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user successfully added to the offering",
            "schema": {
              "items": {
                "$ref": "#/definitions/OfferingUserAddResponse"
              },
              "type": "array"
            }
          },
          "207": {
            "description": "Partially successful response",
            "schema": {
              "items": {},
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offering learners"
        ],
        "description": "Adds one or more users to the offering.",
        "summary": "Adds user to the offering"
      }
    },
    "/offerings/{offeringId}/users/{markerEmail}/marks": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "marker's email",
            "in": "path",
            "name": "markerEmail",
            "required": true,
            "type": "string"
          },
          {
            "description": "array of learners e-mails",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "learners marked by the marker",
            "schema": {
              "items": {
                "$ref": "#/definitions/OfferingUser"
              },
              "title": "learners marked by the marker",
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offering learners"
        ],
        "description": "Removes an array of learners from coach's marking list.",
        "summary": "Remove learners from coach's marking list"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "marker's email",
            "in": "path",
            "name": "markerEmail",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "learners marked by the marker",
            "schema": {
              "items": {
                "$ref": "#/definitions/OfferingUser"
              },
              "title": "learners marked by the marker",
              "type": "array"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offering learners"
        ],
        "description": "Responds with all learners marked by the specified coach.",
        "summary": "Find Learners marked by a coach"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "marker's email",
            "in": "path",
            "name": "markerEmail",
            "required": true,
            "type": "string"
          },
          {
            "description": "array of learners e-mails",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "learners marked by the marker",
            "schema": {
              "items": {
                "$ref": "#/definitions/OfferingUser"
              },
              "title": "learners marked by the marker",
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offering learners"
        ],
        "description": "Adds an array of learners to be marked by the specified coach.",
        "summary": "Add learners to be marked by a coach"
      }
    },
    "/offerings/{offeringId}/users/{userEmail}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "user successfully removed from the offering"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offering learners"
        ],
        "description": "Removes a user from the offering.",
        "summary": "Removes user from the offering"
      }
    },
    "/offerings/{offeringId}/users/{userEmail}/assessments/{assessmentId}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          },
          {
            "description": "assessment's id",
            "in": "path",
            "name": "assessmentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "User's assessment successfully moved to draft state."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment management"
        ],
        "description": "Resets the user's submitted assessment to a draft state.",
        "summary": "Reset user's assessment to draft state"
      }
    },
    "/offerings/{offeringId}/users/{userEmail}/badges/award": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Awarded badge response",
            "schema": {
              "$ref": "#/definitions/AwardedResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Badges"
        ],
        "description": "Awards a badge to a user in the offering.",
        "summary": "Award badge"
      }
    },
    "/offerings/{offeringId}/users/{userEmail}/submissions/open-response": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          },
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user open response submission and mark details",
            "schema": {
              "items": {
                "$ref": "#/definitions/Assignments"
              },
              "title": "user's assignments",
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Assessment management"
        ],
        "description": "Responds with open response assessment submissions by a learner in an offering.",
        "summary": "Find learner's open response assessment submissions"
      }
    },
    "/org": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "organisation summary data",
            "schema": {
              "$ref": "#/definitions/OrgResponse"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Organisation"
        ],
        "description": "Returns the current organisation info.",
        "summary": "Gets the current organisation"
      }
    },
    "/users": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "user",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user added",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Users in iQualify"
        ],
        "description": "Creates a new user.",
        "summary": "Add new user"
      }
    },
    "/users/all/progress": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": "50",
            "description": "Returns only the first n results.",
            "in": "query",
            "name": "$top",
            "type": "string"
          },
          {
            "description": "Sorts the results.",
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "description": "Filters the results, based on a Boolean condition.",
            "in": "query",
            "name": "$filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Learners progress",
            "schema": {
              "properties": {
                "data": {
                  "properties": {
                    "progress": {
                      "items": {
                        "$ref": "#/definitions/LearnerResponse"
                      },
                      "title": "Learners",
                      "type": "array"
                    }
                  }
                },
                "top": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Learner activity"
        ],
        "description": "Responds with all learners' progress in all offerings.",
        "summary": "Find learner progress in all offerings"
      }
    },
    "/users/{userEmail}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user data",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Users in iQualify"
        ],
        "description": "Responds with a user matching the specified email.",
        "summary": "Find user by email"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user updated",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Users in iQualify"
        ],
        "description": "Updates the specified user by email.",
        "summary": "Update user"
      }
    },
    "/users/{userEmail}/badges": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user's badges",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserBadge"
              },
              "title": "Badges",
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Badges"
        ],
        "description": "Responds with all badges that the specified user has been awarded.",
        "summary": "Find user's badges"
      }
    },
    "/users/{userEmail}/invite-email": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "successfully requested invitation e-mail sending"
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Users in iQualify"
        ],
        "description": "Re-sends an invitation e-mail to the specified user.",
        "summary": "Resend invitation email"
      }
    },
    "/users/{userEmail}/offerings": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user's offerings",
            "schema": {
              "items": {
                "$ref": "#/definitions/OfferingMetadataResponse"
              },
              "title": "Offerings",
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Users in iQualify"
        ],
        "description": "Responds with all offerings that the user in.",
        "summary": "Find user's offerings"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          },
          {
            "description": "offering ids",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user's offerings",
            "schema": {
              "items": {
                "$ref": "#/definitions/OfferingMetadataResponse"
              },
              "title": "Offerings",
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Users in iQualify"
        ],
        "description": "Adds a user to an array of offerings by offeringId.",
        "summary": "Adds the user to the specified offerings as a learner"
      }
    },
    "/users/{userEmail}/offerings/{offeringId}/progress": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          },
          {
            "description": "offering's id",
            "in": "path",
            "name": "offeringId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user's offerings",
            "schema": {
              "properties": {
                "completion": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Learner activity"
        ],
        "description": "Responds with the learner's progress in a specified offering.",
        "summary": "Find learner's progress in a specified offering"
      }
    },
    "/users/{userEmail}/permissions/{permissionName}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          },
          {
            "description": "permission name",
            "enum": [
              "builder",
              "manager"
            ],
            "in": "path",
            "name": "permissionName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "permission successfully added to user",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Users in iQualify"
        ],
        "description": "Adds additional permissions to the specified user.",
        "summary": "Add permission to user"
      }
    },
    "/users/{userEmail}/progress": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Learner Progress",
            "schema": {
              "$ref": "#/definitions/LearnerResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Learner activity"
        ],
        "description": "Responds with the specified learner's progress in all offerings.",
        "summary": "Find learner's progress in offerings"
      }
    },
    "/users/{userEmail}/suspend": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuspendedRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User suspended."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Users in iQualify"
        ],
        "description": "Suspends the specified user's account.",
        "summary": "Suspend user"
      }
    },
    "/users/{userEmail}/transfer": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "user's email",
            "format": "email",
            "in": "path",
            "name": "userEmail",
            "required": true,
            "type": "string"
          },
          {
            "description": "transfer_data",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated user information"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "No authorization token was found.",
            "examples": {
              "application/json": {
                "details": "No authorization token was found.",
                "name": "NotAuthorizedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not allowed to access this resource.",
            "examples": {
              "application/json": {
                "details": "You are not allowed to access this resource",
                "name": "AccessDeniedError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "details": "The content badcontentId was not found.",
                "name": "ObjectNotFoundError"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Offering learners"
        ],
        "description": "Moves the user's access and progress from one offering to another.",
        "summary": "Transfer a user between offerings"
      }
    }
  },
  "definitions": {
    "ActivationResponse": {
      "properties": {
        "info": {
          "type": "string"
        },
        "end": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "learnersCount": {
          "description": "number of learners in the offering, excluding facilitators and coaches",
          "type": "string"
        },
        "metadata": {
          "properties": {
            "rootContentId": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "start": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ActivityAttemptOpenResponse": {
      "properties": {
        "activityId": {
          "type": "string"
        },
        "activityType": {
          "type": "string"
        },
        "feedback": {
          "$ref": "#/definitions/ActivityAttemptOpenResponseFeedback"
        },
        "learnerEmail": {
          "type": "string"
        },
        "offeringId": {
          "type": "string"
        },
        "responseText": {
          "type": "string"
        },
        "uploadedFiles": {
          "$ref": "#/definitions/ActivityAttemptOpenResponseFiles"
        }
      },
      "type": "object"
    },
    "ActivityAttemptOpenResponseFeedback": {
      "properties": {
        "facilitatorEmail": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ActivityAttemptOpenResponseFiles": {
      "properties": {
        "filename": {
          "type": "string"
        },
        "mimetype": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Assessment": {
      "properties": {
        "content": {
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "markNumber": {
          "minLength": 1,
          "type": "string"
        },
        "markType": {
          "minLength": 1,
          "type": "string"
        },
        "openDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssessmentGroupRequired": {
      "properties": {
        "title": {
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "title"
      ],
      "type": "object"
    },
    "AssessmentGroupResponse": {
      "properties": {
        "createdAt": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "title": {
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssessmentPendingSubmission": {
      "properties": {
        "content": {
          "type": "string"
        },
        "documents": {
          "items": {
            "$ref": "#/definitions/Document"
          },
          "type": "array"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "durationMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "filename": {
          "type": "string"
        },
        "hidden": {
          "default": false,
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "markNumber": {
          "minLength": 1,
          "type": "string"
        },
        "markType": {
          "minLength": 1,
          "type": "string"
        },
        "maxAttempts": {
          "format": "int32",
          "type": "integer"
        },
        "offeringId": {
          "type": "string"
        },
        "offeringName": {
          "type": "string"
        },
        "openDate": {
          "format": "date-time",
          "type": "string"
        },
        "pid": {
          "type": "string"
        },
        "points": {
          "type": "string"
        },
        "themes": {
          "items": {
            "$ref": "#/definitions/ThemeResponse"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "totalQuestions": {
          "format": "int32",
          "type": "integer"
        },
        "totalThemes": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "users": {
          "items": {
            "$ref": "#/definitions/User"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AssessmentResponse": {
      "properties": {
        "content": {
          "type": "string"
        },
        "documents": {
          "items": {
            "$ref": "#/definitions/Document"
          },
          "type": "array"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "durationMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "filename": {
          "type": "string"
        },
        "hidden": {
          "default": false,
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "markNumber": {
          "minLength": 1,
          "type": "string"
        },
        "markType": {
          "minLength": 1,
          "type": "string"
        },
        "maxAttempts": {
          "format": "int32",
          "type": "integer"
        },
        "openDate": {
          "format": "date-time",
          "type": "string"
        },
        "pid": {
          "type": "string"
        },
        "points": {
          "type": "string"
        },
        "themes": {
          "items": {
            "$ref": "#/definitions/ThemeResponse"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "totalQuestions": {
          "format": "int32",
          "type": "integer"
        },
        "totalThemes": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssignmentMarkResponse": {
      "properties": {
        "assessmentId": {
          "type": "string"
        },
        "assessmentItemDetails": {
          "type": "string"
        },
        "assessmentItemName": {
          "type": "string"
        },
        "courseName": {
          "type": "string"
        },
        "learnerEmail": {
          "type": "string"
        },
        "learnerFirstName": {
          "type": "string"
        },
        "learnerLastName": {
          "type": "string"
        },
        "learnerPersonId": {
          "type": "string"
        },
        "mark": {
          "type": "string"
        },
        "markFeedback": {
          "type": "string"
        },
        "markedBy": {
          "type": "string"
        },
        "markedByEvaluator": {
          "type": "boolean"
        },
        "markedByFacilitator": {
          "type": "boolean"
        },
        "markedByMarker": {
          "type": "boolean"
        },
        "markedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "submissionDateTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "title": "AssignmentMark",
      "type": "object"
    },
    "Assignments": {
      "properties": {
        "files": {
          "items": {
            "$ref": "#/definitions/Document"
          },
          "type": "array"
        },
        "marks": {
          "items": {
            "$ref": "#/definitions/Mark"
          },
          "type": "array"
        },
        "status": {
          "type": "string"
        },
        "submittedAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AwardedResponse": {
      "properties": {
        "awarded": {
          "type": "boolean"
        },
        "badgeId": {
          "type": "string"
        },
        "badgeUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Badge": {
      "properties": {
        "badgeUrl": {
          "type": "string"
        },
        "criterias": {
          "allOf": [
            {
              "$ref": "#/definitions/Criteria"
            }
          ]
        },
        "description": {
          "type": "string"
        },
        "expirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "expires": {
          "type": "boolean"
        },
        "openBadge": {
          "allOf": [
            {
              "$ref": "#/definitions/OpenBadgeClass"
            }
          ]
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Channel": {
      "properties": {
        "group": {
          "properties": {
            "autoAssign": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "groupDiscussion": {
          "type": "boolean"
        },
        "isBroadcastOnly": {
          "type": "boolean"
        },
        "privateSupport": {
          "type": "boolean"
        },
        "title": {
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChannelRequired": {
      "properties": {
        "group": {
          "properties": {
            "autoAssign": {
              "default": false,
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "groupDiscussion": {
          "default": false,
          "type": "boolean"
        },
        "isBroadcastOnly": {
          "default": false,
          "type": "boolean"
        },
        "privateSupport": {
          "default": false,
          "type": "boolean"
        },
        "title": {
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "title"
      ],
      "type": "object"
    },
    "ChannelResponse": {
      "properties": {
        "group": {
          "properties": {
            "autoAssign": {
              "default": false,
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "groupDiscussion": {
          "default": false,
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "isBroadcastOnly": {
          "default": false,
          "type": "boolean"
        },
        "learners": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "privateSupport": {
          "default": false,
          "type": "boolean"
        },
        "title": {
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Comment": {
      "properties": {
        "content": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isFacilitatorPost": {
          "type": "boolean"
        },
        "moderation": {
          "$ref": "#/definitions/Moderation"
        },
        "parentCommentId": {
          "type": "string"
        },
        "postId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CourseMetaResponse": {
      "properties": {
        "coverImageUrl": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "metadata": {
          "properties": {
            "tags": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "category": {
              "type": "string"
            },
            "learning_outcomes": {
              "items": {
                "$ref": "#/definitions/LearningOutcomes"
              },
              "type": "array"
            },
            "level": {
              "type": "string"
            },
            "rootContentId": {
              "type": "string"
            },
            "topic": {
              "type": "string"
            }
          }
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Course",
      "type": "object"
    },
    "CourseResponse": {
      "properties": {
        "coverImageUrl": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "metadata": {
          "properties": {
            "learning_outcomes": {
              "items": {
                "$ref": "#/definitions/LearningOutcomes"
              },
              "type": "array"
            }
          }
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Course",
      "type": "object"
    },
    "Criteria": {
      "properties": {
        "hasCompletedCourse": {
          "default": true,
          "type": "boolean"
        },
        "hasPassedMandatoryAssessedQuizzes": {
          "default": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Document": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "mimetype": {
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DocumentResponse": {
      "properties": {
        "id": {
          "type": "string"
        },
        "mimetype": {
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Error": {
      "properties": {
        "error": {
          "properties": {
            "details": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "Invite": {
      "properties": {
        "url": {
          "description": "if sendInvite in request is false",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LearnerProgressResponse": {
      "properties": {
        "completion": {
          "type": "string"
        },
        "courseId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastLoggedInAt": {
          "format": "date-time",
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "personId": {
          "type": "string"
        }
      },
      "title": "LearnerProgress",
      "type": "object"
    },
    "LearnerResponse": {
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "offerings": {
          "items": {
            "$ref": "#/definitions/OfferingProgressRow"
          },
          "type": "array"
        },
        "personId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LearningOutcomes": {
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Mark": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "feedback": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "mark": {
          "type": "string"
        },
        "markFeedback": {
          "items": {
            "$ref": "#/definitions/MarkFeedback"
          },
          "type": "array"
        },
        "markedBy": {
          "type": "string"
        },
        "markerId": {
          "type": "string"
        }
      }
    },
    "MarkFeedback": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "feedback": {
          "type": "string"
        },
        "feedbackBy": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "mark": {
          "type": "string"
        },
        "markerId": {
          "type": "string"
        }
      }
    },
    "Moderation": {
      "properties": {
        "isMuted": {
          "type": "boolean"
        },
        "moderator": {
          "$ref": "#/definitions/Moderator"
        },
        "reason": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Moderator": {
      "properties": {
        "avatarUrl": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Offering": {
      "properties": {
        "badge": {
          "additionalProperties": false,
          "properties": {
            "description": {
              "type": "string"
            },
            "expirationDate": {
              "format": "date-time",
              "type": "string"
            },
            "requiresApproval": {
              "type": "boolean"
            },
            "title": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "contentId": {
          "description": "The identifier for a specific version of a course",
          "minLength": 1,
          "type": "string"
        },
        "description": {
          "minLength": 1,
          "type": "string"
        },
        "earlyCloseOffDate": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "hasEarlyCloseOff": {
          "type": "boolean"
        },
        "identifier": {
          "type": "string"
        },
        "isReadonly": {
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": false,
          "properties": {
            "tags": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "category": {
              "type": "string"
            },
            "level": {
              "type": "string"
            },
            "topic": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "overview": {
          "type": "string"
        },
        "rootContentId": {
          "description": "Every time a course is republished it is assigned a new contentId. rootContentId is the first original contentId associated with a course.",
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "trailerVideoUrl": {
          "minLength": 1,
          "type": "string"
        },
        "useRelativeDates": {
          "default": false,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "OfferingActivitiesResponse": {
      "properties": {
        "activityId": {
          "type": "string"
        },
        "time": {
          "description": "expected minutes to complete",
          "type": "number"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OfferingMetadata": {
      "additionalProperties": false,
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "category": {
          "type": "string"
        },
        "level": {
          "type": "string"
        },
        "rootContentId": {
          "type": "string"
        },
        "topic": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OfferingMetadataResponse": {
      "properties": {
        "contentId": {
          "minLength": 1,
          "type": "string"
        },
        "coverImageUrl": {
          "minLength": 1,
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "description": {
          "minLength": 1,
          "type": "string"
        },
        "earlyCloseOffDate": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "enrollmentLimit": {
          "type": "number"
        },
        "hasEarlyCloseOff": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "isReadonly": {
          "type": "boolean"
        },
        "metadata": {
          "$ref": "#/definitions/OfferingMetadata"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "overview": {
          "description": "content can contain html",
          "minLength": 1,
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "trailerVideoUrl": {
          "minLength": 1,
          "type": "string"
        },
        "useRelativeDates": {
          "default": false,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "OfferingProgressRow": {
      "properties": {
        "completion": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OfferingRequired": {
      "properties": {
        "badge": {
          "additionalProperties": false,
          "properties": {
            "description": {
              "type": "string"
            },
            "expirationDate": {
              "format": "date-time",
              "type": "string"
            },
            "requiresApproval": {
              "type": "boolean"
            },
            "title": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "contentId": {
          "description": "The identifier for a specific version of a course",
          "minLength": 1,
          "type": "string"
        },
        "createDefaultChannels": {
          "default": false,
          "type": "boolean"
        },
        "description": {
          "minLength": 1,
          "type": "string"
        },
        "earlyCloseOffDate": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "hasEarlyCloseOff": {
          "type": "boolean"
        },
        "identifier": {
          "type": "string"
        },
        "isReadonly": {
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": false,
          "properties": {
            "tags": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "category": {
              "type": "string"
            },
            "level": {
              "type": "string"
            },
            "topic": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "rootContentId": {
          "description": "Every time a course is republished it's assigned a new contentId. rootContentId is the first original contentId associated with a course.",
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "trailerVideoUrl": {
          "minLength": 1,
          "type": "string"
        },
        "useRelativeDates": {
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "start",
        "end"
      ],
      "type": "object"
    },
    "OfferingResponse": {
      "properties": {
        "contentId": {
          "minLength": 1,
          "type": "string"
        },
        "coverImageUrl": {
          "minLength": 1,
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "description": {
          "minLength": 1,
          "type": "string"
        },
        "earlyCloseOffDate": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "enrollmentLimit": {
          "type": "number"
        },
        "hasEarlyCloseOff": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "isReadonly": {
          "type": "boolean"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "trailerVideoUrl": {
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object"
    },
    "OfferingUser": {
      "properties": {
        "email": {
          "minLength": 1,
          "type": "string"
        },
        "firstName": {
          "minLength": 1,
          "type": "string"
        },
        "isFacilitator": {
          "default": false,
          "type": "boolean"
        },
        "isMarker": {
          "default": false,
          "type": "boolean"
        },
        "isReadonly": {
          "default": false,
          "type": "boolean"
        },
        "lastName": {
          "minLength": 1,
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/UserMetadata"
        },
        "personId": {
          "minLength": 1,
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/UserProfileRequest"
        },
        "sendInvite": {
          "default": true,
          "type": "boolean"
        },
        "sendNotificationEmail": {
          "default": true,
          "type": "boolean"
        }
      },
      "required": [
        "email"
      ],
      "type": "object"
    },
    "OfferingUserAddResponse": {
      "properties": {
        "email": {
          "minLength": 1,
          "type": "string"
        },
        "firstName": {
          "minLength": 1,
          "type": "string"
        },
        "invite": {
          "$ref": "#/definitions/Invite"
        },
        "isFacilitator": {
          "default": false,
          "type": "boolean"
        },
        "isMarker": {
          "default": false,
          "type": "boolean"
        },
        "isReadonly": {
          "default": false,
          "type": "boolean"
        },
        "lastName": {
          "minLength": 1,
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/UserMetadata"
        },
        "personId": {
          "minLength": 1,
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/UserProfileRequest"
        },
        "sendInvite": {
          "default": true,
          "type": "boolean"
        },
        "sendNotificationEmail": {
          "default": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "OfferingUserResponse": {
      "properties": {
        "avatarUrl": {
          "type": "string"
        },
        "email": {
          "format": "email",
          "minLength": 1,
          "type": "string"
        },
        "evaluatedBy": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "evaluates": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "firstName": {
          "minLength": 1,
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isFacilitator": {
          "default": false,
          "type": "boolean"
        },
        "isMarker": {
          "default": false,
          "type": "boolean"
        },
        "isReadonly": {
          "default": false,
          "type": "boolean"
        },
        "lastName": {
          "minLength": 1,
          "type": "string"
        },
        "markedBy": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "marks": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "personId": {
          "minLength": 1,
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/UserProfile"
        }
      },
      "type": "object"
    },
    "OpenBadgeClass": {
      "properties": {
        "criteria": {
          "additionalProperties": false,
          "properties": {
            "narrative": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "issuer": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrgRequest": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "OrgResponse": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PortfolioActivations": {
      "properties": {
        "info": {
          "type": "string"
        },
        "contentId": {
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "learnersCount": {
          "description": "number of learners in the offering, excluding facilitators and coaches",
          "type": "number"
        },
        "metadata": {
          "properties": {
            "rootContentId": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PortfolioLicenseResponse": {
      "properties": {
        "licenses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "owner": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PortfolioMetadata": {
      "additionalProperties": false,
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "category": {
          "type": "string"
        },
        "level": {
          "type": "string"
        },
        "topic": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PulseAnswer": {
      "properties": {
        "multiChoiceAnswer": {
          "items": {
            "$ref": "#/definitions/PulseMCQOption"
          },
          "type": "array"
        },
        "spatialAnswer": {
          "items": {
            "$ref": "#/definitions/PulseSpatialOption"
          },
          "type": "array"
        },
        "textAnswer": {
          "type": "string"
        }
      },
      "title": "Answer",
      "type": "object"
    },
    "PulseMCQOption": {
      "properties": {
        "option": {
          "type": "string"
        },
        "value": {
          "type": "boolean"
        }
      },
      "title": "MultiChoiceOption",
      "type": "object"
    },
    "PulseResponse": {
      "properties": {
        "learnerFirstName": {
          "type": "string"
        },
        "learnerId": {
          "type": "string"
        },
        "learnerLastName": {
          "type": "string"
        },
        "pulseBaseId": {
          "type": "string"
        },
        "pulseInstanceId": {
          "type": "string"
        },
        "pulseQuestion": {
          "type": "string"
        },
        "pulseRunDurationMinutes": {
          "type": "integer"
        },
        "pulseRunStart": {
          "format": "date-time",
          "type": "string"
        },
        "pulseType": {
          "type": "string"
        },
        "response": {
          "$ref": "#/definitions/PulseAnswer"
        },
        "responseTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "title": "Pulse",
      "type": "object"
    },
    "PulseSpatialOption": {
      "properties": {
        "option": {
          "type": "string"
        },
        "value": {
          "format": "float",
          "type": "number"
        }
      },
      "title": "SpatialOption",
      "type": "object"
    },
    "QuizMarkResponse": {
      "properties": {
        "attempts": {
          "format": "int32",
          "type": "integer"
        },
        "lastAttemptAt": {
          "format": "date-time",
          "type": "string"
        },
        "learnerEmail": {
          "type": "string"
        },
        "learnerFullname": {
          "type": "string"
        },
        "learnerPersonId": {
          "type": "string"
        },
        "mark": {
          "type": "string"
        },
        "quizId": {
          "type": "string"
        },
        "quizTitle": {
          "type": "string"
        }
      },
      "title": "QuizMark",
      "type": "object"
    },
    "RevokedResponse": {
      "properties": {
        "badgeId": {
          "type": "string"
        },
        "badgeUrl": {
          "type": "string"
        },
        "revocationReason": {
          "type": "string"
        },
        "revoked": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SocialNotesResponse": {
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "pageId": {
          "type": "string"
        },
        "personId": {
          "type": "string"
        },
        "social-note-content": {
          "type": "string"
        },
        "social-note-paragraphId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubmissionMarkResponse": {
      "properties": {
        "assessmentId": {
          "type": "string"
        },
        "assessmentItemDetails": {
          "type": "string"
        },
        "assessmentItemName": {
          "type": "string"
        },
        "courseName": {
          "type": "string"
        },
        "files": {
          "items": {
            "$ref": "#/definitions/Document"
          },
          "type": "array"
        },
        "html": {
          "type": "string"
        },
        "learnerEmail": {
          "type": "string"
        },
        "learnerFirstName": {
          "type": "string"
        },
        "learnerLastName": {
          "type": "string"
        },
        "learnerPersonId": {
          "type": "string"
        },
        "marks": {
          "items": {
            "$ref": "#/definitions/Mark"
          },
          "type": "array"
        },
        "status": {
          "type": "string"
        },
        "submissionDateTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "title": "SubmissionMark"
    },
    "SuspendedRequest": {
      "properties": {
        "suspended": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ThemeResponse": {
      "properties": {
        "filter": {
          "type": "string"
        },
        "numberOfQuestions": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferRequest": {
      "properties": {
        "fromOfferingId": {
          "type": "string"
        },
        "sendInvite": {
          "type": "boolean"
        },
        "toOfferingId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UnitReactionsAnalyticsResponse": {
      "properties": {
        "feedback": {
          "$ref": "#/definitions/UnitReactionsFeedback"
        },
        "pageId": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "UnitReactionsFeedback": {
      "properties": {
        "thumbs-down": {
          "type": "number"
        },
        "thumbs-up": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "User": {
      "properties": {
        "email": {
          "format": "email",
          "minLength": 1,
          "type": "string"
        },
        "firstName": {
          "minLength": 1,
          "type": "string"
        },
        "lastName": {
          "minLength": 1,
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/UserMetadata"
        },
        "personId": {
          "minLength": 1,
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/UserProfileRequest"
        },
        "sendInvite": {
          "default": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "UserBadge": {
      "allOf": [
        {
          "$ref": "#/definitions/Badge"
        }
      ],
      "properties": {
        "awardedAt": {
          "format": "date-time",
          "type": "string"
        },
        "offeringId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserMetadata": {
      "additionalProperties": false,
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UserPermission": {
      "properties": {
        "email": {
          "type": "string"
        },
        "isBuilder": {
          "type": "boolean"
        },
        "isReviewer": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "User"
    },
    "UserProfile": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserProfileRequest": {
      "properties": {
        "displayName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserResponse": {
      "properties": {
        "avatarUrl": {
          "type": "string"
        },
        "email": {
          "format": "email",
          "minLength": 1,
          "type": "string"
        },
        "firstAccessAt": {
          "format": "date-time",
          "type": "string"
        },
        "firstName": {
          "minLength": 1,
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "invite": {
          "$ref": "#/definitions/Invite"
        },
        "lastAccessAt": {
          "format": "date-time",
          "type": "string"
        },
        "lastName": {
          "minLength": 1,
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/UserMetadata"
        },
        "personId": {
          "minLength": 1,
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/UserProfile"
        }
      },
      "type": "object"
    },
    "httpPost": {
      "properties": {
        "attachments": {
          "items": {
            "$ref": "#/definitions/DocumentResponse"
          },
          "type": "array"
        },
        "content": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isFacilitatorPost": {
          "type": "boolean"
        },
        "moderation": {
          "$ref": "#/definitions/Moderation"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "Authorization": []
    }
  ],
  "tags": [],
  "x-components": {
    "parameters": {
      "assessmentId": {
        "description": "assessment's id",
        "in": "path",
        "name": "assessmentId",
        "required": true,
        "type": "string"
      },
      "badgeId": {
        "description": "badge's id",
        "in": "path",
        "name": "badgeId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "channelId": {
        "description": "channel's id",
        "in": "path",
        "name": "channelId",
        "required": true,
        "type": "string"
      },
      "evaluatorEmail": {
        "description": "Evaluator's email",
        "in": "path",
        "name": "evaluatorEmail",
        "required": true,
        "schema": {
          "format": "email",
          "type": "string"
        }
      },
      "externalCourseId": {
        "description": "external course's id",
        "in": "path",
        "name": "externalCourseId",
        "required": true,
        "type": "string"
      },
      "groupId": {
        "description": "Assessment group id",
        "in": "path",
        "name": "groupId",
        "pattern": "^[0-9a-fA-F]{24}$",
        "required": true,
        "type": "string"
      },
      "offeringId": {
        "description": "offering's id",
        "in": "path",
        "name": "offeringId",
        "required": true,
        "type": "string"
      },
      "permissionName": {
        "description": "permission name",
        "enum": [
          "builder",
          "manager"
        ],
        "in": "path",
        "name": "permissionName",
        "required": true,
        "type": "string"
      },
      "rootContentId": {
        "description": "Protfolio root content id",
        "in": "path",
        "name": "rootContentId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "submissionId": {
        "description": "submission id",
        "in": "path",
        "name": "submissionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "taskId": {
        "description": "task id",
        "in": "path",
        "name": "taskId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "userEmail": {
        "description": "user's email",
        "format": "email",
        "in": "path",
        "name": "userEmail",
        "required": true,
        "type": "string"
      }
    },
    "responses": {
      "AccessDeniedError": {
        "content": {
          "application/json": {
            "example": {
              "details": "You are not allowed to access this resource",
              "name": "AccessDeniedError"
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "description": "You are not allowed to access this resource."
      },
      "InvalidContentError": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "description": "You need to specify content_id or rootContentId."
      },
      "NotAuthorizedError": {
        "content": {
          "application/json": {
            "example": {
              "details": "No authorization token was found.",
              "name": "NotAuthorizedError"
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "description": "No authorization token was found."
      },
      "NotImplementedError": {
        "content": {
          "application/json": {
            "example": {
              "details": "The endpoint is not implemented.",
              "name": "NotImplementedError"
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "description": "Endpoint Not Implemented"
      },
      "ObjectNotFoundError": {
        "content": {
          "application/json": {
            "example": {
              "details": "The content badcontentId was not found.",
              "name": "ObjectNotFoundError"
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "description": "Not Found"
      },
      "RouteNotFoundError": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "description": "Invalid path."
      },
      "ServerError": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "description": "We're sorry, but something went wrong."
      },
      "TooManyRequestsError": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "description": "Request rate is too large."
      }
    },
    "examples": {
      "ApiValidationError": {
        "summary": "API validation error",
        "value": {
          "details": "invalid $filter parameter.",
          "name": "ApiValidationError"
        }
      },
      "AssessmentNotSubmittedError": {
        "summary": "the specified user has not submitted an assessment",
        "value": {
          "details": "The user alex.doe@test.te has not submitted assessment as1.",
          "name": "AssessmentNotSubmittedError"
        }
      },
      "ContentDoNotMatchError": {
        "summary": "The specified content needs to be the same in order to perform the requested operation.",
        "value": {
          "details": "contentId needs to be the same in order to perform the requested operation.",
          "name": "ContentDoNotMatchError"
        }
      },
      "IncompatibleParametersError": {
        "summary": "Two properties in the request contains incompatible values with each other",
        "value": {
          "details": "A cannot be B when C is D",
          "name": "IncompatibleParametersError"
        }
      },
      "InvalidContentError": {
        "summary": "You need to specify content_id or rootContentId.",
        "value": {
          "details": "You need to specify content_id or rootContentId.",
          "name": "InvalidContentError"
        }
      },
      "InvalidGroupChannelError": {
        "summary": "Specified channel is not a group discussion channel.",
        "value": {
          "details": "Channel channel1 is not a group discussion channel.",
          "name": "InvalidGroupChannelError"
        }
      },
      "InvalidObjectIdError": {
        "summary": "The user has been suspended.",
        "value": {
          "details": "The specified task id has an invalid value '1111'.",
          "name": "InvalidObjectIdError"
        }
      },
      "InvalidParameterError": {
        "summary": "the specified source object already exists in the target object",
        "value": {
          "details": "The specified parameter file.mimetype (image mimetype) has an invalid value \\'text/plain\\'.",
          "name": "InvalidParameterError"
        }
      },
      "InvalidSourceAndTargetError": {
        "summary": "Source and target offerings cannot be the same.",
        "value": {
          "details": "Source and target offerings cannot be the same.",
          "name": "InvalidSourceAndTargetError"
        }
      },
      "MissingInfoError": {
        "summary": "Specified info is missing.",
        "value": {
          "details": "The field 'Offering Badge' is missing or invalid.",
          "name": "MissingInfoError"
        }
      },
      "MultipleObjectsError": {
        "summary": "The specified object has multiple properties of which should have only one",
        "value": {
          "details": "There are multiple permission with value true (isBuilder | isReviewer).",
          "name": "ObjectIsNotError"
        }
      },
      "ObjectAlreadyIsError": {
        "summary": "The specified object already has a property",
        "value": {
          "details": "The user john.doe@test.te is already a manager.",
          "name": "ObjectAlreadyIsError"
        }
      },
      "ObjectExistsError": {
        "summary": "the specified source object already exists in the target object",
        "value": {
          "details": "The badge already exists in the offering OFFERING ID.",
          "name": "ObjectExistsError"
        }
      },
      "ObjectInvalidPropertyError": {
        "summary": "the specified source object already exists in the target object",
        "value": {
          "details": "The A property B is invalid. Expected value: C",
          "name": "ObjectInvalidPropertyError"
        }
      },
      "ObjectIsNotError": {
        "summary": "the specified object is not of the specified type",
        "value": {
          "details": "The user john.doe@test.te is not a builder.",
          "name": "ObjectIsNotError"
        }
      },
      "ObjectNotFoundError": {
        "summary": "a referenced object is not found",
        "value": {
          "details": "The content badcontentId was not found.",
          "name": "ObjectNotFoundError"
        }
      },
      "OfferingIncompatibleDatesError": {
        "summary": "The specified offering has relative dates enabled. Absolute task dates can not be set.",
        "value": {
          "details": "The specified offering has relative dates enabled. Absolute task dates can not be set.",
          "name": "OfferingIncompatibleDatesError"
        }
      },
      "SchemaAdditionalPropertiesError": {
        "summary": "The request body should not have extra properties",
        "value": {
          "details": "should NOT have additional properties",
          "name": "SchemaValidationError"
        }
      },
      "SchemaAllowedValuesError": {
        "summary": "should be equal to one of the allowed values",
        "value": {
          "details": "[PARAMETER_NAME] PARAMETER_VALUE should be equal to one of the allowed values a, b",
          "name": "SchemaValidationError"
        }
      },
      "SchemaEmailError": {
        "summary": "Parameter should be a valid e-mail",
        "value": {
          "details": "PARAMETER_NAME PARAMETER_VALUE should match format \"email\".",
          "name": "SchemaValidationError"
        }
      },
      "SchemaFormatError": {
        "summary": "should match specific format",
        "value": {
          "details": "PARAMETER_NAME PARAMETER_VALUE should match format \"example\"",
          "name": "SchemaValidationError"
        }
      },
      "SchemaMediaError": {
        "summary": "unsupported media type in the content-type header",
        "value": {
          "details": "unsupported media type application/json",
          "name": "SchemaValidationError"
        }
      },
      "SchemaMinLengthError": {
        "summary": "should be longer than the minimum required",
        "value": {
          "details": "[PARAMETER_NAME] PARAMETER_VALUE should NOT be shorter than 3 characters",
          "name": "SchemaValidationError"
        }
      },
      "SchemaQueryError": {
        "summary": "Unknown query parameter",
        "value": {
          "details": "[PARAMETER_NAME] PARAMETER_VALUE Unknown query parameter 'example'",
          "name": "SchemaValidationError"
        }
      },
      "SchemaRequiredError": {
        "summary": "should have a specific required property",
        "value": {
          "details": "should have required property 'example'",
          "name": "SchemaValidationError"
        }
      },
      "SchemaTypeError": {
        "summary": "should be of a specific type",
        "value": {
          "details": "[PARAMETER_NAME] PARAMETER_VALUE should be string",
          "name": "SchemaValidationError"
        }
      },
      "TextPatternError": {
        "summary": "Text pattern must be a minimum of n characters in length.",
        "value": {
          "details": "Text pattern must be a minimum of 3 characters in length.",
          "name": "TextPatternError"
        }
      },
      "UserDoesNotHaveBadgeError": {
        "summary": "The specified user does not have a badge in the specified offering",
        "value": {
          "details": "The user A has not been awarded a badge in the offering B.",
          "name": "UserDoesNotHaveBadgeError"
        }
      },
      "UserNotInOfferingError": {
        "summary": "Specified user is not in the offering.",
        "value": {
          "details": "The user john.doe@test.te is not a learner in the offering -MEF8kFyURUr6_CZ4IXD.",
          "name": "UserNotInOfferingError"
        }
      },
      "UserSuspendedError": {
        "summary": "The user has been suspended.",
        "value": {
          "details": "The user (john.doe@test.te) has been suspended.",
          "name": "UserSuspendedError"
        }
      },
      "ValidationAllowTasksError": {
        "summary": "The specified parameter offeringId does not have tasks enabled",
        "value": {
          "details": "The specified parameter offeringId has an invalid value 'The specified parameter offeringId does not have tasks enabled'.",
          "name": "ValidationError"
        }
      },
      "ValidationError": {
        "summary": "The specified parameter dueDate has an invalid value",
        "value": {
          "details": "The specified parameter dueDate has an invalid value \"Thu Apr 16 2020 19:15:00 GMT-0300 is before the openDate\".",
          "name": "ValidationError"
        }
      },
      "ValidationTaskNotInOfferingError": {
        "summary": "The specified parameter taskId is not in the offering",
        "value": {
          "details": "The specified parameter taskId has an invalid value 'The specified parameter taskId is not in the offering'.",
          "name": "ValidationError"
        }
      }
    }
  }
}