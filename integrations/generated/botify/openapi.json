{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "api.botify.com",
  "basePath": "/v1",
  "info": {
    "description": "Botify Saas API",
    "title": "Botify",
    "version": "1.0.0",
    "x-apisguru-categories": [
      "analytics",
      "tools"
    ],
    "x-logo": {
      "backgroundColor": "#1A1A1A",
      "url": "https://api.apis.guru/v2/cache/logo/https_static.botify.com_images_logos_botify-white.dc4215a12b9c.png"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://raw.githubusercontent.com/botify-labs/botify-sdk-js/master/swagger.json",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "botify.com",
    "x-datafire": {
      "name": "botify",
      "type": "openapi"
    }
  },
  "externalDocs": {
    "url": "https://developers.botify.com/"
  },
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "DjangoRestToken": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "DjangoRestToken": []
    }
  ],
  "paths": {
    "/analyses/{username}/{project_slug}": {
      "get": {
        "description": "List all analyses for a project",
        "operationId": "getProjectAnalyses",
        "parameters": [
          {
            "default": 1,
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page Size",
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Return only successfully finished analyses",
            "in": "query",
            "name": "only_success",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Which fields to return (comma-separated)",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string"
                },
                "page": {
                  "type": "integer"
                },
                "previous": {
                  "type": "string"
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Analysis"
                  },
                  "type": "array"
                },
                "size": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "List all analyses for a project",
        "tags": [
          "Project"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}": {
      "get": {
        "description": "Get an Analysis detail",
        "operationId": "getAnalysisSummary",
        "parameters": [
          {
            "description": "Previous analysis identifier",
            "in": "query",
            "name": "previous_crawl",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AnalysisDetail"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Get an Analysis detail",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "description": "Update an Analysis' attribute",
        "operationId": "updateAnalysis",
        "parameters": [
          {
            "description": "Analysis Update",
            "in": "body",
            "name": "AnalysisUpdate",
            "schema": {
              "$ref": "#/definitions/AnalysisUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AnalysisUpdate"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Update an Analysis' attribute",
        "tags": [
          "Analysis"
        ]
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics": {
      "get": {
        "description": "Return global statistics for an analysis",
        "operationId": "getCrawlStatistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CrawlStatistics"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Return global statistics for an analysis",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics/time": {
      "get": {
        "description": "Return crawl statistics grouped by time frequency (1 min, 5 mins or 60 min) for an analysis",
        "operationId": "getCrawlStatisticsByFrequency",
        "parameters": [
          {
            "description": "max number of elements to retrieve",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Aggregation frequency",
            "enum": [
              "1mn",
              "5mn",
              "60mn"
            ],
            "in": "query",
            "name": "frequency",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CrawlStatisticsTime"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Return crawl statistics grouped by time frequency (1 min, 5 mins or 60 min)",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics/urls/{list_type}": {
      "get": {
        "description": "Return a list of 1000 latest URLs crawled (all crawled URLs or only URLS with HTTP errors)",
        "operationId": "getCrawlStatisticsUrls",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/CrawlStatisticsUrls"
              },
              "type": "array"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Return a list of 1000 latest URLs crawled (all crawled URLs or only URLS with HTTP errors)",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "URLs list type (crawled URLs or error URLs)",
          "enum": [
            "crawled",
            "errors"
          ],
          "in": "path",
          "name": "list_type",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/ganalytics/orphan_urls/{medium}/{source}": {
      "get": {
        "description": "Legacy    List of Orphan URLs. URLs which generated visits from the selected source according to Google Analytics data, but were not crawled with by the Botify crawler (either because no links to them were found on the website, or because the crawler was not allowed to follow these links according to the project settings).   For a search engine (medium: origanic; sources: all, aol, ask, baidu, bing, google, naver, yahoo, yandex) or a social network (medium: social; sources: all, facebook, google+, linkedin, pinterest, reddit, tumblr, twitter)",
        "operationId": "getGanalyticsOrphanURLs",
        "parameters": [
          {
            "default": 1,
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string"
                },
                "page": {
                  "type": "integer"
                },
                "previous": {
                  "type": "string"
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/CrawlOrphanURLs"
                  },
                  "type": "array"
                },
                "size": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "List of Orphan URLs",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Type of traffic, value: 'organic' (from search engine)or 'social' (from a social network)",
          "enum": [
            "organic",
            "social"
          ],
          "in": "path",
          "name": "medium",
          "required": true,
          "type": "string"
        },
        {
          "description": "Traffic source, value: name of the search engine or social network",
          "enum": [
            "all",
            "aol",
            "ask",
            "baidu",
            "bing",
            "facebook",
            "google",
            "google+",
            "linkedin",
            "naver",
            "pinterest",
            "reddit",
            "tumblr",
            "twitter",
            "yahoo",
            "yandex"
          ],
          "in": "path",
          "name": "source",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/links/percentiles": {
      "get": {
        "description": "Get inlinks percentiles",
        "operationId": "getLinksPercentiles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LinksPercentiles"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Get inlinks percentiles",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/pagerank/lost": {
      "get": {
        "description": "Lost pagerank",
        "operationId": "getPageRankLost",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PageRankLost"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Lost pagerank",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/scoring/summary": {
      "get": {
        "description": "Scoring summary",
        "operationId": "getScoring",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScoringSummary"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Scoring summary",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/search_console/stats": {
      "get": {
        "description": "List clicks and impressions per day",
        "operationId": "getKeywordsStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/KeywordsStats"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "List clicks and impressions per day",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/report": {
      "get": {
        "description": "Get global information of the sitemaps found (sitemaps indexes, invalid sitemaps urls, etc.)",
        "operationId": "getSitemapsReport",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SitemapsReport"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Get global information of the sitemaps found (sitemaps indexes, invalid sitemaps urls, etc",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/samples/out_of_config": {
      "get": {
        "description": "Sample list of URLs which were found in your sitemaps but outside of the crawl perimeter defined for the project, for instance domain/subdomain or protocol (HTTP/HTTPS) not allowed in the crawl settings.",
        "operationId": "getSitemapsSamplesOutOfConfig",
        "parameters": [
          {
            "default": 1,
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string"
                },
                "page": {
                  "type": "integer"
                },
                "previous": {
                  "type": "string"
                },
                "results": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "size": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Sample list of URLs which were found in your sitemaps but outside of the",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/samples/sitemap_only": {
      "get": {
        "description": "Sample list of URLs which were found in your sitemaps, within the project allowed scope (allowed domains/subdomains/protocols), but not found by the Botify crawler.",
        "operationId": "getSitemapsSamplesSitemapsOnly",
        "parameters": [
          {
            "default": 1,
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string"
                },
                "page": {
                  "type": "integer"
                },
                "previous": {
                  "type": "string"
                },
                "results": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "size": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Sample list of URLs which were found in your sitemaps, within the project",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/top_domains/domains": {
      "get": {
        "description": "Top domains",
        "operationId": "getLinksTopDomains",
        "parameters": [
          {
            "default": 1,
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string"
                },
                "page": {
                  "type": "integer"
                },
                "previous": {
                  "type": "string"
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/LinksTopDomains"
                  },
                  "type": "array"
                },
                "size": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Top domains",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/top_domains/subdomains": {
      "get": {
        "description": "Top subddomains",
        "operationId": "getLinksTopSubdomains",
        "parameters": [
          {
            "default": 1,
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string"
                },
                "page": {
                  "type": "integer"
                },
                "previous": {
                  "type": "string"
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/LinksTopDomains"
                  },
                  "type": "array"
                },
                "size": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Top subddomains",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/visits/orphan_urls/{medium}/{source}": {
      "get": {
        "description": "List of Orphan URLs. URLs which generated visits from the selected source according to Google Analytics data, but were not crawled with by the Botify crawler (either because no links to them were found on the website, or because the crawler was not allowed to follow these links according to the project settings).   For a search engine (medium: origanic; sources: all, aol, ask, baidu, bing, google, naver, yahoo, yandex) or a social network (medium: social; sources: all, facebook, google+, linkedin, pinterest, reddit, tumblr, twitter)",
        "operationId": "getVisitsOrphanURLs",
        "parameters": [
          {
            "default": 1,
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string"
                },
                "page": {
                  "type": "integer"
                },
                "previous": {
                  "type": "string"
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/CrawlOrphanURLs"
                  },
                  "type": "array"
                },
                "size": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "List of Orphan URLs",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Type of traffic, value: 'organic' (from search engine)or 'social' (from a social network)",
          "enum": [
            "organic",
            "social"
          ],
          "in": "path",
          "name": "medium",
          "required": true,
          "type": "string"
        },
        {
          "description": "Traffic source, value: name of the search engine or social network",
          "enum": [
            "all",
            "aol",
            "ask",
            "baidu",
            "bing",
            "facebook",
            "google",
            "google+",
            "linkedin",
            "naver",
            "pinterest",
            "reddit",
            "tumblr",
            "twitter",
            "yahoo",
            "yandex"
          ],
          "in": "path",
          "name": "source",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/segments": {
      "get": {
        "description": "Get the segments feature public metadata of an analysis.",
        "operationId": "getAnalysisSegments",
        "parameters": [
          {
            "default": 1,
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string"
                },
                "page": {
                  "type": "integer"
                },
                "previous": {
                  "type": "string"
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/AnalysisSegments"
                  },
                  "type": "array"
                },
                "size": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Get the segments feature public metadata of an analysis",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/staticfiles/robots-txt-indexes": {
      "get": {
        "description": "Return a list of all robots.txt files found on the project's domains.",
        "operationId": "getRobotsTxtIndexesView",
        "parameters": [
          {
            "default": 1,
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string"
                },
                "page": {
                  "type": "integer"
                },
                "previous": {
                  "type": "string"
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Default"
                  },
                  "type": "array"
                },
                "size": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Return a list of all robots",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/staticfiles/robots-txt-indexes/{robots_txt}": {
      "get": {
        "description": "Return content of a robots.txt file.",
        "operationId": "getRobotsTxtFileView",
        "parameters": [
          {
            "default": 1,
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string"
                },
                "page": {
                  "type": "integer"
                },
                "previous": {
                  "type": "string"
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Default"
                  },
                  "type": "array"
                },
                "size": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Return content of a robots",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Filename",
          "in": "path",
          "name": "robots_txt",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "Executes a query and returns a paginated response",
        "operationId": "getUrls",
        "parameters": [
          {
            "description": "Query",
            "in": "body",
            "name": "Query",
            "schema": {
              "$ref": "#/definitions/Query"
            }
          },
          {
            "default": "current",
            "description": "Analysis context",
            "enum": [
              "current",
              "disappeared",
              "new",
              "search_engines_orphans",
              "gsc_keywords",
              "gsc_keywords_by_country"
            ],
            "in": "query",
            "name": "area",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page Number",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page Size",
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Previous analysis identifier",
            "in": "query",
            "name": "previous_crawl",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string"
                },
                "page": {
                  "type": "integer"
                },
                "previous": {
                  "type": "string"
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/UrlDetail"
                  },
                  "type": "array"
                },
                "size": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Executes a query and returns a paginated response",
        "tags": [
          "Analysis"
        ]
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/aggs": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "Query aggregator. It accepts multiple queries and dispatches them on ES or BQ.",
        "operationId": "getUrlsAggs",
        "parameters": [
          {
            "description": "AggsQueries",
            "in": "body",
            "name": "AggsQueries",
            "schema": {
              "$ref": "#/definitions/AggsQueries"
            }
          },
          {
            "default": "current",
            "description": "Analysis context",
            "enum": [
              "current",
              "disappeared",
              "new",
              "search_engines_orphans",
              "gsc_keywords",
              "gsc_keywords_by_country"
            ],
            "in": "query",
            "name": "area",
            "required": false,
            "type": "string"
          },
          {
            "description": "Previous analysis identifier",
            "in": "query",
            "name": "previous_crawl",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/Aggs"
              },
              "type": "array"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Query aggregator",
        "tags": [
          "Analysis"
        ]
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/datamodel": {
      "get": {
        "description": "Gets an Analysis datamodel",
        "operationId": "getUrlsDatamodel",
        "parameters": [
          {
            "default": "current",
            "description": "Analysis context",
            "enum": [
              "current",
              "disappeared",
              "new",
              "search_engines_orphans",
              "gsc_keywords",
              "gsc_keywords_by_country"
            ],
            "in": "query",
            "name": "area",
            "required": false,
            "type": "string"
          },
          {
            "description": "Previous analysis identifier",
            "in": "query",
            "name": "previous_crawl",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Datamodel"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Gets an Analysis datamodel",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/datasets": {
      "get": {
        "description": "Gets Analysis Datasets",
        "operationId": "getUrlsDatasets",
        "parameters": [
          {
            "default": "current",
            "description": "Analysis context",
            "enum": [
              "current",
              "disappeared",
              "new",
              "search_engines_orphans",
              "gsc_keywords",
              "gsc_keywords_by_country"
            ],
            "in": "query",
            "name": "area",
            "required": false,
            "type": "string"
          },
          {
            "description": "Previous analysis identifier",
            "in": "query",
            "name": "previous_crawl",
            "required": false,
            "type": "string"
          },
          {
            "default": true,
            "description": "Include deprecated fields",
            "in": "query",
            "name": "deprecated_fields",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Datasets"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Gets Analysis Datasets",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/export": {
      "get": {
        "description": "A list of the CSV Exports requests and their current status",
        "operationId": "getUrlsExports",
        "parameters": [
          {
            "default": 1,
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string"
                },
                "page": {
                  "type": "integer"
                },
                "previous": {
                  "type": "string"
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/CsvExportStatus"
                  },
                  "type": "array"
                },
                "size": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "A list of the CSV Exports requests and their current status",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "Creates a new UrlExport object and starts a task that will export the results into a csv. Returns the model id that manages the task",
        "operationId": "createUrlsExport",
        "parameters": [
          {
            "description": "Query",
            "in": "body",
            "name": "Query",
            "schema": {
              "$ref": "#/definitions/Query"
            }
          },
          {
            "default": "current",
            "description": "Analysis context",
            "enum": [
              "current",
              "disappeared",
              "new",
              "search_engines_orphans",
              "gsc_keywords",
              "gsc_keywords_by_country"
            ],
            "in": "query",
            "name": "area",
            "required": false,
            "type": "string"
          },
          {
            "description": "Previous analysis identifier",
            "in": "query",
            "name": "previous_crawl",
            "required": false,
            "type": "string"
          },
          {
            "description": "Maximum size of the export (deprecated => size instead)",
            "format": "int32",
            "in": "query",
            "name": "export_size",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Maximum size of the export",
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CsvExportStatus"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Creates a new UrlExport object and starts a task that will export the results into a csv",
        "tags": [
          "Analysis"
        ]
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/export/{url_export_id}": {
      "get": {
        "description": "Checks the status of an CSVUrlExportJob object. Returns json object with the status.",
        "operationId": "getUrlsExportStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CsvExportStatus"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Checks the status of an CSVUrlExportJob object",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Url Export ID",
          "in": "path",
          "name": "url_export_id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/html/{url}": {
      "get": {
        "description": "Gets the HTML of an URL for an analysis",
        "operationId": "getUrlHTML",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UrlHTML"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Gets the HTML of an URL for an analysis",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "(Urlencoded) Searched URL",
          "in": "path",
          "name": "url",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/suggested_filters": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "Return most frequent segments (= suggested patterns in the previous version) for a Botify Query.",
        "operationId": "getUrlsSuggestedFilters",
        "parameters": [
          {
            "description": "AggsQuery",
            "in": "body",
            "name": "AggsQuery",
            "schema": {
              "$ref": "#/definitions/AggsQuery"
            }
          },
          {
            "default": "current",
            "description": "Analysis context",
            "enum": [
              "current",
              "new"
            ],
            "in": "query",
            "name": "area",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AggsQuery"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Return most frequent segments (= suggested patterns in the previous version)",
        "tags": [
          "Analysis"
        ]
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/{url}": {
      "get": {
        "description": "Gets the detail of an URL for an analysis",
        "operationId": "getUrlDetail",
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "comma separated list of fields to return (c.f. URLs Datamodel)",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fields",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UrlDetail"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Gets the detail of an URL for an analysis",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "Analysis' identifier",
          "in": "path",
          "name": "analysis_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "(Urlencoded) Searched URL",
          "in": "path",
          "name": "url",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/projects/{username}": {
      "get": {
        "description": "List all active projects for the user",
        "operationId": "getUserProjects",
        "parameters": [
          {
            "description": "Project's name",
            "in": "query",
            "name": "name",
            "type": "string"
          },
          {
            "default": 1,
            "description": "Page Number",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page Size",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string"
                },
                "page": {
                  "type": "integer"
                },
                "previous": {
                  "type": "string"
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Project"
                  },
                  "type": "array"
                },
                "size": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "List all active projects for the user",
        "tags": [
          "User"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/projects/{username}/{project_slug}/automations": {
      "parameters": [
        {
          "description": "user to which belongs the project",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "identifies the project",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "Creates a new JobAutomation from data",
        "operationId": "postJobAutomation",
        "parameters": [
          {
            "description": "Job automation creation",
            "in": "body",
            "name": "JobAutomation",
            "schema": {
              "$ref": "#/definitions/JobAutomation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/JobAutomation"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Creates a new JobAutomation from data",
        "tags": [
          "JobAutomation"
        ]
      }
    },
    "/projects/{username}/{project_slug}/automations/from/{job_id}": {
      "parameters": [
        {
          "description": "user to which belongs the project",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "identifies the project",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "the id of the existing job",
          "in": "path",
          "name": "job_id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "Creates a new JobAutomation from an existing job",
        "operationId": "postJobAutomationFromJob",
        "parameters": [
          {
            "description": "Job automation creation",
            "in": "body",
            "name": "JobAutomation",
            "schema": {
              "$ref": "#/definitions/JobAutomation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/JobAutomation"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Creates a new JobAutomation from an existing job",
        "tags": [
          "JobAutomation"
        ]
      }
    },
    "/projects/{username}/{project_slug}/collections": {
      "get": {
        "description": "List all collections for a project",
        "operationId": "getProjectCollections",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "List all collections for a project",
        "tags": [
          "Collections"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/projects/{username}/{project_slug}/collections/{collection}": {
      "get": {
        "description": "Get the detail of a collection",
        "operationId": "getCollectionDetail",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CollectionDatasets"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Get the detail of a collection",
        "tags": [
          "Collections"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "description": "The collection to query",
          "in": "path",
          "name": "collection",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/projects/{username}/{project_slug}/datasources": {
      "get": {
        "description": "List all datasources for a project",
        "operationId": "getDatasourcesDetails",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ProjectDatasource"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "List all datasources for a project",
        "tags": [
          "Project"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/projects/{username}/{project_slug}/filters": {
      "get": {
        "description": "List all the project's saved filters (each filter's name, ID and filter value)",
        "operationId": "getSavedFilters",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ProjectSavedFilter"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "List all the project's saved filters (each filter's name, ID and filter value)",
        "tags": [
          "Project"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/projects/{username}/{project_slug}/filters/{identifier}": {
      "get": {
        "description": "Retrieves a specific saved filter's name, ID and filter value",
        "operationId": "getSavedFilter",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ProjectSavedFilter"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Retrieves a specific saved filter's name, ID and filter value",
        "tags": [
          "Project"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "identifier",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/projects/{username}/{project_slug}/saved_explorers": {
      "get": {
        "description": "List all the project's Saved Explorers.",
        "operationId": "getSavedExplorers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SavedExplorer"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "List all the project's Saved Explorers",
        "tags": [
          "Project"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/projects/{username}/{project_slug}/urls/aggs": {
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Project's identifier",
          "in": "path",
          "name": "project_slug",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "Project Query aggregator. It accepts multiple queries that will be executed on all completed analyses in the project",
        "operationId": "getProjectUrlsAggs",
        "parameters": [
          {
            "description": "AggsQueries",
            "in": "body",
            "name": "AggsQueries",
            "schema": {
              "$ref": "#/definitions/AggsQueries"
            }
          },
          {
            "default": "current",
            "description": "Analyses context",
            "enum": [
              "current",
              "disappeared",
              "new",
              "gsc_keywords",
              "gsc_keywords_by_country"
            ],
            "in": "query",
            "name": "area",
            "required": false,
            "type": "string"
          },
          {
            "description": "Last analysis on the trend",
            "in": "query",
            "name": "last_analysis_slug",
            "required": false,
            "type": "string"
          },
          {
            "default": 20,
            "description": "Max number of analysis to return",
            "format": "int32",
            "in": "query",
            "maximum": 20,
            "minimum": 1,
            "name": "nb_analyses",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Default"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Project Query aggregator",
        "tags": [
          "Project"
        ]
      }
    },
    "/users/{username}/datasources_summary_by_projects": {
      "get": {
        "description": "Get the datasources details for all projects of a user",
        "operationId": "getDatasourcesSummaryByProjects",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ProjectDatasourceSummary"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "Get the datasources details for all projects of a user",
        "tags": [
          "Datasource"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/{username}/projects": {
      "get": {
        "description": "List all active projects for the user",
        "operationId": "getAllUserProjects",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "summary": "List all active projects for the user",
        "tags": [
          "Project"
        ]
      },
      "parameters": [
        {
          "description": "User's identifier",
          "in": "path",
          "name": "username",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "definitions": {
    "AdvancedExportStatus": {
      "properties": {
        "advanced_export_type": {
          "type": "string"
        },
        "date_created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "full_export": {
          "default": false,
          "type": "boolean"
        },
        "job_id": {
          "readOnly": true,
          "type": "string"
        },
        "job_status": {
          "readOnly": true,
          "type": "string"
        },
        "job_url": {
          "readOnly": true,
          "type": "string"
        },
        "query": {
          "readOnly": true,
          "type": "string"
        },
        "results": {
          "readOnly": true,
          "type": "string"
        },
        "user": {
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "advanced_export_type"
      ],
      "type": "object"
    },
    "AdvancedExporter": {
      "properties": {
        "full_export": {
          "default": false,
          "type": "boolean"
        },
        "group": {
          "type": "string"
        },
        "lines": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "name",
        "group",
        "lines"
      ],
      "type": "object"
    },
    "AdvancedExporters": {
      "properties": {
        "exporters": {
          "items": {
            "$ref": "#/definitions/AdvancedExporter"
          },
          "type": "array"
        }
      },
      "required": [
        "exporters"
      ],
      "type": "object"
    },
    "Aggs": {
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorAgg"
        },
        "status": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "status"
      ],
      "type": "object"
    },
    "AggsQueries": {
      "items": {
        "$ref": "#/definitions/AggsQuery"
      },
      "type": "array"
    },
    "AggsQuery": {
      "description": "AggsQuery",
      "properties": {
        "aggs": {
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "filters": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnalysesUpdateLaunch": {
      "description": "Launch Analyses Updates",
      "properties": {
        "analyses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "refresh_features": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "analyses",
        "refresh_features"
      ],
      "type": "object"
    },
    "Analysis": {
      "properties": {
        "comparable": {
          "readOnly": true,
          "type": "string"
        },
        "computing_revision": {
          "readOnly": true,
          "type": "string"
        },
        "config": {
          "readOnly": true,
          "type": "string"
        },
        "crawl_launch_type": {
          "readOnly": true,
          "type": "string"
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "date_finished": {
          "format": "date-time",
          "type": "string"
        },
        "date_last_modified": {
          "description": "Date of last modified analysis",
          "format": "date-time",
          "type": "string"
        },
        "date_launched": {
          "format": "date-time",
          "type": "string"
        },
        "failures": {
          "readOnly": true,
          "type": "string"
        },
        "features": {
          "readOnly": true,
          "type": "string"
        },
        "friendly_name": {
          "readOnly": true,
          "type": "string"
        },
        "import_keywords_data": {
          "readOnly": true,
          "type": "string"
        },
        "import_keywords_data_by_country": {
          "default": true,
          "type": "boolean"
        },
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "owner": {
          "readOnly": true,
          "type": "string"
        },
        "pinned": {
          "type": "boolean"
        },
        "pins_balance": {
          "readOnly": true,
          "type": "string"
        },
        "pk": {
          "readOnly": true,
          "type": "string"
        },
        "red_button_domain": {
          "type": "string"
        },
        "slug": {
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "readOnly": true,
          "type": "string"
        },
        "to_be_deleted_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "readOnly": true,
          "type": "string"
        },
        "urls_done": {
          "readOnly": true,
          "type": "string"
        },
        "urls_in_queue": {
          "readOnly": true,
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "user"
      ],
      "type": "object"
    },
    "AnalysisDetail": {
      "properties": {
        "comparable": {
          "readOnly": true,
          "type": "string"
        },
        "computing_revision": {
          "readOnly": true,
          "type": "string"
        },
        "config": {
          "readOnly": true,
          "type": "string"
        },
        "crawl_launch_type": {
          "readOnly": true,
          "type": "string"
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "date_finished": {
          "format": "date-time",
          "type": "string"
        },
        "date_last_modified": {
          "description": "Date of last modified analysis",
          "format": "date-time",
          "type": "string"
        },
        "date_launched": {
          "format": "date-time",
          "type": "string"
        },
        "failures": {
          "readOnly": true,
          "type": "string"
        },
        "features": {
          "readOnly": true,
          "type": "string"
        },
        "friendly_name": {
          "readOnly": true,
          "type": "string"
        },
        "import_keywords_data": {
          "readOnly": true,
          "type": "string"
        },
        "import_keywords_data_by_country": {
          "default": true,
          "type": "boolean"
        },
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "owner": {
          "readOnly": true,
          "type": "string"
        },
        "pinned": {
          "type": "boolean"
        },
        "pins_balance": {
          "readOnly": true,
          "type": "string"
        },
        "pk": {
          "readOnly": true,
          "type": "string"
        },
        "red_button_domain": {
          "type": "string"
        },
        "slug": {
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "readOnly": true,
          "type": "string"
        },
        "to_be_deleted_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "readOnly": true,
          "type": "string"
        },
        "urls_done": {
          "readOnly": true,
          "type": "string"
        },
        "urls_in_queue": {
          "readOnly": true,
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "user"
      ],
      "type": "object"
    },
    "AnalysisSegments": {
      "description": "Analysis Segments",
      "properties": {
        "segments": {
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AnalysisUpdate": {
      "description": "Analysis Update",
      "properties": {
        "pinned": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "AnalysisUpdateLaunch": {
      "description": "Launch Analysis Update",
      "properties": {
        "refresh_features": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "refresh_features"
      ],
      "type": "object"
    },
    "AnalysisUpdateSuggest": {
      "properties": {
        "add_on_features": {
          "items": {
            "$ref": "#/definitions/SuggestedUpdatesAddOnFeatures"
          },
          "type": "array"
        },
        "features_to_update": {
          "items": {
            "$ref": "#/definitions/SuggestedUpdatesFeaturesToUpdate"
          },
          "type": "array"
        }
      },
      "required": [
        "add_on_features",
        "features_to_update"
      ],
      "type": "object"
    },
    "BqlDryRun": {
      "properties": {
        "error": {
          "type": "object"
        },
        "query": {
          "type": "string"
        }
      },
      "required": [
        "query"
      ],
      "type": "object"
    },
    "CheckExternalStorageAccess": {
      "properties": {
        "access_ok": {
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Collection": {
      "properties": {
        "date": {
          "readOnly": true,
          "type": "string"
        },
        "date_end": {
          "format": "date",
          "type": "string"
        },
        "date_start": {
          "format": "date",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "timestamped": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "name",
        "timestamped"
      ],
      "type": "object"
    },
    "CollectionDatasets": {
      "properties": {
        "datasets": {
          "items": {
            "$ref": "#/definitions/Dataset"
          },
          "type": "array"
        },
        "metadata": {
          "$ref": "#/definitions/CollectionMetadata"
        }
      },
      "required": [
        "datasets"
      ],
      "type": "object"
    },
    "CollectionMetadata": {
      "properties": {
        "config": {
          "type": "object"
        },
        "date_end": {
          "format": "date",
          "type": "string"
        },
        "date_last_modified": {
          "format": "date-time",
          "type": "string"
        },
        "date_start": {
          "format": "date",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CrawlOrphanURLs": {
      "properties": {
        "url": {
          "type": "string"
        },
        "visits": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "url",
        "visits"
      ],
      "type": "object"
    },
    "CrawlStatistics": {
      "properties": {
        "crawler_ip": {
          "type": "string"
        },
        "depth_current": {
          "format": "int64",
          "type": "integer"
        },
        "last_upd_dt": {
          "format": "date-time",
          "type": "string"
        },
        "pages_dones": {
          "format": "int64",
          "type": "integer"
        },
        "pages_dones_2xx": {
          "format": "int64",
          "type": "integer"
        },
        "pages_dones_3xx": {
          "format": "int64",
          "type": "integer"
        },
        "pages_dones_4xx": {
          "format": "int64",
          "type": "integer"
        },
        "pages_dones_5xx": {
          "format": "int64",
          "type": "integer"
        },
        "pages_dones_networkerror": {
          "format": "int64",
          "type": "integer"
        },
        "pages_dones_xxx": {
          "format": "int64",
          "type": "integer"
        },
        "pages_known": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "depth_current",
        "pages_dones_networkerror",
        "pages_dones_3xx",
        "pages_dones",
        "pages_dones_2xx",
        "last_upd_dt",
        "pages_dones_5xx",
        "pages_dones_xxx",
        "pages_dones_4xx",
        "pages_known"
      ],
      "type": "object"
    },
    "CrawlStatisticsTime": {
      "properties": {
        "avg_delay": {
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "type": "array"
        },
        "avg_size": {
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "type": "array"
        },
        "frequency": {
          "type": "string"
        },
        "http_code_2xx": {
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "type": "array"
        },
        "http_code_3xx": {
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "type": "array"
        },
        "http_code_4xx": {
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "type": "array"
        },
        "http_code_5xx": {
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "type": "array"
        },
        "http_code_xxx": {
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "type": "array"
        },
        "last_update_date": {
          "format": "date-time",
          "type": "string"
        },
        "new_urls": {
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "type": "array"
        }
      },
      "required": [
        "avg_delay",
        "http_code_2xx",
        "http_code_3xx",
        "http_code_4xx",
        "http_code_5xx",
        "http_code_xxx",
        "frequency",
        "last_update_date",
        "avg_size",
        "new_urls"
      ],
      "type": "object"
    },
    "CrawlStatisticsTimePoint": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "datetime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "count",
        "datetime"
      ],
      "type": "object"
    },
    "CrawlStatisticsUrls": {
      "properties": {
        "content_type": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "delay_first_byte": {
          "format": "int64",
          "type": "integer"
        },
        "delay_last_byte": {
          "format": "int64",
          "type": "integer"
        },
        "gzip": {
          "type": "boolean"
        },
        "http": {
          "format": "int64",
          "type": "integer"
        },
        "length": {
          "format": "int64",
          "type": "integer"
        },
        "redirects_to": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "http",
        "url",
        "delay_last_byte",
        "gzip",
        "length",
        "content_type",
        "date",
        "delay_first_byte"
      ],
      "type": "object"
    },
    "CsvExportStatus": {
      "properties": {
        "area": {
          "type": "string"
        },
        "date_created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "job_id": {
          "readOnly": true,
          "type": "string"
        },
        "job_status": {
          "readOnly": true,
          "type": "string"
        },
        "job_url": {
          "readOnly": true,
          "type": "string"
        },
        "nb_results": {
          "format": "int64",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "query": {
          "$ref": "#/definitions/Query"
        },
        "results": {
          "readOnly": true,
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "user": {
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "query",
        "size"
      ],
      "type": "object"
    },
    "Datamodel": {
      "properties": {
        "aliases": {
          "type": "object"
        },
        "fields": {
          "items": {
            "$ref": "#/definitions/DatamodelField"
          },
          "type": "array"
        },
        "groups": {
          "items": {
            "$ref": "#/definitions/DatamodelGroup"
          },
          "type": "array"
        },
        "max_timeseries_fields": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "fields",
        "groups"
      ],
      "type": "object"
    },
    "DatamodelField": {
      "properties": {
        "aliases": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "group": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "multiple": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        },
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subtype": {
          "type": "string"
        },
        "suggestion": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "multiple",
        "name",
        "subtype",
        "group",
        "type",
        "id",
        "permissions",
        "optional"
      ],
      "type": "object"
    },
    "DatamodelGroup": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "type": "object"
    },
    "Dataset": {
      "properties": {
        "fields": {
          "items": {
            "$ref": "#/definitions/DatasetField"
          },
          "type": "array"
        },
        "groups": {
          "items": {
            "$ref": "#/definitions/DatasetGroup"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "multiple": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "suggested_operations": {
          "items": {
            "$ref": "#/definitions/SuggestedOperations"
          },
          "type": "array"
        }
      },
      "required": [
        "id",
        "name",
        "groups",
        "fields"
      ],
      "type": "object"
    },
    "DatasetField": {
      "properties": {
        "aliases": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "deprecated": {
          "type": "boolean"
        },
        "group": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "meta": {
          "type": "object"
        },
        "multiple": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        },
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "settings": {
          "type": "object"
        },
        "subtype": {
          "type": "string"
        },
        "suggestion": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "multiple",
        "name",
        "subtype",
        "type",
        "kind",
        "id",
        "permissions",
        "optional"
      ],
      "type": "object"
    },
    "DatasetGroup": {
      "properties": {
        "id": {
          "type": "string"
        },
        "multiple": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "type": "object"
    },
    "Datasets": {
      "properties": {
        "datasets": {
          "items": {
            "$ref": "#/definitions/Dataset"
          },
          "type": "array"
        }
      },
      "required": [
        "datasets"
      ],
      "type": "object"
    },
    "Datasource": {
      "properties": {},
      "type": "object"
    },
    "Default": {
      "properties": {},
      "type": "object"
    },
    "DefaultPayload": {
      "description": "default payload for object for all HTTP codes that are not covered individually",
      "properties": {
        "error": {
          "properties": {
            "error_code": {
              "description": "Error Code",
              "type": "string"
            },
            "error_detail": {
              "description": "If available, detailed error",
              "type": "object"
            },
            "message": {
              "description": "Error Message",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ErrorAgg": {
      "properties": {
        "error_code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message",
        "error_code"
      ],
      "type": "object"
    },
    "FieldValues": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "results": {
          "items": {
            "$ref": "#/definitions/FieldValuesResult"
          },
          "type": "array"
        }
      },
      "required": [
        "count",
        "results"
      ],
      "type": "object"
    },
    "FieldValuesResult": {
      "properties": {
        "nb_urls": {
          "format": "int64",
          "type": "integer"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "value",
        "nb_urls"
      ],
      "type": "object"
    },
    "HtmlExtract": {
      "description": "Html Extract",
      "properties": {
        "config": {
          "type": "object"
        },
        "extract_type": {
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "JobAutomation": {
      "description": "Job automation creation",
      "properties": {
        "description": {
          "type": "string"
        },
        "job_type": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        }
      },
      "required": [
        "job_type"
      ],
      "type": "object"
    },
    "KeywordsStat": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/KeywordsStatData"
          },
          "type": "array"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "data"
      ],
      "type": "object"
    },
    "KeywordsStatData": {
      "properties": {
        "all": {
          "$ref": "#/definitions/KeywordsStatDetail"
        },
        "date": {
          "format": "int64",
          "type": "integer"
        },
        "desktop": {
          "$ref": "#/definitions/KeywordsStatDetail"
        },
        "mobile": {
          "$ref": "#/definitions/KeywordsStatDetail"
        },
        "tablet": {
          "$ref": "#/definitions/KeywordsStatDetail"
        }
      },
      "required": [
        "date",
        "all",
        "desktop",
        "mobile",
        "tablet"
      ],
      "type": "object"
    },
    "KeywordsStatDetail": {
      "properties": {
        "clicks": {
          "format": "int64",
          "type": "integer"
        },
        "impressions": {
          "format": "int64",
          "type": "integer"
        },
        "sampled_clicks": {
          "format": "int64",
          "type": "integer"
        },
        "sampled_impressions": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "clicks",
        "impressions",
        "sampled_clicks",
        "sampled_impressions"
      ],
      "type": "object"
    },
    "KeywordsStats": {
      "properties": {
        "stats": {
          "items": {
            "$ref": "#/definitions/KeywordsStat"
          },
          "type": "array"
        }
      },
      "required": [
        "stats"
      ],
      "type": "object"
    },
    "LinksPercentiles": {
      "properties": {
        "domain": {
          "type": "string"
        },
        "percentiles": {
          "items": {
            "$ref": "#/definitions/LinksPercentilesItem"
          },
          "type": "array"
        }
      },
      "required": [
        "domain",
        "percentiles"
      ],
      "type": "object"
    },
    "LinksPercentilesItem": {
      "properties": {
        "avg": {
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "max": {
          "format": "int64",
          "type": "integer"
        },
        "metric_total": {
          "format": "int64",
          "type": "integer"
        },
        "min": {
          "format": "int64",
          "type": "integer"
        },
        "url_total": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "min",
        "max",
        "url_total",
        "metric_total",
        "avg",
        "id"
      ],
      "type": "object"
    },
    "LinksTopDomains": {
      "properties": {
        "domain": {
          "type": "string"
        },
        "follow_links": {
          "format": "int64",
          "type": "integer"
        },
        "follow_samples": {
          "items": {
            "$ref": "#/definitions/LinksTopDomainsSamples"
          },
          "type": "array"
        },
        "nofollow_links": {
          "format": "int64",
          "type": "integer"
        },
        "nofollow_samples": {
          "items": {
            "$ref": "#/definitions/LinksTopDomainsSamples"
          },
          "type": "array"
        },
        "unique_follow_links": {
          "format": "int64",
          "type": "integer"
        },
        "unique_nofollow_links": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "follow_links",
        "nofollow_links",
        "domain",
        "follow_samples",
        "nofollow_samples",
        "unique_follow_links",
        "unique_nofollow_links"
      ],
      "type": "object"
    },
    "LinksTopDomainsSamples": {
      "properties": {
        "sources": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "unique_links": {
          "format": "int64",
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "url",
        "sources",
        "unique_links"
      ],
      "type": "object"
    },
    "OrganizationUser": {
      "properties": {
        "is_organization": {
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/User"
        },
        "slug": {
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "PageRankLost": {
      "properties": {
        "external": {
          "format": "float",
          "type": "number"
        },
        "non_crawled": {
          "format": "float",
          "type": "number"
        },
        "robots_txt": {
          "format": "float",
          "type": "number"
        }
      },
      "required": [
        "non_crawled",
        "external",
        "robots_txt"
      ],
      "type": "object"
    },
    "Project": {
      "properties": {
        "account_id": {
          "readOnly": true,
          "type": "string"
        },
        "current_settings": {
          "$ref": "#/definitions/ProjectSettings"
        },
        "date_created": {
          "readOnly": true,
          "type": "string"
        },
        "has_actionboard": {
          "readOnly": true,
          "type": "string"
        },
        "has_crawl": {
          "readOnly": true,
          "type": "string"
        },
        "has_keywords": {
          "readOnly": true,
          "type": "string"
        },
        "has_logs": {
          "readOnly": true,
          "type": "string"
        },
        "last_actionboard_revision": {
          "readOnly": true,
          "type": "string"
        },
        "last_crawls_revisions": {
          "readOnly": true,
          "type": "string"
        },
        "last_log_revision": {
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organization": {
          "$ref": "#/definitions/OrganizationUser"
        },
        "permissions": {
          "readOnly": true,
          "type": "string"
        },
        "pk": {
          "readOnly": true,
          "type": "string"
        },
        "public_id": {
          "format": "int64",
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000,
          "type": "integer"
        },
        "roles": {
          "readOnly": true,
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "url": {
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "name",
        "slug",
        "organization",
        "current_settings"
      ],
      "type": "object"
    },
    "ProjectDatasource": {
      "properties": {
        "datasource": {
          "type": "string"
        },
        "has_data": {
          "readOnly": true,
          "type": "string"
        },
        "last_revision_details": {
          "readOnly": true,
          "type": "string"
        },
        "last_revision_status": {
          "readOnly": true,
          "type": "string"
        },
        "webflow_url": {
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "datasource"
      ],
      "type": "object"
    },
    "ProjectDatasourceSummary": {
      "properties": {
        "datasource": {
          "type": "string"
        },
        "date_last_successful_revision": {
          "readOnly": true,
          "type": "string"
        },
        "last_revision_status": {
          "readOnly": true,
          "type": "string"
        },
        "runnable": {
          "readOnly": true,
          "type": "string"
        },
        "segments": {
          "readOnly": true,
          "type": "string"
        },
        "stats": {
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "datasource"
      ],
      "type": "object"
    },
    "ProjectSavedFilter": {
      "description": "Project's saved UrlFilter",
      "properties": {
        "filters": {
          "type": "object"
        },
        "identifier": {
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "filters"
      ],
      "type": "object"
    },
    "ProjectSettings": {
      "properties": {
        "allowed_domains": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "blacklisted_domains": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pk": {
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "blacklisted_domains",
        "allowed_domains"
      ],
      "type": "object"
    },
    "ProjectsPaths": {
      "description": "Projects paths",
      "properties": {
        "projects": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "projects"
      ],
      "type": "object"
    },
    "Query": {
      "description": "Query",
      "properties": {
        "fields": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "filters": {
          "type": "object"
        },
        "sort": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "QueryResponses": {
      "description": "Query Responses",
      "properties": {
        "results": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RegexConfig": {
      "description": "Regex config",
      "properties": {
        "aggregation": {
          "type": "string"
        },
        "cast": {
          "type": "string"
        },
        "date_format": {
          "type": "string"
        },
        "float_format": {
          "type": "string"
        },
        "ignore_case": {
          "type": "boolean"
        },
        "match": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "regex": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "aggregation",
        "cast",
        "match",
        "regex",
        "ignore_case"
      ],
      "type": "object"
    },
    "RewritingRule": {
      "properties": {
        "ignore_case": {
          "type": "boolean"
        },
        "regex": {
          "type": "string"
        },
        "replace": {
          "type": "string"
        }
      },
      "required": [
        "regex",
        "replace",
        "ignore_case"
      ],
      "type": "object"
    },
    "SavedExplorer": {
      "description": "Project's saved explorer",
      "properties": {
        "created_by": {
          "$ref": "#/definitions/User",
          "readOnly": true
        },
        "created_date": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modified_by": {
          "$ref": "#/definitions/User",
          "readOnly": true
        },
        "modified_date": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "query": {
          "type": "object"
        },
        "uuid": {
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "name",
        "query"
      ],
      "type": "object"
    },
    "ScoringSummary": {
      "properties": {
        "results": {
          "type": "object"
        }
      },
      "required": [
        "results"
      ],
      "type": "object"
    },
    "SitemapsReport": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/SitemapsReportSitemap"
          },
          "type": "array"
        },
        "sitemap_indexes": {
          "items": {
            "$ref": "#/definitions/SitemapsReportSitemap"
          },
          "type": "array"
        },
        "sitemap_only": {
          "$ref": "#/definitions/SitemapsReportOnly"
        },
        "sitemaps": {
          "items": {
            "$ref": "#/definitions/SitemapsReportSitemap"
          },
          "type": "array"
        }
      },
      "required": [
        "count",
        "sitemap_only",
        "sitemap_indexes",
        "sitemaps",
        "errors"
      ],
      "type": "object"
    },
    "SitemapsReportOnly": {
      "properties": {
        "in_configuration": {
          "format": "int64",
          "type": "integer"
        },
        "out_of_configuration": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "out_of_configuration",
        "in_configuration"
      ],
      "type": "object"
    },
    "SitemapsReportSitemap": {
      "properties": {
        "error": {
          "$ref": "#/definitions/SitemapsReportSitemapError"
        },
        "file_type": {
          "type": "string"
        },
        "invalid_urls": {
          "format": "int64",
          "type": "integer"
        },
        "sitemap_indexes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "url": {
          "type": "string"
        },
        "valid_urls": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "url"
      ],
      "type": "object"
    },
    "SitemapsReportSitemapError": {
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "message"
      ],
      "type": "object"
    },
    "SuggestedOperations": {
      "properties": {
        "group": {
          "type": "string"
        },
        "meta": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "operation": {
          "type": "object"
        }
      },
      "required": [
        "name",
        "operation",
        "meta"
      ],
      "type": "object"
    },
    "SuggestedUpdatesAddOnFeatures": {
      "properties": {
        "name": {
          "type": "string"
        },
        "options": {
          "type": "object"
        }
      },
      "required": [
        "name",
        "options"
      ],
      "type": "object"
    },
    "SuggestedUpdatesFeaturesToUpdate": {
      "properties": {
        "name": {
          "type": "string"
        },
        "new_options": {
          "type": "object"
        },
        "previous_options": {
          "type": "object"
        }
      },
      "required": [
        "name",
        "previous_options",
        "new_options"
      ],
      "type": "object"
    },
    "TestRegexExtractRule": {
      "description": "Test regex extract rule",
      "properties": {
        "content": {
          "type": "string"
        },
        "extract_type": {
          "type": "string"
        },
        "rule": {
          "$ref": "#/definitions/RegexConfig"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "extract_type",
        "rule"
      ],
      "type": "object"
    },
    "URLRewritingRules": {
      "properties": {
        "rules": {
          "items": {
            "$ref": "#/definitions/RewritingRule"
          },
          "type": "array"
        },
        "urls": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "urls",
        "rules"
      ],
      "type": "object"
    },
    "UrlDetail": {
      "properties": {},
      "type": "object"
    },
    "UrlHTML": {
      "properties": {},
      "type": "object"
    },
    "UrlKeywords": {
      "properties": {},
      "type": "object"
    },
    "User": {
      "properties": {
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "full_name": {
          "readOnly": true,
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "username": {
          "description": "Required. 30 characters or fewer. Letters, numbers and /-/_/. characters",
          "type": "string"
        }
      },
      "required": [
        "username"
      ],
      "type": "object"
    },
    "string": {
      "properties": {},
      "type": "object"
    }
  }
}