{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows and Amazon Linux desktops for your users.</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon WorkSpaces",
    "version": "2015-04-08",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workspaces-2015-04-08.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "workspaces",
    "x-datafire": {
      "name": "amazonaws_workspaces",
      "type": "openapi"
    }
  },
  "host": "workspaces.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/#X-Amz-Target=WorkspacesService.AssociateConnectionAlias": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.AssociateConnectionAlias"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssociateConnectionAliasRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociateConnectionAliasResult"
            }
          },
          "480": {
            "description": "ResourceAssociatedException",
            "schema": {
              "$ref": "#/definitions/ResourceAssociatedException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "484": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "485": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          }
        },
        "description": "<p>Associates the specified connection alias with the specified directory to enable cross-Region redirection. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html\"> Cross-Region Redirection for Amazon WorkSpaces</a>.</p> <note> <p>Before performing this operation, call <a href=\"https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeConnectionAliases.html\"> DescribeConnectionAliases</a> to make sure that the current state of the connection alias is <code>CREATED</code>.</p> </note>",
        "operationId": "AssociateConnectionAlias"
      }
    },
    "/#X-Amz-Target=WorkspacesService.AssociateIpGroups": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.AssociateIpGroups"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssociateIpGroupsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociateIpGroupsResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "483": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "485": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          }
        },
        "description": "Associates the specified IP access control group with the specified directory.",
        "operationId": "AssociateIpGroups"
      }
    },
    "/#X-Amz-Target=WorkspacesService.AuthorizeIpRules": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.AuthorizeIpRules"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizeIpRulesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuthorizeIpRulesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "483": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "<p>Adds one or more rules to the specified IP access control group.</p> <p>This action gives users permission to access their WorkSpaces from the CIDR address ranges specified in the rules.</p>",
        "operationId": "AuthorizeIpRules"
      }
    },
    "/#X-Amz-Target=WorkspacesService.CopyWorkspaceImage": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.CopyWorkspaceImage"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyWorkspaceImageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CopyWorkspaceImageResult"
            }
          },
          "480": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "481": {
            "description": "ResourceAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          },
          "484": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          }
        },
        "description": "<p>Copies the specified image from the specified Region to the current Region. For more information about copying images, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/copy-custom-image.html\"> Copy a Custom WorkSpaces Image</a>.</p> <note> <p>In the China (Ningxia) Region, you can copy images only within the same Region.</p> <p>In the AWS GovCloud (US-West) Region, to copy images to and from other AWS Regions, contact AWS Support.</p> </note> <important> <p>Before copying a shared image, be sure to verify that it has been shared from the correct AWS account. To determine if an image has been shared and to see the AWS account ID that owns an image, use the <a href=\"https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeWorkspaceImages.html\">DescribeWorkSpaceImages</a> and <a href=\"https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeWorkspaceImagePermissions.html\">DescribeWorkspaceImagePermissions</a> API operations. </p> </important>",
        "operationId": "CopyWorkspaceImage"
      }
    },
    "/#X-Amz-Target=WorkspacesService.CreateConnectionAlias": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.CreateConnectionAlias"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateConnectionAliasRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateConnectionAliasResult"
            }
          },
          "480": {
            "description": "ResourceAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "484": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "485": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          }
        },
        "description": "Creates the specified connection alias for use with cross-Region redirection. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html\"> Cross-Region Redirection for Amazon WorkSpaces</a>.",
        "operationId": "CreateConnectionAlias"
      }
    },
    "/#X-Amz-Target=WorkspacesService.CreateIpGroup": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.CreateIpGroup"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateIpGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateIpGroupResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "482": {
            "description": "ResourceAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsException"
            }
          },
          "483": {
            "description": "ResourceCreationFailedException",
            "schema": {
              "$ref": "#/definitions/ResourceCreationFailedException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "<p>Creates an IP access control group.</p> <p>An IP access control group provides you with the ability to control the IP addresses from which users are allowed to access their WorkSpaces. To specify the CIDR address ranges, add rules to your IP access control group and then associate the group with your directory. You can add rules when you create the group or at any time using <a>AuthorizeIpRules</a>.</p> <p>There is a default IP access control group associated with your directory. If you don't associate an IP access control group with your directory, the default group is used. The default group includes a default rule that allows users to access their WorkSpaces from anywhere. You cannot modify the default IP access control group for your directory.</p>",
        "operationId": "CreateIpGroup"
      }
    },
    "/#X-Amz-Target=WorkspacesService.CreateTags": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.CreateTags"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateTagsResult"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          }
        },
        "description": "Creates the specified tags for the specified WorkSpaces resource.",
        "operationId": "CreateTags"
      }
    },
    "/#X-Amz-Target=WorkspacesService.CreateWorkspaces": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.CreateWorkspaces"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateWorkspacesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateWorkspacesResult"
            }
          },
          "480": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "481": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          }
        },
        "description": "<p>Creates one or more WorkSpaces.</p> <p>This operation is asynchronous and returns before the WorkSpaces are created.</p>",
        "operationId": "CreateWorkspaces"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DeleteConnectionAlias": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DeleteConnectionAlias"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteConnectionAliasRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteConnectionAliasResult"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ResourceAssociatedException",
            "schema": {
              "$ref": "#/definitions/ResourceAssociatedException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "484": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "485": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          }
        },
        "description": "<p>Deletes the specified connection alias. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html\"> Cross-Region Redirection for Amazon WorkSpaces</a>.</p> <important> <p> <b>If you will no longer be using a fully qualified domain name (FQDN) as the registration code for your WorkSpaces users, you must take certain precautions to prevent potential security issues.</b> For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html#cross-region-redirection-security-considerations\"> Security Considerations if You Stop Using Cross-Region Redirection</a>.</p> </important> <note> <p>To delete a connection alias that has been shared, the shared account must first disassociate the connection alias from any directories it has been associated with. Then you must unshare the connection alias from the account it has been shared with. You can delete a connection alias only after it is no longer shared with any accounts or associated with any directories.</p> </note>",
        "operationId": "DeleteConnectionAlias"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DeleteIpGroup": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DeleteIpGroup"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIpGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteIpGroupResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ResourceAssociatedException",
            "schema": {
              "$ref": "#/definitions/ResourceAssociatedException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "<p>Deletes the specified IP access control group.</p> <p>You cannot delete an IP access control group that is associated with a directory.</p>",
        "operationId": "DeleteIpGroup"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DeleteTags": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DeleteTags"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteTagsResult"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          }
        },
        "description": "Deletes the specified tags from the specified WorkSpaces resource.",
        "operationId": "DeleteTags"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DeleteWorkspaceImage": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DeleteWorkspaceImage"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteWorkspaceImageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteWorkspaceImageResult"
            }
          },
          "480": {
            "description": "ResourceAssociatedException",
            "schema": {
              "$ref": "#/definitions/ResourceAssociatedException"
            }
          },
          "481": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Deletes the specified image from your account. To delete an image, you must first delete any bundles that are associated with the image and unshare the image if it is shared with other accounts. ",
        "operationId": "DeleteWorkspaceImage"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DeregisterWorkspaceDirectory": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DeregisterWorkspaceDirectory"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeregisterWorkspaceDirectoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeregisterWorkspaceDirectoryResult"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "482": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          }
        },
        "description": "<p>Deregisters the specified directory. This operation is asynchronous and returns before the WorkSpace directory is deregistered. If any WorkSpaces are registered to this directory, you must remove them before you can deregister the directory.</p> <note> <p>Simple AD and AD Connector are made available to you free of charge to use with WorkSpaces. If there are no WorkSpaces being used with your Simple AD or AD Connector directory for 30 consecutive days, this directory will be automatically deregistered for use with Amazon WorkSpaces, and you will be charged for this directory as per the <a href=\"http://aws.amazon.com/directoryservice/pricing/\">AWS Directory Services pricing terms</a>.</p> <p>To delete empty directories, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/delete-workspaces-directory.html\"> Delete the Directory for Your WorkSpaces</a>. If you delete your Simple AD or AD Connector directory, you can always create a new one when you want to start using WorkSpaces again.</p> </note>",
        "operationId": "DeregisterWorkspaceDirectory"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DescribeAccount": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DescribeAccount"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeAccountResult"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Retrieves a list that describes the configuration of Bring Your Own License (BYOL) for the specified account.",
        "operationId": "DescribeAccount"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DescribeAccountModifications": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DescribeAccountModifications"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeAccountModificationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeAccountModificationsResult"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Retrieves a list that describes modifications to the configuration of Bring Your Own License (BYOL) for the specified account.",
        "operationId": "DescribeAccountModifications"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DescribeClientProperties": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DescribeClientProperties"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeClientPropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeClientPropertiesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Retrieves a list that describes one or more specified Amazon WorkSpaces clients.",
        "operationId": "DescribeClientProperties"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DescribeConnectionAliasPermissions": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DescribeConnectionAliasPermissions"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeConnectionAliasPermissionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeConnectionAliasPermissionsResult"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          }
        },
        "description": "Describes the permissions that the owner of a connection alias has granted to another AWS account for the specified connection alias. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html\"> Cross-Region Redirection for Amazon WorkSpaces</a>.",
        "operationId": "DescribeConnectionAliasPermissions"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DescribeConnectionAliases": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DescribeConnectionAliases"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeConnectionAliasesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeConnectionAliasesResult"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "482": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          }
        },
        "description": "Retrieves a list that describes the connection aliases used for cross-Region redirection. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html\"> Cross-Region Redirection for Amazon WorkSpaces</a>.",
        "operationId": "DescribeConnectionAliases"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DescribeIpGroups": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DescribeIpGroups"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeIpGroupsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeIpGroupsResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Describes one or more of your IP access control groups.",
        "operationId": "DescribeIpGroups"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DescribeTags": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DescribeTags"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeTagsResult"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Describes the specified tags for the specified WorkSpaces resource.",
        "operationId": "DescribeTags"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DescribeWorkspaceBundles": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "WorkspacesService.DescribeWorkspaceBundles"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeWorkspaceBundlesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeWorkspaceBundlesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          }
        },
        "description": "<p>Retrieves a list that describes the available WorkSpace bundles.</p> <p>You can filter the results using either bundle ID or owner, but not both.</p>",
        "operationId": "DescribeWorkspaceBundles"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DescribeWorkspaceDirectories": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "WorkspacesService.DescribeWorkspaceDirectories"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeWorkspaceDirectoriesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeWorkspaceDirectoriesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          }
        },
        "description": "Describes the available directories that are registered with Amazon WorkSpaces.",
        "operationId": "DescribeWorkspaceDirectories"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DescribeWorkspaceImagePermissions": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DescribeWorkspaceImagePermissions"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeWorkspaceImagePermissionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeWorkspaceImagePermissionsResult"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          }
        },
        "description": "Describes the permissions that the owner of an image has granted to other AWS accounts for an image.",
        "operationId": "DescribeWorkspaceImagePermissions"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DescribeWorkspaceImages": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DescribeWorkspaceImages"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeWorkspaceImagesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeWorkspaceImagesResult"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Retrieves a list that describes one or more specified images, if the image identifiers are provided. Otherwise, all images in the account are described. ",
        "operationId": "DescribeWorkspaceImages"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DescribeWorkspaceSnapshots": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DescribeWorkspaceSnapshots"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeWorkspaceSnapshotsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeWorkspaceSnapshotsResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Describes the snapshots for the specified WorkSpace.",
        "operationId": "DescribeWorkspaceSnapshots"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DescribeWorkspaces": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "Limit",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "WorkspacesService.DescribeWorkspaces"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeWorkspacesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeWorkspacesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        },
        "description": "<p>Describes the specified WorkSpaces.</p> <p>You can filter the results by using the bundle identifier, directory identifier, or owner, but you can specify only one filter at a time.</p>",
        "operationId": "DescribeWorkspaces"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DescribeWorkspacesConnectionStatus": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DescribeWorkspacesConnectionStatus"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeWorkspacesConnectionStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeWorkspacesConnectionStatusResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          }
        },
        "description": "Describes the connection status of the specified WorkSpaces.",
        "operationId": "DescribeWorkspacesConnectionStatus"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DisassociateConnectionAlias": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DisassociateConnectionAlias"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisassociateConnectionAliasRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateConnectionAliasResult"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "483": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "484": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          }
        },
        "description": "<p>Disassociates a connection alias from a directory. Disassociating a connection alias disables cross-Region redirection between two directories in different AWS Regions. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html\"> Cross-Region Redirection for Amazon WorkSpaces</a>.</p> <note> <p>Before performing this operation, call <a href=\"https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeConnectionAliases.html\"> DescribeConnectionAliases</a> to make sure that the current state of the connection alias is <code>CREATED</code>.</p> </note>",
        "operationId": "DisassociateConnectionAlias"
      }
    },
    "/#X-Amz-Target=WorkspacesService.DisassociateIpGroups": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.DisassociateIpGroups"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisassociateIpGroupsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateIpGroupsResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Disassociates the specified IP access control group from the specified directory.",
        "operationId": "DisassociateIpGroups"
      }
    },
    "/#X-Amz-Target=WorkspacesService.ImportWorkspaceImage": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.ImportWorkspaceImage"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportWorkspaceImageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ImportWorkspaceImageResult"
            }
          },
          "480": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "481": {
            "description": "ResourceAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "485": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          }
        },
        "description": "Imports the specified Windows 10 Bring Your Own License (BYOL) image into Amazon WorkSpaces. The image must be an already licensed Amazon EC2 image that is in your AWS account, and you must own the image. For more information about creating BYOL images, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html\"> Bring Your Own Windows Desktop Licenses</a>.",
        "operationId": "ImportWorkspaceImage"
      }
    },
    "/#X-Amz-Target=WorkspacesService.ListAvailableManagementCidrRanges": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.ListAvailableManagementCidrRanges"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListAvailableManagementCidrRangesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAvailableManagementCidrRangesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "<p>Retrieves a list of IP address ranges, specified as IPv4 CIDR blocks, that you can use for the network management interface when you enable Bring Your Own License (BYOL). </p> <p>This operation can be run only by AWS accounts that are enabled for BYOL. If your account isn't enabled for BYOL, you'll receive an <code>AccessDeniedException</code> error.</p> <p>The management network interface is connected to a secure Amazon WorkSpaces management network. It is used for interactive streaming of the WorkSpace desktop to Amazon WorkSpaces clients, and to allow Amazon WorkSpaces to manage the WorkSpace.</p>",
        "operationId": "ListAvailableManagementCidrRanges"
      }
    },
    "/#X-Amz-Target=WorkspacesService.MigrateWorkspace": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.MigrateWorkspace"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrateWorkspaceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MigrateWorkspaceResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          },
          "484": {
            "description": "OperationInProgressException",
            "schema": {
              "$ref": "#/definitions/OperationInProgressException"
            }
          },
          "485": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        },
        "description": "<p>Migrates a WorkSpace from one operating system or bundle type to another, while retaining the data on the user volume.</p> <p>The migration process recreates the WorkSpace by using a new root volume from the target bundle image and the user volume from the last available snapshot of the original WorkSpace. During migration, the original <code>D:\\Users\\%USERNAME%</code> user profile folder is renamed to <code>D:\\Users\\%USERNAME%MMddyyTHHmmss%.NotMigrated</code>. A new <code>D:\\Users\\%USERNAME%\\</code> folder is generated by the new OS. Certain files in the old user profile are moved to the new user profile.</p> <p>For available migration scenarios, details about what happens during migration, and best practices, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/migrate-workspaces.html\">Migrate a WorkSpace</a>.</p>",
        "operationId": "MigrateWorkspace"
      }
    },
    "/#X-Amz-Target=WorkspacesService.ModifyAccount": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.ModifyAccount"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyAccountResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "483": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Modifies the configuration of Bring Your Own License (BYOL) for the specified account.",
        "operationId": "ModifyAccount"
      }
    },
    "/#X-Amz-Target=WorkspacesService.ModifyClientProperties": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.ModifyClientProperties"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyClientPropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyClientPropertiesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Modifies the properties of the specified Amazon WorkSpaces clients.",
        "operationId": "ModifyClientProperties"
      }
    },
    "/#X-Amz-Target=WorkspacesService.ModifySelfservicePermissions": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.ModifySelfservicePermissions"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifySelfservicePermissionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifySelfservicePermissionsResult"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Modifies the self-service WorkSpace management capabilities for your users. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/enable-user-self-service-workspace-management.html\">Enable Self-Service WorkSpace Management Capabilities for Your Users</a>.",
        "operationId": "ModifySelfservicePermissions"
      }
    },
    "/#X-Amz-Target=WorkspacesService.ModifyWorkspaceAccessProperties": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.ModifyWorkspaceAccessProperties"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyWorkspaceAccessPropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyWorkspaceAccessPropertiesResult"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Specifies which devices and operating systems users can use to access their WorkSpaces. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/update-directory-details.html#control-device-access\"> Control Device Access</a>.",
        "operationId": "ModifyWorkspaceAccessProperties"
      }
    },
    "/#X-Amz-Target=WorkspacesService.ModifyWorkspaceCreationProperties": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.ModifyWorkspaceCreationProperties"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyWorkspaceCreationPropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyWorkspaceCreationPropertiesResult"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          }
        },
        "description": "Modify the default properties used to create WorkSpaces.",
        "operationId": "ModifyWorkspaceCreationProperties"
      }
    },
    "/#X-Amz-Target=WorkspacesService.ModifyWorkspaceProperties": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.ModifyWorkspaceProperties"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyWorkspacePropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyWorkspacePropertiesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "482": {
            "description": "OperationInProgressException",
            "schema": {
              "$ref": "#/definitions/OperationInProgressException"
            }
          },
          "483": {
            "description": "UnsupportedWorkspaceConfigurationException",
            "schema": {
              "$ref": "#/definitions/UnsupportedWorkspaceConfigurationException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        },
        "description": "Modifies the specified WorkSpace properties. For important information about how to modify the size of the root and user volumes, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/modify-workspaces.html\"> Modify a WorkSpace</a>. ",
        "operationId": "ModifyWorkspaceProperties"
      }
    },
    "/#X-Amz-Target=WorkspacesService.ModifyWorkspaceState": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.ModifyWorkspaceState"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyWorkspaceStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyWorkspaceStateResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Sets the state of the specified WorkSpace.</p> <p>To maintain a WorkSpace without being interrupted, set the WorkSpace state to <code>ADMIN_MAINTENANCE</code>. WorkSpaces in this state do not respond to requests to reboot, stop, start, rebuild, or restore. An AutoStop WorkSpace in this state is not stopped. Users cannot log into a WorkSpace in the <code>ADMIN_MAINTENANCE</code> state.</p>",
        "operationId": "ModifyWorkspaceState"
      }
    },
    "/#X-Amz-Target=WorkspacesService.RebootWorkspaces": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.RebootWorkspaces"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RebootWorkspacesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RebootWorkspacesResult"
            }
          }
        },
        "description": "<p>Reboots the specified WorkSpaces.</p> <p>You cannot reboot a WorkSpace unless its state is <code>AVAILABLE</code> or <code>UNHEALTHY</code>.</p> <p>This operation is asynchronous and returns before the WorkSpaces have rebooted.</p>",
        "operationId": "RebootWorkspaces"
      }
    },
    "/#X-Amz-Target=WorkspacesService.RebuildWorkspaces": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.RebuildWorkspaces"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RebuildWorkspacesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RebuildWorkspacesResult"
            }
          }
        },
        "description": "<p>Rebuilds the specified WorkSpace.</p> <p>You cannot rebuild a WorkSpace unless its state is <code>AVAILABLE</code>, <code>ERROR</code>, <code>UNHEALTHY</code>, <code>STOPPED</code>, or <code>REBOOTING</code>.</p> <p>Rebuilding a WorkSpace is a potentially destructive action that can result in the loss of data. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/reset-workspace.html\">Rebuild a WorkSpace</a>.</p> <p>This operation is asynchronous and returns before the WorkSpaces have been completely rebuilt.</p>",
        "operationId": "RebuildWorkspaces"
      }
    },
    "/#X-Amz-Target=WorkspacesService.RegisterWorkspaceDirectory": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.RegisterWorkspaceDirectory"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterWorkspaceDirectoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegisterWorkspaceDirectoryResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "WorkspacesDefaultRoleNotFoundException",
            "schema": {
              "$ref": "#/definitions/WorkspacesDefaultRoleNotFoundException"
            }
          },
          "485": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "486": {
            "description": "UnsupportedNetworkConfigurationException",
            "schema": {
              "$ref": "#/definitions/UnsupportedNetworkConfigurationException"
            }
          },
          "487": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          }
        },
        "description": "Registers the specified directory. This operation is asynchronous and returns before the WorkSpace directory is registered. If this is the first time you are registering a directory, you will need to create the workspaces_DefaultRole role before you can register a directory. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/workspaces-access-control.html#create-default-role\"> Creating the workspaces_DefaultRole Role</a>.",
        "operationId": "RegisterWorkspaceDirectory"
      }
    },
    "/#X-Amz-Target=WorkspacesService.RestoreWorkspace": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.RestoreWorkspace"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreWorkspaceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RestoreWorkspaceResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "<p>Restores the specified WorkSpace to its last known healthy state.</p> <p>You cannot restore a WorkSpace unless its state is <code> AVAILABLE</code>, <code>ERROR</code>, <code>UNHEALTHY</code>, or <code>STOPPED</code>.</p> <p>Restoring a WorkSpace is a potentially destructive action that can result in the loss of data. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/restore-workspace.html\">Restore a WorkSpace</a>.</p> <p>This operation is asynchronous and returns before the WorkSpace is completely restored.</p>",
        "operationId": "RestoreWorkspace"
      }
    },
    "/#X-Amz-Target=WorkspacesService.RevokeIpRules": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.RevokeIpRules"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RevokeIpRulesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RevokeIpRulesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Removes one or more rules from the specified IP access control group.",
        "operationId": "RevokeIpRules"
      }
    },
    "/#X-Amz-Target=WorkspacesService.StartWorkspaces": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.StartWorkspaces"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartWorkspacesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartWorkspacesResult"
            }
          }
        },
        "description": "<p>Starts the specified WorkSpaces.</p> <p>You cannot start a WorkSpace unless it has a running mode of <code>AutoStop</code> and a state of <code>STOPPED</code>.</p>",
        "operationId": "StartWorkspaces"
      }
    },
    "/#X-Amz-Target=WorkspacesService.StopWorkspaces": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.StopWorkspaces"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StopWorkspacesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopWorkspacesResult"
            }
          }
        },
        "description": "<p> Stops the specified WorkSpaces.</p> <p>You cannot stop a WorkSpace unless it has a running mode of <code>AutoStop</code> and a state of <code>AVAILABLE</code>, <code>IMPAIRED</code>, <code>UNHEALTHY</code>, or <code>ERROR</code>.</p>",
        "operationId": "StopWorkspaces"
      }
    },
    "/#X-Amz-Target=WorkspacesService.TerminateWorkspaces": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.TerminateWorkspaces"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TerminateWorkspacesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TerminateWorkspacesResult"
            }
          }
        },
        "description": "<p>Terminates the specified WorkSpaces.</p> <important> <p>Terminating a WorkSpace is a permanent action and cannot be undone. The user's data is destroyed. If you need to archive any user data, contact AWS Support before terminating the WorkSpace.</p> </important> <p>You can terminate a WorkSpace that is in any state except <code>SUSPENDED</code>.</p> <p>This operation is asynchronous and returns before the WorkSpaces have been completely terminated. After a WorkSpace is terminated, the <code>TERMINATED</code> state is returned only briefly before the WorkSpace directory metadata is cleaned up, so this state is rarely returned. To confirm that a WorkSpace is terminated, check for the WorkSpace ID by using <a href=\"https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeWorkspaces.html\"> DescribeWorkSpaces</a>. If the WorkSpace ID isn't returned, then the WorkSpace has been successfully terminated.</p> <note> <p>Simple AD and AD Connector are made available to you free of charge to use with WorkSpaces. If there are no WorkSpaces being used with your Simple AD or AD Connector directory for 30 consecutive days, this directory will be automatically deregistered for use with Amazon WorkSpaces, and you will be charged for this directory as per the <a href=\"http://aws.amazon.com/directoryservice/pricing/\">AWS Directory Services pricing terms</a>.</p> <p>To delete empty directories, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/delete-workspaces-directory.html\"> Delete the Directory for Your WorkSpaces</a>. If you delete your Simple AD or AD Connector directory, you can always create a new one when you want to start using WorkSpaces again.</p> </note>",
        "operationId": "TerminateWorkspaces"
      }
    },
    "/#X-Amz-Target=WorkspacesService.UpdateConnectionAliasPermission": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.UpdateConnectionAliasPermission"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateConnectionAliasPermissionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateConnectionAliasPermissionResult"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "ResourceAssociatedException",
            "schema": {
              "$ref": "#/definitions/ResourceAssociatedException"
            }
          },
          "485": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "486": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          }
        },
        "description": "<p>Shares or unshares a connection alias with one account by specifying whether that account has permission to associate the connection alias with a directory. If the association permission is granted, the connection alias is shared with that account. If the association permission is revoked, the connection alias is unshared with the account. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html\"> Cross-Region Redirection for Amazon WorkSpaces</a>.</p> <note> <ul> <li> <p>Before performing this operation, call <a href=\"https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeConnectionAliases.html\"> DescribeConnectionAliases</a> to make sure that the current state of the connection alias is <code>CREATED</code>.</p> </li> <li> <p>To delete a connection alias that has been shared, the shared account must first disassociate the connection alias from any directories it has been associated with. Then you must unshare the connection alias from the account it has been shared with. You can delete a connection alias only after it is no longer shared with any accounts or associated with any directories.</p> </li> </ul> </note>",
        "operationId": "UpdateConnectionAliasPermission"
      }
    },
    "/#X-Amz-Target=WorkspacesService.UpdateRulesOfIpGroup": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.UpdateRulesOfIpGroup"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRulesOfIpGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateRulesOfIpGroupResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "483": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Replaces the current rules of the specified IP access control group with the specified rules.",
        "operationId": "UpdateRulesOfIpGroup"
      }
    },
    "/#X-Amz-Target=WorkspacesService.UpdateWorkspaceImagePermission": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "WorkspacesService.UpdateWorkspaceImagePermission"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateWorkspaceImagePermissionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateWorkspaceImagePermissionResult"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "484": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          }
        },
        "description": "<p>Shares or unshares an image with one account in the same AWS Region by specifying whether that account has permission to copy the image. If the copy image permission is granted, the image is shared with that account. If the copy image permission is revoked, the image is unshared with the account.</p> <p>After an image has been shared, the recipient account can copy the image to other AWS Regions as needed.</p> <note> <p>In the China (Ningxia) Region, you can copy images only within the same Region.</p> <p>In the AWS GovCloud (US-West) Region, to copy images to and from other AWS Regions, contact AWS Support.</p> </note> <p>For more information about sharing images, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/share-custom-image.html\"> Share or Unshare a Custom WorkSpaces Image</a>.</p> <note> <ul> <li> <p>To delete an image that has been shared, you must unshare the image before you delete it.</p> </li> <li> <p>Sharing Bring Your Own License (BYOL) images across AWS accounts isn't supported at this time in the AWS GovCloud (US-West) Region. To share BYOL images across accounts in the AWS GovCloud (US-West) Region, contact AWS Support.</p> </li> </ul> </note>",
        "operationId": "UpdateWorkspaceImagePermission"
      }
    }
  },
  "definitions": {
    "ARN": {
      "pattern": "^arn:aws:[A-Za-z0-9][A-za-z0-9_/.-]{0,62}:[A-za-z0-9_/.-]{0,63}:[A-za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-za-z0-9_/.-]{0,127}$",
      "type": "string"
    },
    "AccessDeniedException": {},
    "AccessPropertyValue": {
      "enum": [
        "ALLOW",
        "DENY"
      ],
      "type": "string"
    },
    "AccountModification": {
      "description": "Describes a modification to the configuration of Bring Your Own License (BYOL) for the specified account. ",
      "properties": {
        "DedicatedTenancyManagementCidrRange": {
          "allOf": [
            {
              "$ref": "#/definitions/DedicatedTenancyManagementCidrRange"
            },
            {
              "description": "The IP address range, specified as an IPv4 CIDR block, for the management network interface used for the account."
            }
          ]
        },
        "DedicatedTenancySupport": {
          "allOf": [
            {
              "$ref": "#/definitions/DedicatedTenancySupportResultEnum"
            },
            {
              "description": "The status of BYOL (whether BYOL is being enabled or disabled)."
            }
          ]
        },
        "ErrorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceErrorCode"
            },
            {
              "description": "The error code that is returned if the configuration of BYOL cannot be modified."
            }
          ]
        },
        "ErrorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": "The text of the error message that is returned if the configuration of BYOL cannot be modified."
            }
          ]
        },
        "ModificationState": {
          "allOf": [
            {
              "$ref": "#/definitions/DedicatedTenancyModificationStateEnum"
            },
            {
              "description": "The state of the modification to the configuration of BYOL."
            }
          ]
        },
        "StartTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The timestamp when the modification of the BYOL configuration was started."
            }
          ]
        }
      },
      "type": "object"
    },
    "AccountModificationList": {
      "items": {
        "$ref": "#/definitions/AccountModification"
      },
      "type": "array"
    },
    "Alias": {
      "type": "string"
    },
    "Application": {
      "enum": [
        "Microsoft_Office_2016",
        "Microsoft_Office_2019"
      ],
      "type": "string"
    },
    "ApplicationList": {
      "items": {
        "$ref": "#/definitions/Application"
      },
      "maxItems": 5,
      "minItems": 1,
      "type": "array"
    },
    "AssociateConnectionAliasRequest": {
      "properties": {
        "AliasId": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAliasId"
            },
            {
              "description": "The identifier of the connection alias."
            }
          ]
        },
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the directory to associate the connection alias with."
            }
          ]
        }
      },
      "required": [
        "AliasId",
        "ResourceId"
      ],
      "title": "AssociateConnectionAliasRequest",
      "type": "object"
    },
    "AssociateConnectionAliasResult": {
      "properties": {
        "ConnectionIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionIdentifier"
            },
            {
              "description": "The identifier of the connection alias association. You use the connection identifier in the DNS TXT record when you're configuring your DNS routing policies. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AssociateIpGroupsRequest": {
      "properties": {
        "DirectoryId": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryId"
            },
            {
              "description": "The identifier of the directory."
            }
          ]
        },
        "GroupIds": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGroupIdList"
            },
            {
              "description": "The identifiers of one or more IP access control groups."
            }
          ]
        }
      },
      "required": [
        "DirectoryId",
        "GroupIds"
      ],
      "title": "AssociateIpGroupsRequest",
      "type": "object"
    },
    "AssociateIpGroupsResult": {
      "properties": {},
      "type": "object"
    },
    "AssociationStatus": {
      "enum": [
        "NOT_ASSOCIATED",
        "ASSOCIATED_WITH_OWNER_ACCOUNT",
        "ASSOCIATED_WITH_SHARED_ACCOUNT",
        "PENDING_ASSOCIATION",
        "PENDING_DISASSOCIATION"
      ],
      "type": "string"
    },
    "AuthorizeIpRulesRequest": {
      "properties": {
        "GroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGroupId"
            },
            {
              "description": "The identifier of the group."
            }
          ]
        },
        "UserRules": {
          "allOf": [
            {
              "$ref": "#/definitions/IpRuleList"
            },
            {
              "description": "The rules to add to the group."
            }
          ]
        }
      },
      "required": [
        "GroupId",
        "UserRules"
      ],
      "title": "AuthorizeIpRulesRequest",
      "type": "object"
    },
    "AuthorizeIpRulesResult": {
      "properties": {},
      "type": "object"
    },
    "AwsAccount": {
      "pattern": "^\\d{12}$",
      "type": "string"
    },
    "BooleanObject": {
      "type": "boolean"
    },
    "BundleId": {
      "pattern": "^wsb-[0-9a-z]{8,63}$",
      "type": "string"
    },
    "BundleIdList": {
      "items": {
        "$ref": "#/definitions/BundleId"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "BundleList": {
      "items": {
        "$ref": "#/definitions/WorkspaceBundle"
      },
      "type": "array"
    },
    "BundleOwner": {
      "type": "string"
    },
    "ClientProperties": {
      "description": "Describes an Amazon WorkSpaces client.",
      "properties": {
        "ReconnectEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/ReconnectEnum"
            },
            {
              "description": "Specifies whether users can cache their credentials on the Amazon WorkSpaces client. When enabled, users can choose to reconnect to their WorkSpaces without re-entering their credentials. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ClientPropertiesList": {
      "items": {
        "$ref": "#/definitions/ClientPropertiesResult"
      },
      "type": "array"
    },
    "ClientPropertiesResult": {
      "description": "Information about the Amazon WorkSpaces client.",
      "properties": {
        "ClientProperties": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientProperties"
            },
            {
              "description": "Information about the Amazon WorkSpaces client."
            }
          ]
        },
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The resource identifier, in the form of a directory ID."
            }
          ]
        }
      },
      "type": "object"
    },
    "Compute": {
      "enum": [
        "VALUE",
        "STANDARD",
        "PERFORMANCE",
        "POWER",
        "GRAPHICS",
        "POWERPRO",
        "GRAPHICSPRO"
      ],
      "type": "string"
    },
    "ComputeType": {
      "description": "Describes the compute type.",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/Compute"
            },
            {
              "description": "The compute type."
            }
          ]
        }
      },
      "type": "object"
    },
    "ComputerName": {
      "type": "string"
    },
    "ConnectionAlias": {
      "description": "Describes a connection alias. Connection aliases are used for cross-Region redirection. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html\"> Cross-Region Redirection for Amazon WorkSpaces</a>.",
      "properties": {
        "AliasId": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAliasId"
            },
            {
              "description": "The identifier of the connection alias."
            }
          ]
        },
        "Associations": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAliasAssociationList"
            },
            {
              "description": "The association status of the connection alias."
            }
          ]
        },
        "ConnectionString": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionString"
            },
            {
              "description": "The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as <code>www.example.com</code>."
            }
          ]
        },
        "OwnerAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsAccount"
            },
            {
              "description": "The identifier of the AWS account that owns the connection alias."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAliasState"
            },
            {
              "description": "The current state of the connection alias."
            }
          ]
        }
      },
      "type": "object"
    },
    "ConnectionAliasAssociation": {
      "description": "Describes a connection alias association that is used for cross-Region redirection. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html\"> Cross-Region Redirection for Amazon WorkSpaces</a>.",
      "properties": {
        "AssociatedAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsAccount"
            },
            {
              "description": "The identifier of the AWS account that associated the connection alias with a directory."
            }
          ]
        },
        "AssociationStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/AssociationStatus"
            },
            {
              "description": "The association status of the connection alias."
            }
          ]
        },
        "ConnectionIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionIdentifier"
            },
            {
              "description": "The identifier of the connection alias association. You use the connection identifier in the DNS TXT record when you're configuring your DNS routing policies."
            }
          ]
        },
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the directory associated with a connection alias."
            }
          ]
        }
      },
      "type": "object"
    },
    "ConnectionAliasAssociationList": {
      "items": {
        "$ref": "#/definitions/ConnectionAliasAssociation"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "ConnectionAliasId": {
      "maxLength": 68,
      "minLength": 13,
      "pattern": "^wsca-[0-9a-z]{8,63}$",
      "type": "string"
    },
    "ConnectionAliasIdList": {
      "items": {
        "$ref": "#/definitions/ConnectionAliasId"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "ConnectionAliasList": {
      "items": {
        "$ref": "#/definitions/ConnectionAlias"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "ConnectionAliasPermission": {
      "description": "Describes the permissions for a connection alias. Connection aliases are used for cross-Region redirection. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html\"> Cross-Region Redirection for Amazon WorkSpaces</a>.",
      "properties": {
        "AllowAssociation": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "Indicates whether the specified AWS account is allowed to associate the connection alias with a directory."
            }
          ]
        },
        "SharedAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsAccount"
            },
            {
              "description": "The identifier of the AWS account that the connection alias is shared with."
            }
          ]
        }
      },
      "required": [
        "SharedAccountId",
        "AllowAssociation"
      ],
      "type": "object"
    },
    "ConnectionAliasPermissions": {
      "items": {
        "$ref": "#/definitions/ConnectionAliasPermission"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "ConnectionAliasState": {
      "enum": [
        "CREATING",
        "CREATED",
        "DELETING"
      ],
      "type": "string"
    },
    "ConnectionIdentifier": {
      "maxLength": 20,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9]+$",
      "type": "string"
    },
    "ConnectionState": {
      "enum": [
        "CONNECTED",
        "DISCONNECTED",
        "UNKNOWN"
      ],
      "type": "string"
    },
    "ConnectionString": {
      "maxLength": 255,
      "minLength": 1,
      "pattern": "^[.0-9a-zA-Z\\-]{1,255}$",
      "type": "string"
    },
    "CopyWorkspaceImageRequest": {
      "properties": {
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageDescription"
            },
            {
              "description": "A description of the image."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageName"
            },
            {
              "description": "The name of the image."
            }
          ]
        },
        "SourceImageId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageId"
            },
            {
              "description": "The identifier of the source image."
            }
          ]
        },
        "SourceRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/Region"
            },
            {
              "description": "The identifier of the source Region."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "The tags for the image."
            }
          ]
        }
      },
      "required": [
        "Name",
        "SourceImageId",
        "SourceRegion"
      ],
      "title": "CopyWorkspaceImageRequest",
      "type": "object"
    },
    "CopyWorkspaceImageResult": {
      "properties": {
        "ImageId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageId"
            },
            {
              "description": "The identifier of the image."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateConnectionAliasRequest": {
      "properties": {
        "ConnectionString": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionString"
            },
            {
              "description": "<p>A connection string in the form of a fully qualified domain name (FQDN), such as <code>www.example.com</code>.</p> <important> <p>After you create a connection string, it is always associated to your AWS account. You cannot recreate the same connection string with a different account, even if you delete all instances of it from the original account. The connection string is globally reserved for your account.</p> </important>"
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "The tags to associate with the connection alias."
            }
          ]
        }
      },
      "required": [
        "ConnectionString"
      ],
      "title": "CreateConnectionAliasRequest",
      "type": "object"
    },
    "CreateConnectionAliasResult": {
      "properties": {
        "AliasId": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAliasId"
            },
            {
              "description": "The identifier of the connection alias."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateIpGroupRequest": {
      "properties": {
        "GroupDesc": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGroupDesc"
            },
            {
              "description": "The description of the group."
            }
          ]
        },
        "GroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGroupName"
            },
            {
              "description": "The name of the group."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "The tags. Each WorkSpaces resource can have a maximum of 50 tags."
            }
          ]
        },
        "UserRules": {
          "allOf": [
            {
              "$ref": "#/definitions/IpRuleList"
            },
            {
              "description": "The rules to add to the group."
            }
          ]
        }
      },
      "required": [
        "GroupName"
      ],
      "title": "CreateIpGroupRequest",
      "type": "object"
    },
    "CreateIpGroupResult": {
      "properties": {
        "GroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGroupId"
            },
            {
              "description": "The identifier of the group."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateTagsRequest": {
      "properties": {
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the WorkSpaces resource. The supported resource types are WorkSpaces, registered directories, images, custom bundles, IP access control groups, and connection aliases."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "The tags. Each WorkSpaces resource can have a maximum of 50 tags."
            }
          ]
        }
      },
      "required": [
        "ResourceId",
        "Tags"
      ],
      "title": "CreateTagsRequest",
      "type": "object"
    },
    "CreateTagsResult": {
      "properties": {},
      "type": "object"
    },
    "CreateWorkspacesRequest": {
      "properties": {
        "Workspaces": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceRequestList"
            },
            {
              "description": "The WorkSpaces to create. You can specify up to 25 WorkSpaces."
            }
          ]
        }
      },
      "required": [
        "Workspaces"
      ],
      "title": "CreateWorkspacesRequest",
      "type": "object"
    },
    "CreateWorkspacesResult": {
      "properties": {
        "FailedRequests": {
          "allOf": [
            {
              "$ref": "#/definitions/FailedCreateWorkspaceRequests"
            },
            {
              "description": "Information about the WorkSpaces that could not be created."
            }
          ]
        },
        "PendingRequests": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceList"
            },
            {
              "description": "<p>Information about the WorkSpaces that were created.</p> <p>Because this operation is asynchronous, the identifier returned is not immediately available for use with other operations. For example, if you call <a>DescribeWorkspaces</a> before the WorkSpace is created, the information returned can be incomplete.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "DedicatedTenancyCidrRangeList": {
      "items": {
        "$ref": "#/definitions/DedicatedTenancyManagementCidrRange"
      },
      "type": "array"
    },
    "DedicatedTenancyManagementCidrRange": {
      "pattern": "(^([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.0\\.0)(\\/(16$))$",
      "type": "string"
    },
    "DedicatedTenancyModificationStateEnum": {
      "enum": [
        "PENDING",
        "COMPLETED",
        "FAILED"
      ],
      "type": "string"
    },
    "DedicatedTenancySupportEnum": {
      "enum": [
        "ENABLED"
      ],
      "type": "string"
    },
    "DedicatedTenancySupportResultEnum": {
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "type": "string"
    },
    "DefaultOu": {
      "type": "string"
    },
    "DefaultWorkspaceCreationProperties": {
      "description": "Describes the default values that are used to create WorkSpaces. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/update-directory-details.html\">Update Directory Details for Your WorkSpaces</a>.",
      "properties": {
        "CustomSecurityGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityGroupId"
            },
            {
              "description": "The identifier of the default security group to apply to WorkSpaces when they are created. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/amazon-workspaces-security-groups.html\"> Security Groups for Your WorkSpaces</a>."
            }
          ]
        },
        "DefaultOu": {
          "allOf": [
            {
              "$ref": "#/definitions/DefaultOu"
            },
            {
              "description": "The organizational unit (OU) in the directory for the WorkSpace machine accounts."
            }
          ]
        },
        "EnableInternetAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "Specifies whether to automatically assign an Elastic public IP address to WorkSpaces in this directory by default. If enabled, the Elastic public IP address allows outbound internet access from your WorkSpaces when you’re using an internet gateway in the Amazon VPC in which your WorkSpaces are located. If you're using a Network Address Translation (NAT) gateway for outbound internet access from your VPC, or if your WorkSpaces are in public subnets and you manually assign them Elastic IP addresses, you should disable this setting. This setting applies to new WorkSpaces that you launch or to existing WorkSpaces that you rebuild. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/amazon-workspaces-vpc.html\"> Configure a VPC for Amazon WorkSpaces</a>."
            }
          ]
        },
        "EnableMaintenanceMode": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "Specifies whether maintenance mode is enabled for WorkSpaces. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html\">WorkSpace Maintenance</a>."
            }
          ]
        },
        "EnableWorkDocs": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "Specifies whether the directory is enabled for Amazon WorkDocs."
            }
          ]
        },
        "UserEnabledAsLocalAdministrator": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "Specifies whether WorkSpace users are local administrators on their WorkSpaces."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteConnectionAliasRequest": {
      "properties": {
        "AliasId": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAliasId"
            },
            {
              "description": "The identifier of the connection alias to delete."
            }
          ]
        }
      },
      "required": [
        "AliasId"
      ],
      "title": "DeleteConnectionAliasRequest",
      "type": "object"
    },
    "DeleteConnectionAliasResult": {
      "properties": {},
      "type": "object"
    },
    "DeleteIpGroupRequest": {
      "properties": {
        "GroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGroupId"
            },
            {
              "description": "The identifier of the IP access control group."
            }
          ]
        }
      },
      "required": [
        "GroupId"
      ],
      "title": "DeleteIpGroupRequest",
      "type": "object"
    },
    "DeleteIpGroupResult": {
      "properties": {},
      "type": "object"
    },
    "DeleteTagsRequest": {
      "properties": {
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the WorkSpaces resource. The supported resource types are WorkSpaces, registered directories, images, custom bundles, IP access control groups, and connection aliases."
            }
          ]
        },
        "TagKeys": {
          "allOf": [
            {
              "$ref": "#/definitions/TagKeyList"
            },
            {
              "description": "The tag keys."
            }
          ]
        }
      },
      "required": [
        "ResourceId",
        "TagKeys"
      ],
      "title": "DeleteTagsRequest",
      "type": "object"
    },
    "DeleteTagsResult": {
      "properties": {},
      "type": "object"
    },
    "DeleteWorkspaceImageRequest": {
      "properties": {
        "ImageId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageId"
            },
            {
              "description": "The identifier of the image."
            }
          ]
        }
      },
      "required": [
        "ImageId"
      ],
      "title": "DeleteWorkspaceImageRequest",
      "type": "object"
    },
    "DeleteWorkspaceImageResult": {
      "properties": {},
      "type": "object"
    },
    "DeregisterWorkspaceDirectoryRequest": {
      "properties": {
        "DirectoryId": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryId"
            },
            {
              "description": "The identifier of the directory. If any WorkSpaces are registered to this directory, you must remove them before you deregister the directory, or you will receive an OperationNotSupportedException error."
            }
          ]
        }
      },
      "required": [
        "DirectoryId"
      ],
      "title": "DeregisterWorkspaceDirectoryRequest",
      "type": "object"
    },
    "DeregisterWorkspaceDirectoryResult": {
      "properties": {},
      "type": "object"
    },
    "DescribeAccountModificationsRequest": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results."
            }
          ]
        }
      },
      "title": "DescribeAccountModificationsRequest",
      "type": "object"
    },
    "DescribeAccountModificationsResult": {
      "properties": {
        "AccountModifications": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountModificationList"
            },
            {
              "description": "The list of modifications to the configuration of BYOL."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "The token to use to retrieve the next set of results, or null if no more results are available."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeAccountRequest": {
      "properties": {},
      "title": "DescribeAccountRequest",
      "type": "object"
    },
    "DescribeAccountResult": {
      "properties": {
        "DedicatedTenancyManagementCidrRange": {
          "allOf": [
            {
              "$ref": "#/definitions/DedicatedTenancyManagementCidrRange"
            },
            {
              "description": "<p>The IP address range, specified as an IPv4 CIDR block, used for the management network interface.</p> <p>The management network interface is connected to a secure Amazon WorkSpaces management network. It is used for interactive streaming of the WorkSpace desktop to Amazon WorkSpaces clients, and to allow Amazon WorkSpaces to manage the WorkSpace.</p>"
            }
          ]
        },
        "DedicatedTenancySupport": {
          "allOf": [
            {
              "$ref": "#/definitions/DedicatedTenancySupportResultEnum"
            },
            {
              "description": "The status of BYOL (whether BYOL is enabled or disabled)."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeClientPropertiesRequest": {
      "properties": {
        "ResourceIds": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceIdList"
            },
            {
              "description": "The resource identifier, in the form of directory IDs."
            }
          ]
        }
      },
      "required": [
        "ResourceIds"
      ],
      "title": "DescribeClientPropertiesRequest",
      "type": "object"
    },
    "DescribeClientPropertiesResult": {
      "properties": {
        "ClientPropertiesList": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientPropertiesList"
            },
            {
              "description": "Information about the specified Amazon WorkSpaces clients."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeConnectionAliasPermissionsRequest": {
      "properties": {
        "AliasId": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAliasId"
            },
            {
              "description": "The identifier of the connection alias."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/Limit"
            },
            {
              "description": "The maximum number of results to return."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results. "
            }
          ]
        }
      },
      "required": [
        "AliasId"
      ],
      "title": "DescribeConnectionAliasPermissionsRequest",
      "type": "object"
    },
    "DescribeConnectionAliasPermissionsResult": {
      "properties": {
        "AliasId": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAliasId"
            },
            {
              "description": "The identifier of the connection alias."
            }
          ]
        },
        "ConnectionAliasPermissions": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAliasPermissions"
            },
            {
              "description": "The permissions associated with a connection alias."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "The token to use to retrieve the next set of results, or null if no more results are available."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeConnectionAliasesRequest": {
      "properties": {
        "AliasIds": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAliasIdList"
            },
            {
              "description": "The identifiers of the connection aliases to describe."
            }
          ]
        },
        "Limit": {
          "allOf": [
            {
              "$ref": "#/definitions/Limit"
            },
            {
              "description": "The maximum number of connection aliases to return."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results. "
            }
          ]
        },
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the directory associated with the connection alias."
            }
          ]
        }
      },
      "title": "DescribeConnectionAliasesRequest",
      "type": "object"
    },
    "DescribeConnectionAliasesResult": {
      "properties": {
        "ConnectionAliases": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAliasList"
            },
            {
              "description": "Information about the specified connection aliases."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "The token to use to retrieve the next set of results, or null if no more results are available."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeIpGroupsRequest": {
      "properties": {
        "GroupIds": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGroupIdList"
            },
            {
              "description": "The identifiers of one or more IP access control groups."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/Limit"
            },
            {
              "description": "The maximum number of items to return."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results."
            }
          ]
        }
      },
      "title": "DescribeIpGroupsRequest",
      "type": "object"
    },
    "DescribeIpGroupsResult": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "The token to use to retrieve the next set of results, or null if no more results are available."
            }
          ]
        },
        "Result": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspacesIpGroupsList"
            },
            {
              "description": "Information about the IP access control groups."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeTagsRequest": {
      "properties": {
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the WorkSpaces resource. The supported resource types are WorkSpaces, registered directories, images, custom bundles, IP access control groups, and connection aliases."
            }
          ]
        }
      },
      "required": [
        "ResourceId"
      ],
      "title": "DescribeTagsRequest",
      "type": "object"
    },
    "DescribeTagsResult": {
      "properties": {
        "TagList": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "The tags."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeWorkspaceBundlesRequest": {
      "properties": {
        "BundleIds": {
          "allOf": [
            {
              "$ref": "#/definitions/BundleIdList"
            },
            {
              "description": "The identifiers of the bundles. You cannot combine this parameter with any other filter."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "The token for the next set of results. (You received this token from a previous call.)"
            }
          ]
        },
        "Owner": {
          "allOf": [
            {
              "$ref": "#/definitions/BundleOwner"
            },
            {
              "description": "<p>The owner of the bundles. You cannot combine this parameter with any other filter.</p> <p>Specify <code>AMAZON</code> to describe the bundles provided by AWS or null to describe the bundles that belong to your account.</p>"
            }
          ]
        }
      },
      "title": "DescribeWorkspaceBundlesRequest",
      "type": "object"
    },
    "DescribeWorkspaceBundlesResult": {
      "properties": {
        "Bundles": {
          "allOf": [
            {
              "$ref": "#/definitions/BundleList"
            },
            {
              "description": "Information about the bundles."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "The token to use to retrieve the next set of results, or null if there are no more results available. This token is valid for one day and must be used within that time frame."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeWorkspaceDirectoriesRequest": {
      "properties": {
        "DirectoryIds": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryIdList"
            },
            {
              "description": "The identifiers of the directories. If the value is null, all directories are retrieved."
            }
          ]
        },
        "Limit": {
          "allOf": [
            {
              "$ref": "#/definitions/Limit"
            },
            {
              "description": "The maximum number of directories to return."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results."
            }
          ]
        }
      },
      "title": "DescribeWorkspaceDirectoriesRequest",
      "type": "object"
    },
    "DescribeWorkspaceDirectoriesResult": {
      "properties": {
        "Directories": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryList"
            },
            {
              "description": "Information about the directories."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "The token to use to retrieve the next set of results, or null if no more results are available."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeWorkspaceImagePermissionsRequest": {
      "properties": {
        "ImageId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageId"
            },
            {
              "description": "The identifier of the image."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/Limit"
            },
            {
              "description": "The maximum number of items to return."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results."
            }
          ]
        }
      },
      "required": [
        "ImageId"
      ],
      "title": "DescribeWorkspaceImagePermissionsRequest",
      "type": "object"
    },
    "DescribeWorkspaceImagePermissionsResult": {
      "properties": {
        "ImageId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageId"
            },
            {
              "description": "The identifier of the image."
            }
          ]
        },
        "ImagePermissions": {
          "allOf": [
            {
              "$ref": "#/definitions/ImagePermissions"
            },
            {
              "description": "The identifiers of the AWS accounts that the image has been shared with."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "The token to use to retrieve the next set of results, or null if no more results are available."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeWorkspaceImagesRequest": {
      "properties": {
        "ImageIds": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageIdList"
            },
            {
              "description": "The identifier of the image."
            }
          ]
        },
        "ImageType": {
          "allOf": [
            {
              "$ref": "#/definitions/ImageType"
            },
            {
              "description": "The type (owned or shared) of the image."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/Limit"
            },
            {
              "description": "The maximum number of items to return."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results."
            }
          ]
        }
      },
      "title": "DescribeWorkspaceImagesRequest",
      "type": "object"
    },
    "DescribeWorkspaceImagesResult": {
      "properties": {
        "Images": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageList"
            },
            {
              "description": "Information about the images."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "The token to use to retrieve the next set of results, or null if no more results are available."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeWorkspaceSnapshotsRequest": {
      "properties": {
        "WorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The identifier of the WorkSpace."
            }
          ]
        }
      },
      "required": [
        "WorkspaceId"
      ],
      "title": "DescribeWorkspaceSnapshotsRequest",
      "type": "object"
    },
    "DescribeWorkspaceSnapshotsResult": {
      "properties": {
        "RebuildSnapshots": {
          "allOf": [
            {
              "$ref": "#/definitions/SnapshotList"
            },
            {
              "description": "Information about the snapshots that can be used to rebuild a WorkSpace. These snapshots include the user volume."
            }
          ]
        },
        "RestoreSnapshots": {
          "allOf": [
            {
              "$ref": "#/definitions/SnapshotList"
            },
            {
              "description": "Information about the snapshots that can be used to restore a WorkSpace. These snapshots include both the root volume and the user volume."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeWorkspacesConnectionStatusRequest": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results."
            }
          ]
        },
        "WorkspaceIds": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceIdList"
            },
            {
              "description": "The identifiers of the WorkSpaces. You can specify up to 25 WorkSpaces."
            }
          ]
        }
      },
      "title": "DescribeWorkspacesConnectionStatusRequest",
      "type": "object"
    },
    "DescribeWorkspacesConnectionStatusResult": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "The token to use to retrieve the next set of results, or null if no more results are available."
            }
          ]
        },
        "WorkspacesConnectionStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceConnectionStatusList"
            },
            {
              "description": "Information about the connection status of the WorkSpace."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeWorkspacesRequest": {
      "properties": {
        "BundleId": {
          "allOf": [
            {
              "$ref": "#/definitions/BundleId"
            },
            {
              "description": "The identifier of the bundle. All WorkSpaces that are created from this bundle are retrieved. You cannot combine this parameter with any other filter."
            }
          ]
        },
        "DirectoryId": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryId"
            },
            {
              "description": "The identifier of the directory. In addition, you can optionally specify a specific directory user (see <code>UserName</code>). You cannot combine this parameter with any other filter."
            }
          ]
        },
        "Limit": {
          "allOf": [
            {
              "$ref": "#/definitions/Limit"
            },
            {
              "description": "The maximum number of items to return."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results."
            }
          ]
        },
        "UserName": {
          "allOf": [
            {
              "$ref": "#/definitions/UserName"
            },
            {
              "description": "The name of the directory user. You must specify this parameter with <code>DirectoryId</code>."
            }
          ]
        },
        "WorkspaceIds": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceIdList"
            },
            {
              "description": "<p>The identifiers of the WorkSpaces. You cannot combine this parameter with any other filter.</p> <p>Because the <a>CreateWorkspaces</a> operation is asynchronous, the identifier it returns is not immediately available. If you immediately call <a>DescribeWorkspaces</a> with this identifier, no information is returned.</p>"
            }
          ]
        }
      },
      "title": "DescribeWorkspacesRequest",
      "type": "object"
    },
    "DescribeWorkspacesResult": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "The token to use to retrieve the next set of results, or null if no more results are available."
            }
          ]
        },
        "Workspaces": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceList"
            },
            {
              "description": "<p>Information about the WorkSpaces.</p> <p>Because <a>CreateWorkspaces</a> is an asynchronous operation, some of the returned information could be incomplete.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "Description": {
      "type": "string"
    },
    "DirectoryId": {
      "maxLength": 65,
      "minLength": 10,
      "pattern": "^d-[0-9a-f]{8,63}$",
      "type": "string"
    },
    "DirectoryIdList": {
      "items": {
        "$ref": "#/definitions/DirectoryId"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "DirectoryList": {
      "items": {
        "$ref": "#/definitions/WorkspaceDirectory"
      },
      "type": "array"
    },
    "DirectoryName": {
      "type": "string"
    },
    "DisassociateConnectionAliasRequest": {
      "properties": {
        "AliasId": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAliasId"
            },
            {
              "description": "The identifier of the connection alias to disassociate."
            }
          ]
        }
      },
      "required": [
        "AliasId"
      ],
      "title": "DisassociateConnectionAliasRequest",
      "type": "object"
    },
    "DisassociateConnectionAliasResult": {
      "properties": {},
      "type": "object"
    },
    "DisassociateIpGroupsRequest": {
      "properties": {
        "DirectoryId": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryId"
            },
            {
              "description": "The identifier of the directory."
            }
          ]
        },
        "GroupIds": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGroupIdList"
            },
            {
              "description": "The identifiers of one or more IP access control groups."
            }
          ]
        }
      },
      "required": [
        "DirectoryId",
        "GroupIds"
      ],
      "title": "DisassociateIpGroupsRequest",
      "type": "object"
    },
    "DisassociateIpGroupsResult": {
      "properties": {},
      "type": "object"
    },
    "DnsIpAddresses": {
      "items": {
        "$ref": "#/definitions/IpAddress"
      },
      "type": "array"
    },
    "Ec2ImageId": {
      "pattern": "^ami\\-([a-f0-9]{8}|[a-f0-9]{17})$",
      "type": "string"
    },
    "ErrorType": {
      "type": "string"
    },
    "FailedCreateWorkspaceRequest": {
      "description": "Describes a WorkSpace that cannot be created.",
      "properties": {
        "ErrorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorType"
            },
            {
              "description": "The error code that is returned if the WorkSpace cannot be created."
            }
          ]
        },
        "ErrorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": "The text of the error message that is returned if the WorkSpace cannot be created."
            }
          ]
        },
        "WorkspaceRequest": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceRequest"
            },
            {
              "description": "Information about the WorkSpace."
            }
          ]
        }
      },
      "type": "object"
    },
    "FailedCreateWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/FailedCreateWorkspaceRequest"
      },
      "type": "array"
    },
    "FailedRebootWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/FailedWorkspaceChangeRequest"
      },
      "type": "array"
    },
    "FailedRebuildWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/FailedWorkspaceChangeRequest"
      },
      "type": "array"
    },
    "FailedStartWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/FailedWorkspaceChangeRequest"
      },
      "type": "array"
    },
    "FailedStopWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/FailedWorkspaceChangeRequest"
      },
      "type": "array"
    },
    "FailedTerminateWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/FailedWorkspaceChangeRequest"
      },
      "type": "array"
    },
    "FailedWorkspaceChangeRequest": {
      "description": "Describes a WorkSpace that could not be rebooted. (<a>RebootWorkspaces</a>), rebuilt (<a>RebuildWorkspaces</a>), restored (<a>RestoreWorkspace</a>), terminated (<a>TerminateWorkspaces</a>), started (<a>StartWorkspaces</a>), or stopped (<a>StopWorkspaces</a>).",
      "properties": {
        "ErrorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorType"
            },
            {
              "description": "The error code that is returned if the WorkSpace cannot be rebooted."
            }
          ]
        },
        "ErrorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": "The text of the error message that is returned if the WorkSpace cannot be rebooted."
            }
          ]
        },
        "WorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The identifier of the WorkSpace."
            }
          ]
        }
      },
      "type": "object"
    },
    "ImagePermission": {
      "description": "Describes the AWS accounts that have been granted permission to use a shared image. For more information about sharing images, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/share-custom-image.html\"> Share or Unshare a Custom WorkSpaces Image</a>.",
      "properties": {
        "SharedAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsAccount"
            },
            {
              "description": "The identifier of the AWS account that an image has been shared with."
            }
          ]
        }
      },
      "type": "object"
    },
    "ImagePermissions": {
      "items": {
        "$ref": "#/definitions/ImagePermission"
      },
      "type": "array"
    },
    "ImageType": {
      "enum": [
        "OWNED",
        "SHARED"
      ],
      "type": "string"
    },
    "ImportWorkspaceImageRequest": {
      "properties": {
        "Applications": {
          "allOf": [
            {
              "$ref": "#/definitions/ApplicationList"
            },
            {
              "description": "<p>If specified, the version of Microsoft Office to subscribe to. Valid only for Windows 10 BYOL images. For more information about subscribing to Office for BYOL images, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html\"> Bring Your Own Windows Desktop Licenses</a>.</p> <note> <p>Although this parameter is an array, only one item is allowed at this time.</p> </note>"
            }
          ]
        },
        "Ec2ImageId": {
          "allOf": [
            {
              "$ref": "#/definitions/Ec2ImageId"
            },
            {
              "description": "The identifier of the EC2 image."
            }
          ]
        },
        "ImageDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageDescription"
            },
            {
              "description": "The description of the WorkSpace image."
            }
          ]
        },
        "ImageName": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageName"
            },
            {
              "description": "The name of the WorkSpace image."
            }
          ]
        },
        "IngestionProcess": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageIngestionProcess"
            },
            {
              "description": "<p>The ingestion process to be used when importing the image, depending on which protocol you want to use for your BYOL Workspace image, either PCoIP or WorkSpaces Streaming Protocol (WSP). To use WSP, specify a value that ends in <code>_WSP</code>. To use PCoIP, specify a value that does not end in <code>_WSP</code>. </p> <p>For non-GPU-enabled bundles (bundles other than Graphics or GraphicsPro), specify <code>BYOL_REGULAR</code> or <code>BYOL_REGULAR_WSP</code>, depending on the protocol.</p>"
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "The tags. Each WorkSpaces resource can have a maximum of 50 tags."
            }
          ]
        }
      },
      "required": [
        "Ec2ImageId",
        "IngestionProcess",
        "ImageName",
        "ImageDescription"
      ],
      "title": "ImportWorkspaceImageRequest",
      "type": "object"
    },
    "ImportWorkspaceImageResult": {
      "properties": {
        "ImageId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageId"
            },
            {
              "description": "The identifier of the WorkSpace image."
            }
          ]
        }
      },
      "type": "object"
    },
    "InvalidParameterValuesException": {},
    "InvalidResourceStateException": {},
    "IpAddress": {
      "type": "string"
    },
    "IpGroupDesc": {
      "type": "string"
    },
    "IpGroupId": {
      "pattern": "wsipg-[0-9a-z]{8,63}$",
      "type": "string"
    },
    "IpGroupIdList": {
      "items": {
        "$ref": "#/definitions/IpGroupId"
      },
      "type": "array"
    },
    "IpGroupName": {
      "type": "string"
    },
    "IpRevokedRuleList": {
      "items": {
        "$ref": "#/definitions/IpRule"
      },
      "type": "array"
    },
    "IpRule": {
      "type": "string"
    },
    "IpRuleDesc": {
      "type": "string"
    },
    "IpRuleItem": {
      "description": "Describes a rule for an IP access control group.",
      "properties": {
        "ipRule": {
          "allOf": [
            {
              "$ref": "#/definitions/IpRule"
            },
            {
              "description": "The IP address range, in CIDR notation."
            }
          ]
        },
        "ruleDesc": {
          "allOf": [
            {
              "$ref": "#/definitions/IpRuleDesc"
            },
            {
              "description": "The description."
            }
          ]
        }
      },
      "type": "object"
    },
    "IpRuleList": {
      "items": {
        "$ref": "#/definitions/IpRuleItem"
      },
      "type": "array"
    },
    "Limit": {
      "maximum": 25,
      "minimum": 1,
      "type": "integer"
    },
    "ListAvailableManagementCidrRangesRequest": {
      "properties": {
        "ManagementCidrRangeConstraint": {
          "allOf": [
            {
              "$ref": "#/definitions/ManagementCidrRangeConstraint"
            },
            {
              "description": "The IP address range to search. Specify an IP address range that is compatible with your network and in CIDR notation (that is, specify the range as an IPv4 CIDR block)."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/ManagementCidrRangeMaxResults"
            },
            {
              "description": "The maximum number of items to return."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results."
            }
          ]
        }
      },
      "required": [
        "ManagementCidrRangeConstraint"
      ],
      "title": "ListAvailableManagementCidrRangesRequest",
      "type": "object"
    },
    "ListAvailableManagementCidrRangesResult": {
      "properties": {
        "ManagementCidrRanges": {
          "allOf": [
            {
              "$ref": "#/definitions/DedicatedTenancyCidrRangeList"
            },
            {
              "description": "The list of available IP address ranges, specified as IPv4 CIDR blocks."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PaginationToken"
            },
            {
              "description": "The token to use to retrieve the next set of results, or null if no more results are available."
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagementCidrRangeConstraint": {
      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(3[0-2]|[1-2][0-9]|[0-9]))$",
      "type": "string"
    },
    "ManagementCidrRangeMaxResults": {
      "maximum": 5,
      "minimum": 1,
      "type": "integer"
    },
    "MigrateWorkspaceRequest": {
      "properties": {
        "BundleId": {
          "allOf": [
            {
              "$ref": "#/definitions/BundleId"
            },
            {
              "description": "The identifier of the target bundle type to migrate the WorkSpace to."
            }
          ]
        },
        "SourceWorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The identifier of the WorkSpace to migrate from."
            }
          ]
        }
      },
      "required": [
        "SourceWorkspaceId",
        "BundleId"
      ],
      "title": "MigrateWorkspaceRequest",
      "type": "object"
    },
    "MigrateWorkspaceResult": {
      "properties": {
        "SourceWorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The original identifier of the WorkSpace that is being migrated."
            }
          ]
        },
        "TargetWorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The new identifier of the WorkSpace that is being migrated. If the migration does not succeed, the target WorkSpace ID will not be used, and the WorkSpace will still have the original WorkSpace ID."
            }
          ]
        }
      },
      "type": "object"
    },
    "ModificationResourceEnum": {
      "enum": [
        "ROOT_VOLUME",
        "USER_VOLUME",
        "COMPUTE_TYPE"
      ],
      "type": "string"
    },
    "ModificationState": {
      "description": "Describes a WorkSpace modification.",
      "properties": {
        "Resource": {
          "allOf": [
            {
              "$ref": "#/definitions/ModificationResourceEnum"
            },
            {
              "description": "The resource."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/ModificationStateEnum"
            },
            {
              "description": "The modification state."
            }
          ]
        }
      },
      "type": "object"
    },
    "ModificationStateEnum": {
      "enum": [
        "UPDATE_INITIATED",
        "UPDATE_IN_PROGRESS"
      ],
      "type": "string"
    },
    "ModificationStateList": {
      "items": {
        "$ref": "#/definitions/ModificationState"
      },
      "type": "array"
    },
    "ModifyAccountRequest": {
      "properties": {
        "DedicatedTenancyManagementCidrRange": {
          "allOf": [
            {
              "$ref": "#/definitions/DedicatedTenancyManagementCidrRange"
            },
            {
              "description": "The IP address range, specified as an IPv4 CIDR block, for the management network interface. Specify an IP address range that is compatible with your network and in CIDR notation (that is, specify the range as an IPv4 CIDR block). The CIDR block size must be /16 (for example, 203.0.113.25/16). It must also be specified as available by the <code>ListAvailableManagementCidrRanges</code> operation."
            }
          ]
        },
        "DedicatedTenancySupport": {
          "allOf": [
            {
              "$ref": "#/definitions/DedicatedTenancySupportEnum"
            },
            {
              "description": "The status of BYOL."
            }
          ]
        }
      },
      "title": "ModifyAccountRequest",
      "type": "object"
    },
    "ModifyAccountResult": {
      "properties": {},
      "type": "object"
    },
    "ModifyClientPropertiesRequest": {
      "properties": {
        "ClientProperties": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientProperties"
            },
            {
              "description": "Information about the Amazon WorkSpaces client."
            }
          ]
        },
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The resource identifiers, in the form of directory IDs."
            }
          ]
        }
      },
      "required": [
        "ResourceId",
        "ClientProperties"
      ],
      "title": "ModifyClientPropertiesRequest",
      "type": "object"
    },
    "ModifyClientPropertiesResult": {
      "properties": {},
      "type": "object"
    },
    "ModifySelfservicePermissionsRequest": {
      "properties": {
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryId"
            },
            {
              "description": "The identifier of the directory."
            }
          ]
        },
        "SelfservicePermissions": {
          "allOf": [
            {
              "$ref": "#/definitions/SelfservicePermissions"
            },
            {
              "description": "The permissions to enable or disable self-service capabilities."
            }
          ]
        }
      },
      "required": [
        "ResourceId",
        "SelfservicePermissions"
      ],
      "title": "ModifySelfservicePermissionsRequest",
      "type": "object"
    },
    "ModifySelfservicePermissionsResult": {
      "properties": {},
      "type": "object"
    },
    "ModifyWorkspaceAccessPropertiesRequest": {
      "properties": {
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryId"
            },
            {
              "description": "The identifier of the directory."
            }
          ]
        },
        "WorkspaceAccessProperties": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceAccessProperties"
            },
            {
              "description": "The device types and operating systems to enable or disable for access."
            }
          ]
        }
      },
      "required": [
        "ResourceId",
        "WorkspaceAccessProperties"
      ],
      "title": "ModifyWorkspaceAccessPropertiesRequest",
      "type": "object"
    },
    "ModifyWorkspaceAccessPropertiesResult": {
      "properties": {},
      "type": "object"
    },
    "ModifyWorkspaceCreationPropertiesRequest": {
      "properties": {
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryId"
            },
            {
              "description": "The identifier of the directory."
            }
          ]
        },
        "WorkspaceCreationProperties": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceCreationProperties"
            },
            {
              "description": "The default properties for creating WorkSpaces."
            }
          ]
        }
      },
      "required": [
        "ResourceId",
        "WorkspaceCreationProperties"
      ],
      "title": "ModifyWorkspaceCreationPropertiesRequest",
      "type": "object"
    },
    "ModifyWorkspaceCreationPropertiesResult": {
      "properties": {},
      "type": "object"
    },
    "ModifyWorkspacePropertiesRequest": {
      "properties": {
        "WorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The identifier of the WorkSpace."
            }
          ]
        },
        "WorkspaceProperties": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceProperties"
            },
            {
              "description": "The properties of the WorkSpace."
            }
          ]
        }
      },
      "required": [
        "WorkspaceId",
        "WorkspaceProperties"
      ],
      "title": "ModifyWorkspacePropertiesRequest",
      "type": "object"
    },
    "ModifyWorkspacePropertiesResult": {
      "properties": {},
      "type": "object"
    },
    "ModifyWorkspaceStateRequest": {
      "properties": {
        "WorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The identifier of the WorkSpace."
            }
          ]
        },
        "WorkspaceState": {
          "allOf": [
            {
              "$ref": "#/definitions/TargetWorkspaceState"
            },
            {
              "description": "The WorkSpace state."
            }
          ]
        }
      },
      "required": [
        "WorkspaceId",
        "WorkspaceState"
      ],
      "title": "ModifyWorkspaceStateRequest",
      "type": "object"
    },
    "ModifyWorkspaceStateResult": {
      "properties": {},
      "type": "object"
    },
    "NonEmptyString": {
      "minLength": 1,
      "type": "string"
    },
    "OperatingSystem": {
      "description": "The operating system that the image is running.",
      "properties": {
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/OperatingSystemType"
            },
            {
              "description": "The operating system."
            }
          ]
        }
      },
      "type": "object"
    },
    "OperatingSystemType": {
      "enum": [
        "WINDOWS",
        "LINUX"
      ],
      "type": "string"
    },
    "OperationInProgressException": {},
    "OperationNotSupportedException": {},
    "PaginationToken": {
      "maxLength": 2048,
      "minLength": 1,
      "type": "string"
    },
    "RebootRequest": {
      "description": "Describes the information used to reboot a WorkSpace.",
      "properties": {
        "WorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The identifier of the WorkSpace."
            }
          ]
        }
      },
      "required": [
        "WorkspaceId"
      ],
      "type": "object"
    },
    "RebootWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/RebootRequest"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "RebootWorkspacesRequest": {
      "properties": {
        "RebootWorkspaceRequests": {
          "allOf": [
            {
              "$ref": "#/definitions/RebootWorkspaceRequests"
            },
            {
              "description": "The WorkSpaces to reboot. You can specify up to 25 WorkSpaces."
            }
          ]
        }
      },
      "required": [
        "RebootWorkspaceRequests"
      ],
      "title": "RebootWorkspacesRequest",
      "type": "object"
    },
    "RebootWorkspacesResult": {
      "properties": {
        "FailedRequests": {
          "allOf": [
            {
              "$ref": "#/definitions/FailedRebootWorkspaceRequests"
            },
            {
              "description": "Information about the WorkSpaces that could not be rebooted."
            }
          ]
        }
      },
      "type": "object"
    },
    "RebuildRequest": {
      "description": "Describes the information used to rebuild a WorkSpace.",
      "properties": {
        "WorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The identifier of the WorkSpace."
            }
          ]
        }
      },
      "required": [
        "WorkspaceId"
      ],
      "type": "object"
    },
    "RebuildWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/RebuildRequest"
      },
      "maxItems": 1,
      "minItems": 1,
      "type": "array"
    },
    "RebuildWorkspacesRequest": {
      "properties": {
        "RebuildWorkspaceRequests": {
          "allOf": [
            {
              "$ref": "#/definitions/RebuildWorkspaceRequests"
            },
            {
              "description": "The WorkSpace to rebuild. You can specify a single WorkSpace."
            }
          ]
        }
      },
      "required": [
        "RebuildWorkspaceRequests"
      ],
      "title": "RebuildWorkspacesRequest",
      "type": "object"
    },
    "RebuildWorkspacesResult": {
      "properties": {
        "FailedRequests": {
          "allOf": [
            {
              "$ref": "#/definitions/FailedRebuildWorkspaceRequests"
            },
            {
              "description": "Information about the WorkSpace that could not be rebuilt."
            }
          ]
        }
      },
      "type": "object"
    },
    "ReconnectEnum": {
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "type": "string"
    },
    "Region": {
      "maxLength": 31,
      "minLength": 1,
      "pattern": "^[-0-9a-z]{1,31}$",
      "type": "string"
    },
    "RegisterWorkspaceDirectoryRequest": {
      "properties": {
        "DirectoryId": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryId"
            },
            {
              "description": "The identifier of the directory. You cannot register a directory if it does not have a status of Active. If the directory does not have a status of Active, you will receive an InvalidResourceStateException error. If you have already registered the maximum number of directories that you can register with Amazon WorkSpaces, you will receive a ResourceLimitExceededException error. Deregister directories that you are not using for WorkSpaces, and try again."
            }
          ]
        },
        "EnableSelfService": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "Indicates whether self-service capabilities are enabled or disabled."
            }
          ]
        },
        "EnableWorkDocs": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "Indicates whether Amazon WorkDocs is enabled or disabled. If you have enabled this parameter and WorkDocs is not available in the Region, you will receive an OperationNotSupportedException error. Set <code>EnableWorkDocs</code> to disabled, and try again."
            }
          ]
        },
        "SubnetIds": {
          "allOf": [
            {
              "$ref": "#/definitions/SubnetIds"
            },
            {
              "description": "The identifiers of the subnets for your virtual private cloud (VPC). Make sure that the subnets are in supported Availability Zones. The subnets must also be in separate Availability Zones. If these conditions are not met, you will receive an OperationNotSupportedException error."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "The tags associated with the directory."
            }
          ]
        },
        "Tenancy": {
          "allOf": [
            {
              "$ref": "#/definitions/Tenancy"
            },
            {
              "description": "Indicates whether your WorkSpace directory is dedicated or shared. To use Bring Your Own License (BYOL) images, this value must be set to <code>DEDICATED</code> and your AWS account must be enabled for BYOL. If your account has not been enabled for BYOL, you will receive an InvalidParameterValuesException error. For more information about BYOL images, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html\">Bring Your Own Windows Desktop Images</a>."
            }
          ]
        }
      },
      "required": [
        "DirectoryId",
        "EnableWorkDocs"
      ],
      "title": "RegisterWorkspaceDirectoryRequest",
      "type": "object"
    },
    "RegisterWorkspaceDirectoryResult": {
      "properties": {},
      "type": "object"
    },
    "RegistrationCode": {
      "maxLength": 20,
      "minLength": 1,
      "type": "string"
    },
    "ResourceAlreadyExistsException": {},
    "ResourceAssociatedException": {},
    "ResourceCreationFailedException": {},
    "ResourceIdList": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "ResourceLimitExceededException": {},
    "ResourceNotFoundException": {},
    "ResourceUnavailableException": {},
    "RestoreWorkspaceRequest": {
      "properties": {
        "WorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The identifier of the WorkSpace."
            }
          ]
        }
      },
      "required": [
        "WorkspaceId"
      ],
      "title": "RestoreWorkspaceRequest",
      "type": "object"
    },
    "RestoreWorkspaceResult": {
      "properties": {},
      "type": "object"
    },
    "RevokeIpRulesRequest": {
      "properties": {
        "GroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGroupId"
            },
            {
              "description": "The identifier of the group."
            }
          ]
        },
        "UserRules": {
          "allOf": [
            {
              "$ref": "#/definitions/IpRevokedRuleList"
            },
            {
              "description": "The rules to remove from the group."
            }
          ]
        }
      },
      "required": [
        "GroupId",
        "UserRules"
      ],
      "title": "RevokeIpRulesRequest",
      "type": "object"
    },
    "RevokeIpRulesResult": {
      "properties": {},
      "type": "object"
    },
    "RootStorage": {
      "description": "Describes the root volume for a WorkSpace bundle.",
      "properties": {
        "Capacity": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The size of the root volume."
            }
          ]
        }
      },
      "type": "object"
    },
    "RootVolumeSizeGib": {
      "type": "integer"
    },
    "RunningMode": {
      "enum": [
        "AUTO_STOP",
        "ALWAYS_ON"
      ],
      "type": "string"
    },
    "RunningModeAutoStopTimeoutInMinutes": {
      "type": "integer"
    },
    "SecurityGroupId": {
      "maxLength": 20,
      "minLength": 11,
      "pattern": "^(sg-([0-9a-f]{8}|[0-9a-f]{17}))$",
      "type": "string"
    },
    "SelfservicePermissions": {
      "description": "Describes the self-service permissions for a directory. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/enable-user-self-service-workspace-management.html\">Enable Self-Service WorkSpace Management Capabilities for Your Users</a>.",
      "properties": {
        "ChangeComputeType": {
          "allOf": [
            {
              "$ref": "#/definitions/ReconnectEnum"
            },
            {
              "description": "Specifies whether users can change the compute type (bundle) for their WorkSpace."
            }
          ]
        },
        "IncreaseVolumeSize": {
          "allOf": [
            {
              "$ref": "#/definitions/ReconnectEnum"
            },
            {
              "description": "Specifies whether users can increase the volume size of the drives on their WorkSpace."
            }
          ]
        },
        "RebuildWorkspace": {
          "allOf": [
            {
              "$ref": "#/definitions/ReconnectEnum"
            },
            {
              "description": "Specifies whether users can rebuild the operating system of a WorkSpace to its original state."
            }
          ]
        },
        "RestartWorkspace": {
          "allOf": [
            {
              "$ref": "#/definitions/ReconnectEnum"
            },
            {
              "description": "Specifies whether users can restart their WorkSpace."
            }
          ]
        },
        "SwitchRunningMode": {
          "allOf": [
            {
              "$ref": "#/definitions/ReconnectEnum"
            },
            {
              "description": "Specifies whether users can switch the running mode of their WorkSpace."
            }
          ]
        }
      },
      "type": "object"
    },
    "Snapshot": {
      "description": "Describes a snapshot.",
      "properties": {
        "SnapshotTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time when the snapshot was created."
            }
          ]
        }
      },
      "type": "object"
    },
    "SnapshotList": {
      "items": {
        "$ref": "#/definitions/Snapshot"
      },
      "type": "array"
    },
    "StartRequest": {
      "description": "Information used to start a WorkSpace.",
      "properties": {
        "WorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The identifier of the WorkSpace."
            }
          ]
        }
      },
      "type": "object"
    },
    "StartWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/StartRequest"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "StartWorkspacesRequest": {
      "properties": {
        "StartWorkspaceRequests": {
          "allOf": [
            {
              "$ref": "#/definitions/StartWorkspaceRequests"
            },
            {
              "description": "The WorkSpaces to start. You can specify up to 25 WorkSpaces."
            }
          ]
        }
      },
      "required": [
        "StartWorkspaceRequests"
      ],
      "title": "StartWorkspacesRequest",
      "type": "object"
    },
    "StartWorkspacesResult": {
      "properties": {
        "FailedRequests": {
          "allOf": [
            {
              "$ref": "#/definitions/FailedStartWorkspaceRequests"
            },
            {
              "description": "Information about the WorkSpaces that could not be started."
            }
          ]
        }
      },
      "type": "object"
    },
    "StopRequest": {
      "description": "Describes the information used to stop a WorkSpace.",
      "properties": {
        "WorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The identifier of the WorkSpace."
            }
          ]
        }
      },
      "type": "object"
    },
    "StopWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/StopRequest"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "StopWorkspacesRequest": {
      "properties": {
        "StopWorkspaceRequests": {
          "allOf": [
            {
              "$ref": "#/definitions/StopWorkspaceRequests"
            },
            {
              "description": "The WorkSpaces to stop. You can specify up to 25 WorkSpaces."
            }
          ]
        }
      },
      "required": [
        "StopWorkspaceRequests"
      ],
      "title": "StopWorkspacesRequest",
      "type": "object"
    },
    "StopWorkspacesResult": {
      "properties": {
        "FailedRequests": {
          "allOf": [
            {
              "$ref": "#/definitions/FailedStopWorkspaceRequests"
            },
            {
              "description": "Information about the WorkSpaces that could not be stopped."
            }
          ]
        }
      },
      "type": "object"
    },
    "SubnetId": {
      "maxLength": 24,
      "minLength": 15,
      "pattern": "^(subnet-([0-9a-f]{8}|[0-9a-f]{17}))$",
      "type": "string"
    },
    "SubnetIds": {
      "items": {
        "$ref": "#/definitions/SubnetId"
      },
      "maxItems": 2,
      "type": "array"
    },
    "Tag": {
      "description": "Describes a tag.",
      "properties": {
        "Key": {
          "allOf": [
            {
              "$ref": "#/definitions/TagKey"
            },
            {
              "description": "The key of the tag."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/TagValue"
            },
            {
              "description": "The value of the tag."
            }
          ]
        }
      },
      "required": [
        "Key"
      ],
      "type": "object"
    },
    "TagKey": {
      "maxLength": 127,
      "minLength": 1,
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "array"
    },
    "TagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array"
    },
    "TagValue": {
      "maxLength": 255,
      "type": "string"
    },
    "TargetWorkspaceState": {
      "enum": [
        "AVAILABLE",
        "ADMIN_MAINTENANCE"
      ],
      "type": "string"
    },
    "Tenancy": {
      "enum": [
        "DEDICATED",
        "SHARED"
      ],
      "type": "string"
    },
    "TerminateRequest": {
      "description": "Describes the information used to terminate a WorkSpace.",
      "properties": {
        "WorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The identifier of the WorkSpace."
            }
          ]
        }
      },
      "required": [
        "WorkspaceId"
      ],
      "type": "object"
    },
    "TerminateWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/TerminateRequest"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "TerminateWorkspacesRequest": {
      "properties": {
        "TerminateWorkspaceRequests": {
          "allOf": [
            {
              "$ref": "#/definitions/TerminateWorkspaceRequests"
            },
            {
              "description": "The WorkSpaces to terminate. You can specify up to 25 WorkSpaces."
            }
          ]
        }
      },
      "required": [
        "TerminateWorkspaceRequests"
      ],
      "title": "TerminateWorkspacesRequest",
      "type": "object"
    },
    "TerminateWorkspacesResult": {
      "properties": {
        "FailedRequests": {
          "allOf": [
            {
              "$ref": "#/definitions/FailedTerminateWorkspaceRequests"
            },
            {
              "description": "Information about the WorkSpaces that could not be terminated."
            }
          ]
        }
      },
      "type": "object"
    },
    "Timestamp": {
      "format": "date-time",
      "type": "string"
    },
    "UnsupportedNetworkConfigurationException": {},
    "UnsupportedWorkspaceConfigurationException": {},
    "UpdateConnectionAliasPermissionRequest": {
      "properties": {
        "AliasId": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAliasId"
            },
            {
              "description": "The identifier of the connection alias that you want to update permissions for."
            }
          ]
        },
        "ConnectionAliasPermission": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAliasPermission"
            },
            {
              "description": "Indicates whether to share or unshare the connection alias with the specified AWS account."
            }
          ]
        }
      },
      "required": [
        "AliasId",
        "ConnectionAliasPermission"
      ],
      "title": "UpdateConnectionAliasPermissionRequest",
      "type": "object"
    },
    "UpdateConnectionAliasPermissionResult": {
      "properties": {},
      "type": "object"
    },
    "UpdateRulesOfIpGroupRequest": {
      "properties": {
        "GroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGroupId"
            },
            {
              "description": "The identifier of the group."
            }
          ]
        },
        "UserRules": {
          "allOf": [
            {
              "$ref": "#/definitions/IpRuleList"
            },
            {
              "description": "One or more rules."
            }
          ]
        }
      },
      "required": [
        "GroupId",
        "UserRules"
      ],
      "title": "UpdateRulesOfIpGroupRequest",
      "type": "object"
    },
    "UpdateRulesOfIpGroupResult": {
      "properties": {},
      "type": "object"
    },
    "UpdateWorkspaceImagePermissionRequest": {
      "properties": {
        "AllowCopyImage": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "The permission to copy the image. This permission can be revoked only after an image has been shared."
            }
          ]
        },
        "ImageId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageId"
            },
            {
              "description": "The identifier of the image."
            }
          ]
        },
        "SharedAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsAccount"
            },
            {
              "description": "<p>The identifier of the AWS account to share or unshare the image with.</p> <important> <p>Before sharing the image, confirm that you are sharing to the correct AWS account ID.</p> </important>"
            }
          ]
        }
      },
      "required": [
        "ImageId",
        "AllowCopyImage",
        "SharedAccountId"
      ],
      "title": "UpdateWorkspaceImagePermissionRequest",
      "type": "object"
    },
    "UpdateWorkspaceImagePermissionResult": {
      "properties": {},
      "type": "object"
    },
    "UserName": {
      "maxLength": 63,
      "minLength": 1,
      "type": "string"
    },
    "UserStorage": {
      "description": "Describes the user storage for a WorkSpace bundle.",
      "properties": {
        "Capacity": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The size of the user storage."
            }
          ]
        }
      },
      "type": "object"
    },
    "UserVolumeSizeGib": {
      "type": "integer"
    },
    "VolumeEncryptionKey": {
      "type": "string"
    },
    "Workspace": {
      "description": "Describes a WorkSpace.",
      "properties": {
        "BundleId": {
          "allOf": [
            {
              "$ref": "#/definitions/BundleId"
            },
            {
              "description": "The identifier of the bundle used to create the WorkSpace."
            }
          ]
        },
        "ComputerName": {
          "allOf": [
            {
              "$ref": "#/definitions/ComputerName"
            },
            {
              "description": "The name of the WorkSpace, as seen by the operating system. The format of this name varies. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/launch-workspaces-tutorials.html\"> Launch a WorkSpace</a>. "
            }
          ]
        },
        "DirectoryId": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryId"
            },
            {
              "description": "The identifier of the AWS Directory Service directory for the WorkSpace."
            }
          ]
        },
        "ErrorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceErrorCode"
            },
            {
              "description": "The error code that is returned if the WorkSpace cannot be created."
            }
          ]
        },
        "ErrorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": "The text of the error message that is returned if the WorkSpace cannot be created."
            }
          ]
        },
        "IpAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/IpAddress"
            },
            {
              "description": "The IP address of the WorkSpace."
            }
          ]
        },
        "ModificationStates": {
          "allOf": [
            {
              "$ref": "#/definitions/ModificationStateList"
            },
            {
              "description": "The modification states of the WorkSpace."
            }
          ]
        },
        "RootVolumeEncryptionEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "Indicates whether the data stored on the root volume is encrypted."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceState"
            },
            {
              "description": "<p>The operational state of the WorkSpace.</p> <note> <p>After a WorkSpace is terminated, the <code>TERMINATED</code> state is returned only briefly before the WorkSpace directory metadata is cleaned up, so this state is rarely returned. To confirm that a WorkSpace is terminated, check for the WorkSpace ID by using <a href=\"https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeWorkspaces.html\"> DescribeWorkSpaces</a>. If the WorkSpace ID isn't returned, then the WorkSpace has been successfully terminated.</p> </note>"
            }
          ]
        },
        "SubnetId": {
          "allOf": [
            {
              "$ref": "#/definitions/SubnetId"
            },
            {
              "description": "The identifier of the subnet for the WorkSpace."
            }
          ]
        },
        "UserName": {
          "allOf": [
            {
              "$ref": "#/definitions/UserName"
            },
            {
              "description": "The user for the WorkSpace."
            }
          ]
        },
        "UserVolumeEncryptionEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "Indicates whether the data stored on the user volume is encrypted."
            }
          ]
        },
        "VolumeEncryptionKey": {
          "allOf": [
            {
              "$ref": "#/definitions/VolumeEncryptionKey"
            },
            {
              "description": "The symmetric AWS KMS customer master key (CMK) used to encrypt data stored on your WorkSpace. Amazon WorkSpaces does not support asymmetric CMKs."
            }
          ]
        },
        "WorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The identifier of the WorkSpace."
            }
          ]
        },
        "WorkspaceProperties": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceProperties"
            },
            {
              "description": "The properties of the WorkSpace."
            }
          ]
        }
      },
      "type": "object"
    },
    "WorkspaceAccessProperties": {
      "description": "The device types and operating systems that can be used to access a WorkSpace. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/workspaces-network-requirements.html\">Amazon WorkSpaces Client Network Requirements</a>.",
      "properties": {
        "DeviceTypeAndroid": {
          "allOf": [
            {
              "$ref": "#/definitions/AccessPropertyValue"
            },
            {
              "description": "Indicates whether users can use Android devices to access their WorkSpaces."
            }
          ]
        },
        "DeviceTypeChromeOs": {
          "allOf": [
            {
              "$ref": "#/definitions/AccessPropertyValue"
            },
            {
              "description": "Indicates whether users can use Chromebooks to access their WorkSpaces."
            }
          ]
        },
        "DeviceTypeIos": {
          "allOf": [
            {
              "$ref": "#/definitions/AccessPropertyValue"
            },
            {
              "description": "Indicates whether users can use iOS devices to access their WorkSpaces."
            }
          ]
        },
        "DeviceTypeOsx": {
          "allOf": [
            {
              "$ref": "#/definitions/AccessPropertyValue"
            },
            {
              "description": "Indicates whether users can use macOS clients to access their WorkSpaces. To restrict WorkSpaces access to trusted devices (also known as managed devices) with valid certificates, specify a value of <code>TRUST</code>. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/trusted-devices.html\">Restrict WorkSpaces Access to Trusted Devices</a>. "
            }
          ]
        },
        "DeviceTypeWeb": {
          "allOf": [
            {
              "$ref": "#/definitions/AccessPropertyValue"
            },
            {
              "description": "Indicates whether users can access their WorkSpaces through a web browser."
            }
          ]
        },
        "DeviceTypeWindows": {
          "allOf": [
            {
              "$ref": "#/definitions/AccessPropertyValue"
            },
            {
              "description": "Indicates whether users can use Windows clients to access their WorkSpaces. To restrict WorkSpaces access to trusted devices (also known as managed devices) with valid certificates, specify a value of <code>TRUST</code>. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/trusted-devices.html\">Restrict WorkSpaces Access to Trusted Devices</a>. "
            }
          ]
        },
        "DeviceTypeZeroClient": {
          "allOf": [
            {
              "$ref": "#/definitions/AccessPropertyValue"
            },
            {
              "description": "Indicates whether users can use zero client devices to access their WorkSpaces."
            }
          ]
        }
      },
      "type": "object"
    },
    "WorkspaceBundle": {
      "description": "Describes a WorkSpace bundle.",
      "properties": {
        "BundleId": {
          "allOf": [
            {
              "$ref": "#/definitions/BundleId"
            },
            {
              "description": "The bundle identifier."
            }
          ]
        },
        "ComputeType": {
          "allOf": [
            {
              "$ref": "#/definitions/ComputeType"
            },
            {
              "description": "The compute type. For more information, see <a href=\"http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles\">Amazon WorkSpaces Bundles</a>."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": "A description."
            }
          ]
        },
        "ImageId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageId"
            },
            {
              "description": "The image identifier of the bundle."
            }
          ]
        },
        "LastUpdatedTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The last time that the bundle was updated."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the bundle."
            }
          ]
        },
        "Owner": {
          "allOf": [
            {
              "$ref": "#/definitions/BundleOwner"
            },
            {
              "description": "The owner of the bundle. This is the account identifier of the owner, or <code>AMAZON</code> if the bundle is provided by AWS."
            }
          ]
        },
        "RootStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/RootStorage"
            },
            {
              "description": "The size of the root volume."
            }
          ]
        },
        "UserStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/UserStorage"
            },
            {
              "description": "The size of the user storage."
            }
          ]
        }
      },
      "type": "object"
    },
    "WorkspaceConnectionStatus": {
      "description": "Describes the connection status of a WorkSpace.",
      "properties": {
        "ConnectionState": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionState"
            },
            {
              "description": "The connection state of the WorkSpace. The connection state is unknown if the WorkSpace is stopped."
            }
          ]
        },
        "ConnectionStateCheckTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The timestamp of the connection status check."
            }
          ]
        },
        "LastKnownUserConnectionTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The timestamp of the last known user connection."
            }
          ]
        },
        "WorkspaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceId"
            },
            {
              "description": "The identifier of the WorkSpace."
            }
          ]
        }
      },
      "type": "object"
    },
    "WorkspaceConnectionStatusList": {
      "items": {
        "$ref": "#/definitions/WorkspaceConnectionStatus"
      },
      "type": "array"
    },
    "WorkspaceCreationProperties": {
      "description": "Describes the default properties that are used for creating WorkSpaces. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/update-directory-details.html\">Update Directory Details for Your WorkSpaces</a>. ",
      "properties": {
        "CustomSecurityGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityGroupId"
            },
            {
              "description": "The identifier of your custom security group."
            }
          ]
        },
        "DefaultOu": {
          "allOf": [
            {
              "$ref": "#/definitions/DefaultOu"
            },
            {
              "description": "<p>The default organizational unit (OU) for your WorkSpaces directories. This string must be the full Lightweight Directory Access Protocol (LDAP) distinguished name for the target domain and OU. It must be in the form <code>\"OU=<i>value</i>,DC=<i>value</i>,DC=<i>value</i>\"</code>, where <i>value</i> is any string of characters, and the number of domain components (DCs) is two or more. For example, <code>OU=WorkSpaces_machines,DC=machines,DC=example,DC=com</code>. </p> <important> <ul> <li> <p>To avoid errors, certain characters in the distinguished name must be escaped. For more information, see <a href=\"https://docs.microsoft.com/previous-versions/windows/desktop/ldap/distinguished-names\"> Distinguished Names</a> in the Microsoft documentation.</p> </li> <li> <p>The API doesn't validate whether the OU exists.</p> </li> </ul> </important>"
            }
          ]
        },
        "EnableInternetAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "Indicates whether internet access is enabled for your WorkSpaces."
            }
          ]
        },
        "EnableMaintenanceMode": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html\">WorkSpace Maintenance</a>. "
            }
          ]
        },
        "EnableWorkDocs": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "<p>Indicates whether Amazon WorkDocs is enabled for your WorkSpaces.</p> <note> <p>If WorkDocs is already enabled for a WorkSpaces directory and you disable it, new WorkSpaces launched in the directory will not have WorkDocs enabled. However, WorkDocs remains enabled for any existing WorkSpaces, unless you either disable users' access to WorkDocs or you delete the WorkDocs site. To disable users' access to WorkDocs, see <a href=\"https://docs.aws.amazon.com/workdocs/latest/adminguide/inactive-user.html\">Disabling Users</a> in the <i>Amazon WorkDocs Administration Guide</i>. To delete a WorkDocs site, see <a href=\"https://docs.aws.amazon.com/workdocs/latest/adminguide/manage-sites.html\">Deleting a Site</a> in the <i>Amazon WorkDocs Administration Guide</i>.</p> <p>If you enable WorkDocs on a directory that already has existing WorkSpaces, the existing WorkSpaces and any new WorkSpaces that are launched in the directory will have WorkDocs enabled.</p> </note>"
            }
          ]
        },
        "UserEnabledAsLocalAdministrator": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "Indicates whether users are local administrators of their WorkSpaces."
            }
          ]
        }
      },
      "type": "object"
    },
    "WorkspaceDirectory": {
      "description": "Describes a directory that is used with Amazon WorkSpaces.",
      "properties": {
        "Alias": {
          "allOf": [
            {
              "$ref": "#/definitions/Alias"
            },
            {
              "description": "The directory alias."
            }
          ]
        },
        "CustomerUserName": {
          "allOf": [
            {
              "$ref": "#/definitions/UserName"
            },
            {
              "description": "The user name for the service account."
            }
          ]
        },
        "DirectoryId": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryId"
            },
            {
              "description": "The directory identifier."
            }
          ]
        },
        "DirectoryName": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryName"
            },
            {
              "description": "The name of the directory."
            }
          ]
        },
        "DirectoryType": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceDirectoryType"
            },
            {
              "description": "The directory type."
            }
          ]
        },
        "DnsIpAddresses": {
          "allOf": [
            {
              "$ref": "#/definitions/DnsIpAddresses"
            },
            {
              "description": "The IP addresses of the DNS servers for the directory."
            }
          ]
        },
        "IamRoleId": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf."
            }
          ]
        },
        "RegistrationCode": {
          "allOf": [
            {
              "$ref": "#/definitions/RegistrationCode"
            },
            {
              "description": "The registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory."
            }
          ]
        },
        "SelfservicePermissions": {
          "allOf": [
            {
              "$ref": "#/definitions/SelfservicePermissions"
            },
            {
              "description": "The default self-service permissions for WorkSpaces in the directory."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceDirectoryState"
            },
            {
              "description": "The state of the directory's registration with Amazon WorkSpaces. After a directory is deregistered, the <code>DEREGISTERED</code> state is returned very briefly before the directory metadata is cleaned up, so this state is rarely returned. To confirm that a directory is deregistered, check for the directory ID by using <a href=\"https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeWorkspaceDirectories.html\"> DescribeWorkspaceDirectories</a>. If the directory ID isn't returned, then the directory has been successfully deregistered."
            }
          ]
        },
        "SubnetIds": {
          "allOf": [
            {
              "$ref": "#/definitions/SubnetIds"
            },
            {
              "description": "The identifiers of the subnets used with the directory."
            }
          ]
        },
        "Tenancy": {
          "allOf": [
            {
              "$ref": "#/definitions/Tenancy"
            },
            {
              "description": "Specifies whether the directory is dedicated or shared. To use Bring Your Own License (BYOL), this value must be set to <code>DEDICATED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html\">Bring Your Own Windows Desktop Images</a>."
            }
          ]
        },
        "WorkspaceAccessProperties": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceAccessProperties"
            },
            {
              "description": "The devices and operating systems that users can use to access WorkSpaces."
            }
          ]
        },
        "WorkspaceCreationProperties": {
          "allOf": [
            {
              "$ref": "#/definitions/DefaultWorkspaceCreationProperties"
            },
            {
              "description": "The default creation properties for all WorkSpaces in the directory."
            }
          ]
        },
        "WorkspaceSecurityGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityGroupId"
            },
            {
              "description": "The identifier of the security group that is assigned to new WorkSpaces."
            }
          ]
        },
        "ipGroupIds": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGroupIdList"
            },
            {
              "description": "The identifiers of the IP access control groups associated with the directory."
            }
          ]
        }
      },
      "type": "object"
    },
    "WorkspaceDirectoryState": {
      "enum": [
        "REGISTERING",
        "REGISTERED",
        "DEREGISTERING",
        "DEREGISTERED",
        "ERROR"
      ],
      "type": "string"
    },
    "WorkspaceDirectoryType": {
      "enum": [
        "SIMPLE_AD",
        "AD_CONNECTOR"
      ],
      "type": "string"
    },
    "WorkspaceErrorCode": {
      "type": "string"
    },
    "WorkspaceId": {
      "pattern": "^ws-[0-9a-z]{8,63}$",
      "type": "string"
    },
    "WorkspaceIdList": {
      "items": {
        "$ref": "#/definitions/WorkspaceId"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "WorkspaceImage": {
      "description": "Describes a WorkSpace image.",
      "properties": {
        "Created": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date when the image was created. If the image has been shared, the AWS account that the image has been shared with sees the original creation date of the image."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageDescription"
            },
            {
              "description": "The description of the image."
            }
          ]
        },
        "ErrorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageErrorCode"
            },
            {
              "description": "The error code that is returned for the image."
            }
          ]
        },
        "ErrorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": "The text of the error message that is returned for the image."
            }
          ]
        },
        "ImageId": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageId"
            },
            {
              "description": "The identifier of the image."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageName"
            },
            {
              "description": "The name of the image."
            }
          ]
        },
        "OperatingSystem": {
          "allOf": [
            {
              "$ref": "#/definitions/OperatingSystem"
            },
            {
              "description": "The operating system that the image is running. "
            }
          ]
        },
        "OwnerAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsAccount"
            },
            {
              "description": "The identifier of the AWS account that owns the image."
            }
          ]
        },
        "RequiredTenancy": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageRequiredTenancy"
            },
            {
              "description": "Specifies whether the image is running on dedicated hardware. When Bring Your Own License (BYOL) is enabled, this value is set to <code>DEDICATED</code>. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html\">Bring Your Own Windows Desktop Images</a>."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceImageState"
            },
            {
              "description": "The status of the image."
            }
          ]
        }
      },
      "type": "object"
    },
    "WorkspaceImageDescription": {
      "maxLength": 256,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9_./() -]+$",
      "type": "string"
    },
    "WorkspaceImageErrorCode": {
      "type": "string"
    },
    "WorkspaceImageId": {
      "pattern": "wsi-[0-9a-z]{9,63}$",
      "type": "string"
    },
    "WorkspaceImageIdList": {
      "items": {
        "$ref": "#/definitions/WorkspaceImageId"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "WorkspaceImageIngestionProcess": {
      "enum": [
        "BYOL_REGULAR",
        "BYOL_GRAPHICS",
        "BYOL_GRAPHICSPRO",
        "BYOL_REGULAR_WSP"
      ],
      "type": "string"
    },
    "WorkspaceImageList": {
      "items": {
        "$ref": "#/definitions/WorkspaceImage"
      },
      "type": "array"
    },
    "WorkspaceImageName": {
      "maxLength": 64,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9_./()\\\\-]+$",
      "type": "string"
    },
    "WorkspaceImageRequiredTenancy": {
      "enum": [
        "DEFAULT",
        "DEDICATED"
      ],
      "type": "string"
    },
    "WorkspaceImageState": {
      "enum": [
        "AVAILABLE",
        "PENDING",
        "ERROR"
      ],
      "type": "string"
    },
    "WorkspaceList": {
      "items": {
        "$ref": "#/definitions/Workspace"
      },
      "type": "array"
    },
    "WorkspaceProperties": {
      "description": "Describes a WorkSpace.",
      "properties": {
        "ComputeTypeName": {
          "allOf": [
            {
              "$ref": "#/definitions/Compute"
            },
            {
              "description": "The compute type. For more information, see <a href=\"http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles\">Amazon WorkSpaces Bundles</a>."
            }
          ]
        },
        "RootVolumeSizeGib": {
          "allOf": [
            {
              "$ref": "#/definitions/RootVolumeSizeGib"
            },
            {
              "description": "The size of the root volume. For important information about how to modify the size of the root and user volumes, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/modify-workspaces.html\">Modify a WorkSpace</a>."
            }
          ]
        },
        "RunningMode": {
          "allOf": [
            {
              "$ref": "#/definitions/RunningMode"
            },
            {
              "description": "The running mode. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html\">Manage the WorkSpace Running Mode</a>."
            }
          ]
        },
        "RunningModeAutoStopTimeoutInMinutes": {
          "allOf": [
            {
              "$ref": "#/definitions/RunningModeAutoStopTimeoutInMinutes"
            },
            {
              "description": "The time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals."
            }
          ]
        },
        "UserVolumeSizeGib": {
          "allOf": [
            {
              "$ref": "#/definitions/UserVolumeSizeGib"
            },
            {
              "description": "The size of the user storage. For important information about how to modify the size of the root and user volumes, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/modify-workspaces.html\">Modify a WorkSpace</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "WorkspaceRequest": {
      "description": "Describes the information used to create a WorkSpace.",
      "properties": {
        "BundleId": {
          "allOf": [
            {
              "$ref": "#/definitions/BundleId"
            },
            {
              "description": "The identifier of the bundle for the WorkSpace. You can use <a>DescribeWorkspaceBundles</a> to list the available bundles."
            }
          ]
        },
        "DirectoryId": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryId"
            },
            {
              "description": "The identifier of the AWS Directory Service directory for the WorkSpace. You can use <a>DescribeWorkspaceDirectories</a> to list the available directories."
            }
          ]
        },
        "RootVolumeEncryptionEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "Indicates whether the data stored on the root volume is encrypted."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "The tags for the WorkSpace."
            }
          ]
        },
        "UserName": {
          "allOf": [
            {
              "$ref": "#/definitions/UserName"
            },
            {
              "description": "The user name of the user for the WorkSpace. This user name must exist in the AWS Directory Service directory for the WorkSpace."
            }
          ]
        },
        "UserVolumeEncryptionEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanObject"
            },
            {
              "description": "Indicates whether the data stored on the user volume is encrypted."
            }
          ]
        },
        "VolumeEncryptionKey": {
          "allOf": [
            {
              "$ref": "#/definitions/VolumeEncryptionKey"
            },
            {
              "description": "The symmetric AWS KMS customer master key (CMK) used to encrypt data stored on your WorkSpace. Amazon WorkSpaces does not support asymmetric CMKs."
            }
          ]
        },
        "WorkspaceProperties": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkspaceProperties"
            },
            {
              "description": "The WorkSpace properties."
            }
          ]
        }
      },
      "required": [
        "DirectoryId",
        "UserName",
        "BundleId"
      ],
      "type": "object"
    },
    "WorkspaceRequestList": {
      "items": {
        "$ref": "#/definitions/WorkspaceRequest"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "WorkspaceState": {
      "enum": [
        "PENDING",
        "AVAILABLE",
        "IMPAIRED",
        "UNHEALTHY",
        "REBOOTING",
        "STARTING",
        "REBUILDING",
        "RESTORING",
        "MAINTENANCE",
        "ADMIN_MAINTENANCE",
        "TERMINATING",
        "TERMINATED",
        "SUSPENDED",
        "UPDATING",
        "STOPPING",
        "STOPPED",
        "ERROR"
      ],
      "type": "string"
    },
    "WorkspacesDefaultRoleNotFoundException": {},
    "WorkspacesIpGroup": {
      "description": "Describes an IP access control group.",
      "properties": {
        "groupDesc": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGroupDesc"
            },
            {
              "description": "The description of the group."
            }
          ]
        },
        "groupId": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGroupId"
            },
            {
              "description": "The identifier of the group."
            }
          ]
        },
        "groupName": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGroupName"
            },
            {
              "description": "The name of the group."
            }
          ]
        },
        "userRules": {
          "allOf": [
            {
              "$ref": "#/definitions/IpRuleList"
            },
            {
              "description": "The rules."
            }
          ]
        }
      },
      "type": "object"
    },
    "WorkspacesIpGroupsList": {
      "items": {
        "$ref": "#/definitions/WorkspacesIpGroup"
      },
      "type": "array"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/workspaces/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}