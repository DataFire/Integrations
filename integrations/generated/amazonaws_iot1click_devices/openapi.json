{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "Describes all of the AWS IoT 1-Click device-related API operations for the service.\n Also provides sample requests, responses, and errors for the supported web services\n protocols.",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS IoT 1-Click Devices Service",
    "version": "2018-05-14",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot1click-devices-2018-05-14.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "iot1click-devices",
    "x-datafire": {
      "name": "amazonaws_iot1click_devices",
      "type": "openapi"
    }
  },
  "host": "devices.iot1click.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/claims/{claimCode}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The claim code, starting with \"C-\", as provided by the device manufacturer.",
            "in": "path",
            "name": "claimCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ClaimDevicesByClaimCodeResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          }
        },
        "description": "Adds device(s) to your account (i.e., claim one or more devices) if and only if you\n received a claim code with the device(s).",
        "operationId": "ClaimDevicesByClaimCode"
      }
    },
    "/devices": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The type of the device, such as \"button\".",
            "in": "query",
            "name": "deviceType",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return per request. If not set, a default value of\n 100 is used.",
            "in": "query",
            "maximum": 250,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDevicesResponse"
            }
          },
          "480": {
            "description": "RangeNotSatisfiableException",
            "schema": {
              "$ref": "#/definitions/RangeNotSatisfiableException"
            }
          },
          "481": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": "Lists the 1-Click compatible devices associated with your AWS account.",
        "operationId": "ListDevices"
      }
    },
    "/devices/{deviceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier of the device.",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeDeviceResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": "Given a device ID, returns a DescribeDeviceResponse object describing the\n details of the device.",
        "operationId": "DescribeDevice"
      }
    },
    "/devices/{deviceId}/events#fromTimeStamp&toTimeStamp": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier of the device.",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The start date for the device event query, in ISO8061 format. For example,\n 2018-03-28T15:45:12.880Z\n ",
            "format": "date-time",
            "in": "query",
            "name": "fromTimeStamp",
            "required": true,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return per request. If not set, a default value of\n 100 is used.",
            "in": "query",
            "maximum": 250,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The end date for the device event query, in ISO8061 format. For example,\n 2018-03-28T15:45:12.880Z\n ",
            "format": "date-time",
            "in": "query",
            "name": "toTimeStamp",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDeviceEventsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "RangeNotSatisfiableException",
            "schema": {
              "$ref": "#/definitions/RangeNotSatisfiableException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": "Using a device ID, returns a DeviceEventsResponse object containing an\n array of events for the device.",
        "operationId": "ListDeviceEvents"
      }
    },
    "/devices/{deviceId}/finalize-claim": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier of the device.",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/__string"
                  },
                  "description": "<p>A collection of key/value pairs defining the resource tags. For example, {\n \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see <a href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\">AWS\n Tagging Strategies</a>.</p><p>\n \n </p>",
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FinalizeDeviceClaimResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "PreconditionFailedException",
            "schema": {
              "$ref": "#/definitions/PreconditionFailedException"
            }
          },
          "484": {
            "description": "ResourceConflictException",
            "schema": {
              "$ref": "#/definitions/ResourceConflictException"
            }
          }
        },
        "description": "<p>Given a device ID, finalizes the claim request for the associated device.</p><note>\n <p>Claiming a device consists of initiating a claim, then publishing a device event,\n and finalizing the claim. For a device of type button, a device event can\n be published by simply clicking the device.</p>\n </note>",
        "operationId": "FinalizeDeviceClaim"
      }
    },
    "/devices/{deviceId}/initiate-claim": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier of the device.",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InitiateDeviceClaimResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "ResourceConflictException",
            "schema": {
              "$ref": "#/definitions/ResourceConflictException"
            }
          }
        },
        "description": "<p>Given a device ID, initiates a claim request for the associated device.</p><note>\n <p>Claiming a device consists of initiating a claim, then publishing a device event,\n and finalizing the claim. For a device of type button, a device event can\n be published by simply clicking the device.</p>\n </note>",
        "operationId": "InitiateDeviceClaim"
      }
    },
    "/devices/{deviceId}/methods": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier of the device.",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetDeviceMethodsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": "Given a device ID, returns the invokable methods associated with the device.",
        "operationId": "GetDeviceMethods"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier of the device.",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "deviceMethod": {
                  "description": "The device method to invoke.",
                  "properties": {
                    "DeviceType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The type of the device, such as \"button\".",
                          "xml": {
                            "name": "deviceType"
                          }
                        }
                      ]
                    },
                    "MethodName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The name of the method applicable to the deviceType.",
                          "xml": {
                            "name": "methodName"
                          }
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "deviceMethodParameters": {
                  "description": "A JSON encoded string containing the device method request parameters.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvokeDeviceMethodResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "PreconditionFailedException",
            "schema": {
              "$ref": "#/definitions/PreconditionFailedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "RangeNotSatisfiableException",
            "schema": {
              "$ref": "#/definitions/RangeNotSatisfiableException"
            }
          },
          "485": {
            "description": "ResourceConflictException",
            "schema": {
              "$ref": "#/definitions/ResourceConflictException"
            }
          }
        },
        "description": "Given a device ID, issues a request to invoke a named device method (with possible\n parameters). See the \"Example POST\" code snippet below.",
        "operationId": "InvokeDeviceMethod"
      }
    },
    "/devices/{deviceId}/state": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier of the device.",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "enabled": {
                  "description": "If true, the device is enabled. If false, the device is\n disabled.",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateDeviceStateResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": "Using a Boolean value (true or false), this operation\n enables or disables the device given a device ID.",
        "operationId": "UpdateDeviceState"
      }
    },
    "/devices/{deviceId}/unclaim": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier of the device.",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UnclaimDeviceResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": "Disassociates a device from your AWS account using its device ID.",
        "operationId": "UnclaimDevice"
      }
    },
    "/tags/{resource-arn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the resource.",
            "in": "path",
            "name": "resource-arn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": "Lists the tags associated with the specified resource ARN.",
        "operationId": "ListTagsForResource"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the resource.",
            "in": "path",
            "name": "resource-arn",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/__string"
                  },
                  "description": "<p>A collection of key/value pairs defining the resource tags. For example, {\n \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see <a href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\">AWS\n Tagging Strategies</a>.</p><p>\n \n </p>",
                  "type": "object"
                }
              },
              "required": [
                "tags"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": "Adds or updates the tags associated with the resource ARN. See <a href=\"https://docs.aws.amazon.com/iot-1-click/latest/developerguide/1click-appendix.html#1click-limits\">AWS IoT 1-Click Service Limits</a> for the maximum number of tags allowed per\n resource.",
        "operationId": "TagResource"
      }
    },
    "/tags/{resource-arn}#tagKeys": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the resource.",
            "in": "path",
            "name": "resource-arn",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "A collections of tag keys. For example, {\"key1\",\"key2\"}",
            "in": "query",
            "items": {
              "$ref": "#/definitions/__string"
            },
            "name": "tagKeys",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": "Using tag keys, deletes the tags (key/value pairs) associated with the specified\n resource ARN.",
        "operationId": "UntagResource"
      }
    }
  },
  "definitions": {
    "Attributes": {
      "properties": {},
      "type": "object"
    },
    "ClaimDevicesByClaimCodeRequest": {
      "properties": {},
      "title": "ClaimDevicesByClaimCodeRequest",
      "type": "object"
    },
    "ClaimDevicesByClaimCodeResponse": {
      "properties": {
        "ClaimCode": {
          "allOf": [
            {
              "$ref": "#/definitions/__stringMin12Max40"
            },
            {
              "description": "The claim code provided by the device manufacturer.",
              "xml": {
                "name": "claimCode"
              }
            }
          ]
        },
        "Total": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The total number of devices associated with the claim code that has been processed in\n the claim request.",
              "xml": {
                "name": "total"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeDeviceRequest": {
      "properties": {},
      "title": "DescribeDeviceRequest",
      "type": "object"
    },
    "DescribeDeviceResponse": {
      "properties": {
        "DeviceDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/DeviceDescription"
            },
            {
              "description": "Device details.",
              "xml": {
                "name": "deviceDescription"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "Device": {
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/Attributes"
            },
            {
              "description": "The user specified attributes associated with the device for an event.",
              "xml": {
                "name": "attributes"
              }
            }
          ]
        },
        "DeviceId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier of the device.",
              "xml": {
                "name": "deviceId"
              }
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The device type, such as \"button\".",
              "xml": {
                "name": "type"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "DeviceAttributes": {
      "additionalProperties": {
        "$ref": "#/definitions/__string"
      },
      "description": "\n DeviceAttributes is a string-to-string map specified by the user.",
      "type": "object"
    },
    "DeviceDescription": {
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ARN of the device.",
              "xml": {
                "name": "arn"
              }
            }
          ]
        },
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/DeviceAttributes"
            },
            {
              "description": "An array of zero or more elements of DeviceAttribute objects providing\n user specified device attributes.",
              "xml": {
                "name": "attributes"
              }
            }
          ]
        },
        "DeviceId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier of the device.",
              "xml": {
                "name": "deviceId"
              }
            }
          ]
        },
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "A Boolean value indicating whether or not the device is enabled.",
              "xml": {
                "name": "enabled"
              }
            }
          ]
        },
        "RemainingLife": {
          "allOf": [
            {
              "$ref": "#/definitions/__doubleMin0Max100"
            },
            {
              "description": "A value between 0 and 1 inclusive, representing the fraction of life remaining for the\n device.",
              "xml": {
                "name": "remainingLife"
              }
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/__mapOf__string"
            },
            {
              "description": "The tags currently associated with the AWS IoT 1-Click device.",
              "xml": {
                "name": "tags"
              }
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The type of the device, such as \"button\".",
              "xml": {
                "name": "type"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "DeviceEvent": {
      "properties": {
        "Device": {
          "allOf": [
            {
              "$ref": "#/definitions/Device"
            },
            {
              "description": "An object representing the device associated with the event.",
              "xml": {
                "name": "device"
              }
            }
          ]
        },
        "StdEvent": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A serialized JSON object representing the device-type specific event.",
              "xml": {
                "name": "stdEvent"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "DeviceMethod": {
      "properties": {
        "DeviceType": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The type of the device, such as \"button\".",
              "xml": {
                "name": "deviceType"
              }
            }
          ]
        },
        "MethodName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the method applicable to the deviceType.",
              "xml": {
                "name": "methodName"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "FinalizeDeviceClaimRequest": {
      "properties": {
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/__mapOf__string"
            },
            {
              "description": "<p>A collection of key/value pairs defining the resource tags. For example, {\n \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see <a href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\">AWS\n Tagging Strategies</a>.</p><p>\n \n </p>",
              "xml": {
                "name": "tags"
              }
            }
          ]
        }
      },
      "title": "FinalizeDeviceClaimRequest",
      "type": "object"
    },
    "FinalizeDeviceClaimResponse": {
      "properties": {
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The device's final claim state.",
              "xml": {
                "name": "state"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "ForbiddenException": {},
    "GetDeviceMethodsRequest": {
      "properties": {},
      "title": "GetDeviceMethodsRequest",
      "type": "object"
    },
    "GetDeviceMethodsResponse": {
      "properties": {
        "DeviceMethods": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfDeviceMethod"
            },
            {
              "description": "List of available device APIs.",
              "xml": {
                "name": "deviceMethods"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "InitiateDeviceClaimRequest": {
      "properties": {},
      "title": "InitiateDeviceClaimRequest",
      "type": "object"
    },
    "InitiateDeviceClaimResponse": {
      "properties": {
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The device's final claim state.",
              "xml": {
                "name": "state"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "InternalFailureException": {},
    "InvalidRequestException": {},
    "InvokeDeviceMethodRequest": {
      "properties": {
        "DeviceMethod": {
          "allOf": [
            {
              "$ref": "#/definitions/DeviceMethod"
            },
            {
              "description": "The device method to invoke.",
              "xml": {
                "name": "deviceMethod"
              }
            }
          ]
        },
        "DeviceMethodParameters": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A JSON encoded string containing the device method request parameters.",
              "xml": {
                "name": "deviceMethodParameters"
              }
            }
          ]
        }
      },
      "title": "InvokeDeviceMethodRequest",
      "type": "object"
    },
    "InvokeDeviceMethodResponse": {
      "properties": {
        "DeviceMethodResponse": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A JSON encoded string containing the device method response.",
              "xml": {
                "name": "deviceMethodResponse"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "ListDeviceEventsRequest": {
      "properties": {},
      "title": "ListDeviceEventsRequest",
      "type": "object"
    },
    "ListDeviceEventsResponse": {
      "properties": {
        "Events": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfDeviceEvent"
            },
            {
              "description": "An array of zero or more elements describing the event(s) associated with the\n device.",
              "xml": {
                "name": "events"
              }
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The token to retrieve the next set of results.",
              "xml": {
                "name": "nextToken"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "ListDevicesRequest": {
      "properties": {},
      "title": "ListDevicesRequest",
      "type": "object"
    },
    "ListDevicesResponse": {
      "properties": {
        "Devices": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfDeviceDescription"
            },
            {
              "description": "A list of devices.",
              "xml": {
                "name": "devices"
              }
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The token to retrieve the next set of results.",
              "xml": {
                "name": "nextToken"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "ListTagsForResourceRequest": {
      "properties": {},
      "title": "ListTagsForResourceRequest",
      "type": "object"
    },
    "ListTagsForResourceResponse": {
      "properties": {
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/__mapOf__string"
            },
            {
              "description": "<p>A collection of key/value pairs defining the resource tags. For example, {\n \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see <a href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\">AWS\n Tagging Strategies</a>.</p><p>\n \n </p>",
              "xml": {
                "name": "tags"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "MaxResults": {
      "maximum": 250,
      "minimum": 1,
      "type": "integer"
    },
    "PreconditionFailedException": {},
    "RangeNotSatisfiableException": {},
    "ResourceConflictException": {},
    "ResourceNotFoundException": {},
    "TagResourceRequest": {
      "properties": {
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/__mapOf__string"
            },
            {
              "description": "<p>A collection of key/value pairs defining the resource tags. For example, {\n \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see <a href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\">AWS\n Tagging Strategies</a>.</p><p>\n \n </p>",
              "xml": {
                "name": "tags"
              }
            }
          ]
        }
      },
      "required": [
        "Tags"
      ],
      "title": "TagResourceRequest",
      "type": "object"
    },
    "UnclaimDeviceRequest": {
      "properties": {},
      "title": "UnclaimDeviceRequest",
      "type": "object"
    },
    "UnclaimDeviceResponse": {
      "properties": {
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The device's final claim state.",
              "xml": {
                "name": "state"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "UntagResourceRequest": {
      "properties": {},
      "title": "UntagResourceRequest",
      "type": "object"
    },
    "UpdateDeviceStateRequest": {
      "properties": {
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "If true, the device is enabled. If false, the device is\n disabled.",
              "xml": {
                "name": "enabled"
              }
            }
          ]
        }
      },
      "title": "UpdateDeviceStateRequest",
      "type": "object"
    },
    "UpdateDeviceStateResponse": {
      "properties": {},
      "type": "object"
    },
    "__boolean": {
      "type": "boolean"
    },
    "__doubleMin0Max100": {
      "format": "double",
      "type": "number"
    },
    "__integer": {
      "type": "integer"
    },
    "__listOfDeviceDescription": {
      "items": {
        "$ref": "#/definitions/DeviceDescription"
      },
      "type": "array"
    },
    "__listOfDeviceEvent": {
      "items": {
        "$ref": "#/definitions/DeviceEvent"
      },
      "type": "array"
    },
    "__listOfDeviceMethod": {
      "items": {
        "$ref": "#/definitions/DeviceMethod"
      },
      "type": "array"
    },
    "__listOf__string": {
      "items": {
        "$ref": "#/definitions/__string"
      },
      "type": "array"
    },
    "__mapOf__string": {
      "additionalProperties": {
        "$ref": "#/definitions/__string"
      },
      "type": "object"
    },
    "__string": {
      "type": "string"
    },
    "__stringMin12Max40": {
      "maxLength": 40,
      "minLength": 12,
      "type": "string"
    },
    "__timestampIso8601": {
      "format": "date-time",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/iot1click/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}