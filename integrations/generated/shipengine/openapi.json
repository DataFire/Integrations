{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "sales@shipengine.com",
      "name": "ShipEngine Sales & Support",
      "url": "https://www.shipengine.com/contact/",
      "x-phone": "1-512-856-5379"
    },
    "description": "ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.\n\nEach of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.\n\n## Getting Started\nIf you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics. Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.\n\nHere are some step-by-step **tutorials** to get you started:\n\n  - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)\n  - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)\n  - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)\n  - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)\n\n\n## Shipping Labels for Every Major Carrier\nShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).\n\n\n## Real-Time Package Tracking\nWith ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.\n\n\n## Compare Shipping Costs Across Carriers\nMake sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.\n\n\n## Worldwide Address Validation\nShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others.\n",
    "termsOfService": "https://www.shipengine.com/terms-of-service/",
    "title": "ShipEngine API",
    "version": "1.1.202006302006",
    "x-apisguru-categories": [
      "transport"
    ],
    "x-logo": {
      "altText": "ShipEngine logo",
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_www.shipengine.com_wp-content_themes_shipengine_assets_img_logo.svg"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://raw.githubusercontent.com/ShipEngine/shipengine-openapi/master/openapi.yaml",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "shipengine.com",
    "x-datafire": {
      "name": "shipengine",
      "type": "openapi"
    }
  },
  "host": "api.shipengine.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/addresses/recognize": {
      "description": "Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine's address-recognition API helps you extract meaningful address data (e.g. recipient name, address line 1, line 2, city, postal code) from this unstructured text.\n",
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The only required field is `text`, which is the text to be parsed. You can optionally also provide an `address` containing already-known values. For example, you may already know the recipient's name, city, and country, and only want to parse the street address into separate lines.\n",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/parse_address_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the parsed address, as well as a confidence score and a list of all the entities that were recognized in the text.\n",
            "schema": {
              "$ref": "#/definitions/parse_address_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "addresses"
        ],
        "description": "The address-recognition API makes it easy for you to extract address data from unstructured text, including the recipient name, line 1, line 2, city, postal code, and more.\n\nData often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine's address-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed address data is returned in the same structure that's used for other ShipEngine APIs, such as address validation, rate quotes, and shipping labels.\n\n> **Note:** Address recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland.\n",
        "operationId": "parse_address",
        "summary": "Parse an address"
      },
      "summary": "Parse an address"
    },
    "/v1/addresses/validate": {
      "description": "Address validation ensures accurate addresses and can lead to reduced shipping costs by preventing address correction surcharges.\nShipEngine cross references multiple databases to validate addresses and identify potential deliverability issues.\n",
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/validate_address_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/validate_address_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "addresses"
        ],
        "description": "Address validation ensures accurate addresses and can lead to reduced shipping costs by preventing address correction surcharges.\nShipEngine cross references multiple databases to validate addresses and identify potential deliverability issues.\n",
        "operationId": "validate_address",
        "summary": "Validate An Address"
      },
      "summary": "Address Validation"
    },
    "/v1/batches": {
      "description": "Batches are an advanced feature of ShipEngine designed for users who need to generate hundreds or thousands of labels at a time.\nWhen ShipEngine generates labels it relies on many carriers, their services, their dependencies, and a number of other variables\nto fulfill your requests; those requests can take a few minutes for us to get back to you.\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The possible batch status values",
            "enum": [
              "open",
              "queued",
              "processing",
              "completed",
              "completed_with_errors",
              "archived",
              "notifying",
              "invalid"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.\n",
            "format": "int32",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer",
            "x-example": 2
          },
          {
            "default": 25,
            "description": "The number of results to return per response.",
            "format": "int32",
            "in": "query",
            "minimum": 1,
            "name": "page_size",
            "required": false,
            "type": "integer",
            "x-example": 50
          },
          {
            "default": "desc",
            "description": "Controls the sort order of the query.",
            "in": "query",
            "name": "sort_dir",
            "required": false
          },
          {
            "description": "The possible batches sort by values",
            "enum": [
              "ship_date",
              "processed_at"
            ],
            "in": "query",
            "name": "sort_by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/list_batches_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "batches"
        ],
        "description": "List Batches associated with your Shipengine account",
        "operationId": "list_batches",
        "summary": "List Batches"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_batch_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested object creation was a success.",
            "schema": {
              "$ref": "#/definitions/create_batch_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "batches"
        ],
        "description": "Create a Batch",
        "operationId": "create_batch",
        "summary": "Create A Batch"
      },
      "summary": "Batches"
    },
    "/v1/batches/external_batch_id/{external_batch_id}": {
      "parameters": [
        {
          "in": "path",
          "name": "external_batch_id",
          "required": true,
          "type": "string",
          "x-example": "13553d7f-3c87-4771-bae1-c49bacef11cb"
        }
      ],
      "description": "Retrive a batch from an external batch ID",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_batch_by_external_id_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "batches"
        ],
        "description": "Get Batch By External ID",
        "operationId": "get_batch_by_external_id",
        "summary": "Get Batch By External ID"
      },
      "summary": "External Batch ID"
    },
    "/v1/batches/{batch_id}": {
      "parameters": [
        {
          "description": "Batch ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "batch_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "batches"
        ],
        "description": "Delete Batch By Id",
        "operationId": "delete_batch",
        "summary": "Delete Batch By Id"
      },
      "description": "Check the status of your batch by retrieving it with a Batch ID.",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_batch_by_id_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "batches"
        ],
        "description": "Get Batch By ID",
        "operationId": "get_batch_by_id",
        "summary": "Get Batch By ID"
      },
      "put": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "batches"
        ],
        "description": "Update Batch By Id",
        "operationId": "update_batch",
        "summary": "Update Batch By Id"
      },
      "summary": "Batch By ID"
    },
    "/v1/batches/{batch_id}/add": {
      "parameters": [
        {
          "description": "Batch ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "batch_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "You can check your balance for a particular carrier by calling [List Carriers](https://www.shipengine.com/docs/reference/list-carriers/) endpoint.\nFor any carrier account where requires_funded_amount is true, you can add funds.\n",
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/add_to_batch_request_body"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "batches"
        ],
        "description": "Add a Shipment or Rate to a Batch",
        "operationId": "add_to_batch",
        "summary": "Add to a Batch"
      },
      "summary": "Add Funds to a Carrier"
    },
    "/v1/batches/{batch_id}/errors": {
      "parameters": [
        {
          "description": "Batch ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "batch_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Error handling in batches are handled differently than in a single synchronous request.\nYou must retrieve the status of your batch by [getting a batch](https://www.shipengine.com/docs/reference/get-batch-by-id/) and getting an overview of the statuses or you can list errors directly here below to get detailed information about the errors.\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 1,
            "description": "Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.\n",
            "format": "int32",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer",
            "x-example": 2
          },
          {
            "format": "int32",
            "in": "query",
            "minimum": 1,
            "name": "pagesize",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/list_batch_errors_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "batches"
        ],
        "description": "Error handling in batches are handled differently than in a single synchronous request.\nYou must retrieve the status of your batch by [getting a batch](https://www.shipengine.com/docs/reference/get-batch-by-id/) and getting an overview of the statuses or you can list errors directly here below to get detailed information about the errors.\n",
        "operationId": "list_batch_errors",
        "summary": "Get Batch Errors"
      },
      "summary": "Batch Errors"
    },
    "/v1/batches/{batch_id}/process/labels": {
      "parameters": [
        {
          "description": "Batch ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "batch_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Process Batch ID Labels",
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/process_batch_request_body"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "batches"
        ],
        "description": "Process Batch ID Labels",
        "operationId": "process_batch",
        "summary": "Process Batch ID Labels"
      },
      "summary": "Process Batch ID Labels"
    },
    "/v1/batches/{batch_id}/remove": {
      "parameters": [
        {
          "description": "Batch ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "batch_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Remove a list of shipments from a batch",
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/remove_from_batch_request_body"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "batches"
        ],
        "description": "Remove a shipment or rate from a batch",
        "operationId": "remove_from_batch",
        "summary": "Remove From Batch"
      },
      "summary": "Remove Batch By ID"
    },
    "/v1/carriers": {
      "description": "Carriers are a company or individual that specializes in transporting freight from one destination to another.\nShipengine allows you to easily integrate with multiple carriers so you can chose the shipping option that is right for you.\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_carriers_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "carriers"
        ],
        "description": "List all carriers that have been added to this account",
        "operationId": "list_carriers",
        "summary": "List Carriers"
      },
      "summary": "Carriers"
    },
    "/v1/carriers/{carrier_id}": {
      "parameters": [
        {
          "description": "Carrier ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "carrier_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string",
          "x-example": "se-28529731"
        }
      ],
      "description": "Perform actions and get information on individual carriers connected with your account.",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_carrier_by_id_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "carriers"
        ],
        "description": "Retrive carrier info by ID",
        "operationId": "get_carrier_by_id",
        "summary": "Get Carrier By ID"
      },
      "summary": "Individual carriers"
    },
    "/v1/carriers/{carrier_id}/add_funds": {
      "parameters": [
        {
          "description": "Carrier ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "carrier_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string",
          "x-example": "se-28529731"
        }
      ],
      "description": "All carriers require that funds to be attached to an account to ensure payment for the various services they provide to their customers.",
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/add_funds_to_carrier_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/add_funds_to_carrier_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "carriers"
        ],
        "description": "Add Funds To A Carrier",
        "operationId": "add_funds_to_carrier",
        "summary": "Add Funds To Carrier"
      },
      "summary": "Carrier Funds"
    },
    "/v1/carriers/{carrier_id}/options": {
      "parameters": [
        {
          "description": "Carrier ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "carrier_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string",
          "x-example": "se-28529731"
        }
      ],
      "description": "Carriers support various options for particular shipments. Ex. (non-machinable, is_alcohol, fragile, etc)",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_carrier_options_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "carriers"
        ],
        "description": "Get a list of the options available for the carrier",
        "operationId": "get_carrier_options",
        "summary": "Get Carrier Options"
      },
      "summary": "Carrier Options"
    },
    "/v1/carriers/{carrier_id}/packages": {
      "parameters": [
        {
          "description": "Carrier ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "carrier_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string",
          "x-example": "se-28529731"
        }
      ],
      "description": "Carriers support many different package types, Shipengine supports retrieving all available package so that\nyou can best determine what is right for your particular shipment.\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/list_carrier_package_types_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "carriers"
        ],
        "description": "List the package types associated with the carrier",
        "operationId": "list_carrier_package_types",
        "summary": "List Carrier Package Types"
      },
      "summary": "Carrier Packages"
    },
    "/v1/carriers/{carrier_id}/services": {
      "parameters": [
        {
          "description": "Carrier ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "carrier_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string",
          "x-example": "se-28529731"
        }
      ],
      "description": "Carrier services usually refer to the various shipping options that a carrier provides to its customers.\nEx. Priority mail, overnight, international\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/list_carrier_services_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "carriers"
        ],
        "description": "List the services associated with the carrier ID",
        "operationId": "list_carrier_services",
        "summary": "List Carrier Services"
      },
      "summary": "Carrier Services"
    },
    "/v1/connections/carriers/{carrier_name}": {
      "parameters": [
        {
          "description": "The carrier name, such as `stamps_com`, `ups`, `fedex`, or `dhl_express`.",
          "enum": [
            "access_worldwide",
            "amazon_buy_shipping",
            "apc",
            "asendia",
            "australia_post",
            "canada_post",
            "dhl_ecommerce",
            "dhl_express",
            "dhl_express_au",
            "dhl_express_ca",
            "dhl_express_uk",
            "dpd",
            "endicia",
            "fedex",
            "fedex_uk",
            "firstmile",
            "globegistics",
            "imex",
            "newgistics",
            "ontrac",
            "purolator_canada",
            "royal_mail",
            "rr_donnelley",
            "seko",
            "sendle",
            "stamps_com",
            "ups"
          ],
          "in": "path",
          "name": "carrier_name",
          "required": true,
          "type": "string",
          "x-example": "dhl_express"
        }
      ],
      "description": "Carrier connections",
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/connect_carrier_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/connect_carrier_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "carrier_accounts"
        ],
        "description": "Connect a carrier account",
        "operationId": "connect_carrier",
        "summary": "Connect a carrier account"
      },
      "summary": "Carrier connections"
    },
    "/v1/connections/carriers/{carrier_name}/{carrier_id}": {
      "parameters": [
        {
          "description": "The carrier name, such as `stamps_com`, `ups`, `fedex`, or `dhl_express`.",
          "enum": [
            "access_worldwide",
            "amazon_buy_shipping",
            "apc",
            "asendia",
            "australia_post",
            "canada_post",
            "dhl_ecommerce",
            "dhl_express",
            "dhl_express_au",
            "dhl_express_ca",
            "dhl_express_uk",
            "dpd",
            "endicia",
            "fedex",
            "fedex_uk",
            "firstmile",
            "globegistics",
            "imex",
            "newgistics",
            "ontrac",
            "purolator_canada",
            "royal_mail",
            "rr_donnelley",
            "seko",
            "sendle",
            "stamps_com",
            "ups"
          ],
          "in": "path",
          "name": "carrier_name",
          "required": true,
          "type": "string",
          "x-example": "dhl_express"
        },
        {
          "description": "Carrier ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "carrier_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string",
          "x-example": "se-28529731"
        }
      ],
      "delete": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "carrier_accounts"
        ],
        "description": "Disconnect a carrier",
        "operationId": "disconnect_carrier",
        "summary": "Disconnect a carrier"
      },
      "description": "Disconnect a carrier",
      "summary": "Disconnect a carrier"
    },
    "/v1/connections/carriers/{carrier_name}/{carrier_id}/settings": {
      "parameters": [
        {
          "description": "The carrier name, such as `stamps_com`, `ups`, `fedex`, or `dhl_express`.",
          "enum": [
            "dhl_express",
            "fedex",
            "newgistics",
            "ups"
          ],
          "in": "path",
          "name": "carrier_name",
          "required": true,
          "type": "string",
          "x-example": "dhl_express"
        },
        {
          "description": "Carrier ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "carrier_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string",
          "x-example": "se-28529731"
        }
      ],
      "description": "Carrier settings",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_carrier_settings_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "carrier_accounts"
        ],
        "description": "Get carrier settings",
        "operationId": "get_carrier_settings",
        "summary": "Get carrier settings"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_carrier_settings_request_body"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "carrier_accounts"
        ],
        "description": "Update carrier settings",
        "operationId": "update_carrier_settings",
        "summary": "Update carrier settings"
      },
      "summary": "Carrier settings"
    },
    "/v1/connections/insurance/shipsurance": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success",
            "schema": {
              "$ref": "#/definitions/disconnect_insurer_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "insurance"
        ],
        "description": "Disconnect a Shipsurance Account",
        "operationId": "disconnect_insurer",
        "summary": "Disconnect a Shipsurance Account"
      },
      "description": "Shipsurance Connection",
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/connect_insurer_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success",
            "schema": {
              "$ref": "#/definitions/connect_insurer_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "insurance"
        ],
        "description": "Connect a Shipsurance Account",
        "operationId": "connect_insurer",
        "summary": "Connect a Shipsurance Account"
      },
      "summary": "Shipsurance Connection"
    },
    "/v1/downloads/{dir}/{subdir}/{filename}": {
      "parameters": [
        {
          "in": "path",
          "name": "subdir",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "filename",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "dir",
          "required": true,
          "type": "string"
        }
      ],
      "description": "This endpoint is used to download forms that are generated in the various pdf, png, zpl formats\nsuch as labels and batches\n",
      "get": {
        "produces": [
          "application/pdf",
          "application/zpl",
          "image/png",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "download",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success",
            "schema": {
              "$ref": "#/definitions/download_file_pdf_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "downloads"
        ],
        "description": "Get File",
        "operationId": "download_file",
        "summary": "Download File"
      },
      "summary": "File Download"
    },
    "/v1/environment/webhooks": {
      "description": "ShipEngine exposes asynchronous operations for long running operations such as batch labels and rates.\nWebhooks allow the ShipEngine servers to contact your servers when an operation changes state, such as a batch label creation completion.\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/list_webhooks_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "webhooks"
        ],
        "description": "List all webhooks currently enabled for the account.",
        "operationId": "list_webhooks",
        "summary": "List Webhooks"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_webhook_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/create_webhook_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "409": {
            "description": "The request conflicts with an existing resource.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "webhooks"
        ],
        "description": "Create a webook for specific events in the environment.",
        "operationId": "create_webhook",
        "summary": "Create a Webhook"
      },
      "summary": "Webhooks"
    },
    "/v1/environment/webhooks/{webhook_id}": {
      "parameters": [
        {
          "description": "Webhook ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "webhook_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "webhooks"
        ],
        "description": "Delete a webhook",
        "operationId": "delete_webhook",
        "summary": "Delete Webhook By ID"
      },
      "description": "Retrieve, update, and delete information for individual webhooks",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_webhook_by_id_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "webhooks"
        ],
        "description": "Retrieve individual webhook by an ID",
        "operationId": "get_webhook_by_id",
        "summary": "Get Webhook By ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_webhook_request_body"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "webhooks"
        ],
        "description": "Update the webhook url property",
        "operationId": "update_webhook",
        "summary": "Update a Webhook"
      },
      "summary": "Webhook"
    },
    "/v1/insurance/shipsurance/add_funds": {
      "description": "[Shipsurance](https://www.shipsurance.com/) is a shipping insurance company offering coverage for shipments sent via the major shipping carriers worldwide.\n",
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/add_funds_to_insurance_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/add_funds_to_insurance_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "insurance"
        ],
        "description": "You may need to auto fund your account from time to time. For example, if you don't normally ship items over $100,\nand may want to add funds to insurance rather than keeping the account funded.\n",
        "operationId": "add_funds_to_insurance",
        "summary": "Add Funds To Insurance"
      },
      "summary": "Shipsurance"
    },
    "/v1/insurance/shipsurance/balance": {
      "description": "[Shipsurance](https://www.shipsurance.com/) is a shipping insurance company offering coverage for shipments sent via the major shipping carriers worldwide.\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_insurance_balance_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "insurance"
        ],
        "description": "Retrieve the balance of your Shipsurance account.",
        "operationId": "get_insurance_balance",
        "summary": "Get Insurance Funds Balance"
      },
      "summary": "Shipsurance"
    },
    "/v1/labels": {
      "description": "Print shipping labels for any of the top global carriers in minutes—instead of weeks. Simply [connect your existing carrier accounts](https://www.shipengine.com/docs/carriers/setup/)\nin the API dashboard, and then [begin creating labels](https://www.shipengine.com/docs/shipping/use-a-carrier-service/).\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return labels that are currently in the specified status",
            "enum": [
              "processing",
              "completed",
              "error",
              "voided"
            ],
            "in": "query",
            "name": "label_status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return labels for a specific [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/)",
            "in": "query",
            "name": "service_code",
            "pattern": "^[a-z0-9]+(_[a-z0-9-]+)* ?$",
            "required": false,
            "type": "string",
            "x-example": "usps_first_class_mail"
          },
          {
            "description": "Only return labels for a specific [carrier account](https://www.shipengine.com/docs/carriers/setup/)",
            "in": "query",
            "maxLength": 25,
            "minLength": 1,
            "name": "carrier_id",
            "pattern": "^se(-[a-z0-9]+)+$",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return labels with a specific tracking number",
            "in": "query",
            "minLength": 1,
            "name": "tracking_number",
            "required": false,
            "type": "string",
            "x-example": 9.405511899223197e+21
          },
          {
            "description": "Only return labels that were created in a specific [batch](https://www.shipengine.com/docs/labels/bulk/)",
            "in": "query",
            "maxLength": 25,
            "minLength": 1,
            "name": "batch_id",
            "pattern": "^se(-[a-z0-9]+)+$",
            "required": false,
            "type": "string"
          },
          {
            "description": "Rate ID",
            "in": "query",
            "maxLength": 25,
            "minLength": 1,
            "name": "rate_id",
            "pattern": "^se(-[a-z0-9]+)+$",
            "required": false,
            "type": "string"
          },
          {
            "description": "Shipment ID",
            "in": "query",
            "maxLength": 25,
            "minLength": 1,
            "name": "shipment_id",
            "pattern": "^se(-[a-z0-9]+)+$",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return labels that originate from a specific [warehouse](https://www.shipengine.com/docs/shipping/ship-from-a-warehouse/)",
            "in": "query",
            "maxLength": 25,
            "minLength": 1,
            "name": "warehouse_id",
            "pattern": "^se(-[a-z0-9]+)+$",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return labels that were created on or after a specific date/time",
            "format": "date-time",
            "in": "query",
            "name": "created_at_start",
            "required": false,
            "type": "string",
            "x-example": "2019-03-12T19:24:13.657Z"
          },
          {
            "description": "Only return labels that were created on or before a specific date/time",
            "format": "date-time",
            "in": "query",
            "name": "created_at_end",
            "required": false,
            "type": "string",
            "x-example": "2019-03-12T19:24:13.657Z"
          },
          {
            "default": 1,
            "description": "Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.\n",
            "format": "int32",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer",
            "x-example": 2
          },
          {
            "default": 25,
            "description": "The number of results to return per response.",
            "format": "int32",
            "in": "query",
            "minimum": 1,
            "name": "page_size",
            "required": false,
            "type": "integer",
            "x-example": 50
          },
          {
            "default": "desc",
            "description": "Controls the sort order of the query.",
            "in": "query",
            "name": "sort_dir",
            "required": false
          },
          {
            "default": "created_at",
            "description": "Controls which field the query is sorted by.",
            "enum": [
              "modified_at",
              "created_at"
            ],
            "in": "query",
            "name": "sort_by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The response includes a `labels` array containing a page of results (as determined by the `page_size` query parameter).  It also includes other useful information, such as the total number of labels that match the query criteria, the number of pages of results, and the URLs of the first, last, next, and previous pages of results.\n",
            "schema": {
              "$ref": "#/definitions/list_labels_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "labels"
        ],
        "description": "This endpoint returns a list of labels that you've [created](https://www.shipengine.com/docs/labels/create-a-label/). You can optionally filter the results as well as control their sort order and the number of results returned at a time.\n\nBy default, all labels are returned, 25 at a time, starting with the most recently created ones.  You can combine multiple filter options to narrow-down the results.  For example, if you only want to get your UPS labels for your east coast warehouse you could query by both `warehouse_id` and `carrier_id`\n",
        "operationId": "list_labels",
        "summary": "List labels"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_label_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested object creation was a success.",
            "schema": {
              "$ref": "#/definitions/create_label_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "labels"
        ],
        "description": "Purchase and print a label for shipment",
        "operationId": "create_label",
        "summary": "Purchase Label"
      },
      "summary": "Print shipping labels"
    },
    "/v1/labels/external_shipment_id/{external_shipment_id}": {
      "parameters": [
        {
          "in": "path",
          "name": "external_shipment_id",
          "required": true,
          "type": "string",
          "x-example": "0bcb569d-1727-4ff9-ab49-b2fec0cee5ae"
        }
      ],
      "description": "Find a label using the external shipment id",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "There are two different ways to [download a label](https://www.shipengine.com/docs/labels/downloading/):\n\n|Label Download Type | Description\n|--------------------|------------------------------\n|`url`               |You will receive a URL, which you can use to download the label in a separate request. The URL will remain valid for 90 days.<br><br>This is the default if `label_download_type` is unspecified.\n|`inline`            |You will receive the Base64-encoded label as part of the response. No need for a second request to download the label.\n",
            "enum": [
              "url",
              "inline"
            ],
            "in": "query",
            "name": "label_download_type",
            "required": false,
            "type": "string",
            "x-example": "url"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested object creation was a success.",
            "schema": {
              "$ref": "#/definitions/get_label_by_external_shipment_id_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "labels"
        ],
        "description": "Find a label by using the external shipment id that was used during label creation\n",
        "operationId": "get_label_by_external_shipment_id",
        "summary": "Get Label By External Shipment ID"
      },
      "summary": "Get Label By External Shipment ID"
    },
    "/v1/labels/rates/{rate_id}": {
      "parameters": [
        {
          "description": "Rate ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "rate_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Purchase a label using a `rate_id` that has been previously generated while looking at various rates for a particular shipment.",
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_label_from_rate_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested object creation was a success.",
            "schema": {
              "$ref": "#/definitions/create_label_from_rate_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "labels"
        ],
        "description": "When retrieving rates for shipments using the `/rates` endpoint, the returned information contains a `rate_id` property that can be used\nto generate a label without having to refill in the shipment information repeatedly.\n",
        "operationId": "create_label_from_rate",
        "summary": "Purchase Label with Rate ID"
      },
      "summary": "Use a rate to purchase a label"
    },
    "/v1/labels/shipment/{shipment_id}": {
      "parameters": [
        {
          "description": "Shipment ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "shipment_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Purchase a label using a shipment ID that has already been created with the desired address and\npackage info.\n",
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_label_from_shipment_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested object creation was a success.",
            "schema": {
              "$ref": "#/definitions/create_label_from_shipment_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "labels"
        ],
        "description": "Purchase a label using a shipment ID that has already been created with the desired address and\npackage info.\n",
        "operationId": "create_label_from_shipment",
        "summary": "Purchase Label with Shipment ID"
      },
      "summary": "Purchase label using shipment ID"
    },
    "/v1/labels/{label_id}": {
      "parameters": [
        {
          "description": "Label ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "label_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Retrieve information for individual labels.",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "There are two different ways to [download a label](https://www.shipengine.com/docs/labels/downloading/):\n\n|Label Download Type | Description\n|--------------------|------------------------------\n|`url`               |You will receive a URL, which you can use to download the label in a separate request. The URL will remain valid for 90 days.<br><br>This is the default if `label_download_type` is unspecified.\n|`inline`            |You will receive the Base64-encoded label as part of the response. No need for a second request to download the label.\n",
            "enum": [
              "url",
              "inline"
            ],
            "in": "query",
            "name": "label_download_type",
            "required": false,
            "type": "string",
            "x-example": "url"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_label_by_id_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "labels"
        ],
        "description": "Retrieve information for individual labels.",
        "operationId": "get_label_by_id",
        "summary": "Get Label By ID"
      },
      "summary": "Label"
    },
    "/v1/labels/{label_id}/return": {
      "parameters": [
        {
          "description": "Label ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "label_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_return_label_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/create_return_label_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "labels"
        ],
        "description": "Create a return label",
        "operationId": "create_return_label",
        "summary": "Create a return label"
      },
      "summary": "Return labels"
    },
    "/v1/labels/{label_id}/track": {
      "parameters": [
        {
          "description": "Label ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "label_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Carriers will provide tracking information so the status of your shipment can be monitored",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_tracking_log_from_label_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "labels"
        ],
        "description": "Retrieve the label's tracking information",
        "operationId": "get_tracking_log_from_label",
        "summary": "Get Label Tracking Information"
      },
      "summary": "Tracking a Label"
    },
    "/v1/labels/{label_id}/void": {
      "parameters": [
        {
          "description": "Label ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "label_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Some carriers charge for creating a label upon purchase vs upon use. The Shipengine API allows you\nto void a label to get a refund.\n",
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/void_label_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "labels"
        ],
        "description": "Void a label by ID to get a refund.",
        "operationId": "void_label",
        "summary": "Void a Label By ID"
      },
      "summary": "Label Voiding"
    },
    "/v1/manifests": {
      "description": "Many manifests are sent electronically to the carrier when you create a label, and\noften physical manifests are not necessary. Carriers receive the package details, shipping date,\nand other information that help them plan your package's delivery when you create a label.\n\nHowever, some providers, like USPS require manifests when shipping large numbers of packages. Think about how long it would take for a delivery driver to arrive, pick up 100 packages, and individually scan each of them.\n\nA manifest exists so the carrier can scan the manifest and check in all the packages being shipped.\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Warehouse ID",
            "in": "query",
            "maxLength": 25,
            "minLength": 1,
            "name": "warehouse_id",
            "pattern": "^se(-[a-z0-9]+)+$",
            "required": false,
            "type": "string"
          },
          {
            "description": "ship date start range",
            "format": "date-time",
            "in": "query",
            "name": "ship_date_start",
            "required": false,
            "type": "string",
            "x-example": "2018-09-23T15:00:00.000Z"
          },
          {
            "description": "ship date end range",
            "format": "date-time",
            "in": "query",
            "name": "ship_date_end",
            "required": false,
            "type": "string",
            "x-example": "2018-09-23T15:00:00.000Z"
          },
          {
            "description": "Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)",
            "format": "date-time",
            "in": "query",
            "name": "created_at_start",
            "required": false,
            "type": "string",
            "x-example": "2019-03-12T19:24:13.657Z"
          },
          {
            "description": "Used to create a filter for when a resource was created, (ex. A shipment that was created before a certain time)",
            "format": "date-time",
            "in": "query",
            "name": "created_at_end",
            "required": false,
            "type": "string",
            "x-example": "2019-03-12T19:24:13.657Z"
          },
          {
            "description": "Carrier ID",
            "in": "query",
            "maxLength": 25,
            "minLength": 1,
            "name": "carrier_id",
            "pattern": "^se(-[a-z0-9]+)+$",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.\n",
            "format": "int32",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer",
            "x-example": 2
          },
          {
            "default": 25,
            "description": "The number of results to return per response.",
            "format": "int32",
            "in": "query",
            "minimum": 1,
            "name": "page_size",
            "required": false,
            "type": "integer",
            "x-example": 50
          },
          {
            "collectionFormat": "multi",
            "description": "Array of label ids",
            "in": "query",
            "items": {
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.",
              "example": "se-28529731",
              "maxLength": 25,
              "minLength": 1,
              "pattern": "^se(-[a-z0-9]+)+$",
              "title": "se_id",
              "type": "string"
            },
            "name": "label_ids",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/list_manifests_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "manifests"
        ],
        "description": "Similar to querying shipments, we allow you to query manifests since there will likely be a large number over a long period of time.",
        "operationId": "list_manifests",
        "summary": "List Manifests"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_manifest_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/create_manifest_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "manifests"
        ],
        "description": "Each ShipEngine manifest is created for a specific warehouse, so you'll need to provide the warehouse_id\nrather than the ship_from address. You can create a warehouse for each location that you want to create manifests for.\n",
        "operationId": "create_manifest",
        "summary": "Create Manifest"
      },
      "summary": "Manifests"
    },
    "/v1/manifests/{manifest_id}": {
      "parameters": [
        {
          "description": "The Manifest Id",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "manifest_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Manifest ID",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_manifest_by_id_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "manifests"
        ],
        "description": "Get Manifest By Id",
        "operationId": "get_manifest_by_id",
        "summary": "Get Manifest By Id"
      },
      "summary": "Manifest ID"
    },
    "/v1/packages": {
      "description": "Sometimes the default package types that carriers provide aren't enough and you need to create your own. That's where\nthe `/packages` endpoint becomes useful. Create, manage, and delete custom package types to suit your specific needs.\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/list_package_types_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "package_types"
        ],
        "description": "List the custom package types associated with the account",
        "operationId": "list_package_types",
        "summary": "List Custom Package Types"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_package_type_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/create_package_type_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "package_types"
        ],
        "description": "Create a custom package type to better assist in getting accurate rate estimates",
        "operationId": "create_package_type",
        "summary": "Create Custom Package Type"
      },
      "summary": "Packages"
    },
    "/v1/packages/{package_id}": {
      "parameters": [
        {
          "description": "Package ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "package_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "package_types"
        ],
        "description": "Delete a custom package using the ID",
        "operationId": "delete_package_type",
        "summary": "Delete A Custom Package By ID"
      },
      "description": "Create, edit, and delete individual custom packages.",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_package_type_by_id_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "package_types"
        ],
        "description": "Get Custom Package Type by ID",
        "operationId": "get_package_type_by_id",
        "summary": "Get Custom Package Type By ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_package_type_request_body"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "package_types"
        ],
        "description": "Update the custom package type object by ID",
        "operationId": "update_package_type",
        "summary": "Update Custom Package Type By ID"
      },
      "summary": "Package"
    },
    "/v1/rates": {
      "description": "Get the various rates for a set of carriers",
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/calculate_rates_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/calculate_rates_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "rates"
        ],
        "description": "It's not uncommon that you want to give your customer the choice between whether they want to ship the fastest, cheapest, or the most trusted route. Most companies don't solely ship things using a single shipping option;\nso we provide functionality to show you all your options!\n",
        "operationId": "calculate_rates",
        "summary": "Get Shipping Rates"
      },
      "summary": "Rates"
    },
    "/v1/rates/bulk": {
      "description": "Get specific rates for large groups of shipments",
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/compare_bulk_rates_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/compare_bulk_rates_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "rates"
        ],
        "description": "Get Bulk Shipment Rates",
        "operationId": "compare_bulk_rates",
        "summary": "Get Bulk Rates"
      },
      "summary": "Bulk Rates"
    },
    "/v1/rates/estimate": {
      "description": "Show rate estimations between carriers with basic information.",
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/estimate_rates_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/estimate_rates_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "rates"
        ],
        "description": "Get Rate Estimates",
        "operationId": "estimate_rates",
        "summary": "Estimate Rates"
      },
      "summary": "Rate Estimates"
    },
    "/v1/rates/{rate_id}": {
      "parameters": [
        {
          "description": "Rate ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "rate_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Get Individual rate information.",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_rate_by_id_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "rates"
        ],
        "description": "Retrieve a previously queried rate by its ID",
        "operationId": "get_rate_by_id",
        "summary": "Get Rate By ID"
      },
      "summary": "Rate"
    },
    "/v1/shipments": {
      "description": "Shipments are the gatekeeper to more advanced functionality inside ShipEngine. When you create a shipment, we respond with a shipment_id that is a unique identifier inside of ShipEngine.\nAdditionally, we realize that you may have your own identifier, you can set this by setting the `external_shipment_id` field in the request body.\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The possible shipment status values",
            "enum": [
              "pending",
              "processing",
              "label_purchased",
              "cancelled"
            ],
            "in": "query",
            "name": "shipment_status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Batch ID",
            "in": "query",
            "maxLength": 25,
            "minLength": 1,
            "name": "batch_id",
            "pattern": "^se(-[a-z0-9]+)+$",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search for shipments based on the custom tag added to the shipment object",
            "in": "query",
            "minLength": 1,
            "name": "tag",
            "required": false,
            "type": "string",
            "x-example": "Letters_to_santa"
          },
          {
            "description": "Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)",
            "format": "date-time",
            "in": "query",
            "name": "created_at_start",
            "required": false,
            "type": "string",
            "x-example": "2019-03-12T19:24:13.657Z"
          },
          {
            "description": "Used to create a filter for when a resource was created, (ex. A shipment that was created before a certain time)",
            "format": "date-time",
            "in": "query",
            "name": "created_at_end",
            "required": false,
            "type": "string",
            "x-example": "2019-03-12T19:24:13.657Z"
          },
          {
            "description": "Used to create a filter for when a resource was modified (ex. A shipment that was modified after a certain time)",
            "format": "date-time",
            "in": "query",
            "name": "modified_at_start",
            "required": false,
            "type": "string",
            "x-example": "2019-03-12T19:24:13.657Z"
          },
          {
            "description": "Used to create a filter for when a resource was modified (ex. A shipment that was modified before a certain time)",
            "format": "date-time",
            "in": "query",
            "name": "modified_at_end",
            "required": false,
            "type": "string",
            "x-example": "2019-03-12T19:24:13.657Z"
          },
          {
            "default": 1,
            "description": "Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.\n",
            "format": "int32",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer",
            "x-example": 2
          },
          {
            "default": 25,
            "description": "The number of results to return per response.",
            "format": "int32",
            "in": "query",
            "minimum": 1,
            "name": "page_size",
            "required": false,
            "type": "integer",
            "x-example": 50
          },
          {
            "description": "Sales Order ID",
            "in": "query",
            "name": "sales_order_id",
            "required": false,
            "type": "string"
          },
          {
            "default": "desc",
            "description": "Controls the sort order of the query.",
            "in": "query",
            "name": "sort_dir",
            "required": false
          },
          {
            "description": "The possible shipments sort by values",
            "enum": [
              "modified_at",
              "created_at"
            ],
            "in": "query",
            "name": "sort_by",
            "required": false,
            "type": "string",
            "x-example": "modified_at"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/list_shipments_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "shipments"
        ],
        "description": "Get list of Shipments",
        "operationId": "list_shipments",
        "summary": "List Shipments"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_shipments_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested object creation was a success.",
            "schema": {
              "$ref": "#/definitions/create_shipments_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "shipments"
        ],
        "description": "Create one or multiple shipments.",
        "operationId": "create_shipments",
        "summary": "Create Shipments"
      },
      "summary": "Shipments"
    },
    "/v1/shipments/external_shipment_id/{external_shipment_id}": {
      "parameters": [
        {
          "in": "path",
          "name": "external_shipment_id",
          "required": true,
          "type": "string",
          "x-example": "0bcb569d-1727-4ff9-ab49-b2fec0cee5ae"
        }
      ],
      "description": "When a shipment object is created with a custom shipment ID, you can query it using this endpoint\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_shipment_by_external_id_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "shipments"
        ],
        "description": "Query Shipments created using your own custom ID convention using this endpint",
        "operationId": "get_shipment_by_external_id",
        "summary": "Get Shipment By External ID"
      },
      "summary": "External Shipment ID"
    },
    "/v1/shipments/recognize": {
      "description": "Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine's shipment-recognition API helps you extract meaningful shipping data (people's names, addresses, package weights and dimensions, insurance and delivery requirements, etc.) from this unstructured text.\n",
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The only required field is `text`, which is the text to be parsed. You can optionally also provide a `shipment` containing any already-known values. For example, you probably already know the `ship_from` address, and you may also already know what carrier and service you want to use.\n",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/parse_shipment_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the parsed shipment, as well as a confidence score and a list of all the shipping entities that were recognized in the text.\n",
            "schema": {
              "$ref": "#/definitions/parse_shipment_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "shipments"
        ],
        "description": "The shipment-recognition API makes it easy for you to extract shipping data from unstructured text, including people's names, addresses, package weights and dimensions, insurance and delivery requirements, and more.\n\nData often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine's shipment-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed shipment data is returned in the same structure that's used for other ShipEngine APIs, so you can easily use the parsed data to create a shipping label.\n\n> **Note:** Shipment recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland.\n",
        "operationId": "parse_shipment",
        "summary": "Parse shipping info"
      },
      "summary": "Parse shipping info"
    },
    "/v1/shipments/{shipment_id}": {
      "parameters": [
        {
          "description": "Shipment ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "shipment_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Retrieve and Update and individual shipment based on its ID",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_shipment_by_id_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "shipments"
        ],
        "description": "Get an individual shipment based on its ID",
        "operationId": "get_shipment_by_id",
        "summary": "Get Shipment By ID"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_shipment_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/update_shipment_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "shipments"
        ],
        "description": "Update a shipment object based on its ID",
        "operationId": "update_shipment",
        "summary": "Update Shipment By ID"
      },
      "summary": "Get and Update Shipment"
    },
    "/v1/shipments/{shipment_id}/cancel": {
      "parameters": [
        {
          "description": "Shipment ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "shipment_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Cancel a Shipment",
      "put": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "shipments"
        ],
        "description": "Mark a shipment cancelled, if it is no longer needed or being used by your organized. Any label associated with the shipment needs to be voided first\nAn example use case would be if a batch label creation job is going to run at a set time and only queries `pending` shipments. Marking a shipment as cancelled\nwould remove it from this process\n",
        "operationId": "cancel_shipments",
        "summary": "Cancel a Shipment"
      },
      "summary": "Cancel Shipment"
    },
    "/v1/shipments/{shipment_id}/errors": {
      "parameters": [
        {
          "description": "Shipment ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "shipment_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Shipment Errors",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 1,
            "description": "Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.\n",
            "format": "int32",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer",
            "x-example": 2
          },
          {
            "format": "int32",
            "in": "query",
            "minimum": 1,
            "name": "pagesize",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/list_shipment_errors_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "shipments"
        ],
        "description": "If there are no errors associated with this shipment then the API will return a 404 Not Found response to indicate\nthat no errors are associated with the request\n",
        "operationId": "list_shipment_errors",
        "summary": "Get Shipment Errors"
      },
      "summary": "Shipment Errors"
    },
    "/v1/shipments/{shipment_id}/rates": {
      "parameters": [
        {
          "description": "Shipment ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "shipment_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Once a shipment is complete with the desired shipping information, you can then search for rates available\nbased on the carriers associated with your account\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)",
            "format": "date-time",
            "in": "query",
            "name": "created_at_start",
            "required": false,
            "type": "string",
            "x-example": "2019-03-12T19:24:13.657Z"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/list_shipment_rates_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "shipments"
        ],
        "description": "Get Rates for the shipment information associated with the shipment ID",
        "operationId": "list_shipment_rates",
        "summary": "Get Shipment Rates"
      },
      "summary": "Shipment Rates"
    },
    "/v1/shipments/{shipment_id}/tags/{tag_name}": {
      "parameters": [
        {
          "description": "Shipment ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "shipment_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tags are arbitrary strings that you can use to categorize shipments. For example, you may want to use tags to distinguish between domestic and international shipments, or between insured and uninsured shipments.  Or maybe you want to create a tag for each of your customers so you can easily retrieve every shipment for a customer.\n",
          "in": "path",
          "minLength": 1,
          "name": "tag_name",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "shipments"
        ],
        "description": "Remove an existing tag from the Shipment object",
        "operationId": "untag_shipment",
        "summary": "Remove Tag from Shipment"
      },
      "description": "Tags associated with the shipment object to be used to organize and query shipment items.\n",
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested object creation was a success.",
            "schema": {
              "$ref": "#/definitions/tag_shipment_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "shipments"
        ],
        "description": "Add a tag to the shipment object",
        "operationId": "tag_shipment",
        "summary": "Add Tag to Shipment"
      },
      "summary": "Shipment Tags"
    },
    "/v1/tags": {
      "description": "Tags are simple text-based flags or identifiers. Tags can be used as a simple label,\nsuch as Guaranteed_Overnight or Fragile so shipments can be easily [queried later](https://www.shipengine.com/docs/reference/list-shipments/).\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/list_tags_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "tags"
        ],
        "description": "Get a list of all tags associated with an account.",
        "operationId": "list_tags",
        "summary": "Get Tags"
      },
      "summary": "Tags"
    },
    "/v1/tags/{tag_name}": {
      "parameters": [
        {
          "description": "Tags are arbitrary strings that you can use to categorize shipments. For example, you may want to use tags to distinguish between domestic and international shipments, or between insured and uninsured shipments.  Or maybe you want to create a tag for each of your customers so you can easily retrieve every shipment for a customer.\n",
          "in": "path",
          "minLength": 1,
          "name": "tag_name",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "tags"
        ],
        "description": "Delete a tag that is no longer needed",
        "operationId": "delete_tag",
        "summary": "Delete Tag"
      },
      "description": "Create and delete tags",
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/create_tag_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "tags"
        ],
        "description": "Create a new Tag for customizing how you track your shipments",
        "operationId": "create_tag",
        "summary": "Create a New Tag"
      },
      "summary": "Tag"
    },
    "/v1/tags/{tag_name}/{new_tag_name}": {
      "parameters": [
        {
          "description": "Tags are arbitrary strings that you can use to categorize shipments. For example, you may want to use tags to distinguish between domestic and international shipments, or between insured and uninsured shipments.  Or maybe you want to create a tag for each of your customers so you can easily retrieve every shipment for a customer.\n",
          "in": "path",
          "minLength": 1,
          "name": "tag_name",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tags are arbitrary strings that you can use to categorize shipments. For example, you may want to use tags to distinguish between domestic and international shipments, or between insured and uninsured shipments.  Or maybe you want to create a tag for each of your customers so you can easily retrieve every shipment for a customer.\n",
          "in": "path",
          "minLength": 1,
          "name": "new_tag_name",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Update tag name",
      "put": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "tags"
        ],
        "description": "Change a tag name while still keeping the relevant shipments attached to it",
        "operationId": "rename_tag",
        "summary": "Update Tag Name"
      },
      "summary": "Tag"
    },
    "/v1/tracking": {
      "description": "If you generate your labels through ShipEngine, then you can subscribe to real-time tracking events for free!",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Carrier code used to retrieve tracking information",
            "in": "query",
            "minLength": 1,
            "name": "carrier_code",
            "required": false,
            "type": "string",
            "x-example": "stamps_com"
          },
          {
            "description": "The tracking number associated with a shipment",
            "in": "query",
            "minLength": 1,
            "name": "tracking_number",
            "required": false,
            "type": "string",
            "x-example": 9.405511899223197e+21
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_tracking_log_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "tracking"
        ],
        "description": "Retrieve package tracking information",
        "operationId": "get_tracking_log",
        "summary": "Get Tracking Information"
      },
      "summary": "Tracking a Package"
    },
    "/v1/tracking/start": {
      "description": "Allows you to subscribe to tracking updates for a package. You specify the carrier_code and tracking_number of the package,\nand receive notifications via webhooks whenever the shipping status changes.\n",
      "post": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "Carrier code used to retrieve tracking information",
            "in": "query",
            "minLength": 1,
            "name": "carrier_code",
            "required": false,
            "type": "string",
            "x-example": "stamps_com"
          },
          {
            "description": "The tracking number associated with a shipment",
            "in": "query",
            "minLength": 1,
            "name": "tracking_number",
            "required": false,
            "type": "string",
            "x-example": 9.405511899223197e+21
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "tracking"
        ],
        "description": "Allows you to subscribe to tracking updates for a package. You specify the carrier_code and tracking_number of the package,\nand receive notifications via webhooks whenever the shipping status changes.\n",
        "operationId": "start_tracking",
        "summary": "Start Tracking a Package"
      },
      "summary": "Start Tracking a Package"
    },
    "/v1/tracking/stop": {
      "description": "Unsubscribe from tracking updates for a package.",
      "post": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "Carrier code used to retrieve tracking information",
            "in": "query",
            "minLength": 1,
            "name": "carrier_code",
            "required": false,
            "type": "string",
            "x-example": "stamps_com"
          },
          {
            "description": "The tracking number associated with a shipment",
            "in": "query",
            "minLength": 1,
            "name": "tracking_number",
            "required": false,
            "type": "string",
            "x-example": 9.405511899223197e+21
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "tracking"
        ],
        "description": "Unsubscribe from tracking updates for a package.",
        "operationId": "stop_tracking",
        "summary": "Stop Tracking a Package"
      },
      "summary": "Stop Tracking a Package"
    },
    "/v1/warehouses": {
      "description": "You likely have one or more warehouse locations that you frequently ship from, in which case it would be annoying to have to specify the\nship_from and return_to addresses on every shipment. The solution is to [Create a Warehouse](https://www.shipengine.com/docs/reference/create-warehouse/), then you can simply pass the warehouse_id instead.\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/list_warehouses_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "warehouses"
        ],
        "description": "Retrieve a list of warehouses associated with this account.",
        "operationId": "list_warehouses",
        "summary": "List Warehouses"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_warehouse_request_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/create_warehouse_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "warehouses"
        ],
        "description": "Create a warehouse location that you can use to create shipping items by simply passing in the generated warehouse id.\nIf the return address is not supplied in the request body then it is assumed that the origin address is the return address as well\n",
        "operationId": "create_warehouse",
        "summary": "Create Warehouse"
      },
      "summary": "Warehouses"
    },
    "/v1/warehouses/{warehouse_id}": {
      "parameters": [
        {
          "description": "Warehouse ID",
          "in": "path",
          "maxLength": 25,
          "minLength": 1,
          "name": "warehouse_id",
          "pattern": "^se(-[a-z0-9]+)+$",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "warehouses"
        ],
        "description": "Delete a warehouse by ID",
        "operationId": "delete_warehouse",
        "summary": "Delete Warehouse By ID"
      },
      "description": "You likely have one or more warehouse locations that you frequently ship from, in which case it would be annoying to have to specify the\nship_from and return_to addresses on every shipment. The solution is to [Create a Warehouse](https://www.shipengine.com/docs/reference/create-warehouse/), then you can simply pass the warehouse_id instead.\n",
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "schema": {
              "$ref": "#/definitions/get_warehouse_by_id_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "warehouses"
        ],
        "description": "Retrieve warehouse data based on the warehouse ID",
        "operationId": "get_warehouse_by_id",
        "summary": "Get Warehouse By Id"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_warehouse_request_body"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "schema": {
              "$ref": "#/definitions/empty_response_body"
            }
          },
          "400": {
            "description": "The request contained errors.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "tags": [
          "warehouses"
        ],
        "description": "Update Warehouse object information",
        "operationId": "update_warehouse",
        "summary": "Update WareHouse By Id"
      },
      "summary": "Warehouse"
    }
  },
  "definitions": {
    "add_funds_to_carrier_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/monetary_value"
        }
      ],
      "description": "An add funds to carrier request body",
      "title": "add_funds_to_carrier_request_body",
      "type": "object"
    },
    "add_funds_to_carrier_response_body": {
      "additionalProperties": false,
      "description": "The current balance of the requested carrier account",
      "properties": {
        "balance": {
          "allOf": [
            {
              "$ref": "#/definitions/monetary_value"
            }
          ],
          "description": "The current balance of the account",
          "readOnly": true
        }
      },
      "required": [
        "balance"
      ],
      "title": "add_funds_to_carrier_response_body",
      "type": "object"
    },
    "add_funds_to_insurance_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/monetary_value"
        }
      ],
      "description": "An add funds to insurance request body",
      "title": "add_funds_to_insurance_request_body",
      "type": "object"
    },
    "add_funds_to_insurance_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/monetary_value"
        }
      ],
      "description": "Add funds to insurance response body",
      "title": "add_funds_to_insurance_response_body",
      "type": "object"
    },
    "add_to_batch_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/modify_batch"
        }
      ],
      "description": "An add to batch request body",
      "title": "add_to_batch_request_body",
      "type": "object"
    },
    "address": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/partial_address"
        }
      ],
      "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
      "required": [
        "name",
        "phone",
        "address_line1",
        "city_locality",
        "state_province",
        "postal_code",
        "country_code",
        "address_residential_indicator"
      ],
      "title": "address",
      "type": "object"
    },
    "address_residential_indicator": {
      "description": "Indicates whether an address is residential.",
      "enum": [
        "unknown",
        "yes",
        "no"
      ],
      "title": "address_residential_indicator",
      "type": "string"
    },
    "address_to_validate": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/partial_address"
        }
      ],
      "description": "Any residential or business mailing address, anywhere in the world.\n",
      "required": [
        "address_line1",
        "city_locality",
        "state_province",
        "country_code"
      ],
      "title": "address_to_validate",
      "type": "object"
    },
    "address_validating_shipment": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/validate_shipment_fields"
        },
        {
          "$ref": "#/definitions/partial_shipment"
        }
      ],
      "description": "An address validating shipment",
      "required": [
        "shipment_id",
        "carrier_id",
        "service_code",
        "ship_to",
        "ship_from"
      ],
      "title": "address_validating_shipment",
      "type": "object"
    },
    "address_validation_code": {
      "description": "The error codes that can be returned by the address validation API",
      "enum": [
        "a1000",
        "a1001",
        "a1002",
        "a1003",
        "a1004",
        "a1005",
        "a1006",
        "a1007",
        "a1008",
        "r1000",
        "r1001",
        "r1002",
        "r1003"
      ],
      "title": "address_validation_code",
      "type": "string"
    },
    "address_validation_detail_code": {
      "description": "The detailed error codes that can be returned by the address validation API",
      "enum": [
        "unsupported_country",
        "non_supported_country",
        "minimum_postal_code_verification_failed",
        "street_does_not_match_unique_street_name",
        "multiple_directionals",
        "multiple_matches",
        "suite_not_valid",
        "suite_missing",
        "incompatible_paired_labels",
        "invalid_house_number",
        "missing_house_number",
        "invalid_box_number",
        "invalid_charge_event",
        "missing_box_number",
        "missing_cmra_or_private_mail_box_number",
        "suite_has_no_secondaries",
        "postal_code_changed_or_added",
        "state_province_changed_or_added",
        "city_locality_changed_or_added",
        "urbanization_changed",
        "street_name_spelling_changed_or_added",
        "street_name_type_changed_or_added",
        "street_direction_changed_or_added",
        "suite_type_changed_or_added",
        "suite_unit_number_changed_or_added",
        "double_dependent_locality_changed_or_added",
        "subadministrative_area_changed_or_added",
        "subnational_area_changed_or_added",
        "po_box_changed_or_added",
        "premise_type_changed_or_added",
        "house_number_changed",
        "organization_changed_or_added",
        "partially_verified_to_state_level",
        "partially_verified_to_city_level",
        "partially_verified_to_street_level",
        "partially_verified_to_premise_level",
        "verified_to_state_level",
        "verified_to_city_level",
        "verified_to_street_level",
        "verified_to_premise_level",
        "verified_to_suite_level",
        "coded_to_street_lavel",
        "coded_to_neighborhood_level",
        "coded_to_community_level",
        "coded_to_state_level",
        "coded_to_rooftop_level",
        "coded_to_rooftop_interpolation_level",
        "name_max_length_exceeded",
        "phone_max_length_exceeded",
        "company_name_max_length_exceeded",
        "line1_min_max_length",
        "line2_max_length_exceeded",
        "line3_max_length_exceeded",
        "city_locality_max_length_exceeded",
        "state_province_max_length_exceeded",
        "invalid_postal_code",
        "country_invalid_length",
        "address_not_found"
      ],
      "title": "address_validation_detail_code",
      "type": "string"
    },
    "address_validation_message_type": {
      "description": "The different types of messages that can be returned by the address validation API",
      "enum": [
        "error",
        "warning",
        "info"
      ],
      "title": "address_validation_message_type",
      "type": "string"
    },
    "address_validation_result": {
      "additionalProperties": false,
      "description": "An address validation result",
      "properties": {
        "matched_address": {
          "allOf": [
            {
              "$ref": "#/definitions/address"
            }
          ],
          "description": "The matched address found by the Shipengine API",
          "readOnly": true
        },
        "messages": {
          "default": [],
          "description": "The list of messages that were generated during the address validation request.",
          "items": {
            "$ref": "#/definitions/response_message"
          },
          "readOnly": true,
          "type": "array"
        },
        "original_address": {
          "allOf": [
            {
              "$ref": "#/definitions/address"
            }
          ],
          "description": "The original address that was sent for validation"
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/address_validation_status"
            }
          ]
        }
      },
      "required": [
        "status",
        "original_address",
        "matched_address",
        "messages"
      ],
      "title": "address_validation_result",
      "type": "object"
    },
    "address_validation_status": {
      "description": "The possible address validation status values",
      "enum": [
        "unverified",
        "verified",
        "warning",
        "error"
      ],
      "title": "address_validation_status",
      "type": "string"
    },
    "advanced_shipment_options": {
      "additionalProperties": false,
      "description": "Advanced shipment options",
      "properties": {
        "bill_to_account": {
          "default": null,
          "description": "This field is used to [bill shipping costs to a third party](https://www.shipengine.com/docs/shipping/bill-to-third-party/). This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.\n",
          "type": "string",
          "x-nullable": true
        },
        "bill_to_country_code": {
          "allOf": [
            {
              "$ref": "#/definitions/country_code"
            }
          ],
          "default": null,
          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.\n",
          "x-nullable": true
        },
        "bill_to_party": {
          "allOf": [
            {
              "$ref": "#/definitions/bill_to_party"
            }
          ],
          "default": null,
          "description": "Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.\n",
          "x-nullable": true
        },
        "bill_to_postal_code": {
          "default": null,
          "description": "The postal code of the third-party that is responsible for shipping costs.\n",
          "type": "string",
          "x-nullable": true
        },
        "collect_on_delivery": {
          "$ref": "#/definitions/collect_on_delivery"
        },
        "contains_alcohol": {
          "default": false,
          "description": "Indicates that the shipment contains alcohol.",
          "type": "boolean"
        },
        "custom_field1": {
          "default": null,
          "description": "An arbitrary field that can be used to store information about the shipment.\n",
          "maxLength": 100,
          "type": "string",
          "x-nullable": true
        },
        "custom_field2": {
          "default": null,
          "description": "An arbitrary field that can be used to store information about the shipment.\n",
          "maxLength": 100,
          "type": "string",
          "x-nullable": true
        },
        "custom_field3": {
          "default": null,
          "description": "An arbitrary field that can be used to store information about the shipment.\n",
          "maxLength": 100,
          "type": "string",
          "x-nullable": true
        },
        "delivered_duty_paid": {
          "default": false,
          "description": "Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.\n",
          "type": "boolean"
        },
        "dry_ice": {
          "default": false,
          "description": "Indicates if the shipment contain dry ice",
          "type": "boolean"
        },
        "dry_ice_weight": {
          "allOf": [
            {
              "$ref": "#/definitions/weight"
            }
          ],
          "description": "The weight of the dry ice in the shipment",
          "x-nullable": true
        },
        "freight_class": {
          "default": null,
          "description": "The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".\n",
          "example": 77.5,
          "type": "string",
          "x-nullable": true
        },
        "non_machinable": {
          "default": false,
          "description": "Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.\n",
          "type": "boolean"
        },
        "saturday_delivery": {
          "default": false,
          "description": "Enables Saturday delivery, if supported by the carrier.",
          "type": "boolean"
        },
        "use_ups_ground_freight_pricing": {
          "default": null,
          "description": "Whether to use [UPS Ground Freight pricing](https://www.shipengine.com/docs/shipping/ups-ground-freight/). If enabled, then a `freight_class` must also be specified.\n",
          "type": "boolean",
          "x-nullable": true
        }
      },
      "title": "advanced_shipment_options",
      "type": "object"
    },
    "ancillary_service_endorsement": {
      "description": "[Ancillary service endorsements](https://pe.usps.com/text/qsg300/Q507.htm) are used by mailers to request an addressee's new address and to provide the carrier with instructions on how to handle packages that are undeliverable as addressed.\n\n| Ancillary Service Endorsement  | Description\n|--------------------------------|-----------------------------------------------------\n| `none`                         | No ancillary service is requested. Depending on the carrier servive, the package may be forwarded, returned, or discarded.\n| `return_service_requested`     | The package is returned to the sender. If possible, notification of the new address is is included with the returned package.\n| `forwarding_service_requested` | Forward the package to the new address, if possible; otherwise, return it to the sender.\n| `address_service_requested`    | Forward the package to the new address, if possible; otherwise, return it to the sender. This is similar to `forwarding_service_requested`, but different restrictions and charges may apply.\n| `change_service_requested`     | The package is discarded. If possible, notification of the new address is sent to the sender.\n| `leave_if_no_response`         |\n",
      "enum": [
        "none",
        "return_service_requested",
        "forwarding_service_requested",
        "address_service_requested",
        "change_service_requested",
        "leave_if_no_response"
      ],
      "title": "ancillary_service_endorsement",
      "type": "string"
    },
    "batch": {
      "additionalProperties": false,
      "description": "Batches are an advanced feature of ShipEngine designed for users who need to generate hundreds or\nthousands of labels at a time.\n",
      "properties": {
        "batch_errors_url": {
          "allOf": [
            {
              "$ref": "#/definitions/optional_link"
            }
          ],
          "description": "Link to batch errors endpoint",
          "readOnly": true
        },
        "batch_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the batch",
          "readOnly": true
        },
        "batch_labels_url": {
          "allOf": [
            {
              "$ref": "#/definitions/optional_link"
            }
          ],
          "description": "Link to batch labels query"
        },
        "batch_notes": {
          "default": "",
          "description": "Custom notes you can add for each created batch",
          "example": "Batch for morning shipment",
          "readOnly": true,
          "type": "string",
          "x-nullable": true
        },
        "batch_shipments_url": {
          "allOf": [
            {
              "$ref": "#/definitions/optional_link"
            }
          ],
          "description": "The batch shipments endpoint"
        },
        "completed": {
          "description": "The number of labels generated in the batch",
          "example": 1,
          "format": "int32",
          "minimum": 0,
          "readOnly": true,
          "type": "integer"
        },
        "count": {
          "description": "The total of errors, warnings, and completed properties",
          "example": 2,
          "format": "int32",
          "minimum": 0,
          "readOnly": true,
          "type": "integer"
        },
        "created_at": {
          "allOf": [
            {
              "$ref": "#/definitions/date_time"
            }
          ],
          "description": "The date and time the batch was created in ShipEngine",
          "readOnly": true
        },
        "errors": {
          "description": "The number of errors that occurred while generating the batch",
          "example": 2,
          "format": "int32",
          "minimum": 0,
          "readOnly": true,
          "type": "integer"
        },
        "external_batch_id": {
          "description": "A string that uniquely identifies the external batch",
          "minLength": 0,
          "readOnly": true,
          "type": "string",
          "x-nullable": true
        },
        "form_download": {
          "allOf": [
            {
              "$ref": "#/definitions/optional_link"
            }
          ],
          "description": "The form download for any customs that are needed",
          "readOnly": true
        },
        "forms": {
          "description": "The number of forms for customs that are available for download",
          "example": 3,
          "format": "int32",
          "minimum": 0,
          "readOnly": true,
          "type": "integer"
        },
        "label_download": {
          "allOf": [
            {
              "$ref": "#/definitions/label_download"
            }
          ],
          "description": "The label download for the batch",
          "readOnly": true
        },
        "label_format": {
          "allOf": [
            {
              "$ref": "#/definitions/label_format"
            }
          ],
          "default": "pdf",
          "readOnly": true
        },
        "label_layout": {
          "allOf": [
            {
              "$ref": "#/definitions/label_layout"
            }
          ],
          "default": "4x6",
          "description": "label layout",
          "readOnly": true
        },
        "processed_at": {
          "allOf": [
            {
              "$ref": "#/definitions/date_time"
            }
          ],
          "description": "The date and time the batch was processed in ShipEngine",
          "readOnly": true,
          "x-nullable": true
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/batch_status"
            }
          ],
          "readOnly": true
        },
        "warnings": {
          "description": "The number of warnings that occurred while generating the batch",
          "example": 1,
          "format": "int32",
          "minimum": 0,
          "readOnly": true,
          "type": "integer"
        }
      },
      "required": [
        "label_layout",
        "label_format",
        "batch_id",
        "external_batch_id",
        "batch_notes",
        "created_at",
        "processed_at",
        "errors",
        "warnings",
        "completed",
        "forms",
        "count",
        "batch_shipments_url",
        "batch_labels_url",
        "batch_errors_url",
        "label_download",
        "form_download",
        "status"
      ],
      "title": "batch",
      "type": "object"
    },
    "batch_response_error": {
      "additionalProperties": false,
      "description": "A batch response error",
      "properties": {
        "error": {
          "description": "Error message associated with the shipment.",
          "example": "Recipient address has not been verified.",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "shipment_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the shipment",
          "readOnly": true
        }
      },
      "title": "batch_response_error",
      "type": "object"
    },
    "batch_status": {
      "description": "The possible batch status values",
      "enum": [
        "open",
        "queued",
        "processing",
        "completed",
        "completed_with_errors",
        "archived",
        "notifying",
        "invalid"
      ],
      "title": "batch_status",
      "type": "string"
    },
    "batches_sort_by": {
      "description": "The possible batches sort by values",
      "enum": [
        "ship_date",
        "processed_at"
      ],
      "title": "batches_sort_by",
      "type": "string"
    },
    "bill_to_party": {
      "description": "The possible bill to party values",
      "enum": [
        "recipient",
        "third_party"
      ],
      "title": "bill_to_party",
      "type": "string"
    },
    "bulk_rate": {
      "additionalProperties": false,
      "description": "A bulk rate",
      "properties": {
        "created_at": {
          "allOf": [
            {
              "$ref": "#/definitions/date_time"
            }
          ],
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "errors": {
          "description": "An array of errors that were returned while retrieving the bulk rate",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/error"
              }
            ],
            "description": "An error that occurred while retrieving the bulk rate",
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        },
        "rate_request_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the rate request",
          "readOnly": true
        },
        "shipment_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the shipment",
          "readOnly": true
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/rate_response_status"
            }
          ],
          "readOnly": true
        }
      },
      "required": [
        "rate_request_id",
        "shipment_id",
        "created_at",
        "status",
        "errors"
      ],
      "title": "bulk_rate",
      "type": "object"
    },
    "calculate_rates_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/rate_request_options"
        }
      ],
      "description": "A rate shipment request body",
      "required": [
        "shipment_id",
        "shipment"
      ],
      "title": "calculate_rates_request_body",
      "type": "object"
    },
    "calculate_rates_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/partial_shipment"
        },
        {
          "$ref": "#/definitions/rate_response"
        }
      ],
      "description": "A rate shipment response body",
      "required": [
        "rate_response",
        "shipment_id",
        "ship_date",
        "created_at",
        "modified_at",
        "shipment_status",
        "return_to",
        "confirmation",
        "customs",
        "advanced_options",
        "insurance_provider",
        "tags",
        "packages",
        "total_weight"
      ],
      "title": "calculate_rates_response_body",
      "type": "object"
    },
    "carrier": {
      "additionalProperties": false,
      "description": "A carrier object that represents a provider such as UPS, USPS, DHL, etc\nthat has been tied to the current account.\n",
      "properties": {
        "account_number": {
          "description": "The account number that the carrier is connected to.",
          "example": "account_570827",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "balance": {
          "description": "Current available balance",
          "example": 3799.52,
          "format": "double",
          "minimum": 0,
          "readOnly": true,
          "type": "number"
        },
        "carrier_code": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the carrier."
        },
        "carrier_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the carrier.",
          "readOnly": true
        },
        "friendly_name": {
          "description": "Screen readable name",
          "example": "Stamps.com",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "has_multi_package_supporting_services": {
          "description": "Carrier supports multiple packages per shipment",
          "readOnly": true,
          "type": "boolean"
        },
        "nickname": {
          "description": "Nickname given to the account when initially setting up the carrier.",
          "example": "ShipEngine Account - Stamps.com",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "options": {
          "description": "A list of options that are available to that carrier",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/carrier_advanced_option"
              }
            ],
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        },
        "packages": {
          "description": "A list of package types that are supported by the carrier",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/package_type"
              }
            ],
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        },
        "primary": {
          "description": "Is this the primary carrier that is used by default when no carrier is specified in label/shipment creation",
          "readOnly": true,
          "type": "boolean"
        },
        "requires_funded_amount": {
          "description": "Indicates whether the carrier requires funding to use its services",
          "readOnly": true,
          "type": "boolean"
        },
        "services": {
          "description": "A list of services that are offered by the carrier",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/service"
              }
            ],
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        },
        "supports_label_messages": {
          "description": "The carrier supports adding custom label messages to an order.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "title": "carrier",
      "type": "object"
    },
    "carrier_advanced_option": {
      "additionalProperties": false,
      "description": "Advanced options that are specific to the carrier",
      "properties": {
        "default_value": {
          "description": "Default value of option",
          "example": false,
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Description of option",
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Name of advanced option",
          "example": "contains_alcohol",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "carrier_advanced_option",
      "type": "object"
    },
    "carrier_code": {
      "description": "A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc.\n",
      "example": "dhl_express",
      "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
      "title": "carrier_code",
      "type": "string"
    },
    "carrier_name": {
      "description": "The shipping carriers that are supported by ShipEngine",
      "enum": [
        "access_worldwide",
        "amazon_buy_shipping",
        "apc",
        "asendia",
        "australia_post",
        "canada_post",
        "dhl_ecommerce",
        "dhl_express",
        "dhl_express_au",
        "dhl_express_ca",
        "dhl_express_uk",
        "dpd",
        "endicia",
        "fedex",
        "fedex_uk",
        "firstmile",
        "globegistics",
        "imex",
        "newgistics",
        "ontrac",
        "purolator_canada",
        "royal_mail",
        "rr_donnelley",
        "seko",
        "sendle",
        "stamps_com",
        "ups"
      ],
      "title": "carrier_name",
      "type": "string"
    },
    "carrier_name_with_settings": {
      "description": "The shipping carriers for which ShipEngine supports carrier settings",
      "enum": [
        "dhl_express",
        "fedex",
        "newgistics",
        "ups"
      ],
      "title": "carrier_name_with_settings",
      "type": "string"
    },
    "collect_on_delivery": {
      "description": "Defer payment until package is delivered, instead of when it is ordered.",
      "properties": {
        "payment_amount": {
          "$ref": "#/definitions/payment_amount"
        },
        "payment_type": {
          "allOf": [
            {
              "$ref": "#/definitions/collect_on_delivery_payment_type"
            }
          ]
        }
      },
      "title": "collect_on_delivery",
      "type": "object"
    },
    "collect_on_delivery_payment_type": {
      "description": "Types of payment that are supported",
      "enum": [
        "any",
        "cash",
        "cash_equivalent",
        "none"
      ],
      "title": "collect_on_delivery_payment_type",
      "type": "string"
    },
    "compare_bulk_rates_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/rate_request_rate_options"
        }
      ],
      "description": "A rate shipments request body",
      "required": [
        "rate_options"
      ],
      "title": "compare_bulk_rates_request_body",
      "type": "object"
    },
    "compare_bulk_rates_response_body": {
      "description": "A bulk rate response body",
      "items": {
        "$ref": "#/definitions/bulk_rate"
      },
      "title": "compare_bulk_rates_response_body",
      "type": "array"
    },
    "connect_access_worldwide_request_body": {
      "additionalProperties": false,
      "description": "An Access Worldwide account information request body",
      "properties": {
        "nickname": {
          "description": "The nickname associated with the carrier connection",
          "example": "Stamps.com",
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "description": "Access Worldwide Password",
          "minLength": 1,
          "type": "string"
        },
        "username": {
          "description": "Access Worldwide Username",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "username",
        "password"
      ],
      "title": "connect_access_worldwide_request_body",
      "type": "object"
    },
    "connect_amazon_buy_shipping_request_body": {
      "additionalProperties": false,
      "description": "An Amazon account information request body",
      "properties": {
        "email": {
          "allOf": [
            {
              "$ref": "#/definitions/email"
            }
          ]
        },
        "merchant_seller_id": {
          "minLength": 1,
          "type": "string"
        },
        "mws_auth_token": {
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname to be associated with the account connection",
          "example": "Test Amazon Buy Shipping",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "merchant_seller_id",
        "email",
        "mws_auth_token"
      ],
      "title": "connect_amazon_buy_shipping_request_body",
      "type": "object"
    },
    "connect_apc_request_body": {
      "additionalProperties": false,
      "description": "An APC account information request body",
      "properties": {
        "nickname": {
          "description": "The nickname for the APC account",
          "example": "APC carrier account",
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "description": "The password for the APC account",
          "example": 12345,
          "minLength": 1,
          "type": "string"
        },
        "username": {
          "description": "The username for the APC account",
          "example": "john_doe",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "username",
        "password"
      ],
      "title": "connect_apc_request_body",
      "type": "object"
    },
    "connect_asendia_request_body": {
      "additionalProperties": false,
      "description": "An Asendia account information request body",
      "properties": {
        "account_number": {
          "description": "Asendia account number",
          "minLength": 1,
          "type": "string"
        },
        "ftp_password": {
          "description": "FTP password",
          "minLength": 1,
          "type": "string"
        },
        "ftp_username": {
          "description": "FTP username",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "The nickname of the Asendia account",
          "example": "Asendia account",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "account_number",
        "ftp_username",
        "ftp_password"
      ],
      "title": "connect_asendia_request_body",
      "type": "object"
    },
    "connect_australia_post_request_body": {
      "additionalProperties": false,
      "description": "An Australia Post account information request body",
      "properties": {
        "account_number": {
          "description": "Account number",
          "minLength": 1,
          "type": "string"
        },
        "api_key": {
          "description": "API key",
          "minLength": 1,
          "type": "string"
        },
        "api_secret": {
          "description": "API secret",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "account_number",
        "api_key",
        "api_secret",
        "nickname"
      ],
      "title": "connect_australia_post_request_body",
      "type": "object"
    },
    "connect_canada_post_request_body": {
      "additionalProperties": false,
      "description": "A Canada Post account information request body",
      "properties": {
        "account_number": {
          "description": "Canada Post Account Number",
          "minLength": 1,
          "type": "string"
        },
        "api_key": {
          "description": "Canada Post Account API Key",
          "minLength": 1,
          "type": "string"
        },
        "api_secret": {
          "description": "Canada Post Account API Secret",
          "minLength": 1,
          "type": "string"
        },
        "contract_id": {
          "description": "Canada Post Account Contract ID",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "api_key",
        "api_secret",
        "account_number",
        "contract_id"
      ],
      "title": "connect_canada_post_request_body",
      "type": "object"
    },
    "connect_carrier_request_body": {
      "title": "connect_carrier_request_body"
    },
    "connect_carrier_response_body": {
      "additionalProperties": false,
      "description": "A connect account response body",
      "properties": {
        "carrier_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the carrier"
        }
      },
      "required": [
        "carrier_id"
      ],
      "title": "connect_carrier_response_body",
      "type": "object"
    },
    "connect_dhl_ecommerce_request_body": {
      "additionalProperties": false,
      "description": "A DHL Ecommerce account information request body",
      "properties": {
        "account_number": {
          "description": "Account number",
          "minLength": 1,
          "type": "string",
          "x-deprecated": true
        },
        "ancillary_endorsement": {
          "allOf": [
            {
              "$ref": "#/definitions/ancillary_service_endorsement"
            }
          ]
        },
        "api_key": {
          "description": "The DHL E-Commerce API key. This field is optional, but if not set you will not be able to get rates for this account.\n",
          "minLength": 1,
          "type": "string"
        },
        "api_secret": {
          "description": "The DHL E-Commerce API secret. This field is optional, but if not set you will not be able to get rates for this account.\n",
          "minLength": 1,
          "type": "string"
        },
        "client_id": {
          "description": "The client id",
          "minLength": 1,
          "type": "string"
        },
        "distribution_center": {
          "description": "The distribution center",
          "minLength": 1,
          "type": "string"
        },
        "ftp_password": {
          "description": "FTP password",
          "minLength": 1,
          "type": "string",
          "x-deprecated": true
        },
        "ftp_username": {
          "description": "FTP username",
          "minLength": 1,
          "type": "string",
          "x-deprecated": true
        },
        "nickname": {
          "description": "A nickname to help you identify this account",
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "description": "The account password",
          "minLength": 1,
          "type": "string"
        },
        "pickup_number": {
          "description": "The pickup number",
          "minLength": 1,
          "type": "string"
        },
        "username": {
          "description": "The account username",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "client_id",
        "username",
        "password",
        "pickup_number",
        "distribution_center"
      ],
      "title": "connect_dhl_ecommerce_request_body",
      "type": "object"
    },
    "connect_dhl_express_au_request_body": {
      "additionalProperties": false,
      "description": "A DHL Express AU account information request body",
      "properties": {
        "account_number": {
          "description": "Account number",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "account_number"
      ],
      "title": "connect_dhl_express_au_request_body",
      "type": "object"
    },
    "connect_dhl_express_ca_request_body": {
      "additionalProperties": false,
      "description": "A DHL Express CA account information request body",
      "properties": {
        "account_number": {
          "description": "Account number",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "account_number"
      ],
      "title": "connect_dhl_express_ca_request_body",
      "type": "object"
    },
    "connect_dhl_express_request_body": {
      "additionalProperties": false,
      "description": "A DHL express account information request body",
      "properties": {
        "account_number": {
          "description": "Account number",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "account_number"
      ],
      "title": "connect_dhl_express_request_body",
      "type": "object"
    },
    "connect_dhl_express_uk_request_body": {
      "additionalProperties": false,
      "description": "A DHL Express UK account information request body",
      "properties": {
        "account_number": {
          "description": "Account number",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "description": "Password",
          "minLength": 1,
          "type": "string"
        },
        "site_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the site"
        }
      },
      "required": [
        "account_number",
        "site_id",
        "password",
        "nickname"
      ],
      "title": "connect_dhl_express_uk_request_body",
      "type": "object"
    },
    "connect_dpd_request_body": {
      "additionalProperties": false,
      "description": "A DPD account information request body",
      "properties": {
        "account_number": {
          "description": "Account number",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "description": "Password",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "account_number",
        "password",
        "nickname"
      ],
      "title": "connect_dpd_request_body",
      "type": "object"
    },
    "connect_endicia_request_body": {
      "additionalProperties": false,
      "description": "An Endicia account information request body",
      "properties": {
        "account": {
          "description": "Account",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        },
        "passphrase": {
          "description": "Passphrase",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "account",
        "passphrase"
      ],
      "title": "connect_endicia_request_body",
      "type": "object"
    },
    "connect_fedex_request_body": {
      "additionalProperties": false,
      "description": "A Fedex account information request body",
      "properties": {
        "account_number": {
          "description": "Account number",
          "minLength": 1,
          "type": "string"
        },
        "address1": {
          "description": "Address",
          "minLength": 1,
          "type": "string"
        },
        "address2": {
          "description": "Address",
          "minLength": 1,
          "type": "string"
        },
        "agree_to_eula": {
          "description": "Boolean signaling agreement to the Fedex End User License Agreement",
          "type": "boolean"
        },
        "city": {
          "description": "The city",
          "minLength": 1,
          "type": "string"
        },
        "company": {
          "description": "The company",
          "minLength": 1,
          "type": "string"
        },
        "country_code": {
          "description": "Country code",
          "minLength": 1,
          "type": "string"
        },
        "email": {
          "allOf": [
            {
              "$ref": "#/definitions/email"
            }
          ],
          "description": "The email address"
        },
        "first_name": {
          "description": "First name",
          "minLength": 1,
          "type": "string"
        },
        "last_name": {
          "description": "Last name",
          "minLength": 1,
          "type": "string"
        },
        "meter_number": {
          "description": "Meter number",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        },
        "phone": {
          "description": "Phone number",
          "minLength": 1,
          "type": "string"
        },
        "postal_code": {
          "description": "Postal Code",
          "minLength": 1,
          "type": "string"
        },
        "state": {
          "description": "State",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "account_number",
        "address1",
        "city",
        "country_code",
        "email",
        "first_name",
        "last_name",
        "phone",
        "postal_code",
        "state",
        "nickname",
        "agree_to_eula"
      ],
      "title": "connect_fedex_request_body",
      "type": "object"
    },
    "connect_fedex_uk_request_body": {
      "additionalProperties": false,
      "description": "A Fedex UK account information request body",
      "properties": {
        "account_number": {
          "description": "Account number",
          "minLength": 1,
          "type": "string"
        },
        "address1": {
          "description": "Address",
          "minLength": 1,
          "type": "string"
        },
        "address2": {
          "description": "Address",
          "minLength": 1,
          "type": "string"
        },
        "agree_to_eula": {
          "description": "Boolean signaling agreement to the Fedex End User License Agreement",
          "type": "boolean"
        },
        "city": {
          "description": "The city",
          "minLength": 1,
          "type": "string"
        },
        "company": {
          "description": "The company",
          "minLength": 1,
          "type": "string"
        },
        "country_code": {
          "description": "Country code",
          "minLength": 1,
          "type": "string"
        },
        "email": {
          "allOf": [
            {
              "$ref": "#/definitions/email"
            }
          ],
          "description": "The email address"
        },
        "first_name": {
          "description": "First name",
          "minLength": 1,
          "type": "string"
        },
        "last_name": {
          "description": "Last name",
          "minLength": 1,
          "type": "string"
        },
        "meter_number": {
          "description": "Meter number",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        },
        "phone": {
          "description": "Phone number",
          "minLength": 1,
          "type": "string"
        },
        "postal_code": {
          "description": "Postal Code",
          "minLength": 1,
          "type": "string"
        },
        "state": {
          "description": "State",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "account_number",
        "address1",
        "city",
        "country_code",
        "email",
        "first_name",
        "last_name",
        "phone",
        "postal_code",
        "state",
        "nickname",
        "agree_to_eula"
      ],
      "title": "connect_fedex_uk_request_body",
      "type": "object"
    },
    "connect_firstmile_request_body": {
      "additionalProperties": false,
      "description": "A First Mile account information request body",
      "properties": {
        "mailer_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the mailer"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "description": "Password",
          "minLength": 1,
          "type": "string"
        },
        "profile_name": {
          "description": "Profile name",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "mailer_id",
        "password"
      ],
      "title": "connect_firstmile_request_body",
      "type": "object"
    },
    "connect_globegistics_request_body": {
      "additionalProperties": false,
      "description": "A Globegistics account information request body",
      "properties": {
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "description": "Password",
          "minLength": 1,
          "type": "string"
        },
        "username": {
          "description": "Username",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "username",
        "password"
      ],
      "title": "connect_globegistics_request_body",
      "type": "object"
    },
    "connect_imex_request_body": {
      "additionalProperties": false,
      "description": "An Imex account information request body",
      "properties": {
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "description": "Password",
          "minLength": 1,
          "type": "string"
        },
        "username": {
          "description": "Username",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "username",
        "password"
      ],
      "title": "connect_imex_request_body",
      "type": "object"
    },
    "connect_insurer_request_body": {
      "additionalProperties": false,
      "description": "A create shipsurance connection request body",
      "properties": {
        "email": {
          "allOf": [
            {
              "$ref": "#/definitions/email"
            }
          ]
        },
        "policy_id": {
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "email",
        "policy_id"
      ],
      "title": "connect_insurer_request_body",
      "type": "object"
    },
    "connect_insurer_response_body": {
      "title": "connect_insurer_response_body",
      "type": "object"
    },
    "connect_newgistics_request_body": {
      "additionalProperties": false,
      "description": "A Newgistics account information request body",
      "properties": {
        "induction_site": {
          "description": "Induction site",
          "minLength": 1,
          "type": "string"
        },
        "mailer_id": {
          "description": "Mailer id",
          "format": "int32",
          "minimum": 0,
          "type": "integer"
        },
        "merchant_id": {
          "description": "Merchant id",
          "format": "int32",
          "minimum": 0,
          "type": "integer"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "induction_site",
        "nickname"
      ],
      "title": "connect_newgistics_request_body",
      "type": "object"
    },
    "connect_ontrac_request_body": {
      "additionalProperties": false,
      "description": "An Ontrac account information request body",
      "properties": {
        "account_number": {
          "description": "Account number",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "description": "Password",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "account_number",
        "password"
      ],
      "title": "connect_ontrac_request_body",
      "type": "object"
    },
    "connect_purolator_request_body": {
      "additionalProperties": false,
      "description": "A Purolator account information request body",
      "properties": {
        "account_number": {
          "description": "Account number",
          "minLength": 1,
          "type": "string"
        },
        "activation_key": {
          "description": "Activation key",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "account_number",
        "activation_key",
        "nickname"
      ],
      "title": "connect_purolator_request_body",
      "type": "object"
    },
    "connect_royal_mail_request_body": {
      "additionalProperties": false,
      "description": "A Royal Mail account information request body",
      "properties": {
        "account_number": {
          "description": "Account number",
          "minLength": 1,
          "type": "string"
        },
        "city": {
          "description": "City",
          "minLength": 1,
          "type": "string"
        },
        "company_name": {
          "description": "Company name",
          "minLength": 1,
          "type": "string"
        },
        "contact_name": {
          "description": "Contact name",
          "minLength": 1,
          "type": "string"
        },
        "email": {
          "allOf": [
            {
              "$ref": "#/definitions/email"
            }
          ],
          "description": "The email address"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        },
        "oba_email": {
          "allOf": [
            {
              "$ref": "#/definitions/email"
            }
          ],
          "description": "The oba email address"
        },
        "phone": {
          "description": "Phone",
          "minLength": 1,
          "type": "string"
        },
        "postal_code": {
          "description": "Postal code",
          "minLength": 1,
          "type": "string"
        },
        "street_line1": {
          "description": "Street line1",
          "minLength": 1,
          "type": "string"
        },
        "street_line2": {
          "description": "Street line2",
          "minLength": 1,
          "type": "string"
        },
        "street_line3": {
          "description": "Street line3",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "account_number",
        "contact_name",
        "city",
        "postal_code",
        "nickname"
      ],
      "title": "connect_royal_mail_request_body",
      "type": "object"
    },
    "connect_rr_donnelley_request_body": {
      "additionalProperties": false,
      "description": "A RR Donnelley account information request body",
      "properties": {
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "description": "Password",
          "minLength": 1,
          "type": "string"
        },
        "username": {
          "description": "Username",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "username",
        "password"
      ],
      "title": "connect_rr_donnelley_request_body",
      "type": "object"
    },
    "connect_seko_request_body": {
      "additionalProperties": false,
      "description": "A SEKO account information request body",
      "properties": {
        "access_key": {
          "description": "Seko Account Access Key",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "access_key"
      ],
      "title": "connect_seko_request_body",
      "type": "object"
    },
    "connect_sendle_request_body": {
      "additionalProperties": false,
      "description": "A Sendle account information request body",
      "properties": {
        "api_key": {
          "description": "API key",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        },
        "sendle_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the sendle"
        }
      },
      "required": [
        "nickname",
        "sendle_id",
        "api_key"
      ],
      "title": "connect_sendle_request_body",
      "type": "object"
    },
    "connect_stamps_request_body": {
      "additionalProperties": false,
      "description": "A Stamps account information request body",
      "properties": {
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "description": "Password",
          "minLength": 1,
          "type": "string"
        },
        "username": {
          "description": "Username",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "username",
        "password"
      ],
      "title": "connect_stamps_request_body",
      "type": "object"
    },
    "connect_ups_request_body": {
      "additionalProperties": false,
      "description": "A UPS account information request body",
      "properties": {
        "account_country_code": {
          "description": "Account country code",
          "minLength": 1,
          "type": "string"
        },
        "account_number": {
          "description": "Account number",
          "minLength": 1,
          "type": "string"
        },
        "account_postal_code": {
          "description": "Account postal code",
          "minLength": 1,
          "type": "string"
        },
        "address1": {
          "description": "Address Line 1",
          "minLength": 1,
          "type": "string"
        },
        "address2": {
          "description": "Address Line 2",
          "minLength": 1,
          "type": "string"
        },
        "agree_to_technology_agreement": {
          "description": "The Agreement to the [UPS Technology Agreement](https://www.ups.com/assets/resources/media/UTA_with_EUR.pdf)",
          "type": "boolean"
        },
        "city": {
          "description": "City",
          "minLength": 1,
          "type": "string"
        },
        "company": {
          "description": "Company",
          "minLength": 1,
          "type": "string"
        },
        "country_code": {
          "description": "Country code",
          "minLength": 1,
          "type": "string"
        },
        "email": {
          "allOf": [
            {
              "$ref": "#/definitions/email"
            }
          ],
          "description": "The email address"
        },
        "first_name": {
          "description": "First name",
          "minLength": 1,
          "type": "string"
        },
        "invoice": {
          "allOf": [
            {
              "$ref": "#/definitions/ups_invoice"
            }
          ],
          "description": "The UPS invoice"
        },
        "last_name": {
          "description": "Last name",
          "minLength": 1,
          "type": "string"
        },
        "nickname": {
          "description": "Nickname",
          "minLength": 1,
          "type": "string"
        },
        "phone": {
          "description": "Phone",
          "minLength": 1,
          "type": "string"
        },
        "postal_code": {
          "description": "Postal code",
          "minLength": 1,
          "type": "string"
        },
        "state": {
          "description": "State",
          "minLength": 1,
          "type": "string"
        },
        "title": {
          "description": "Title",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "nickname",
        "account_number",
        "account_country_code",
        "account_postal_code",
        "first_name",
        "last_name",
        "company",
        "address1",
        "city",
        "state",
        "postal_code",
        "country_code",
        "email",
        "phone",
        "agree_to_technology_agreement"
      ],
      "title": "connect_ups_request_body",
      "type": "object"
    },
    "country_code": {
      "description": "A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
      "example": "CA",
      "maxLength": 2,
      "minLength": 2,
      "title": "country_code",
      "type": "string"
    },
    "create_and_validate_shipment": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/partial_shipment"
        },
        {
          "$ref": "#/definitions/create_shipment_response_body_fields"
        }
      ],
      "description": "A create and validate shipment resource",
      "title": "create_and_validate_shipment",
      "type": "object"
    },
    "create_batch_request_body": {
      "additionalProperties": false,
      "description": "A create batch request body",
      "properties": {
        "batch_notes": {
          "description": "Add custom messages for a particular batch",
          "example": "This is my batch",
          "minLength": 1,
          "type": "string"
        },
        "external_batch_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the external batch"
        },
        "rate_ids": {
          "description": "Array of rate IDs used in the batch",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/se_id"
              }
            ],
            "minLength": 1,
            "type": "string"
          },
          "type": "array"
        },
        "shipment_ids": {
          "description": "Array of shipment IDs used in the batch",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/se_id"
              }
            ]
          },
          "type": "array"
        }
      },
      "title": "create_batch_request_body",
      "type": "object"
    },
    "create_batch_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/batch"
        }
      ],
      "description": "A create batch response body",
      "title": "create_batch_response_body",
      "type": "object"
    },
    "create_label_from_rate_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/purchase_label_without_shipment"
        }
      ],
      "description": "A purchase label without shipment request body",
      "title": "create_label_from_rate_request_body",
      "type": "object"
    },
    "create_label_from_rate_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/label"
        }
      ],
      "description": "A create label from rate response body",
      "title": "create_label_from_rate_response_body",
      "type": "object"
    },
    "create_label_from_shipment_request_body": {
      "additionalProperties": false,
      "description": "A purchase label without shipment request body",
      "properties": {
        "label_download_type": {
          "allOf": [
            {
              "$ref": "#/definitions/label_download_type"
            }
          ]
        },
        "label_format": {
          "allOf": [
            {
              "$ref": "#/definitions/label_format"
            }
          ],
          "default": "pdf"
        },
        "label_layout": {
          "allOf": [
            {
              "$ref": "#/definitions/label_layout"
            }
          ],
          "default": "4x6"
        },
        "validate_address": {
          "allOf": [
            {
              "$ref": "#/definitions/validate_address"
            }
          ]
        }
      },
      "title": "create_label_from_shipment_request_body",
      "type": "object"
    },
    "create_label_from_shipment_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/label"
        }
      ],
      "description": "A create label from shipment response body",
      "title": "create_label_from_shipment_response_body",
      "type": "object"
    },
    "create_label_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/label"
        }
      ],
      "description": "A purchase label request body",
      "required": [
        "shipment"
      ],
      "title": "create_label_request_body",
      "type": "object"
    },
    "create_label_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/label"
        }
      ],
      "description": "A create label response body",
      "required": [
        "label_id",
        "status",
        "shipment_id",
        "ship_date",
        "created_at",
        "shipment_cost",
        "insurance_cost",
        "tracking_number",
        "is_international",
        "batch_id",
        "carrier_id",
        "service_code",
        "voided",
        "voided_at",
        "label_image_id",
        "label_format",
        "label_layout",
        "trackable",
        "carrier_code",
        "tracking_status",
        "label_download",
        "form_download",
        "insurance_claim",
        "packages",
        "is_return_label",
        "rma_number",
        "charge_event",
        "package_code"
      ],
      "title": "create_label_response_body",
      "type": "object"
    },
    "create_manifest_by_object_request_body": {
      "additionalProperties": false,
      "description": "A create manifest request body",
      "properties": {
        "carrier_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the carrier"
        },
        "excluded_label_ids": {
          "description": "The list of label ids to exclude from the manifest",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/se_id"
              }
            ],
            "description": "Label Id that will be excluded from the manifest"
          },
          "type": "array"
        },
        "label_ids": {
          "description": "The list of label ids to include for the manifest",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/se_id"
              }
            ],
            "description": "Label Id that will be included for the manifest"
          },
          "type": "array"
        },
        "ship_date": {
          "description": "The ship date that the shipment will be sent out on",
          "example": "2018-09-23T15:00:00.000Z",
          "format": "date-time",
          "minLength": 1,
          "type": "string"
        },
        "warehouse_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the warehouse"
        }
      },
      "required": [
        "carrier_id",
        "warehouse_id",
        "ship_date"
      ],
      "title": "create_manifest_by_object_request_body",
      "type": "object"
    },
    "create_manifest_label_ids_request_body": {
      "additionalProperties": false,
      "description": "A create manifest request body",
      "properties": {
        "label_ids": {
          "description": "The list of label ids to include in the manifest",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/se_id"
              }
            ],
            "description": "Label Id that will be included in the manifest"
          },
          "type": "array"
        }
      },
      "required": [
        "label_ids"
      ],
      "title": "create_manifest_label_ids_request_body",
      "type": "object"
    },
    "create_manifest_request_body": {
      "title": "create_manifest_request_body"
    },
    "create_manifest_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/manifests"
        },
        {
          "$ref": "#/definitions/deprecated_manifest"
        }
      ],
      "description": "A create manifest response body",
      "required": [
        "manifest_id",
        "form_id",
        "created_at",
        "ship_date",
        "shipments",
        "warehouse_id",
        "submission_id",
        "carrier_id",
        "manifest_download"
      ],
      "title": "create_manifest_response_body",
      "type": "object"
    },
    "create_package_type_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/package_type"
        }
      ],
      "description": "A create package type request body",
      "title": "create_package_type_request_body",
      "type": "object"
    },
    "create_package_type_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/package_type"
        }
      ],
      "description": "A create package type response body",
      "title": "create_package_type_response_body",
      "type": "object"
    },
    "create_return_label_request_body": {
      "additionalProperties": false,
      "description": "A create return label request body",
      "properties": {
        "charge_event": {
          "allOf": [
            {
              "$ref": "#/definitions/label_charge_event"
            }
          ],
          "description": "The label charge event.\n"
        },
        "label_download_type": {
          "allOf": [
            {
              "$ref": "#/definitions/label_download_type"
            }
          ],
          "default": "url"
        },
        "label_format": {
          "allOf": [
            {
              "$ref": "#/definitions/label_format"
            }
          ],
          "default": "pdf",
          "description": "The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n"
        },
        "label_image_id": {
          "allOf": [
            {
              "$ref": "#/definitions/image_id"
            }
          ],
          "description": "The label image resource that was used to create a custom label image.",
          "x-nullable": true
        },
        "label_layout": {
          "allOf": [
            {
              "$ref": "#/definitions/label_layout"
            }
          ],
          "default": "4x6",
          "description": "The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format.\n"
        }
      },
      "title": "create_return_label_request_body",
      "type": "object"
    },
    "create_return_label_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/label"
        }
      ],
      "description": "A create return label response body",
      "title": "create_return_label_response_body",
      "type": "object"
    },
    "create_shipment_response_body_fields": {
      "properties": {
        "address_validation": {
          "allOf": [
            {
              "$ref": "#/definitions/address_validation_result"
            }
          ],
          "description": "The address validation"
        },
        "errors": {
          "description": "An array of errors that occurred while creating shipment.",
          "items": {
            "description": "An error that occurred while creating a shipment.",
            "example": "Parameter value '100000000.00' is out of range.",
            "minLength": 1,
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-deprecated": true
        }
      },
      "title": "create_shipment_response_body_fields",
      "type": "object"
    },
    "create_shipments_request_body": {
      "additionalProperties": false,
      "description": "A create shipments request body",
      "properties": {
        "shipments": {
          "description": "An array of shipments to be created.",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/address_validating_shipment"
              }
            ]
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "shipments"
      ],
      "title": "create_shipments_request_body",
      "type": "object"
    },
    "create_shipments_response_body": {
      "additionalProperties": false,
      "description": "A create shipments response body",
      "properties": {
        "has_errors": {
          "default": false,
          "description": "Indicates if errors occured while creating the shipments",
          "type": "boolean"
        },
        "shipments": {
          "description": "An array of shipments that were created.",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/create_and_validate_shipment"
              }
            ],
            "description": "The shipment that was created."
          },
          "type": "array"
        }
      },
      "required": [
        "has_errors",
        "shipments"
      ],
      "title": "create_shipments_response_body",
      "type": "object"
    },
    "create_tag_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/tag"
        }
      ],
      "description": "Response body for creating tags",
      "title": "create_tag_response_body",
      "type": "object"
    },
    "create_warehouse_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/warehouse"
        }
      ],
      "description": "A create warehouse request body",
      "required": [
        "name",
        "origin_address"
      ],
      "title": "create_warehouse_request_body",
      "type": "object"
    },
    "create_warehouse_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/warehouse"
        }
      ],
      "description": "A create warehouse response body",
      "required": [
        "warehouse_id",
        "name",
        "created_at",
        "origin_address",
        "return_address"
      ],
      "title": "create_warehouse_response_body",
      "type": "object"
    },
    "create_webhook_request_body": {
      "additionalProperties": false,
      "description": "A create webhook request body",
      "properties": {
        "event": {
          "allOf": [
            {
              "$ref": "#/definitions/webhook_event"
            }
          ]
        },
        "url": {
          "allOf": [
            {
              "$ref": "#/definitions/url"
            }
          ],
          "description": "The url that the webhook sends the request to",
          "example": "https://[YOUR ENDPOINT ID].x.requestbin.com"
        }
      },
      "required": [
        "event",
        "url"
      ],
      "title": "create_webhook_request_body",
      "type": "object"
    },
    "create_webhook_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/webhook"
        }
      ],
      "description": "A webhook response body",
      "required": [
        "webhook_id",
        "url",
        "event"
      ],
      "title": "create_webhook_response_body",
      "type": "object"
    },
    "currency": {
      "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n|`nzd`          | New Zealand Dollar\n",
      "enum": [
        "usd",
        "cad",
        "aud",
        "gbp",
        "eur",
        "nzd"
      ],
      "title": "currency",
      "type": "string"
    },
    "customs_item": {
      "additionalProperties": false,
      "description": "The customs declaration for a single item in the shipment.",
      "properties": {
        "country_of_origin": {
          "allOf": [
            {
              "$ref": "#/definitions/country_code"
            }
          ],
          "default": null,
          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated\n",
          "x-nullable": true
        },
        "customs_item_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the customs item",
          "readOnly": true
        },
        "description": {
          "default": null,
          "description": "A description of the item",
          "maxLength": 100,
          "type": "string",
          "x-nullable": true
        },
        "harmonized_tariff_code": {
          "default": null,
          "description": "The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item.",
          "example": 3926.1,
          "type": "string",
          "x-nullable": true
        },
        "quantity": {
          "default": 0,
          "description": "The quantity of this item in the shipment.",
          "format": "int32",
          "minimum": 0,
          "type": "integer"
        },
        "sku": {
          "description": "The SKU (Stock Keeping Unit) of the customs item",
          "type": "string",
          "x-nullable": true
        },
        "sku_description": {
          "description": "Description of the Custom Item's SKU",
          "type": "string",
          "x-nullable": true
        },
        "unit_of_measure": {
          "type": "string",
          "x-nullable": true
        },
        "value": {
          "allOf": [
            {
              "$ref": "#/definitions/monetary_value"
            }
          ],
          "description": "The total value of the customs item"
        }
      },
      "required": [
        "customs_item_id"
      ],
      "title": "customs_item",
      "type": "object"
    },
    "date": {
      "description": "An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine.\n",
      "example": "2018-09-23T00:00:00.000Z",
      "format": "date-time",
      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2}))?$",
      "title": "date",
      "type": "string"
    },
    "date_time": {
      "description": "An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.\n",
      "example": "2018-09-23T15:00:00.000Z",
      "format": "date-time",
      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
      "title": "date_time",
      "type": "string"
    },
    "delivery_confirmation": {
      "description": "The possible delivery confirmation values",
      "enum": [
        "none",
        "delivery",
        "signature",
        "adult_signature",
        "direct_signature",
        "delivery_mailed"
      ],
      "title": "delivery_confirmation",
      "type": "string"
    },
    "deprecated_manifest": {
      "additionalProperties": false,
      "description": "Deprecated manifest resource",
      "properties": {
        "carrier_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the carrier",
          "x-deprecated": true
        },
        "created_at": {
          "description": "The date-time that the manifest was created",
          "example": "2019-07-12T13:37:39.050Z",
          "format": "date-time",
          "minLength": 1,
          "type": "string",
          "x-deprecated": true
        },
        "form_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the form",
          "x-deprecated": true
        },
        "manifest_download": {
          "allOf": [
            {
              "$ref": "#/definitions/manifest_download"
            }
          ],
          "x-deprecated": true
        },
        "manifest_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the manifest",
          "x-deprecated": true
        },
        "ship_date": {
          "description": "The date-time that the manifests shipments will be picked up",
          "example": "2019-07-12T13:37:39.050Z",
          "format": "date-time",
          "minLength": 1,
          "type": "string",
          "x-deprecated": true
        },
        "shipments": {
          "description": "The number of shipments that are included in this manifest",
          "example": 100,
          "format": "int32",
          "minimum": 1,
          "readOnly": true,
          "type": "integer",
          "x-deprecated": true
        },
        "submission_id": {
          "description": "A string that uniquely identifies the submission",
          "example": 9.475711899564878e+21,
          "minLength": 1,
          "type": "string",
          "x-deprecated": true
        },
        "warehouse_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the warehouse",
          "x-deprecated": true
        }
      },
      "title": "deprecated_manifest",
      "type": "object"
    },
    "dhl_express_account_settings": {
      "additionalProperties": false,
      "description": "A DHL Express account settings",
      "properties": {
        "is_primary_account": {
          "description": "Indicates if this is primary account",
          "type": "boolean"
        },
        "nickname": {
          "description": "Account nickname",
          "minLength": 1,
          "type": "string"
        },
        "should_hide_account_number_on_archive_doc": {
          "description": "Indicates if the account number should be hidden on the archive documentation",
          "type": "boolean"
        }
      },
      "title": "dhl_express_account_settings",
      "type": "object"
    },
    "dhl_express_settings_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/dhl_express_account_settings"
        }
      ],
      "description": "A DHL Express response body",
      "title": "dhl_express_settings_response_body",
      "type": "object"
    },
    "dimension_unit": {
      "description": "The dimension units that are supported by ShipEngine.",
      "enum": [
        "inch",
        "centimeter"
      ],
      "title": "dimension_unit",
      "type": "string"
    },
    "dimensions": {
      "additionalProperties": false,
      "description": "The dimensions of a package",
      "properties": {
        "height": {
          "default": 0,
          "description": "The length of the package, in the specified unit",
          "format": "double",
          "minimum": 0,
          "type": "number"
        },
        "length": {
          "default": 0,
          "description": "The length of the package, in the specified unit",
          "format": "double",
          "minimum": 0,
          "type": "number"
        },
        "unit": {
          "allOf": [
            {
              "$ref": "#/definitions/dimension_unit"
            }
          ],
          "default": "inch"
        },
        "width": {
          "default": 0,
          "description": "The width of the package, in the specified unit",
          "format": "double",
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "unit",
        "length",
        "width",
        "height"
      ],
      "title": "dimensions",
      "type": "object"
    },
    "disconnect_insurer_response_body": {
      "title": "disconnect_insurer_response_body",
      "type": "object"
    },
    "download_file_pdf_response_body": {
      "format": "binary",
      "title": "download_file_pdf_response_body",
      "type": "string"
    },
    "download_file_png_response_body": {
      "format": "binary",
      "title": "download_file_png_response_body",
      "type": "string"
    },
    "download_file_zpl_response_body": {
      "format": "binary",
      "title": "download_file_zpl_response_body",
      "type": "string"
    },
    "email": {
      "description": "An email address.",
      "example": "john.doe@example.com",
      "format": "email",
      "minLength": 1,
      "title": "email",
      "type": "string"
    },
    "empty_response_body": {
      "maxLength": 0,
      "title": "empty_response_body",
      "type": "string"
    },
    "error": {
      "additionalProperties": false,
      "description": "The error structure that gets returned with almost all failed API calls\n",
      "properties": {
        "error_code": {
          "allOf": [
            {
              "$ref": "#/definitions/error_code"
            }
          ]
        },
        "error_source": {
          "allOf": [
            {
              "$ref": "#/definitions/error_source"
            }
          ]
        },
        "error_type": {
          "allOf": [
            {
              "$ref": "#/definitions/error_type"
            }
          ]
        },
        "message": {
          "description": "An error message associated with the failed API call",
          "example": "Body of request cannot be null.",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "error_source",
        "error_type",
        "error_code",
        "message"
      ],
      "title": "error",
      "type": "object"
    },
    "error_code": {
      "description": "The error code specified for the failed API Call",
      "enum": [
        "auto_fund_not_supported",
        "batch_cannot_be_modified",
        "carrier_conflict",
        "carrier_disconnected",
        "carrier_not_connected",
        "carrier_not_supported",
        "confirmation_not_supported",
        "default_warehouse_cannot_be_deleted",
        "field_conflict",
        "field_value_required",
        "forbidden",
        "identifier_conflict",
        "identifiers_must_match",
        "invalid_address",
        "invalid_billing_plan",
        "invalid_field_value",
        "invalid_identifier",
        "invalid_status",
        "invalid_string_length",
        "label_images_not_supported",
        "meter_failure",
        "order_source_not_active",
        "rate_limit_exceeded",
        "refresh_not_supported",
        "request_body_required",
        "return_label_not_supported",
        "settings_not_supported",
        "subscription_inactive",
        "terms_not_accepted",
        "tracking_not_supported",
        "trial_expired",
        "unauthorized",
        "unknown",
        "unspecified",
        "verification_failure",
        "warehouse_conflict",
        "webhook_event_type_conflict"
      ],
      "title": "error_code",
      "type": "string"
    },
    "error_response_body": {
      "additionalProperties": false,
      "description": "An error response body",
      "properties": {
        "errors": {
          "description": "The errors associated with the failed API call",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/error"
              }
            ]
          },
          "readOnly": true,
          "type": "array"
        },
        "request_id": {
          "allOf": [
            {
              "$ref": "#/definitions/uuid"
            }
          ],
          "description": "A UUID that uniquely identifies the request id.\nThis can be given to the support team to help debug non-trivial issues that may occur\n"
        }
      },
      "required": [
        "request_id",
        "errors"
      ],
      "title": "error_response_body",
      "type": "object"
    },
    "error_source": {
      "description": "The source of the error, as indicated by the name this informs us if the API call failed because of the\ncarrier, the order source, or the ShipEngine API itself.\n",
      "enum": [
        "carrier",
        "order_source",
        "shipengine"
      ],
      "title": "error_source",
      "type": "string"
    },
    "error_type": {
      "description": "The type of error\n",
      "enum": [
        "account_status",
        "business_rules",
        "validation",
        "security",
        "system",
        "integrations"
      ],
      "title": "error_type",
      "type": "string"
    },
    "estimate_rates_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/rate_estimate_options"
        }
      ],
      "description": "A rate estimate request body",
      "required": [
        "from_country_code",
        "from_postal_code",
        "from_city_locality",
        "from_state_provinced",
        "to_country_code",
        "to_postal_code",
        "to_city_locality",
        "to_state_province",
        "weight",
        "ship_date"
      ],
      "title": "estimate_rates_request_body",
      "type": "object"
    },
    "estimate_rates_response_body": {
      "description": "A rate estimate response body",
      "items": {
        "allOf": [
          {
            "$ref": "#/definitions/rate"
          }
        ]
      },
      "title": "estimate_rates_response_body",
      "type": "array"
    },
    "fedex_account_settings": {
      "additionalProperties": false,
      "description": "A Fedex account settings request body",
      "properties": {
        "is_primary_account": {
          "type": "boolean"
        },
        "nickname": {
          "description": "Account nickname",
          "minLength": 1,
          "type": "string"
        },
        "pickup_type": {
          "allOf": [
            {
              "$ref": "#/definitions/fedex_pickup_type"
            }
          ]
        },
        "smart_post_endorsement": {
          "allOf": [
            {
              "$ref": "#/definitions/ancillary_service_endorsement"
            }
          ]
        },
        "smart_post_hub": {
          "allOf": [
            {
              "$ref": "#/definitions/smart_post_hub"
            }
          ]
        }
      },
      "title": "fedex_account_settings",
      "type": "object"
    },
    "fedex_account_settings_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/fedex_account_settings"
        }
      ],
      "description": "A Fedex account settings request body",
      "title": "fedex_account_settings_request_body",
      "type": "object"
    },
    "fedex_pickup_type": {
      "description": "Determines how FedEx will pickup your packages\n\n|Pickup Type               |Description\n|--------------------------|-----------------------------------------\n|`none`                    | Not specified\n|`regular_pickup`          | You already have a daily pickup scheduled with FedEx\n|`request_courier`         | You will call FedEx to request a courier\n|`drop_box`                | You will drop-off packages in a FedEx drop box\n|`business_service_center` | You will drop-off packages at an authorized FedEx business service center\n|`station`                 | You will drop-off the package at a FedEx Station\n",
      "enum": [
        "none",
        "regular_pickup",
        "request_courier",
        "drop_box",
        "business_service_center",
        "station"
      ],
      "title": "fedex_pickup_type",
      "type": "string"
    },
    "fedex_settings_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/fedex_account_settings_request_body"
        }
      ],
      "description": "A Fedex settings response body",
      "title": "fedex_settings_response_body",
      "type": "object"
    },
    "get_batch_by_external_id_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/batch"
        }
      ],
      "description": "A get batch by external id response body",
      "title": "get_batch_by_external_id_response_body",
      "type": "object"
    },
    "get_batch_by_id_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/batch"
        }
      ],
      "description": "A get batch by id response body",
      "title": "get_batch_by_id_response_body",
      "type": "object"
    },
    "get_carrier_by_id_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/carrier"
        }
      ],
      "description": "A get carrier by id response body",
      "title": "get_carrier_by_id_response_body",
      "type": "object"
    },
    "get_carrier_options_response_body": {
      "additionalProperties": false,
      "description": "A carrier list options response body",
      "properties": {
        "options": {
          "description": "AN array of carrier options",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/carrier_advanced_option"
              }
            ],
            "description": "Carrer options",
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "title": "get_carrier_options_response_body",
      "type": "object"
    },
    "get_carrier_settings_response_body": {
      "title": "get_carrier_settings_response_body"
    },
    "get_carriers_response_body": {
      "allOf": [
        {
          "$ref": "#/definitions/list_carriers_response_body"
        },
        {
          "$ref": "#/definitions/error_response_body"
        }
      ],
      "title": "get_carriers_response_body"
    },
    "get_insurance_balance_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/monetary_value"
        }
      ],
      "description": "A get insurance balance response body",
      "title": "get_insurance_balance_response_body",
      "type": "object"
    },
    "get_label_by_external_shipment_id_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/label"
        }
      ],
      "description": "A get label by external shipment id response body",
      "title": "get_label_by_external_shipment_id_response_body",
      "type": "object"
    },
    "get_label_by_id_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/label"
        }
      ],
      "description": "A get label by id response body",
      "title": "get_label_by_id_response_body",
      "type": "object"
    },
    "get_manifest_by_id_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/manifest"
        }
      ],
      "description": "A get manifest by id response body",
      "required": [
        "manifest_id",
        "form_id",
        "created_at",
        "ship_date",
        "shipments",
        "warehouse_id",
        "submission_id",
        "carrier_id",
        "manifest_download"
      ],
      "title": "get_manifest_by_id_response_body",
      "type": "object"
    },
    "get_package_type_by_id_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/package_type"
        }
      ],
      "description": "A get package type by id response body",
      "title": "get_package_type_by_id_response_body",
      "type": "object"
    },
    "get_rate_by_id_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/rate"
        }
      ],
      "description": "A rate response body",
      "required": [
        "rates",
        "invalid_rates",
        "rate_request_id",
        "shipment_id",
        "created_at",
        "status",
        "errors"
      ],
      "title": "get_rate_by_id_response_body",
      "type": "object"
    },
    "get_shipment_by_external_id_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/shipment"
        }
      ],
      "description": "A get shipment by external id response body",
      "title": "get_shipment_by_external_id_response_body",
      "type": "object"
    },
    "get_shipment_by_id_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/shipment"
        }
      ],
      "description": "A get shipment by id response body",
      "title": "get_shipment_by_id_response_body",
      "type": "object"
    },
    "get_tracking_log_from_label_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/tracking_information"
        }
      ],
      "description": "A get tracking log from label response body",
      "required": [
        "tracking_number",
        "status_code",
        "carrier_status_code",
        "estimated_delivery_date",
        "events"
      ],
      "title": "get_tracking_log_from_label_response_body",
      "type": "object"
    },
    "get_tracking_log_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/tracking_information"
        }
      ],
      "description": "A get tracking log response body",
      "required": [
        "tracking_number",
        "status_code",
        "carrier_status_code",
        "estimated_delivery_date",
        "events"
      ],
      "title": "get_tracking_log_response_body",
      "type": "object"
    },
    "get_warehouse_by_id_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/warehouse"
        }
      ],
      "description": "A get warehouse by id response body",
      "required": [
        "warehouse_id",
        "name",
        "created_at",
        "origin_address",
        "return_address"
      ],
      "title": "get_warehouse_by_id_response_body",
      "type": "object"
    },
    "get_webhook_by_id_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/webhook"
        }
      ],
      "description": "A get webhook id response body",
      "required": [
        "webhook_id",
        "url",
        "event"
      ],
      "title": "get_webhook_by_id_response_body",
      "type": "object"
    },
    "image_id": {
      "description": "Used to identify an image resource.",
      "example": "img_DtBXupDBxREpHnwEXhTfgK",
      "minLength": 4,
      "title": "image_id",
      "type": "string"
    },
    "insurance_provider": {
      "description": "The possible insurance provider values",
      "enum": [
        "none",
        "shipsurance",
        "carrier",
        "third_party"
      ],
      "title": "insurance_provider",
      "type": "string"
    },
    "international_shipment_options": {
      "additionalProperties": false,
      "description": "Options for international shipments, such as customs declarations.",
      "properties": {
        "contents": {
          "allOf": [
            {
              "$ref": "#/definitions/package_contents"
            }
          ],
          "default": "merchandise",
          "description": "The type of contents in this shipment.  This may impact import duties or customs treatment."
        },
        "customs_items": {
          "default": [],
          "description": "Customs declarations for each item in the shipment.",
          "items": {
            "$ref": "#/definitions/customs_item"
          },
          "minItems": 0,
          "type": "array"
        },
        "non_delivery": {
          "allOf": [
            {
              "$ref": "#/definitions/non_delivery"
            }
          ],
          "default": "return_to_sender",
          "description": "Indicates what to do if a package is unable to be delivered."
        }
      },
      "required": [
        "contents",
        "non_delivery"
      ],
      "title": "international_shipment_options",
      "type": "object"
    },
    "label": {
      "additionalProperties": false,
      "description": "A label represents the physical sticker that you affix to a package to ship it.  ShipEngine makes it easy for you to [create labels](https://www.shipengine.com/docs/labels/create-a-label/) and then download them in PDF, PNG, or ZPL format so you can print them.\n",
      "properties": {
        "batch_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "If this label was created as part of a [batch](https://www.shipengine.com/docs/labels/bulk/), then this is the unique ID of that batch.\n",
          "readOnly": true
        },
        "carrier_code": {
          "allOf": [
            {
              "$ref": "#/definitions/carrier_code"
            }
          ],
          "description": "The [shipping carrier](https://www.shipengine.com/docs/carriers/setup/) who will ship the package, such as `fedex`, `dhl_express`, `stamps_com`, etc.\n",
          "readOnly": true
        },
        "carrier_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "The unique ID of the [carrier account](https://www.shipengine.com/docs/carriers/setup/) that was used to create this label\n",
          "readOnly": true
        },
        "charge_event": {
          "allOf": [
            {
              "$ref": "#/definitions/label_charge_event"
            }
          ],
          "description": "The label charge event.\n"
        },
        "created_at": {
          "allOf": [
            {
              "$ref": "#/definitions/date_time"
            }
          ],
          "description": "The date and time that the label was created in ShipEngine.",
          "readOnly": true
        },
        "form_download": {
          "allOf": [
            {
              "$ref": "#/definitions/link"
            }
          ],
          "description": "The link to downlaod the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it.\n",
          "readOnly": true,
          "x-nullable": true
        },
        "insurance_claim": {
          "allOf": [
            {
              "$ref": "#/definitions/link"
            }
          ],
          "description": "The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission.\n",
          "readOnly": true,
          "x-nullable": true
        },
        "insurance_cost": {
          "allOf": [
            {
              "$ref": "#/definitions/monetary_value"
            }
          ],
          "description": "The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost.\n",
          "readOnly": true
        },
        "is_international": {
          "description": "Indicates whether this is an international shipment.  That is, the originating country and destination country are different.\n",
          "readOnly": true,
          "type": "boolean"
        },
        "is_return_label": {
          "description": "Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.\n",
          "type": "boolean"
        },
        "label_download": {
          "allOf": [
            {
              "$ref": "#/definitions/label_download"
            }
          ],
          "readOnly": true
        },
        "label_download_type": {
          "allOf": [
            {
              "$ref": "#/definitions/label_download_type"
            }
          ],
          "default": "url"
        },
        "label_format": {
          "allOf": [
            {
              "$ref": "#/definitions/label_format"
            }
          ],
          "default": "pdf",
          "description": "The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n"
        },
        "label_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the label. This ID is generated by ShipEngine when the label is created.\n",
          "readOnly": true
        },
        "label_image_id": {
          "allOf": [
            {
              "$ref": "#/definitions/image_id"
            }
          ],
          "description": "The label image resource that was used to create a custom label image.",
          "x-nullable": true
        },
        "label_layout": {
          "allOf": [
            {
              "$ref": "#/definitions/label_layout"
            }
          ],
          "default": "4x6",
          "description": "The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format.\n"
        },
        "outbound_label_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "The `label_id` of the original (outgoing) label that the return label is for. This associates the two labels together, which is\nrequired by some carriers.\n"
        },
        "package_code": {
          "allOf": [
            {
              "$ref": "#/definitions/package_code"
            }
          ],
          "description": "The [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
          "readOnly": true
        },
        "packages": {
          "description": "The label's package(s).\n\n> **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn't allow it, an error will be returned.\n",
          "items": {
            "$ref": "#/definitions/package"
          },
          "readOnly": true,
          "type": "array"
        },
        "rma_number": {
          "description": "An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.\n",
          "type": "string",
          "x-nullable": true
        },
        "service_code": {
          "allOf": [
            {
              "$ref": "#/definitions/service_code"
            }
          ],
          "description": "The [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n",
          "readOnly": true
        },
        "ship_date": {
          "allOf": [
            {
              "$ref": "#/definitions/date"
            }
          ],
          "description": "The date that the package was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.\n",
          "readOnly": true
        },
        "shipment": {
          "allOf": [
            {
              "$ref": "#/definitions/shipment"
            }
          ],
          "description": "The shipment information used to generate the label"
        },
        "shipment_cost": {
          "allOf": [
            {
              "$ref": "#/definitions/monetary_value"
            }
          ],
          "description": "The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs.\n",
          "readOnly": true
        },
        "shipment_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "The shipment that this label is for.  ShipEngine can create a shipment for you automatically when you [create a label](https://www.shipengine.com/docs/labels/create-a-label/), or you can [create your own shipment](https://www.shipengine.com/docs/shipping/create-a-shipment/) and then [use it to print a label](https://www.shipengine.com/docs/labels/create-from-shipment/)\n",
          "readOnly": true
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/label_status"
            }
          ],
          "readOnly": true
        },
        "test_label": {
          "default": false,
          "description": "Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.",
          "type": "boolean",
          "x-deprecated": true
        },
        "trackable": {
          "description": "Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.\n",
          "readOnly": true,
          "type": "boolean"
        },
        "tracking_number": {
          "description": "The tracking number for the package. Tracking number formats vary across carriers.",
          "example": "782758401696",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "tracking_status": {
          "allOf": [
            {
              "$ref": "#/definitions/tracking_status"
            }
          ],
          "description": "The current status of the package, such as `in_transit` or `delivered`",
          "readOnly": true
        },
        "validate_address": {
          "allOf": [
            {
              "$ref": "#/definitions/validate_address"
            }
          ],
          "default": "validate_and_clean"
        },
        "voided": {
          "description": "Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/)\n",
          "readOnly": true,
          "type": "boolean"
        },
        "voided_at": {
          "allOf": [
            {
              "$ref": "#/definitions/date_time"
            }
          ],
          "description": "The date and time that the label was [voided](https://www.shipengine.com/docs/labels/voiding/), or `null` if the label has not been voided\n",
          "readOnly": true,
          "x-nullable": true
        }
      },
      "title": "label",
      "type": "object"
    },
    "label_charge_event": {
      "description": "Determines when the user's account will be charged for the label.",
      "enum": [
        "carrier_default",
        "on_creation",
        "on_carrier_acceptance"
      ],
      "title": "label_charge_event",
      "type": "string"
    },
    "label_download": {
      "additionalProperties": false,
      "description": "Reference to the various downloadable file formats for the generated label\n",
      "properties": {
        "href": {
          "allOf": [
            {
              "$ref": "#/definitions/url"
            }
          ],
          "description": "The URL of the linked resource, if any"
        },
        "pdf": {
          "allOf": [
            {
              "$ref": "#/definitions/url"
            }
          ],
          "description": "The URL for the pdf generated label"
        },
        "png": {
          "allOf": [
            {
              "$ref": "#/definitions/url"
            }
          ],
          "description": "The URL for the png generated label"
        },
        "zpl": {
          "allOf": [
            {
              "$ref": "#/definitions/url"
            }
          ],
          "description": "The URL for the zpl generated label"
        }
      },
      "title": "label_download",
      "type": "object"
    },
    "label_download_type": {
      "description": "There are two different ways to [download a label](https://www.shipengine.com/docs/labels/downloading/):\n\n|Label Download Type | Description\n|--------------------|------------------------------\n|`url`               |You will receive a URL, which you can use to download the label in a separate request. The URL will remain valid for 90 days.<br><br>This is the default if `label_download_type` is unspecified.\n|`inline`            |You will receive the Base64-encoded label as part of the response. No need for a second request to download the label.\n",
      "enum": [
        "url",
        "inline"
      ],
      "title": "label_download_type",
      "type": "string"
    },
    "label_format": {
      "description": "The possible file formats in which shipping labels can be downloaded. We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n\n|Label Format  | Supported Carriers\n|--------------|-----------------------------------\n|`pdf`         | All carriers\n|`png`         | `fedex` <br> `stamps_com` <br> `ups` <br> `usps`\n|`zpl`         | `access_worldwide` <br> `apc` <br> `asendia` <br> `dhl_global_mail` <br> `dhl_express` <br> `dhl_express_australia` <br> `dhl_express_canada` <br> `dhl_express_worldwide` <br> `dhl_express_uk` <br> `dpd` <br> `endicia` <br> `fedex` <br> `fedex_uk` <br> `firstmile` <br> `globegistics` <br> `imex` <br> `newgistics` <br> `ontrac` <br> `rr_donnelley` <br> `stamps_com` <br> `ups` <br> `usps`\n",
      "enum": [
        "pdf",
        "png",
        "zpl"
      ],
      "title": "label_format",
      "type": "string"
    },
    "label_layout": {
      "description": "The available layouts (sizes) in which shipping labels can be downloaded.  The label format determines which sizes are supported. `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format.\n",
      "enum": [
        "4x6",
        "letter"
      ],
      "title": "label_layout",
      "type": "string"
    },
    "label_messages": {
      "additionalProperties": false,
      "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
      "properties": {
        "reference1": {
          "default": null,
          "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n",
          "type": "string",
          "x-nullable": true
        },
        "reference2": {
          "default": null,
          "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n",
          "type": "string",
          "x-nullable": true
        },
        "reference3": {
          "default": null,
          "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "reference1",
        "reference2",
        "reference3"
      ],
      "title": "label_messages",
      "type": "object"
    },
    "label_status": {
      "description": "The possible statuses that a [shipping label](https://www.shipengine.com/docs/labels/create-a-label/) can be in.\n\n|Status       |Description\n|:------------|:-----------------------------------------------------\n|`processing` |When labels are created in a [batch](https://www.shipengine.com/docs/labels/bulk/), it may take a few minutes for all of the labels in the batch to be created.  During this period, they will be in `processing` status.\n|`completed`  |The label was successfully created\n|`error`      |The label could not be created due to an error, such as an invalid delivery address\n|`voided`     |The label has been [voided](https://www.shipengine.com/docs/labels/voiding/)\n",
      "enum": [
        "processing",
        "completed",
        "error",
        "voided"
      ],
      "title": "label_status",
      "type": "string"
    },
    "link": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/optional_link"
        }
      ],
      "description": "A link to a related resource",
      "required": [
        "href"
      ],
      "title": "link",
      "type": "object"
    },
    "list_batch_errors_response_body": {
      "additionalProperties": false,
      "description": "A batch errors response body",
      "properties": {
        "errors": {
          "default": [],
          "description": "The errors currently associated with the batch",
          "items": {
            "$ref": "#/definitions/batch_response_error"
          },
          "readOnly": true,
          "type": "array"
        },
        "links": {
          "allOf": [
            {
              "$ref": "#/definitions/pagination_link"
            }
          ],
          "readOnly": true
        }
      },
      "required": [
        "errors",
        "links"
      ],
      "title": "list_batch_errors_response_body",
      "type": "object"
    },
    "list_batches_response_body": {
      "additionalProperties": false,
      "description": "A list batch response body",
      "properties": {
        "batches": {
          "description": "Batch List",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/batch"
              }
            ],
            "description": "Batch"
          },
          "minItems": 0,
          "readOnly": true,
          "type": "array"
        },
        "links": {
          "allOf": [
            {
              "$ref": "#/definitions/pagination_link"
            }
          ],
          "readOnly": true
        },
        "page": {
          "description": "The page that is currently being read",
          "example": 1,
          "format": "int32",
          "minimum": 1,
          "readOnly": true,
          "type": "integer"
        },
        "pages": {
          "description": "The total number of batch pages the API call returned",
          "example": 10,
          "format": "int32",
          "minimum": 1,
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The total number of batches the API call returned",
          "example": 10,
          "format": "int64",
          "minimum": 0,
          "readOnly": true,
          "type": "integer"
        }
      },
      "required": [
        "batches",
        "total",
        "page",
        "pages",
        "links"
      ],
      "title": "list_batches_response_body",
      "type": "object"
    },
    "list_carrier_package_types_response_body": {
      "additionalProperties": false,
      "description": "A list carrier package types response body",
      "properties": {
        "packages": {
          "description": "An array of custom package types",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/package_type"
              }
            ],
            "description": "Custom Package Type items",
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "title": "list_carrier_package_types_response_body",
      "type": "object"
    },
    "list_carrier_services_response_body": {
      "additionalProperties": false,
      "description": "A carrier list services response body",
      "properties": {
        "services": {
          "description": "An array of services associated with the carrier",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/service"
              }
            ],
            "description": "A carrier service",
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "title": "list_carrier_services_response_body",
      "type": "object"
    },
    "list_carriers_response_body": {
      "additionalProperties": false,
      "description": "A carrier list response body",
      "properties": {
        "carriers": {
          "description": "The carrier response body",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/carrier"
              }
            ],
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "required": [
        "carriers"
      ],
      "title": "list_carriers_response_body",
      "type": "object"
    },
    "list_labels_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/paged_list_response_body"
        }
      ],
      "description": "A list label response body",
      "properties": {
        "labels": {
          "description": "The labels that matched the query criteria.  If no matching labels were found, then this array is empty; otherwise, it contains one page of results.  The last page of results may have fewer labels than the `page_size`.\n",
          "items": {
            "additionalProperties": false,
            "description": "A label represents the physical sticker that you affix to a package to ship it.  ShipEngine makes it easy for you to [create labels](https://www.shipengine.com/docs/labels/create-a-label/) and then download them in PDF, PNG, or ZPL format so you can print them.\n",
            "properties": {
              "batch_id": {
                "allOf": [
                  {
                    "$ref": "#/definitions/se_id"
                  }
                ],
                "description": "If this label was created as part of a [batch](https://www.shipengine.com/docs/labels/bulk/), then this is the unique ID of that batch.\n",
                "readOnly": true
              },
              "carrier_code": {
                "allOf": [
                  {
                    "$ref": "#/definitions/carrier_code"
                  }
                ],
                "description": "The [shipping carrier](https://www.shipengine.com/docs/carriers/setup/) who will ship the package, such as `fedex`, `dhl_express`, `stamps_com`, etc.\n",
                "readOnly": true
              },
              "carrier_id": {
                "allOf": [
                  {
                    "$ref": "#/definitions/se_id"
                  }
                ],
                "description": "The unique ID of the [carrier account](https://www.shipengine.com/docs/carriers/setup/) that was used to create this label\n",
                "readOnly": true
              },
              "charge_event": {
                "allOf": [
                  {
                    "$ref": "#/definitions/label_charge_event"
                  }
                ],
                "description": "The label charge event.\n"
              },
              "created_at": {
                "allOf": [
                  {
                    "$ref": "#/definitions/date_time"
                  }
                ],
                "description": "The date and time that the label was created in ShipEngine.",
                "readOnly": true
              },
              "form_download": {
                "allOf": [
                  {
                    "$ref": "#/definitions/link"
                  }
                ],
                "description": "The link to downlaod the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it.\n",
                "readOnly": true,
                "x-nullable": true
              },
              "insurance_claim": {
                "allOf": [
                  {
                    "$ref": "#/definitions/link"
                  }
                ],
                "description": "The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission.\n",
                "readOnly": true,
                "x-nullable": true
              },
              "insurance_cost": {
                "allOf": [
                  {
                    "$ref": "#/definitions/monetary_value"
                  }
                ],
                "description": "The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost.\n",
                "readOnly": true
              },
              "is_international": {
                "description": "Indicates whether this is an international shipment.  That is, the originating country and destination country are different.\n",
                "readOnly": true,
                "type": "boolean"
              },
              "is_return_label": {
                "description": "Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.\n",
                "type": "boolean"
              },
              "label_download": {
                "allOf": [
                  {
                    "$ref": "#/definitions/label_download"
                  }
                ],
                "readOnly": true
              },
              "label_download_type": {
                "allOf": [
                  {
                    "$ref": "#/definitions/label_download_type"
                  }
                ],
                "default": "url"
              },
              "label_format": {
                "allOf": [
                  {
                    "$ref": "#/definitions/label_format"
                  }
                ],
                "default": "pdf",
                "description": "The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n"
              },
              "label_id": {
                "allOf": [
                  {
                    "$ref": "#/definitions/se_id"
                  }
                ],
                "description": "A string that uniquely identifies the label. This ID is generated by ShipEngine when the label is created.\n",
                "readOnly": true
              },
              "label_image_id": {
                "allOf": [
                  {
                    "$ref": "#/definitions/image_id"
                  }
                ],
                "description": "The label image resource that was used to create a custom label image.",
                "x-nullable": true
              },
              "label_layout": {
                "allOf": [
                  {
                    "$ref": "#/definitions/label_layout"
                  }
                ],
                "default": "4x6",
                "description": "The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format.\n"
              },
              "outbound_label_id": {
                "allOf": [
                  {
                    "$ref": "#/definitions/se_id"
                  }
                ],
                "description": "The `label_id` of the original (outgoing) label that the return label is for. This associates the two labels together, which is\nrequired by some carriers.\n"
              },
              "package_code": {
                "allOf": [
                  {
                    "$ref": "#/definitions/package_code"
                  }
                ],
                "description": "The [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                "readOnly": true
              },
              "packages": {
                "description": "The label's package(s).\n\n> **Note:** Some carriers only allow one package per label. If you attempt to create a multi-package label for a carrier that doesn't allow it, an error will be returned.\n",
                "items": {
                  "$ref": "#/definitions/package"
                },
                "readOnly": true,
                "type": "array"
              },
              "rma_number": {
                "description": "An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.\n",
                "type": "string",
                "x-nullable": true
              },
              "service_code": {
                "allOf": [
                  {
                    "$ref": "#/definitions/service_code"
                  }
                ],
                "description": "The [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n",
                "readOnly": true
              },
              "ship_date": {
                "allOf": [
                  {
                    "$ref": "#/definitions/date"
                  }
                ],
                "description": "The date that the package was (or will be) shippped. ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.\n",
                "readOnly": true
              },
              "shipment": {
                "allOf": [
                  {
                    "$ref": "#/definitions/shipment"
                  }
                ],
                "description": "The shipment information used to generate the label"
              },
              "shipment_cost": {
                "allOf": [
                  {
                    "$ref": "#/definitions/monetary_value"
                  }
                ],
                "description": "The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs.\n",
                "readOnly": true
              },
              "shipment_id": {
                "allOf": [
                  {
                    "$ref": "#/definitions/se_id"
                  }
                ],
                "description": "The shipment that this label is for.  ShipEngine can create a shipment for you automatically when you [create a label](https://www.shipengine.com/docs/labels/create-a-label/), or you can [create your own shipment](https://www.shipengine.com/docs/shipping/create-a-shipment/) and then [use it to print a label](https://www.shipengine.com/docs/labels/create-from-shipment/)\n",
                "readOnly": true
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/definitions/label_status"
                  }
                ],
                "readOnly": true
              },
              "test_label": {
                "default": false,
                "description": "Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.",
                "type": "boolean",
                "x-deprecated": true
              },
              "trackable": {
                "description": "Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.\n",
                "readOnly": true,
                "type": "boolean"
              },
              "tracking_number": {
                "description": "The tracking number for the package. Tracking number formats vary across carriers.",
                "example": "782758401696",
                "minLength": 1,
                "readOnly": true,
                "type": "string"
              },
              "tracking_status": {
                "allOf": [
                  {
                    "$ref": "#/definitions/tracking_status"
                  }
                ],
                "description": "The current status of the package, such as `in_transit` or `delivered`",
                "readOnly": true
              },
              "validate_address": {
                "allOf": [
                  {
                    "$ref": "#/definitions/validate_address"
                  }
                ],
                "default": "validate_and_clean"
              },
              "voided": {
                "description": "Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/)\n",
                "readOnly": true,
                "type": "boolean"
              },
              "voided_at": {
                "allOf": [
                  {
                    "$ref": "#/definitions/date_time"
                  }
                ],
                "description": "The date and time that the label was [voided](https://www.shipengine.com/docs/labels/voiding/), or `null` if the label has not been voided\n",
                "readOnly": true,
                "x-nullable": true
              }
            },
            "title": "label",
            "type": "object"
          },
          "minItems": 0,
          "type": "array"
        }
      },
      "required": [
        "labels"
      ],
      "title": "list_labels_response_body",
      "type": "object"
    },
    "list_manifests_response_body": {
      "additionalProperties": false,
      "description": "A list manifests response body",
      "properties": {
        "links": {
          "allOf": [
            {
              "$ref": "#/definitions/pagination_link"
            }
          ],
          "description": "Helpful links to other pages of results",
          "readOnly": true
        },
        "manifests": {
          "default": [],
          "description": "The list of available manifests",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/manifest"
              }
            ],
            "description": "A single manifest",
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        },
        "page": {
          "description": "Current page of the list manifests results",
          "example": 3,
          "format": "int32",
          "minimum": 1,
          "readOnly": true,
          "type": "integer"
        },
        "pages": {
          "description": "Total number of pages for list manifests results",
          "example": 4,
          "format": "int32",
          "minimum": 1,
          "readOnly": true,
          "type": "integer"
        },
        "total": {
          "description": "The total number of manifests returned",
          "example": 3,
          "format": "int64",
          "minimum": 0,
          "readOnly": true,
          "type": "integer"
        }
      },
      "required": [
        "manifests",
        "total",
        "page",
        "pages",
        "links"
      ],
      "title": "list_manifests_response_body",
      "type": "object"
    },
    "list_package_types_response_body": {
      "additionalProperties": false,
      "description": "A list package types response body",
      "properties": {
        "packages": {
          "description": "An array of custom package types",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/package_type"
              }
            ],
            "description": "Custom Package Types items",
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "title": "list_package_types_response_body",
      "type": "object"
    },
    "list_shipment_errors_response_body": {
      "additionalProperties": false,
      "description": "A shipment errors response body",
      "properties": {
        "errors": {
          "description": "The errors associated with the shipment.",
          "items": {
            "$ref": "#/definitions/shipment_response_error"
          },
          "readOnly": true,
          "type": "array"
        },
        "links": {
          "allOf": [
            {
              "$ref": "#/definitions/pagination_link"
            }
          ],
          "readOnly": true
        }
      },
      "required": [
        "errors",
        "links"
      ],
      "title": "list_shipment_errors_response_body",
      "type": "object"
    },
    "list_shipment_rates_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/rates_information"
        }
      ],
      "description": "A list shipment rates response body",
      "required": [
        "rates",
        "invalid_rates",
        "rate_request_id",
        "shipment_id",
        "created_at",
        "status",
        "errors"
      ],
      "title": "list_shipment_rates_response_body",
      "type": "object"
    },
    "list_shipments_response_body": {
      "additionalProperties": false,
      "description": "A list shipment response body",
      "properties": {
        "links": {
          "allOf": [
            {
              "$ref": "#/definitions/pagination_link"
            }
          ],
          "readOnly": true
        },
        "page": {
          "example": "????",
          "format": "int32",
          "minimum": 1,
          "readOnly": true,
          "type": "integer"
        },
        "pages": {
          "format": "int32",
          "minimum": 1,
          "readOnly": true,
          "type": "integer"
        },
        "shipments": {
          "description": "The list of shipments returned by the api call",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/shipment"
              }
            ],
            "description": "A shipment object",
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        },
        "total": {
          "description": "Total number of shipments returned by the api call",
          "example": 1990,
          "format": "int64",
          "minimum": 0,
          "readOnly": true,
          "type": "integer"
        }
      },
      "required": [
        "shipments",
        "total",
        "page",
        "pages",
        "links"
      ],
      "title": "list_shipments_response_body",
      "type": "object"
    },
    "list_tags_response_body": {
      "additionalProperties": false,
      "description": "Response body from a successful GET /tags API call",
      "properties": {
        "tags": {
          "description": "The array of tags returned by the API call",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/tag"
              }
            ]
          },
          "type": "array"
        }
      },
      "title": "list_tags_response_body",
      "type": "object"
    },
    "list_warehouses_response_body": {
      "additionalProperties": false,
      "description": "A warehouse list response body",
      "properties": {
        "warehouses": {
          "description": "The array of warehouses returned by the API call",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/warehouse"
              }
            ],
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "required": [
        "warehouses"
      ],
      "title": "list_warehouses_response_body",
      "type": "object"
    },
    "list_webhooks_response_body": {
      "description": "A webhook list response body",
      "items": {
        "allOf": [
          {
            "$ref": "#/definitions/webhook"
          }
        ],
        "description": "The webhook list response body"
      },
      "title": "list_webhooks_response_body",
      "type": "array"
    },
    "manifest": {
      "additionalProperties": false,
      "description": "Used for combining packages into one scannable form that a carrier can use when picking up a large\nnumber of shipments\n",
      "properties": {
        "carrier_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the carrier",
          "readOnly": true
        },
        "created_at": {
          "description": "The date-time that the manifest was created",
          "example": "2019-07-12T13:37:39.050Z",
          "format": "date-time",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "form_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the form",
          "readOnly": true
        },
        "manifest_download": {
          "allOf": [
            {
              "$ref": "#/definitions/manifest_download"
            }
          ],
          "readOnly": true
        },
        "manifest_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the manifest",
          "readOnly": true
        },
        "ship_date": {
          "description": "The date-time that the manifests shipments will be picked up",
          "example": "2019-07-12T13:37:39.050Z",
          "format": "date-time",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "shipments": {
          "description": "The number of shipments that are included in this manifest",
          "example": 100,
          "format": "int32",
          "minimum": 1,
          "readOnly": true,
          "type": "integer"
        },
        "submission_id": {
          "description": "A string that uniquely identifies the submission",
          "example": 9.475711899564878e+21,
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "warehouse_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the warehouse",
          "readOnly": true
        }
      },
      "title": "manifest",
      "type": "object"
    },
    "manifest_download": {
      "additionalProperties": false,
      "description": "Object containing the href link to download the manifest file",
      "properties": {
        "href": {
          "allOf": [
            {
              "$ref": "#/definitions/url"
            }
          ],
          "description": "The URL of the linked resource, if any"
        }
      },
      "title": "manifest_download",
      "type": "object"
    },
    "manifests": {
      "additionalProperties": false,
      "description": "An array of manifest resources",
      "properties": {
        "manifests": {
          "items": {
            "$ref": "#/definitions/manifest"
          },
          "type": "array"
        }
      },
      "title": "manifests",
      "type": "object"
    },
    "modify_batch": {
      "additionalProperties": false,
      "description": "A modify batch object",
      "properties": {
        "rate_ids": {
          "description": "Array of Rate IDs to be modifed on the batch",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/se_id"
              }
            ],
            "description": "The Rate ID to be modified on the batch"
          },
          "type": "array"
        },
        "shipment_ids": {
          "description": "The Shipment Ids to be modified on the batch",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/se_id"
              }
            ],
            "description": "The Shipment ID to be modified on the batch"
          },
          "type": "array"
        }
      },
      "title": "modify_batch",
      "type": "object"
    },
    "monetary_value": {
      "additionalProperties": false,
      "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
      "properties": {
        "amount": {
          "description": "The monetary amount, in the specified currency.",
          "format": "double",
          "minimum": 0,
          "type": "number"
        },
        "currency": {
          "allOf": [
            {
              "$ref": "#/definitions/currency"
            }
          ]
        }
      },
      "required": [
        "currency",
        "amount"
      ],
      "title": "monetary_value",
      "type": "object"
    },
    "non_delivery": {
      "description": "The possible non delivery values",
      "enum": [
        "return_to_sender",
        "treat_as_abandoned"
      ],
      "title": "non_delivery",
      "type": "string"
    },
    "normalized_entity": {
      "additionalProperties": true,
      "description": "The normalized value of the entity.\n\nMost entity results have a `value` field, which is the normalized value of the entity.  For example, if the substring \"john doe\" was recognized as a \"person\" entity, then the value might be normalized to have proper capitalization (e.g. \"John Doe\").  Or if the substring \"ft worth\" was recognized as a \"city\" entity, then the value might be normalized to \"Fort Worth\".\n\nSome entities have other information in addition to, or instead of a `value`.  For example, a \"dimensions\" entity will have separate fields for `length`, `width`, `height`, and `unit`.\n",
      "properties": {},
      "title": "normalized_entity",
      "type": "object"
    },
    "optional_link": {
      "additionalProperties": false,
      "description": "A link to a related resource, or an empty object if there is no resource to link to",
      "properties": {
        "href": {
          "allOf": [
            {
              "$ref": "#/definitions/url"
            }
          ],
          "description": "The URL of the linked resource, if any"
        },
        "type": {
          "description": "The type of resource, or the type of relationship to the parent resource",
          "minLength": 1,
          "type": "string"
        }
      },
      "title": "optional_link",
      "type": "object"
    },
    "order_source_name": {
      "description": "The order sources that are supported by ShipEngine",
      "enum": [
        "amazon_ca",
        "amazon_us",
        "brightpearl",
        "channel_advisor",
        "cratejoy",
        "ebay",
        "etsy",
        "jane",
        "groupon_goods",
        "magento",
        "paypal",
        "seller_active",
        "shopify",
        "stitch_labs",
        "squarespace",
        "three_dcart",
        "tophatter",
        "walmart",
        "woo_commerce",
        "volusion"
      ],
      "title": "order_source_name",
      "type": "string"
    },
    "package": {
      "additionalProperties": false,
      "description": "A package associated with a [shipping label](https://www.shipengine.com/docs/labels/create-a-label/)",
      "properties": {
        "dimensions": {
          "allOf": [
            {
              "$ref": "#/definitions/dimensions"
            }
          ],
          "description": "The package dimensions"
        },
        "external_package_id": {
          "description": "An external package id.",
          "minLength": 1,
          "type": "string"
        },
        "insured_value": {
          "allOf": [
            {
              "$ref": "#/definitions/monetary_value"
            }
          ],
          "default": [
            {
              "amount": 0,
              "currency": "usd"
            }
          ],
          "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n"
        },
        "label_messages": {
          "allOf": [
            {
              "$ref": "#/definitions/label_messages"
            }
          ]
        },
        "package_code": {
          "allOf": [
            {
              "$ref": "#/definitions/package_code"
            }
          ],
          "description": "The [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n"
        },
        "tracking_number": {
          "allOf": [
            {
              "$ref": "#/definitions/tracking_number"
            }
          ],
          "description": "The tracking number for the package.  The format depends on the carrier.\n",
          "readOnly": true
        },
        "weight": {
          "allOf": [
            {
              "$ref": "#/definitions/weight"
            }
          ],
          "description": "The package weight"
        }
      },
      "required": [
        "weight"
      ],
      "title": "package",
      "type": "object"
    },
    "package_code": {
      "description": "A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc. Use the code `package` for custom or unknown package types.\n",
      "example": "small_flat_rate_box",
      "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
      "title": "package_code",
      "type": "string"
    },
    "package_contents": {
      "description": "The possible package contents values",
      "enum": [
        "merchandise",
        "documents",
        "gift",
        "returned_goods",
        "sample"
      ],
      "title": "package_contents",
      "type": "string"
    },
    "package_type": {
      "additionalProperties": false,
      "description": "A package type that a carrier supports for shipment.",
      "properties": {
        "description": {
          "description": "Provides a helpful description for the custom package.",
          "example": "Packaging for laptops",
          "type": "string",
          "x-nullable": true
        },
        "dimensions": {
          "allOf": [
            {
              "$ref": "#/definitions/dimensions"
            }
          ],
          "description": "The custom dimensions for the package."
        },
        "name": {
          "example": "laptop_box",
          "minLength": 1,
          "type": "string"
        },
        "package_code": {
          "allOf": [
            {
              "$ref": "#/definitions/package_code"
            }
          ]
        },
        "package_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the package."
        }
      },
      "required": [
        "name",
        "package_code"
      ],
      "title": "package_type",
      "type": "object"
    },
    "paged_list_response_body": {
      "additionalProperties": true,
      "description": "Many ShipEngine endpoints return a paged list of items.  In addition to the returned items, these responses also include information about the total number of items, the number of pages of results, and URLs of other pages of results.\n",
      "properties": {
        "links": {
          "allOf": [
            {
              "$ref": "#/definitions/pagination_link"
            }
          ]
        },
        "page": {
          "description": "The current page number of results.  For example, if there are 80 results, and the page size is 25, then `page` could be 1, 2, 3, or 4.  The first three pages would contain 25 items each, and the fourth page would contain the five remaining items.",
          "example": 1,
          "minimum": 1,
          "type": "integer"
        },
        "pages": {
          "description": "The total number of pages of results.  For example, if there are 80 results, and the page size is 25, then `pages` would be 4.  The first three pages would contain 25 items each, and the fourth page would contain the five remaining items.  If there are no results, then `pages` will be zero.",
          "example": 4,
          "minimum": 0,
          "type": "integer"
        },
        "total": {
          "description": "The total number of items across all pages of results",
          "example": 2750,
          "minimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "total",
        "page",
        "pages",
        "links"
      ],
      "title": "paged_list_response_body",
      "type": "object"
    },
    "pagination_link": {
      "additionalProperties": false,
      "description": "Helpful links to other pages of results",
      "properties": {
        "first": {
          "allOf": [
            {
              "$ref": "#/definitions/link"
            }
          ],
          "description": "The link to the first page of results.  This object will _always_ have an `href` field. If there are no results, then the first page will contain an empty array of items.\n"
        },
        "last": {
          "allOf": [
            {
              "$ref": "#/definitions/link"
            }
          ],
          "description": "The link to the final page of results.  This object will _always_ have an `href` field. If there are no results, then the final page will contain an empty array of items.\n"
        },
        "next": {
          "allOf": [
            {
              "$ref": "#/definitions/optional_link"
            }
          ],
          "description": "The link to the next page of results.  The `href` field will only be set when the `page` is less than `pages`.\n"
        },
        "prev": {
          "allOf": [
            {
              "$ref": "#/definitions/optional_link"
            }
          ],
          "description": "The link to the previous page of results.  The `href` field will only be set when the `page` is 2 or greater.\n"
        }
      },
      "required": [
        "first",
        "last",
        "prev",
        "next"
      ],
      "title": "pagination_link",
      "type": "object"
    },
    "parse_address_request_body": {
      "additionalProperties": false,
      "description": "The only required field is `text`, which is the text to be parsed. You can optionally also provide an `address` containing already-known values. For example, you may already know the recipient's name, city, and country, and only want to parse the street address into separate lines.\n",
      "properties": {
        "address": {
          "allOf": [
            {
              "$ref": "#/definitions/partial_address"
            }
          ],
          "description": "You can optionally provide any already-known address values. For example, you may already know the recipient's name, city, and country, and only want to parse the street address into separate lines.\n"
        },
        "text": {
          "description": "The unstructured text that contains address-related entities",
          "example": "Margie McMiller at 3800 North Lamar suite 200 in austin, tx.  The zip code there is 78652.",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "parse_address_request_body",
      "type": "object"
    },
    "parse_address_response_body": {
      "additionalProperties": false,
      "description": "The parsed address, as well as a confidence score and a list of all the entities that were recognized in the text.\n",
      "properties": {
        "address": {
          "allOf": [
            {
              "$ref": "#/definitions/partial_address"
            }
          ],
          "description": "The parsed address.  This address may not be complete, depending on how much information was included in the text and how confident the API is about each recognized entity.\n\n> **Note:** The address-recognition API does not currently perform any validation of the parsed address, so we recommend that you use the [address-validation API](https://www.shipengine.com/docs/addresses/validation/) to ensure that the address is correct.\n"
        },
        "entities": {
          "description": "All of the entities that were recognized in the text. An \"entity\" is a single piece of data, such as a city, a postal code, or an address line.  Each entity includes the original text and the parsed value.\n",
          "items": {
            "$ref": "#/definitions/recognized_entity"
          },
          "minItems": 0,
          "type": "array"
        },
        "score": {
          "description": "A confidence score between zero and one that indicates how certain the API is that it understood the text.\n",
          "format": "double",
          "maximum": 1,
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "score",
        "address",
        "entities"
      ],
      "title": "parse_address_response_body",
      "type": "object"
    },
    "parse_shipment_request_body": {
      "additionalProperties": false,
      "description": "The only required field is `text`, which is the text to be parsed. You can optionally also provide a `shipment` containing any already-known values. For example, you probably already know the `ship_from` address, and you may also already know what carrier and service you want to use.\n",
      "properties": {
        "shipment": {
          "allOf": [
            {
              "$ref": "#/definitions/partial_shipment"
            }
          ],
          "description": "You can optionally provide a `shipment` object containing any already-known values. For example, you probably already know the `ship_from` address, and you may also already know what carrier and service you want to use.\n"
        },
        "text": {
          "description": "The unstructured text that contains shipping-related entities",
          "example": "I have a 4oz package that's 5x10x14in, and I need to ship it to Margie McMiller at 3800 North Lamar suite 200 in austin, tx 78652. Please send it via USPS first class and require an adult signature. It also needs to be insured for $400.\n",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "parse_shipment_request_body",
      "type": "object"
    },
    "parse_shipment_response_body": {
      "additionalProperties": false,
      "description": "The parsed shipment, as well as a confidence score and a list of all the shipping entities that were recognized in the text.\n",
      "properties": {
        "entities": {
          "description": "All of the entities that were recognized in the text. An \"entity\" is a single piece of data, such as a city, a postal code, a carrier name, or a package weight.  Each entity includes the original text and the parsed value.\n",
          "items": {
            "$ref": "#/definitions/recognized_entity"
          },
          "minItems": 0,
          "type": "array"
        },
        "score": {
          "description": "A confidence score between zero and one that indicates how certain the API is that it understood the text.\n",
          "format": "double",
          "maximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "shipment": {
          "allOf": [
            {
              "$ref": "#/definitions/partial_shipment"
            }
          ],
          "description": "The parsed shipment.  This shipment may not be complete, depending on how much information was included in the text and how confident the API is about each recognized entity.\n\n> **Note:** The shipment-recognition API does not currently perform any validation of the parsed addresses, so we recommend that you use the [address-validation API](https://www.shipengine.com/docs/addresses/validation/) to ensure that the addresses are correct.\n"
        }
      },
      "required": [
        "score",
        "shipment",
        "entities"
      ],
      "title": "parse_shipment_response_body",
      "type": "object"
    },
    "partial_address": {
      "additionalProperties": false,
      "description": "A complete or partial mailing address.",
      "properties": {
        "address_line1": {
          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n",
          "example": "1999 Bishop Grandin Blvd.",
          "minLength": 1,
          "type": "string"
        },
        "address_line2": {
          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n",
          "example": "Unit 408",
          "minLength": 1,
          "type": "string",
          "x-nullable": true
        },
        "address_line3": {
          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n",
          "example": "Building #7",
          "minLength": 1,
          "type": "string",
          "x-nullable": true
        },
        "address_residential_indicator": {
          "allOf": [
            {
              "$ref": "#/definitions/address_residential_indicator"
            }
          ],
          "default": "unknown",
          "description": "Indicates whether this is a residential address.",
          "example": "no"
        },
        "city_locality": {
          "description": "The name of the city or locality",
          "example": "Winnipeg",
          "minLength": 1,
          "type": "string"
        },
        "company_name": {
          "description": "If this is a business address, then the company name should be specified here.\n",
          "example": "The Home Depot",
          "minLength": 1,
          "type": "string",
          "x-nullable": true
        },
        "country_code": {
          "allOf": [
            {
              "$ref": "#/definitions/country_code"
            }
          ],
          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n"
        },
        "name": {
          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n",
          "example": "John Doe",
          "minLength": 1,
          "type": "string",
          "x-nullable": true
        },
        "phone": {
          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n",
          "example": "+1 204-253-9411 ext. 123",
          "minLength": 1,
          "type": "string",
          "x-nullable": true
        },
        "postal_code": {
          "allOf": [
            {
              "$ref": "#/definitions/postal_code"
            }
          ]
        },
        "state_province": {
          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n",
          "example": "Manitoba",
          "minLength": 1,
          "type": "string"
        }
      },
      "title": "partial_address",
      "type": "object"
    },
    "partial_shipment": {
      "additionalProperties": false,
      "description": "The information necessary to ship a package, such as the origin, the destination, the carrier service, and the package dimensions and weight.\n",
      "properties": {
        "tags": {
          "default": [],
          "description": "Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.\n",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/tag"
              }
            ]
          },
          "minItems": 0,
          "readOnly": true,
          "type": "array"
        },
        "advanced_options": {
          "allOf": [
            {
              "$ref": "#/definitions/advanced_shipment_options"
            }
          ],
          "description": "Advanced shipment options.  These are entirely optional."
        },
        "carrier_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "The carrier account that is billed for the shipping charges"
        },
        "confirmation": {
          "allOf": [
            {
              "$ref": "#/definitions/delivery_confirmation"
            }
          ],
          "default": "none",
          "description": "The type of delivery confirmation that is required for this shipment."
        },
        "created_at": {
          "allOf": [
            {
              "$ref": "#/definitions/date_time"
            }
          ],
          "description": "The date and time that the shipment was created in ShipEngine.",
          "readOnly": true
        },
        "customs": {
          "allOf": [
            {
              "$ref": "#/definitions/international_shipment_options"
            }
          ],
          "default": null,
          "description": "Customs information.  This is usually only needed for international shipments.\n",
          "x-nullable": true
        },
        "external_order_id": {
          "description": "ID that the Order Source assigned",
          "type": "string",
          "x-nullable": true
        },
        "external_shipment_id": {
          "description": "You can optionally use this field to store your own identifier for this shipment.\n\n> **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.\n",
          "maxLength": 50,
          "type": "string",
          "x-nullable": true
        },
        "insurance_provider": {
          "allOf": [
            {
              "$ref": "#/definitions/insurance_provider"
            }
          ],
          "default": "none",
          "description": "The insurance provider to use for any insured packages in the shipment.\n"
        },
        "items": {
          "default": [],
          "description": "Describe the packages included in this shipment as related to potential metadata that was imported from\nexternal order sources\n",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/shipment_item"
              }
            ]
          },
          "type": "array"
        },
        "modified_at": {
          "allOf": [
            {
              "$ref": "#/definitions/date_time"
            }
          ],
          "description": "The date and time that the shipment was created or last modified.",
          "readOnly": true
        },
        "order_source_code": {
          "allOf": [
            {
              "$ref": "#/definitions/order_source_name"
            }
          ]
        },
        "packages": {
          "description": "The packages in the shipment.\n\n> **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn't allow it, an error will be returned.\n",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/package"
              }
            ]
          },
          "minItems": 1,
          "type": "array"
        },
        "return_to": {
          "allOf": [
            {
              "$ref": "#/definitions/address"
            }
          ],
          "description": "The return address for this shipment.  Defaults to the `ship_from` address.\n"
        },
        "service_code": {
          "allOf": [
            {
              "$ref": "#/definitions/service_code"
            }
          ],
          "description": "The [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n"
        },
        "ship_date": {
          "allOf": [
            {
              "$ref": "#/definitions/date"
            }
          ],
          "description": "The date that the shipment was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.\n"
        },
        "ship_from": {
          "allOf": [
            {
              "$ref": "#/definitions/address"
            }
          ],
          "description": "The shipment's origin address. If you frequently ship from the same location, consider [creating a warehouse](https://www.shipengine.com/docs/reference/create-warehouse/). Then you can simply specify the `warehouse_id` rather than the complete address each time.\n"
        },
        "ship_to": {
          "allOf": [
            {
              "$ref": "#/definitions/address"
            }
          ],
          "description": "The recipient's mailing address"
        },
        "shipment_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the shipment",
          "readOnly": true
        },
        "shipment_status": {
          "allOf": [
            {
              "$ref": "#/definitions/shipment_status"
            }
          ],
          "default": "pending",
          "description": "The current status of the shipment",
          "readOnly": true
        },
        "total_weight": {
          "allOf": [
            {
              "$ref": "#/definitions/weight"
            }
          ],
          "description": "The combined weight of all packages in the shipment",
          "readOnly": true
        },
        "warehouse_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "default": null,
          "description": "The [warehouse](https://www.shipengine.com/docs/shipping/ship-from-a-warehouse/) that the shipment is being shipped from.  Either `warehouse_id` or `ship_from` must be specified.\n",
          "x-nullable": true
        }
      },
      "title": "partial_shipment",
      "type": "object"
    },
    "payment_amount": {
      "properties": {
        "amount": {
          "format": "double",
          "minimum": 0,
          "type": "number"
        },
        "currency": {
          "allOf": [
            {
              "$ref": "#/definitions/currency"
            }
          ]
        }
      },
      "title": "payment_amount",
      "type": "object"
    },
    "postal_code": {
      "description": "postal code",
      "example": "78756-3717",
      "minLength": 1,
      "title": "postal_code",
      "type": "string"
    },
    "process_batch_request_body": {
      "additionalProperties": false,
      "description": "A process batch request body",
      "properties": {
        "label_format": {
          "allOf": [
            {
              "$ref": "#/definitions/label_format"
            }
          ],
          "default": "pdf"
        },
        "label_layout": {
          "allOf": [
            {
              "$ref": "#/definitions/label_layout"
            }
          ],
          "default": "4x6",
          "type": "string"
        },
        "ship_date": {
          "allOf": [
            {
              "$ref": "#/definitions/date_time"
            }
          ],
          "description": "The Ship date the batch is being processed for"
        }
      },
      "title": "process_batch_request_body",
      "type": "object"
    },
    "purchase_label_without_shipment": {
      "additionalProperties": false,
      "description": "A purchase label without shipment resource",
      "properties": {
        "label_download_type": {
          "allOf": [
            {
              "$ref": "#/definitions/label_download_type"
            }
          ]
        },
        "label_format": {
          "allOf": [
            {
              "$ref": "#/definitions/label_format"
            }
          ],
          "default": "pdf"
        },
        "label_layout": {
          "allOf": [
            {
              "$ref": "#/definitions/label_layout"
            }
          ],
          "default": "4x6"
        },
        "validate_address": {
          "allOf": [
            {
              "$ref": "#/definitions/validate_address"
            }
          ]
        }
      },
      "title": "purchase_label_without_shipment",
      "type": "object"
    },
    "rate": {
      "additionalProperties": false,
      "description": "A rate",
      "properties": {
        "carrier_code": {
          "description": "carrier code",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "carrier_delivery_days": {
          "description": "The carrier delivery days",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "carrier_friendly_name": {
          "description": "carrier friendly name",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "carrier_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the carrier",
          "readOnly": true
        },
        "carrier_nickname": {
          "description": "carrier nickname",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "confirmation_amount": {
          "allOf": [
            {
              "$ref": "#/definitions/monetary_value"
            }
          ],
          "description": "The confirmation amount",
          "readOnly": true
        },
        "delivery_days": {
          "description": "The number of days estimated for delivery, this will show the _actual_ deliverty\ntime if for example, the package gets shipped on a Friday\n",
          "example": 5,
          "format": "int32",
          "minimum": 1,
          "readOnly": true,
          "type": "integer"
        },
        "error_messages": {
          "description": "The error messages",
          "items": {
            "description": "error message",
            "minLength": 0,
            "readOnly": true,
            "type": "string"
          },
          "minItems": 0,
          "readOnly": true,
          "type": "array"
        },
        "estimated_delivery_date": {
          "allOf": [
            {
              "$ref": "#/definitions/date"
            }
          ],
          "readOnly": true
        },
        "guaranteed_service": {
          "description": "Indicates if the rate is guaranteed.",
          "readOnly": true,
          "type": "boolean"
        },
        "insurance_amount": {
          "allOf": [
            {
              "$ref": "#/definitions/monetary_value"
            }
          ],
          "description": "The insurance amount",
          "readOnly": true
        },
        "negotiated_rate": {
          "description": "Indicates if the rates been negotiated",
          "readOnly": true,
          "type": "boolean"
        },
        "other_amount": {
          "allOf": [
            {
              "$ref": "#/definitions/monetary_value"
            }
          ],
          "description": "Any other charges associated with this rate",
          "readOnly": true
        },
        "package_type": {
          "description": "package type that this rate was estimated for",
          "example": "package",
          "minLength": 1,
          "readOnly": true,
          "type": "string",
          "x-nullable": true
        },
        "rate_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the rate",
          "readOnly": true
        },
        "rate_type": {
          "allOf": [
            {
              "$ref": "#/definitions/rate_type"
            }
          ],
          "readOnly": true
        },
        "service_code": {
          "description": "service code for the rate",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "service_type": {
          "description": "service type",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "ship_date": {
          "description": "ship date",
          "format": "date-time",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "shipping_amount": {
          "allOf": [
            {
              "$ref": "#/definitions/monetary_value"
            }
          ],
          "description": "The shipping amount",
          "readOnly": true
        },
        "tax_amount": {
          "allOf": [
            {
              "$ref": "#/definitions/monetary_value"
            }
          ],
          "description": "Tariff and additional taxes associated with an international shipment.",
          "readOnly": true
        },
        "trackable": {
          "description": "Indicates if rate is trackable",
          "readOnly": true,
          "type": "boolean"
        },
        "validation_status": {
          "allOf": [
            {
              "$ref": "#/definitions/validation_status"
            }
          ],
          "readOnly": true
        },
        "warning_messages": {
          "description": "The warning messages",
          "items": {
            "description": "warning message",
            "minLength": 0,
            "readOnly": true,
            "type": "string"
          },
          "minItems": 0,
          "readOnly": true,
          "type": "array"
        },
        "zone": {
          "description": "Certain carriers base [their rates](https://blog.stamps.com/2017/09/08/usps-postal-zones/) off of\ncustom zones that vary depending upon the ship_to and ship_from location\n",
          "example": 6,
          "format": "int32",
          "minimum": 0,
          "readOnly": true,
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "rate_id",
        "rate_type",
        "carrier_id",
        "shipping_amount",
        "insurance_amount",
        "confirmation_amount",
        "other_amount",
        "zone",
        "package_type",
        "guaranteed_service",
        "negotiated_rate",
        "service_type",
        "service_code",
        "trackable",
        "carrier_code",
        "carrier_nickname",
        "carrier_friendly_name",
        "validation_status",
        "warning_messages",
        "error_messages"
      ],
      "title": "rate",
      "type": "object"
    },
    "rate_estimate_by_carrier_id": {
      "properties": {
        "carrier_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the carrier",
          "x-deprecated": true
        }
      },
      "title": "rate_estimate_by_carrier_id",
      "type": "object"
    },
    "rate_estimate_by_carrier_ids": {
      "properties": {
        "carrier_ids": {
          "description": "Array of Carrier Ids",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/se_id"
              }
            ],
            "description": "carrier id",
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "title": "rate_estimate_by_carrier_ids",
      "type": "object"
    },
    "rate_estimate_options": {
      "properties": {
        "address_residential_indicator": {
          "allOf": [
            {
              "$ref": "#/definitions/address_residential_indicator"
            }
          ]
        },
        "confirmation": {
          "allOf": [
            {
              "$ref": "#/definitions/delivery_confirmation"
            }
          ]
        },
        "dimensions": {
          "allOf": [
            {
              "$ref": "#/definitions/dimensions"
            }
          ],
          "description": "The dimensions of the package"
        },
        "from_city_locality": {
          "description": "from postal code",
          "example": "Austin",
          "minLength": 1,
          "type": "string"
        },
        "from_country_code": {
          "allOf": [
            {
              "$ref": "#/definitions/country_code"
            }
          ]
        },
        "from_postal_code": {
          "allOf": [
            {
              "$ref": "#/definitions/postal_code"
            }
          ]
        },
        "from_state_province": {
          "description": "From state province",
          "example": "Austin",
          "minLength": 1,
          "type": "string"
        },
        "ship_date": {
          "allOf": [
            {
              "$ref": "#/definitions/date_time"
            }
          ],
          "description": "ship date",
          "type": "string"
        },
        "to_city_locality": {
          "description": "The city locality the package is being shipped to",
          "example": "Austin",
          "minLength": 1,
          "type": "string"
        },
        "to_country_code": {
          "allOf": [
            {
              "$ref": "#/definitions/country_code"
            }
          ]
        },
        "to_postal_code": {
          "allOf": [
            {
              "$ref": "#/definitions/postal_code"
            }
          ]
        },
        "to_state_province": {
          "description": "To state province",
          "example": "Houston",
          "minLength": 1,
          "type": "string"
        },
        "weight": {
          "allOf": [
            {
              "$ref": "#/definitions/weight"
            }
          ],
          "description": "The weight of the package"
        }
      },
      "title": "rate_estimate_options",
      "type": "object"
    },
    "rate_request_body": {
      "additionalProperties": false,
      "description": "A rate request body",
      "properties": {
        "calculate_tax_amount": {
          "description": "Calculate the duties and tariffs for cross border shipments.",
          "type": "boolean"
        },
        "carrier_ids": {
          "description": "Array of carrier ids to get rates for",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/se_id"
              }
            ],
            "description": "carrier ids"
          },
          "minItems": 1,
          "type": "array"
        },
        "package_types": {
          "items": {
            "minLength": 1,
            "type": "string"
          },
          "type": "array"
        },
        "preferred_currency": {
          "allOf": [
            {
              "$ref": "#/definitions/currency"
            }
          ]
        },
        "service_codes": {
          "items": {
            "description": "Item Service Codes",
            "minLength": 1,
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "carrier_ids"
      ],
      "title": "rate_request_body",
      "type": "object"
    },
    "rate_request_by_shipment_ids": {
      "properties": {
        "shipment_ids": {
          "description": "The array of shipment IDs",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/se_id"
              }
            ],
            "description": "shipment ids"
          },
          "type": "array"
        }
      },
      "required": [
        "shipment_ids"
      ],
      "title": "rate_request_by_shipment_ids",
      "type": "object"
    },
    "rate_request_by_shipments": {
      "properties": {
        "shipments": {
          "description": "The array of shipments to get bulk rate estimates for",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/address_validating_shipment"
              }
            ],
            "description": "The shipment to get a bulk rate estimate for"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "shipments"
      ],
      "title": "rate_request_by_shipments",
      "type": "object"
    },
    "rate_request_options": {
      "properties": {
        "rate_options": {
          "allOf": [
            {
              "$ref": "#/definitions/rate_request_body"
            }
          ],
          "description": "The rate options"
        }
      },
      "title": "rate_request_options",
      "type": "object"
    },
    "rate_request_rate_options": {
      "properties": {
        "rate_options": {
          "allOf": [
            {
              "$ref": "#/definitions/rate_request_body"
            }
          ],
          "description": "The rate options"
        }
      },
      "title": "rate_request_rate_options",
      "type": "object"
    },
    "rate_response": {
      "additionalProperties": false,
      "properties": {
        "rate_response": {
          "allOf": [
            {
              "$ref": "#/definitions/rates_information"
            }
          ],
          "description": "The rates response"
        }
      },
      "title": "rate_response",
      "type": "object"
    },
    "rate_response_status": {
      "description": "The possible rate response status values",
      "enum": [
        "working",
        "completed",
        "partial",
        "error"
      ],
      "title": "rate_response_status",
      "type": "string"
    },
    "rate_type": {
      "description": "The possible rate type values",
      "enum": [
        "check",
        "shipment"
      ],
      "title": "rate_type",
      "type": "string"
    },
    "rates_information": {
      "additionalProperties": false,
      "description": "A rates information resource",
      "properties": {
        "created_at": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "When the rate was created",
          "format": "date-time",
          "type": "string"
        },
        "errors": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/error"
              }
            ]
          },
          "type": "array"
        },
        "invalid_rates": {
          "default": [],
          "description": "An array of invalid shipment rates",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/rate"
              }
            ],
            "description": "Invalid Shipment Rate",
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        },
        "rate_request_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the rate request",
          "readOnly": true
        },
        "rates": {
          "description": "An array of shipment rates",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/rate"
              }
            ],
            "description": "Shipment Rates",
            "readOnly": true
          },
          "readOnly": true,
          "type": "array"
        },
        "shipment_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the shipment",
          "readOnly": true
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/rate_response_status"
            }
          ],
          "readOnly": true
        }
      },
      "title": "rates_information",
      "type": "object"
    },
    "recognized_entity": {
      "additionalProperties": false,
      "description": "An entity is a single piece of data that was recognized in unstructured text.  For example, a city, a postal code, package dimensions, insured value, etc.  Each entity includes the original text and the parsed value.\n",
      "properties": {
        "end_index": {
          "description": "The index of the last character of this entity within the original text",
          "minimum": 0,
          "type": "integer"
        },
        "result": {
          "$ref": "#/definitions/normalized_entity"
        },
        "score": {
          "description": "A confidence score between zero and one that indicates how certain the API is that it correctly recognized this entity\n",
          "format": "double",
          "maximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "start_index": {
          "description": "The index of the first character of this entity within the original text",
          "minimum": 0,
          "type": "integer"
        },
        "text": {
          "description": "The substring from the original text that was recognized as this entity",
          "minLength": 1,
          "type": "string"
        },
        "type": {
          "description": "The Entity type (e.g. \"weight\", \"person\", \"address_line1\", etc.)",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "type",
        "score",
        "text",
        "start_index",
        "end_index"
      ],
      "title": "recognized_entity",
      "type": "object"
    },
    "remove_from_batch_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/modify_batch"
        }
      ],
      "description": "A modify batch request body",
      "title": "remove_from_batch_request_body",
      "type": "object"
    },
    "response_message": {
      "additionalProperties": false,
      "description": "A response message that displays when additional info is needed for an address validation request.",
      "properties": {
        "code": {
          "allOf": [
            {
              "$ref": "#/definitions/address_validation_code"
            }
          ],
          "readOnly": true
        },
        "detail_code": {
          "allOf": [
            {
              "$ref": "#/definitions/address_validation_detail_code"
            }
          ],
          "x-nullable": true
        },
        "message": {
          "description": "Message explaining the address validation error",
          "example": "Invalid Postal Code",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/address_validation_message_type"
            }
          ],
          "readOnly": true
        }
      },
      "title": "response_message",
      "type": "object"
    },
    "se_id": {
      "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.",
      "example": "se-28529731",
      "maxLength": 25,
      "minLength": 1,
      "pattern": "^se(-[a-z0-9]+)+$",
      "title": "se_id",
      "type": "string"
    },
    "service": {
      "additionalProperties": false,
      "description": "A service offered by the carrier",
      "properties": {
        "carrier_code": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ]
        },
        "carrier_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the carrier",
          "readOnly": true
        },
        "domestic": {
          "description": "Supports domestic shipping",
          "readOnly": true,
          "type": "boolean"
        },
        "international": {
          "description": "Supports international shipping.",
          "readOnly": true,
          "type": "boolean"
        },
        "is_multi_package_supported": {
          "description": "Carrier supports multiple packages per shipment",
          "readOnly": true,
          "type": "boolean"
        },
        "name": {
          "description": "User friendly service name",
          "example": "USPS First Class Mail",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "service_code": {
          "description": "service code",
          "example": "usps_media_mail",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "service",
      "type": "object"
    },
    "service_code": {
      "description": "A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n",
      "example": "usps_first_class_mail",
      "pattern": "^[a-z0-9]+(_[a-z0-9-]+)* ?$",
      "title": "service_code",
      "type": "string"
    },
    "shipment": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/partial_shipment"
        }
      ],
      "description": "The information necessary to ship a package, such as the origin, the destination, the carrier service, and the package dimensions and weight.\n\n> **Note:** Either `ship_from` or `warehouse_id` must be set.\n",
      "required": [
        "shipment_id",
        "carrier_id",
        "service_code",
        "ship_date",
        "created_at",
        "modified_at",
        "shipment_status",
        "ship_to",
        "ship_from",
        "warehouse_id",
        "return_to",
        "confirmation",
        "customs",
        "advanced_options",
        "insurance_provider",
        "tags",
        "packages",
        "total_weight"
      ],
      "title": "shipment",
      "type": "object"
    },
    "shipment_id_request": {
      "properties": {
        "shipment_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the shipment"
        }
      },
      "title": "shipment_id_request",
      "type": "object"
    },
    "shipment_item": {
      "additionalProperties": false,
      "description": "A shipment item",
      "properties": {
        "asin": {
          "description": "Amazon Standard Identification Number",
          "example": "B00005N5PF",
          "maxLength": 10,
          "minLength": 10,
          "type": "string",
          "x-nullable": true
        },
        "external_order_id": {
          "description": "external order id",
          "type": "string",
          "x-nullable": true
        },
        "external_order_item_id": {
          "description": "external order item id",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "item name",
          "minLength": 0,
          "type": "string"
        },
        "order_source_code": {
          "allOf": [
            {
              "$ref": "#/definitions/order_source_name"
            }
          ]
        },
        "quantity": {
          "description": "The quantity of this item included in the shipment",
          "format": "int32",
          "minimum": 0,
          "type": "integer"
        },
        "sales_order_id": {
          "description": "sales order id",
          "type": "string",
          "x-nullable": true
        },
        "sales_order_item_id": {
          "description": "sales order item id",
          "type": "string",
          "x-nullable": true
        },
        "sku": {
          "description": "Item Stock Keeping Unit",
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "shipment_item",
      "type": "object"
    },
    "shipment_request": {
      "properties": {
        "shipment": {
          "allOf": [
            {
              "$ref": "#/definitions/address_validating_shipment"
            }
          ],
          "description": "The shipment object"
        }
      },
      "title": "shipment_request",
      "type": "object"
    },
    "shipment_response_error": {
      "additionalProperties": false,
      "description": "A shipment response error.",
      "properties": {
        "error": {
          "description": "Shipment error message",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "external_shipment_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the external shipment.",
          "readOnly": true
        },
        "shipment_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the shipment.",
          "readOnly": true
        }
      },
      "required": [
        "error",
        "shipment_id"
      ],
      "title": "shipment_response_error",
      "type": "object"
    },
    "shipment_status": {
      "description": "The possible shipment status values",
      "enum": [
        "pending",
        "processing",
        "label_purchased",
        "cancelled"
      ],
      "title": "shipment_status",
      "type": "string"
    },
    "shipments_sort_by": {
      "description": "The possible shipments sort by values",
      "enum": [
        "modified_at",
        "created_at"
      ],
      "title": "shipments_sort_by",
      "type": "string"
    },
    "smart_post_hub": {
      "description": "The possible smart post hub values",
      "enum": [
        "none",
        "allentown_pa",
        "atlanta_ga",
        "baltimore_md",
        "charlotte_nc",
        "chino_ca",
        "dallas_tx",
        "denver_co",
        "detroit_mi",
        "edison_nj",
        "grove_city_oh",
        "groveport_oh",
        "houston_tx",
        "indianapolis_in",
        "kansas_city_ks",
        "los_angeles_ca",
        "martinsburg_wv",
        "memphis_tn",
        "minneapolis_mn",
        "new_berlin_wi",
        "northborough_ma",
        "orlando_fl",
        "phoneix_az",
        "pittsburgh_pa",
        "reno_nv",
        "sacramento_ca",
        "salt_lake_city_ut",
        "seattle_wa",
        "st_louis_mo",
        "windsor_ct",
        "newark_ny",
        "south_brunswick_nj",
        "scranton_pa",
        "wheeling_il"
      ],
      "title": "smart_post_hub",
      "type": "string"
    },
    "sort_dir": {
      "description": "Controls the sort order of queries\n\n|Value     |Description\n|:---------|:-----------------------------------------------------\n|`asc`     |Return results in ascending order\n|`desc`    |Return results in descending order\n",
      "enum": [
        "asc",
        "desc"
      ],
      "title": "sort_dir",
      "type": "string"
    },
    "tag": {
      "additionalProperties": false,
      "description": "Tags are arbitrary strings that you can use to categorize shipments. For example, you may want to use tags to distinguish between domestic and international shipments, or between insured and uninsured shipments.  Or maybe you want to create a tag for each of your customers so you can easily retrieve every shipment for a customer.\n",
      "properties": {
        "name": {
          "description": "The tag name.",
          "example": "Fragile",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "tag",
      "type": "object"
    },
    "tag_name": {
      "description": "Tags are arbitrary strings that you can use to categorize shipments. For example, you may want to use tags to distinguish between domestic and international shipments, or between insured and uninsured shipments.  Or maybe you want to create a tag for each of your customers so you can easily retrieve every shipment for a customer.\n",
      "example": "Fragile",
      "minLength": 1,
      "title": "tag_name",
      "type": "string"
    },
    "tag_shipment_response_body": {
      "additionalProperties": false,
      "description": "A shipment add tag response body",
      "properties": {
        "shipment_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the shipment",
          "readOnly": true
        },
        "tag": {
          "allOf": [
            {
              "$ref": "#/definitions/tag"
            }
          ],
          "description": "The tag that is now associated with this shipment",
          "readOnly": true
        }
      },
      "required": [
        "shipment_id",
        "tag"
      ],
      "title": "tag_shipment_response_body",
      "type": "object"
    },
    "track_event": {
      "additionalProperties": false,
      "description": "A track event",
      "properties": {
        "carrier_occurred_at": {
          "allOf": [
            {
              "$ref": "#/definitions/date_time"
            }
          ],
          "description": "Carrier timestamp for the event, it is assumed to be the local time of where the event occurred."
        },
        "city_locality": {
          "description": "City locality",
          "example": "AUSTIN",
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        },
        "company_name": {
          "description": "Company Name",
          "example": "Stamps.com",
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        },
        "country_code": {
          "allOf": [
            {
              "$ref": "#/definitions/country_code"
            }
          ]
        },
        "description": {
          "description": "Event description",
          "example": "Delivered, In/At Mailbox",
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        },
        "event_code": {
          "description": "Event Code",
          "minLength": 0,
          "type": "string"
        },
        "latitude": {
          "description": "Latitude coordinate of tracking event.",
          "format": "double",
          "maximum": 90,
          "minimum": 0,
          "type": "number"
        },
        "longitude": {
          "description": "Longitude coordinate of tracking event.",
          "format": "double",
          "maximum": 180,
          "minimum": 0,
          "type": "number"
        },
        "occurred_at": {
          "allOf": [
            {
              "$ref": "#/definitions/date_time"
            }
          ],
          "description": "Timestamp for carrier event"
        },
        "postal_code": {
          "description": "Postal code",
          "example": 78756,
          "minLength": 5,
          "readOnly": true,
          "type": "string"
        },
        "signer": {
          "description": "Signer information",
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        },
        "state_province": {
          "description": "State province",
          "example": "TX",
          "minLength": 2,
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "occurred_at",
        "city_locality",
        "state_province",
        "postal_code"
      ],
      "title": "track_event",
      "type": "object"
    },
    "tracking_information": {
      "additionalProperties": false,
      "description": "A tracking information resource",
      "properties": {
        "actual_delivery_date": {
          "allOf": [
            {
              "$ref": "#/definitions/date_time"
            }
          ]
        },
        "carrier_status_code": {
          "description": "Carrier status code",
          "example": 1,
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "carrier_status_description": {
          "description": "carrier status description",
          "example": "Your item was delivered in or at the mailbox at 9:10 am on March",
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        },
        "estimated_delivery_date": {
          "allOf": [
            {
              "$ref": "#/definitions/date_time"
            }
          ]
        },
        "events": {
          "description": "The events that have occured during the lifetime of this tracking number.",
          "items": {
            "$ref": "#/definitions/track_event"
          },
          "readOnly": true,
          "type": "array"
        },
        "exception_description": {
          "description": "Exception description",
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        },
        "ship_date": {
          "allOf": [
            {
              "$ref": "#/definitions/date_time"
            }
          ]
        },
        "status_code": {
          "description": "Status code",
          "example": "DE",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "status_description": {
          "description": "Status description",
          "example": "Delivered",
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        },
        "tracking_number": {
          "allOf": [
            {
              "$ref": "#/definitions/tracking_number"
            }
          ]
        }
      },
      "title": "tracking_information",
      "type": "object"
    },
    "tracking_number": {
      "description": "A tracking number for a package. The format depends on the carrier.",
      "example": "1Z932R800392060079",
      "minLength": 1,
      "title": "tracking_number",
      "type": "string"
    },
    "tracking_status": {
      "description": "The different statuses that can apply to a shipment.",
      "enum": [
        "unknown",
        "in_transit",
        "error",
        "delivered"
      ],
      "title": "tracking_status",
      "type": "string"
    },
    "update_amazon_buy_shipping_request_body": {
      "additionalProperties": false,
      "description": "An amazon buy shipping account settings request body",
      "properties": {
        "email": {
          "description": "Email",
          "minLength": 1,
          "type": "string"
        }
      },
      "title": "update_amazon_buy_shipping_request_body",
      "type": "object"
    },
    "update_carrier_settings_request_body": {
      "title": "update_carrier_settings_request_body"
    },
    "update_dhl_express_settings_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/dhl_express_account_settings"
        }
      ],
      "description": "An update dhl express settings request body",
      "title": "update_dhl_express_settings_request_body",
      "type": "object"
    },
    "update_fedex_settings_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/fedex_account_settings"
        }
      ],
      "description": "An update Fedex settings request body",
      "title": "update_fedex_settings_request_body",
      "type": "object"
    },
    "update_newgistics_settings_request_body": {
      "additionalProperties": false,
      "description": "A newgistics account settings request body",
      "properties": {
        "include_barcode_with_order_number": {
          "type": "boolean"
        },
        "receive_email_on_manifest_processing": {
          "type": "boolean"
        }
      },
      "title": "update_newgistics_settings_request_body",
      "type": "object"
    },
    "update_package_type_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/package_type"
        }
      ],
      "description": "An update package type request body",
      "title": "update_package_type_request_body",
      "type": "object"
    },
    "update_shipment_fields": {
      "properties": {
        "validate_address": {
          "allOf": [
            {
              "$ref": "#/definitions/validate_address"
            }
          ],
          "default": "no_validation"
        }
      },
      "title": "update_shipment_fields",
      "type": "object"
    },
    "update_shipment_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/partial_shipment"
        },
        {
          "$ref": "#/definitions/update_shipment_fields"
        }
      ],
      "description": "An update shipment request body",
      "required": [
        "ship_to",
        "ship_from"
      ],
      "title": "update_shipment_request_body",
      "type": "object"
    },
    "update_shipment_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/create_and_validate_shipment"
        }
      ],
      "description": "An update shipment response body",
      "required": [
        "errors",
        "has_errors",
        "address_validation",
        "shipment_id",
        "carrier_id",
        "service_code",
        "ship_date",
        "created_at",
        "shipment_status",
        "ship_to",
        "ship_from",
        "return_to",
        "confirmation",
        "customs",
        "advanced_options",
        "insurance_provider",
        "tags",
        "packages",
        "total_weight"
      ],
      "title": "update_shipment_response_body",
      "type": "object"
    },
    "update_ups_settings_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/ups_account_settings"
        }
      ],
      "description": "An update UPS settings request body",
      "title": "update_ups_settings_request_body",
      "type": "object"
    },
    "update_warehouse_request_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/warehouse"
        }
      ],
      "description": "An update warehouse request body",
      "required": [
        "name",
        "origin_address"
      ],
      "title": "update_warehouse_request_body",
      "type": "object"
    },
    "update_webhook_request_body": {
      "additionalProperties": false,
      "description": "An update webhook request body",
      "properties": {
        "url": {
          "allOf": [
            {
              "$ref": "#/definitions/url"
            }
          ],
          "description": "The url that the wehbook sends the request",
          "example": "https://[YOUR ENDPOINT ID].x.requestbin.com"
        }
      },
      "title": "update_webhook_request_body",
      "type": "object"
    },
    "ups_account_settings": {
      "additionalProperties": false,
      "description": "UPS account settings",
      "properties": {
        "account_postal_code": {
          "description": "account postal code",
          "minLength": 5,
          "type": "string"
        },
        "invoice": {
          "allOf": [
            {
              "$ref": "#/definitions/ups_invoice"
            }
          ],
          "description": "The invoice"
        },
        "is_primary_account": {
          "description": "Indicates if this is the primary UPS account",
          "type": "boolean"
        },
        "mail_innovations_cost_center": {
          "description": "mail innovations cost center",
          "minLength": 0,
          "type": "string"
        },
        "mail_innovations_endorsement": {
          "allOf": [
            {
              "$ref": "#/definitions/ancillary_service_endorsement"
            }
          ]
        },
        "nickname": {
          "description": "nickname",
          "minLength": 1,
          "type": "string"
        },
        "pickup_type": {
          "allOf": [
            {
              "$ref": "#/definitions/ups_pickup_type"
            }
          ]
        },
        "use_carbon_neutral_shipping_program": {
          "description": "The use carbon neutral shipping program",
          "type": "boolean"
        },
        "use_consolidation_services": {
          "description": "The use consolidation services",
          "type": "boolean"
        },
        "use_ground_freight_pricing": {
          "description": "The use ground freight pricing",
          "type": "boolean"
        },
        "use_negotiated_rates": {
          "description": "The use negotiated rates",
          "type": "boolean"
        },
        "use_order_number_on_mail_innovations_labels": {
          "description": "The use order number on mail innovations labels",
          "type": "boolean"
        }
      },
      "title": "ups_account_settings",
      "type": "object"
    },
    "ups_invoice": {
      "additionalProperties": false,
      "description": "UPS invoice",
      "properties": {
        "control_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the control"
        },
        "invoice_amount": {
          "format": "double",
          "minimum": 0,
          "type": "number"
        },
        "invoice_date": {
          "description": "invoice date",
          "format": "date-time",
          "minLength": 1,
          "type": "string"
        },
        "invoice_number": {
          "description": "invoice number",
          "minLength": 1,
          "type": "string"
        }
      },
      "title": "ups_invoice",
      "type": "object"
    },
    "ups_pickup_type": {
      "description": "The possible ups pickup type values",
      "enum": [
        "daily_pickup",
        "occasional_pickup",
        "customer_counter"
      ],
      "title": "ups_pickup_type",
      "type": "string"
    },
    "ups_settings_response_body": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/ups_account_settings"
        }
      ],
      "description": "A UPS settings response body",
      "title": "ups_settings_response_body",
      "type": "object"
    },
    "url": {
      "description": "A URL",
      "example": "http://api.shipengine.com/v1/labels/se-28529731",
      "format": "url",
      "minLength": 1,
      "title": "url",
      "type": "string"
    },
    "uuid": {
      "description": "A UUID (a.k.a. GUID) that uniquely identifies a resource",
      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009",
      "format": "uuid",
      "maxLength": 36,
      "minLength": 36,
      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
      "title": "uuid",
      "type": "string"
    },
    "validate_address": {
      "description": "The possible validate address values",
      "enum": [
        "no_validation",
        "validate_only",
        "validate_and_clean"
      ],
      "title": "validate_address",
      "type": "string"
    },
    "validate_address_request_body": {
      "description": "An address validation request body",
      "items": {
        "allOf": [
          {
            "$ref": "#/definitions/address_to_validate"
          }
        ],
        "description": "An array of addresses to validate."
      },
      "title": "validate_address_request_body",
      "type": "array"
    },
    "validate_address_response_body": {
      "description": "An address validation response body",
      "items": {
        "allOf": [
          {
            "$ref": "#/definitions/address_validation_result"
          }
        ],
        "description": "The address validation response body",
        "readOnly": true
      },
      "title": "validate_address_response_body",
      "type": "array"
    },
    "validate_shipment_fields": {
      "properties": {
        "validate_address": {
          "allOf": [
            {
              "$ref": "#/definitions/validate_address"
            }
          ],
          "default": "no_validation"
        }
      },
      "title": "validate_shipment_fields",
      "type": "object"
    },
    "validation_status": {
      "description": "The possible validation status values",
      "enum": [
        "valid",
        "invalid",
        "has_warnings",
        "unknown"
      ],
      "title": "validation_status",
      "type": "string"
    },
    "void_label_response_body": {
      "additionalProperties": false,
      "description": "A void label response body",
      "properties": {
        "approved": {
          "description": "Indicates whether the attempt to void the label was successful",
          "readOnly": true,
          "type": "boolean"
        },
        "message": {
          "example": "Request for refund submitted.  This label has been voided.",
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "approved",
        "message"
      ],
      "title": "void_label_response_body",
      "type": "object"
    },
    "warehouse": {
      "additionalProperties": false,
      "description": "A warehouse",
      "properties": {
        "created_at": {
          "description": "Timestamp that indicates when the warehouse was created",
          "example": "2019-06-25T18:12:35.583Z",
          "format": "date-time",
          "minLength": 1,
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Name of the warehouse",
          "example": "Zero Cool HQ",
          "minLength": 1,
          "type": "string"
        },
        "origin_address": {
          "allOf": [
            {
              "$ref": "#/definitions/address"
            }
          ],
          "description": "The origin address of the warehouse"
        },
        "return_address": {
          "allOf": [
            {
              "$ref": "#/definitions/address"
            }
          ],
          "description": "The return address associated with the warehouse"
        },
        "warehouse_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the warehouse",
          "readOnly": true
        }
      },
      "title": "warehouse",
      "type": "object"
    },
    "webhook": {
      "additionalProperties": false,
      "description": "A webhook",
      "properties": {
        "event": {
          "allOf": [
            {
              "$ref": "#/definitions/webhook_event"
            }
          ]
        },
        "url": {
          "allOf": [
            {
              "$ref": "#/definitions/url"
            }
          ],
          "description": "The url that the webhook sends the request to",
          "example": "https://[YOUR ENDPOINT ID].x.requestbin.com"
        },
        "webhook_id": {
          "allOf": [
            {
              "$ref": "#/definitions/se_id"
            }
          ],
          "description": "A string that uniquely identifies the webhook",
          "readOnly": true
        }
      },
      "title": "webhook",
      "type": "object"
    },
    "webhook_event": {
      "description": "The possible webook event values",
      "enum": [
        "batch",
        "carrier_connected",
        "order_source_refresh_complete",
        "rate",
        "report_complete",
        "sales_orders_imported",
        "track"
      ],
      "title": "webhook_event",
      "type": "string"
    },
    "weight": {
      "additionalProperties": false,
      "description": "The weight of a package",
      "properties": {
        "unit": {
          "allOf": [
            {
              "$ref": "#/definitions/weight_unit"
            }
          ]
        },
        "value": {
          "description": "The weight, in the specified unit",
          "exclusiveMinimum": true,
          "format": "double",
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "title": "weight",
      "type": "object"
    },
    "weight_unit": {
      "description": "The possible weight unit values",
      "enum": [
        "pound",
        "ounce",
        "gram",
        "kilogram"
      ],
      "title": "weight_unit",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "api_key": {
      "description": "To authenticate yourself to ShipEngine, you need to include an `API-Key` header in each API call. If you don't include a key when making an API request, or if you use an incorrect or expired key, then ShipEngine will respond with a `401 Unauthorized` error.\n\nLearn more about API keys in our [authentication guide](https://www.shipengine.com/docs/auth/).\n",
      "in": "header",
      "name": "API-Key",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "tags": [
    {
      "externalDocs": {
        "description": "Address validation ensures accurate addresses and can lead to reduced shipping costs by preventing address correction surcharges. ShipEngine cross references multiple databases to validate addresses and identify potential deliverability issues.\n",
        "url": "https://www.shipengine.com/docs/addresses/validation/"
      },
      "description": "No matter your shipping volume, failed deliveries and address change surcharges cut into your bottom line and damage perception with customers. Our address validation services ensure your packages make it to the right place the first time. [Learn how to leverage our address validation services here.](https://www.shipengine.com/docs/addresses/validation/)\n\nShipEngine supports address validation for virtually every country on Earth, including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others.\n",
      "name": "addresses",
      "x-displayName": "Addresses"
    },
    {
      "description": "batches\n",
      "name": "batches",
      "x-displayName": "Batches"
    },
    {
      "description": "carrier accounts\n",
      "name": "carrier_accounts",
      "x-displayName": "Carrier Accounts"
    },
    {
      "description": "carriers\n",
      "name": "carriers",
      "x-displayName": "Carriers"
    },
    {
      "description": "downloads\n",
      "name": "downloads",
      "x-displayName": "Downloads"
    },
    {
      "description": "insurance\n",
      "name": "insurance",
      "x-displayName": "Insurance"
    },
    {
      "externalDocs": {
        "description": "Follow this quick start guide to create your first shipping label with ShipEngine",
        "url": "https://www.shipengine.com/docs/labels/create-a-label/"
      },
      "description": "Print shipping labels for any of the top global carriers in minutes—instead of weeks. Simply [connect your existing carrier accounts](https://www.shipengine.com/docs/carriers/setup/) in the API dashboard, and then [begin creating labels](https://www.shipengine.com/docs/shipping/use-a-carrier-service/).\n",
      "name": "labels",
      "x-displayName": "Labels"
    },
    {
      "description": "manifests\n",
      "name": "manifests",
      "x-displayName": "Manifests"
    },
    {
      "description": "custom package types\n",
      "name": "package_types",
      "x-displayName": "Package Types"
    },
    {
      "externalDocs": {
        "description": "This quick start guide shows you how to get shipping rates for multiple carriers so you can choose the fastest, cheapest, or most reliable option.\n",
        "url": "https://www.shipengine.com/docs/rates/"
      },
      "description": "Make sure you ship as cost-effectively as possible by [quickly comparing rates](https://www.shipengine.com/docs/rates/) using the ShipEngine Rates API. As long as you have the carrier connected to your account, you'll be able to see and compare different rates and services.\n",
      "name": "rates",
      "x-displayName": "Rates"
    },
    {
      "externalDocs": {
        "description": "Learn about the shipment object model concept, and how to persist and re-use shipment data inside ShipEngine.\n",
        "url": "https://www.shipengine.com/docs/shipping/create-a-shipment/"
      },
      "description": "Shipments are at the center of the ShipEngine API.  A shipment is the first step in [creating a shipping label](https://www.shipengine.com/docs/labels/create-a-label/), or [creating a manifest](https://www.shipengine.com/docs/shipping/manifests/).  It's also essential for [getting shipping rates](https://www.shipengine.com/docs/rates/).\n",
      "name": "shipments",
      "x-displayName": "Shipments"
    },
    {
      "description": "tags\n",
      "name": "tags",
      "x-displayName": "Tags"
    },
    {
      "externalDocs": {
        "description": "Learn how to use ShipEngine to track any package with a carrier and a tracking number",
        "url": "https://www.shipengine.com/docs/tracking/"
      },
      "description": "[Track packages](https://www.shipengine.com/docs/tracking/) across any of our 20+ supported carrier accounts and create tracking events to keep your customers up-to-date. Easily integrate real-time tracking information for shipments into your app, email, or SMS.\n",
      "name": "tracking",
      "x-displayName": "Tracking"
    },
    {
      "description": "warehouses\n",
      "name": "warehouses",
      "x-displayName": "Warehouses"
    },
    {
      "externalDocs": {
        "description": "Learn how to setup webhooks and start listening to ShipEngine events.",
        "url": "https://www.shipengine.com/docs/tracking/webhooks/"
      },
      "description": "[Webhooks](https://www.shipengine.com/docs/tracking/webhooks/) are a powerful feature of ShipEngine that can save you from sending repeated polling requests to check on the state of something.  With webhooks, ShipEngine will automatically contact your servers when the stage changes.  This can include [parcel tracking](https://www.shipengine.com/docs/tracking/) events, notification of the completion of a [batch operation](https://www.shipengine.com/docs/labels/bulk/),  or new [salses orders](https://www.shipengine.com/docs/orders/).\n",
      "name": "webhooks",
      "x-displayName": "Webhooks"
    }
  ],
  "externalDocs": {
    "description": "ShipEngine's documentation is designed to help you start shipping as quickly as possible. With easy-to-follow tutorials, detailed reference docs, and ready-made recipes for common use cases, you'll see real results in no time at all.\n",
    "url": "https://www.shipengine.com/docs/"
  },
  "x-components": {
    "responses": {
      "400_error_response": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "description": "The request contained errors."
      },
      "404_error_response": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "description": "The specified resource does not exist."
      },
      "409_error_response": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "description": "The request conflicts with an existing resource."
      },
      "500_error_response": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/error_response_body"
            }
          }
        },
        "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n"
      }
    }
  }
}