{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "Amplify enables developers to develop and deploy cloud-powered mobile and web apps. The Amplify Console provides a continuous delivery and hosting service for web applications. For more information, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify Console User Guide</a>. The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework.</a> ",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Amplify",
    "version": "2017-07-25",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/amplify-2017-07-25.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "amplify",
    "x-datafire": {
      "name": "amazonaws_amplify",
      "type": "openapi"
    }
  },
  "host": "amplify.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/apps": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " A pagination token. If non-null, the pagination token is returned in a result. Pass its value in another request to retrieve more entries. ",
            "in": "query",
            "maxLength": 2000,
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": " The maximum number of records to list in a single response. ",
            "in": "query",
            "maximum": 100,
            "minimum": 0,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAppsResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": " Returns a list of the existing Amplify apps. ",
        "operationId": "ListApps"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": " The tag for an Amplify app. ",
                  "maxProperties": 50,
                  "minProperties": 1,
                  "type": "object"
                },
                "accessToken": {
                  "description": " The personal access token for a third-party source control system for an Amplify app. The personal access token is used to create a webhook and a read-only deploy key. The token is not stored. ",
                  "format": "password",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "autoBranchCreationConfig": {
                  "description": " Describes the automated branch creation configuration. ",
                  "properties": {
                    "basicAuthCredentials": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BasicAuthCredentials"
                        },
                        {
                          "description": " The basic authorization credentials for the autocreated branch. "
                        }
                      ]
                    },
                    "buildSpec": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BuildSpec"
                        },
                        {
                          "description": " The build specification (build spec) for the autocreated branch. "
                        }
                      ]
                    },
                    "enableAutoBuild": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/EnableAutoBuild"
                        },
                        {
                          "description": " Enables auto building for the autocreated branch. "
                        }
                      ]
                    },
                    "enableBasicAuth": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/EnableBasicAuth"
                        },
                        {
                          "description": " Enables basic authorization for the autocreated branch. "
                        }
                      ]
                    },
                    "enablePerformanceMode": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/EnablePerformanceMode"
                        },
                        {
                          "description": "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>"
                        }
                      ]
                    },
                    "enablePullRequestPreview": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/EnablePullRequestPreview"
                        },
                        {
                          "description": " Enables pull request previews for the autocreated branch. "
                        }
                      ]
                    },
                    "environmentVariables": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/EnvironmentVariables"
                        },
                        {
                          "description": " The environment variables for the autocreated branch. "
                        }
                      ]
                    },
                    "framework": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Framework"
                        },
                        {
                          "description": " The framework for the autocreated branch. "
                        }
                      ]
                    },
                    "pullRequestEnvironmentName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/PullRequestEnvironmentName"
                        },
                        {
                          "description": " The Amplify environment name for the pull request. "
                        }
                      ]
                    },
                    "stage": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Stage"
                        },
                        {
                          "description": " Describes the current stage for the autocreated branch. "
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "autoBranchCreationPatterns": {
                  "description": " The automated branch creation glob patterns for an Amplify app. ",
                  "items": {
                    "$ref": "#/definitions/AutoBranchCreationPattern"
                  },
                  "type": "array"
                },
                "basicAuthCredentials": {
                  "description": " The credentials for basic authorization for an Amplify app. ",
                  "format": "password",
                  "maxLength": 2000,
                  "type": "string"
                },
                "buildSpec": {
                  "description": " The build specification (build spec) file for an Amplify app build. ",
                  "maxLength": 25000,
                  "minLength": 1,
                  "type": "string"
                },
                "customHeaders": {
                  "description": "The custom HTTP headers for an Amplify app.",
                  "maxLength": 25000,
                  "minLength": 1,
                  "type": "string"
                },
                "customRules": {
                  "description": " The custom rewrite and redirect rules for an Amplify app. ",
                  "items": {
                    "$ref": "#/definitions/CustomRule"
                  },
                  "type": "array"
                },
                "description": {
                  "description": " The description for an Amplify app. ",
                  "maxLength": 1000,
                  "type": "string"
                },
                "enableAutoBranchCreation": {
                  "description": " Enables automated branch creation for an Amplify app. ",
                  "type": "boolean"
                },
                "enableBasicAuth": {
                  "description": " Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app. ",
                  "type": "boolean"
                },
                "enableBranchAutoBuild": {
                  "description": " Enables the auto building of branches for an Amplify app. ",
                  "type": "boolean"
                },
                "enableBranchAutoDeletion": {
                  "description": " Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository. ",
                  "type": "boolean"
                },
                "environmentVariables": {
                  "additionalProperties": {
                    "$ref": "#/definitions/EnvValue"
                  },
                  "description": " The environment variables map for an Amplify app. ",
                  "type": "object"
                },
                "iamServiceRoleArn": {
                  "description": " The AWS Identity and Access Management (IAM) service role for an Amplify app. ",
                  "maxLength": 1000,
                  "minLength": 1,
                  "type": "string"
                },
                "name": {
                  "description": " The name for an Amplify app. ",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "oauthToken": {
                  "description": " The OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key. The OAuth token is not stored. ",
                  "format": "password",
                  "maxLength": 1000,
                  "type": "string"
                },
                "platform": {
                  "description": " The platform or framework for an Amplify app. ",
                  "enum": [
                    "WEB"
                  ],
                  "type": "string"
                },
                "repository": {
                  "description": " The repository for an Amplify app. ",
                  "maxLength": 1000,
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateAppResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "DependentServiceFailureException",
            "schema": {
              "$ref": "#/definitions/DependentServiceFailureException"
            }
          }
        },
        "description": " Creates a new Amplify app. ",
        "operationId": "CreateApp"
      }
    },
    "/apps/{appId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteAppResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "484": {
            "description": "DependentServiceFailureException",
            "schema": {
              "$ref": "#/definitions/DependentServiceFailureException"
            }
          }
        },
        "description": " Deletes an existing Amplify app specified by an app ID. ",
        "operationId": "DeleteApp"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAppResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": " Returns an existing Amplify app by appID. ",
        "operationId": "GetApp"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "accessToken": {
                  "description": " The personal access token for a third-party source control system for an Amplify app. The token is used to create webhook and a read-only deploy key. The token is not stored. ",
                  "format": "password",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "autoBranchCreationConfig": {
                  "description": " Describes the automated branch creation configuration. ",
                  "properties": {
                    "basicAuthCredentials": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BasicAuthCredentials"
                        },
                        {
                          "description": " The basic authorization credentials for the autocreated branch. "
                        }
                      ]
                    },
                    "buildSpec": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BuildSpec"
                        },
                        {
                          "description": " The build specification (build spec) for the autocreated branch. "
                        }
                      ]
                    },
                    "enableAutoBuild": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/EnableAutoBuild"
                        },
                        {
                          "description": " Enables auto building for the autocreated branch. "
                        }
                      ]
                    },
                    "enableBasicAuth": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/EnableBasicAuth"
                        },
                        {
                          "description": " Enables basic authorization for the autocreated branch. "
                        }
                      ]
                    },
                    "enablePerformanceMode": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/EnablePerformanceMode"
                        },
                        {
                          "description": "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>"
                        }
                      ]
                    },
                    "enablePullRequestPreview": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/EnablePullRequestPreview"
                        },
                        {
                          "description": " Enables pull request previews for the autocreated branch. "
                        }
                      ]
                    },
                    "environmentVariables": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/EnvironmentVariables"
                        },
                        {
                          "description": " The environment variables for the autocreated branch. "
                        }
                      ]
                    },
                    "framework": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Framework"
                        },
                        {
                          "description": " The framework for the autocreated branch. "
                        }
                      ]
                    },
                    "pullRequestEnvironmentName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/PullRequestEnvironmentName"
                        },
                        {
                          "description": " The Amplify environment name for the pull request. "
                        }
                      ]
                    },
                    "stage": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Stage"
                        },
                        {
                          "description": " Describes the current stage for the autocreated branch. "
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "autoBranchCreationPatterns": {
                  "description": " Describes the automated branch creation glob patterns for an Amplify app. ",
                  "items": {
                    "$ref": "#/definitions/AutoBranchCreationPattern"
                  },
                  "type": "array"
                },
                "basicAuthCredentials": {
                  "description": " The basic authorization credentials for an Amplify app. ",
                  "format": "password",
                  "maxLength": 2000,
                  "type": "string"
                },
                "buildSpec": {
                  "description": " The build specification (build spec) file for an Amplify app build. ",
                  "maxLength": 25000,
                  "minLength": 1,
                  "type": "string"
                },
                "customHeaders": {
                  "description": "The custom HTTP headers for an Amplify app.",
                  "maxLength": 25000,
                  "minLength": 1,
                  "type": "string"
                },
                "customRules": {
                  "description": " The custom redirect and rewrite rules for an Amplify app. ",
                  "items": {
                    "$ref": "#/definitions/CustomRule"
                  },
                  "type": "array"
                },
                "description": {
                  "description": " The description for an Amplify app. ",
                  "maxLength": 1000,
                  "type": "string"
                },
                "enableAutoBranchCreation": {
                  "description": " Enables automated branch creation for an Amplify app. ",
                  "type": "boolean"
                },
                "enableBasicAuth": {
                  "description": " Enables basic authorization for an Amplify app. ",
                  "type": "boolean"
                },
                "enableBranchAutoBuild": {
                  "description": " Enables branch auto-building for an Amplify app. ",
                  "type": "boolean"
                },
                "enableBranchAutoDeletion": {
                  "description": " Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository. ",
                  "type": "boolean"
                },
                "environmentVariables": {
                  "additionalProperties": {
                    "$ref": "#/definitions/EnvValue"
                  },
                  "description": " The environment variables for an Amplify app. ",
                  "type": "object"
                },
                "iamServiceRoleArn": {
                  "description": " The AWS Identity and Access Management (IAM) service role for an Amplify app. ",
                  "maxLength": 1000,
                  "minLength": 1,
                  "type": "string"
                },
                "name": {
                  "description": " The name for an Amplify app. ",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "oauthToken": {
                  "description": " The OAuth token for a third-party source control system for an Amplify app. The token is used to create a webhook and a read-only deploy key. The OAuth token is not stored. ",
                  "format": "password",
                  "maxLength": 1000,
                  "type": "string"
                },
                "platform": {
                  "description": " The platform for an Amplify app. ",
                  "enum": [
                    "WEB"
                  ],
                  "type": "string"
                },
                "repository": {
                  "description": " The name of the repository for an Amplify app ",
                  "maxLength": 1000,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateAppResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": " Updates an existing Amplify app. ",
        "operationId": "UpdateApp"
      }
    },
    "/apps/{appId}/accesslogs": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "domainName": {
                  "description": " The name of the domain. ",
                  "maxLength": 255,
                  "type": "string"
                },
                "endTime": {
                  "description": " The time at which the logs should end. The time range specified is inclusive of the end time. ",
                  "format": "date-time",
                  "type": "string"
                },
                "startTime": {
                  "description": " The time at which the logs should start. The time range specified is inclusive of the start time. ",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "domainName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GenerateAccessLogsResult"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "482": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": " Returns the website access logs for a specific time range using a presigned URL. ",
        "operationId": "GenerateAccessLogs"
      }
    },
    "/apps/{appId}/backendenvironments": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name of the backend environment ",
            "in": "query",
            "maxLength": 255,
            "minLength": 1,
            "name": "environmentName",
            "required": false,
            "type": "string"
          },
          {
            "description": " A pagination token. Set to null to start listing backend environments from the start. If a non-null pagination token is returned in a result, pass its value in here to list more backend environments. ",
            "in": "query",
            "maxLength": 2000,
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": " The maximum number of records to list in a single response. ",
            "in": "query",
            "maximum": 100,
            "minimum": 0,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListBackendEnvironmentsResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": " Lists the backend environments for an Amplify app. ",
        "operationId": "ListBackendEnvironments"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "deploymentArtifacts": {
                  "description": " The name of deployment artifacts. ",
                  "maxLength": 1000,
                  "minLength": 1,
                  "type": "string"
                },
                "environmentName": {
                  "description": " The name for the backend environment. ",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "stackName": {
                  "description": " The AWS CloudFormation stack name of a backend environment. ",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "environmentName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateBackendEnvironmentResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": " Creates a new backend environment for an Amplify app. ",
        "operationId": "CreateBackendEnvironment"
      }
    },
    "/apps/{appId}/backendenvironments/{environmentName}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID of an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name of a backend environment of an Amplify app. ",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "environmentName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteBackendEnvironmentResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "484": {
            "description": "DependentServiceFailureException",
            "schema": {
              "$ref": "#/definitions/DependentServiceFailureException"
            }
          }
        },
        "description": " Deletes a backend environment for an Amplify app. ",
        "operationId": "DeleteBackendEnvironment"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique id for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name for the backend environment. ",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "environmentName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBackendEnvironmentResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": " Returns a backend environment for an Amplify app. ",
        "operationId": "GetBackendEnvironment"
      }
    },
    "/apps/{appId}/branches": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " A pagination token. Set to null to start listing branches from the start. If a non-null pagination token is returned in a result, pass its value in here to list more branches. ",
            "in": "query",
            "maxLength": 2000,
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": " The maximum number of records to list in a single response. ",
            "in": "query",
            "maximum": 100,
            "minimum": 0,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListBranchesResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": " Lists the branches of an Amplify app. ",
        "operationId": "ListBranches"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": " The tag for the branch. ",
                  "maxProperties": 50,
                  "minProperties": 1,
                  "type": "object"
                },
                "backendEnvironmentArn": {
                  "description": " The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app. ",
                  "maxLength": 1000,
                  "minLength": 1,
                  "type": "string"
                },
                "basicAuthCredentials": {
                  "description": " The basic authorization credentials for the branch. ",
                  "format": "password",
                  "maxLength": 2000,
                  "type": "string"
                },
                "branchName": {
                  "description": " The name for the branch. ",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "buildSpec": {
                  "description": " The build specification (build spec) file for an Amplify app build. ",
                  "maxLength": 25000,
                  "minLength": 1,
                  "type": "string"
                },
                "description": {
                  "description": " The description for the branch. ",
                  "maxLength": 1000,
                  "type": "string"
                },
                "displayName": {
                  "description": " The display name for a branch. This is used as the default domain prefix. ",
                  "maxLength": 255,
                  "type": "string"
                },
                "enableAutoBuild": {
                  "description": " Enables auto building for the branch. ",
                  "type": "boolean"
                },
                "enableBasicAuth": {
                  "description": " Enables basic authorization for the branch. ",
                  "type": "boolean"
                },
                "enableNotification": {
                  "description": " Enables notifications for the branch. ",
                  "type": "boolean"
                },
                "enablePerformanceMode": {
                  "description": "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>",
                  "type": "boolean"
                },
                "enablePullRequestPreview": {
                  "description": " Enables pull request previews for this branch. ",
                  "type": "boolean"
                },
                "environmentVariables": {
                  "additionalProperties": {
                    "$ref": "#/definitions/EnvValue"
                  },
                  "description": " The environment variables for the branch. ",
                  "type": "object"
                },
                "framework": {
                  "description": " The framework for the branch. ",
                  "maxLength": 255,
                  "type": "string"
                },
                "pullRequestEnvironmentName": {
                  "description": " The Amplify environment name for the pull request. ",
                  "maxLength": 20,
                  "type": "string"
                },
                "stage": {
                  "description": " Describes the current stage for the branch. ",
                  "enum": [
                    "PRODUCTION",
                    "BETA",
                    "DEVELOPMENT",
                    "EXPERIMENTAL",
                    "PULL_REQUEST"
                  ],
                  "type": "string"
                },
                "ttl": {
                  "description": " The content Time to Live (TTL) for the website in seconds. ",
                  "type": "string"
                }
              },
              "required": [
                "branchName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateBranchResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "DependentServiceFailureException",
            "schema": {
              "$ref": "#/definitions/DependentServiceFailureException"
            }
          }
        },
        "description": " Creates a new branch for an Amplify app. ",
        "operationId": "CreateBranch"
      }
    },
    "/apps/{appId}/branches/{branchName}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name for the branch. ",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "branchName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteBranchResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "484": {
            "description": "DependentServiceFailureException",
            "schema": {
              "$ref": "#/definitions/DependentServiceFailureException"
            }
          }
        },
        "description": " Deletes a branch for an Amplify app. ",
        "operationId": "DeleteBranch"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name for the branch. ",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "branchName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBranchResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": " Returns a branch for an Amplify app. ",
        "operationId": "GetBranch"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name for the branch. ",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "branchName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "backendEnvironmentArn": {
                  "description": " The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app. ",
                  "maxLength": 1000,
                  "minLength": 1,
                  "type": "string"
                },
                "basicAuthCredentials": {
                  "description": " The basic authorization credentials for the branch. ",
                  "format": "password",
                  "maxLength": 2000,
                  "type": "string"
                },
                "buildSpec": {
                  "description": " The build specification (build spec) file for an Amplify app build. ",
                  "maxLength": 25000,
                  "minLength": 1,
                  "type": "string"
                },
                "description": {
                  "description": " The description for the branch. ",
                  "maxLength": 1000,
                  "type": "string"
                },
                "displayName": {
                  "description": " The display name for a branch. This is used as the default domain prefix. ",
                  "maxLength": 255,
                  "type": "string"
                },
                "enableAutoBuild": {
                  "description": " Enables auto building for the branch. ",
                  "type": "boolean"
                },
                "enableBasicAuth": {
                  "description": " Enables basic authorization for the branch. ",
                  "type": "boolean"
                },
                "enableNotification": {
                  "description": " Enables notifications for the branch. ",
                  "type": "boolean"
                },
                "enablePerformanceMode": {
                  "description": "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>",
                  "type": "boolean"
                },
                "enablePullRequestPreview": {
                  "description": " Enables pull request previews for this branch. ",
                  "type": "boolean"
                },
                "environmentVariables": {
                  "additionalProperties": {
                    "$ref": "#/definitions/EnvValue"
                  },
                  "description": " The environment variables for the branch. ",
                  "type": "object"
                },
                "framework": {
                  "description": " The framework for the branch. ",
                  "maxLength": 255,
                  "type": "string"
                },
                "pullRequestEnvironmentName": {
                  "description": " The Amplify environment name for the pull request. ",
                  "maxLength": 20,
                  "type": "string"
                },
                "stage": {
                  "description": " Describes the current stage for the branch. ",
                  "enum": [
                    "PRODUCTION",
                    "BETA",
                    "DEVELOPMENT",
                    "EXPERIMENTAL",
                    "PULL_REQUEST"
                  ],
                  "type": "string"
                },
                "ttl": {
                  "description": " The content Time to Live (TTL) for the website in seconds. ",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateBranchResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "484": {
            "description": "DependentServiceFailureException",
            "schema": {
              "$ref": "#/definitions/DependentServiceFailureException"
            }
          }
        },
        "description": " Updates a branch for an Amplify app. ",
        "operationId": "UpdateBranch"
      }
    },
    "/apps/{appId}/branches/{branchName}/deployments": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name for the branch, for the job. ",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "branchName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "fileMap": {
                  "additionalProperties": {
                    "$ref": "#/definitions/MD5Hash"
                  },
                  "description": " An optional file map that contains the file name as the key and the file content md5 hash as the value. If this argument is provided, the service will generate a unique upload URL per file. Otherwise, the service will only generate a single upload URL for the zipped files. ",
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDeploymentResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": " Creates a deployment for a manually deployed Amplify app. Manually deployed apps are not connected to a repository. ",
        "operationId": "CreateDeployment"
      }
    },
    "/apps/{appId}/branches/{branchName}/deployments/start": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name for the branch, for the job. ",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "branchName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "jobId": {
                  "description": " The job ID for this deployment, generated by the create deployment request. ",
                  "maxLength": 255,
                  "type": "string"
                },
                "sourceUrl": {
                  "description": " The source URL for this deployment, used when calling start deployment without create deployment. The source URL can be any HTTP GET URL that is publicly accessible and downloads a single .zip file. ",
                  "maxLength": 1000,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartDeploymentResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": " Starts a deployment for a manually deployed app. Manually deployed apps are not connected to a repository. ",
        "operationId": "StartDeployment"
      }
    },
    "/apps/{appId}/branches/{branchName}/jobs": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name for a branch. ",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "branchName",
            "required": true,
            "type": "string"
          },
          {
            "description": " A pagination token. Set to null to start listing steps from the start. If a non-null pagination token is returned in a result, pass its value in here to list more steps. ",
            "in": "query",
            "maxLength": 2000,
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": " The maximum number of records to list in a single response. ",
            "in": "query",
            "maximum": 100,
            "minimum": 0,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListJobsResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": " Lists the jobs for a branch of an Amplify app. ",
        "operationId": "ListJobs"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The branch name for the job. ",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "branchName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "commitId": {
                  "description": " The commit ID from a third-party repository provider for the job. ",
                  "maxLength": 255,
                  "type": "string"
                },
                "commitMessage": {
                  "description": " The commit message from a third-party repository provider for the job. ",
                  "maxLength": 10000,
                  "type": "string"
                },
                "commitTime": {
                  "description": " The commit date and time for the job. ",
                  "format": "date-time",
                  "type": "string"
                },
                "jobId": {
                  "description": " The unique ID for an existing job. This is required if the value of <code>jobType</code> is <code>RETRY</code>. ",
                  "maxLength": 255,
                  "type": "string"
                },
                "jobReason": {
                  "description": " A descriptive reason for starting this job. ",
                  "maxLength": 255,
                  "type": "string"
                },
                "jobType": {
                  "description": " Describes the type for the job. The job type <code>RELEASE</code> starts a new job with the latest change from the specified branch. This value is available only for apps that are connected to a repository. The job type <code>RETRY</code> retries an existing job. If the job type value is <code>RETRY</code>, the <code>jobId</code> is also required. ",
                  "enum": [
                    "RELEASE",
                    "RETRY",
                    "MANUAL",
                    "WEB_HOOK"
                  ],
                  "maxLength": 10,
                  "type": "string"
                }
              },
              "required": [
                "jobType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartJobResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": " Starts a new job for a branch of an Amplify app. ",
        "operationId": "StartJob"
      }
    },
    "/apps/{appId}/branches/{branchName}/jobs/{jobId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name for the branch, for the job. ",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "branchName",
            "required": true,
            "type": "string"
          },
          {
            "description": " The unique ID for the job. ",
            "in": "path",
            "maxLength": 255,
            "name": "jobId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteJobResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": " Deletes a job for a branch of an Amplify app. ",
        "operationId": "DeleteJob"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The branch name for the job. ",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "branchName",
            "required": true,
            "type": "string"
          },
          {
            "description": " The unique ID for the job. ",
            "in": "path",
            "maxLength": 255,
            "name": "jobId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetJobResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": " Returns a job for a branch of an Amplify app. ",
        "operationId": "GetJob"
      }
    },
    "/apps/{appId}/branches/{branchName}/jobs/{jobId}/artifacts": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name of a branch that is part of an Amplify app. ",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "branchName",
            "required": true,
            "type": "string"
          },
          {
            "description": " The unique ID for a job. ",
            "in": "path",
            "maxLength": 255,
            "name": "jobId",
            "required": true,
            "type": "string"
          },
          {
            "description": " A pagination token. Set to null to start listing artifacts from start. If a non-null pagination token is returned in a result, pass its value in here to list more artifacts. ",
            "in": "query",
            "maxLength": 2000,
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": " The maximum number of records to list in a single response. ",
            "in": "query",
            "maximum": 100,
            "minimum": 0,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListArtifactsResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": " Returns a list of artifacts for a specified app, branch, and job. ",
        "operationId": "ListArtifacts"
      }
    },
    "/apps/{appId}/branches/{branchName}/jobs/{jobId}/stop": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name for the branch, for the job. ",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "branchName",
            "required": true,
            "type": "string"
          },
          {
            "description": " The unique id for the job. ",
            "in": "path",
            "maxLength": 255,
            "name": "jobId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopJobResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": " Stops a job that is in progress for a branch of an Amplify app. ",
        "operationId": "StopJob"
      }
    },
    "/apps/{appId}/domains": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " A pagination token. Set to null to start listing apps from the start. If non-null, a pagination token is returned in a result. Pass its value in here to list more projects. ",
            "in": "query",
            "maxLength": 2000,
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": " The maximum number of records to list in a single response. ",
            "in": "query",
            "maximum": 100,
            "minimum": 0,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDomainAssociationsResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": " Returns the domain associations for an Amplify app. ",
        "operationId": "ListDomainAssociations"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "autoSubDomainCreationPatterns": {
                  "description": " Sets the branch patterns for automatic subdomain creation. ",
                  "items": {
                    "$ref": "#/definitions/AutoSubDomainCreationPattern"
                  },
                  "type": "array"
                },
                "autoSubDomainIAMRole": {
                  "description": " The required AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) for automatically creating subdomains. ",
                  "maxLength": 1000,
                  "pattern": "^$|^arn:aws:iam::\\d{12}:role.+",
                  "type": "string"
                },
                "domainName": {
                  "description": " The domain name for the domain association. ",
                  "maxLength": 255,
                  "type": "string"
                },
                "enableAutoSubDomain": {
                  "description": " Enables the automated creation of subdomains for branches. ",
                  "type": "boolean"
                },
                "subDomainSettings": {
                  "description": " The setting for the subdomain. ",
                  "items": {
                    "$ref": "#/definitions/SubDomainSetting"
                  },
                  "maxItems": 255,
                  "type": "array"
                }
              },
              "required": [
                "domainName",
                "subDomainSettings"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDomainAssociationResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "DependentServiceFailureException",
            "schema": {
              "$ref": "#/definitions/DependentServiceFailureException"
            }
          }
        },
        "description": " Creates a new domain association for an Amplify app. This action associates a custom domain with the Amplify app ",
        "operationId": "CreateDomainAssociation"
      }
    },
    "/apps/{appId}/domains/{domainName}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique id for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name of the domain. ",
            "in": "path",
            "maxLength": 255,
            "name": "domainName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteDomainAssociationResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "484": {
            "description": "DependentServiceFailureException",
            "schema": {
              "$ref": "#/definitions/DependentServiceFailureException"
            }
          }
        },
        "description": " Deletes a domain association for an Amplify app. ",
        "operationId": "DeleteDomainAssociation"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique id for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name of the domain. ",
            "in": "path",
            "maxLength": 255,
            "name": "domainName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetDomainAssociationResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          }
        },
        "description": " Returns the domain information for an Amplify app. ",
        "operationId": "GetDomainAssociation"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " The name of the domain. ",
            "in": "path",
            "maxLength": 255,
            "name": "domainName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "autoSubDomainCreationPatterns": {
                  "description": " Sets the branch patterns for automatic subdomain creation. ",
                  "items": {
                    "$ref": "#/definitions/AutoSubDomainCreationPattern"
                  },
                  "type": "array"
                },
                "autoSubDomainIAMRole": {
                  "description": " The required AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) for automatically creating subdomains. ",
                  "maxLength": 1000,
                  "pattern": "^$|^arn:aws:iam::\\d{12}:role.+",
                  "type": "string"
                },
                "enableAutoSubDomain": {
                  "description": " Enables the automated creation of subdomains for branches. ",
                  "type": "boolean"
                },
                "subDomainSettings": {
                  "description": " Describes the settings for the subdomain. ",
                  "items": {
                    "$ref": "#/definitions/SubDomainSetting"
                  },
                  "maxItems": 255,
                  "type": "array"
                }
              },
              "required": [
                "subDomainSettings"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateDomainAssociationResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "484": {
            "description": "DependentServiceFailureException",
            "schema": {
              "$ref": "#/definitions/DependentServiceFailureException"
            }
          }
        },
        "description": " Creates a new domain association for an Amplify app.",
        "operationId": "UpdateDomainAssociation"
      }
    },
    "/apps/{appId}/webhooks": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " A pagination token. Set to null to start listing webhooks from the start. If non-null,the pagination token is returned in a result. Pass its value in here to list more webhooks. ",
            "in": "query",
            "maxLength": 2000,
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": " The maximum number of records to list in a single response. ",
            "in": "query",
            "maximum": 100,
            "minimum": 0,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListWebhooksResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": " Returns a list of webhooks for an Amplify app. ",
        "operationId": "ListWebhooks"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an Amplify app. ",
            "in": "path",
            "maxLength": 20,
            "minLength": 1,
            "name": "appId",
            "pattern": "d[a-z0-9]+",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "branchName": {
                  "description": " The name for a branch that is part of an Amplify app. ",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "description": {
                  "description": " The description for a webhook. ",
                  "maxLength": 1000,
                  "type": "string"
                }
              },
              "required": [
                "branchName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateWebhookResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "DependentServiceFailureException",
            "schema": {
              "$ref": "#/definitions/DependentServiceFailureException"
            }
          }
        },
        "description": " Creates a new webhook on an Amplify app. ",
        "operationId": "CreateWebhook"
      }
    },
    "/artifacts/{artifactId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for an artifact. ",
            "in": "path",
            "maxLength": 255,
            "name": "artifactId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetArtifactUrlResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": " Returns the artifact info that corresponds to an artifact id. ",
        "operationId": "GetArtifactUrl"
      }
    },
    "/tags/{resourceArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The Amazon Resource Name (ARN) to use to list tags. ",
            "in": "path",
            "name": "resourceArn",
            "pattern": "^arn:aws:amplify:.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceResponse"
            }
          },
          "480": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "481": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Returns a list of tags for a specified Amazon Resource Name (ARN). ",
        "operationId": "ListTagsForResource"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The Amazon Resource Name (ARN) to use to tag a resource. ",
            "in": "path",
            "name": "resourceArn",
            "pattern": "^arn:aws:amplify:.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": " The tags used to tag the resource. ",
                  "maxProperties": 50,
                  "minProperties": 1,
                  "type": "object"
                }
              },
              "required": [
                "tags"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagResourceResponse"
            }
          },
          "480": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "481": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Tags the resource with a tag key and value. ",
        "operationId": "TagResource"
      }
    },
    "/tags/{resourceArn}#tagKeys": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The Amazon Resource Name (ARN) to use to untag a resource. ",
            "in": "path",
            "name": "resourceArn",
            "pattern": "^arn:aws:amplify:.*",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": " The tag keys to use to untag a resource. ",
            "in": "query",
            "items": {
              "$ref": "#/definitions/TagKey"
            },
            "maxItems": 50,
            "minItems": 1,
            "name": "tagKeys",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UntagResourceResponse"
            }
          },
          "480": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "481": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Untags a resource with a specified Amazon Resource Name (ARN). ",
        "operationId": "UntagResource"
      }
    },
    "/webhooks/{webhookId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for a webhook. ",
            "in": "path",
            "maxLength": 255,
            "name": "webhookId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteWebhookResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": " Deletes a webhook. ",
        "operationId": "DeleteWebhook"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for a webhook. ",
            "in": "path",
            "maxLength": 255,
            "name": "webhookId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetWebhookResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "483": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": " Returns the webhook information that corresponds to a specified webhook ID. ",
        "operationId": "GetWebhook"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique ID for a webhook. ",
            "in": "path",
            "maxLength": 255,
            "name": "webhookId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "branchName": {
                  "description": " The name for a branch that is part of an Amplify app. ",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "description": {
                  "description": " The description for a webhook. ",
                  "maxLength": 1000,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateWebhookResult"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "484": {
            "description": "DependentServiceFailureException",
            "schema": {
              "$ref": "#/definitions/DependentServiceFailureException"
            }
          }
        },
        "description": " Updates a webhook. ",
        "operationId": "UpdateWebhook"
      }
    }
  },
  "definitions": {
    "AccessToken": {
      "format": "password",
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "ActiveJobId": {
      "maxLength": 1000,
      "type": "string"
    },
    "App": {
      "description": " Represents the different branches of a repository for building, deploying, and hosting an Amplify app. ",
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": " The tag for the Amplify app. "
            }
          ]
        },
        "appArn": {
          "allOf": [
            {
              "$ref": "#/definitions/AppArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) of the Amplify app. "
            }
          ]
        },
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": " The unique ID of the Amplify app. "
            }
          ]
        },
        "autoBranchCreationConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoBranchCreationConfig"
            },
            {
              "description": " Describes the automated branch creation configuration for the Amplify app. "
            }
          ]
        },
        "autoBranchCreationPatterns": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoBranchCreationPatterns"
            },
            {
              "description": " Describes the automated branch creation glob patterns for the Amplify app. "
            }
          ]
        },
        "basicAuthCredentials": {
          "allOf": [
            {
              "$ref": "#/definitions/BasicAuthCredentials"
            },
            {
              "description": " The basic authorization credentials for branches for the Amplify app. "
            }
          ]
        },
        "buildSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/BuildSpec"
            },
            {
              "description": " Describes the content of the build specification (build spec) for the Amplify app. "
            }
          ]
        },
        "createTime": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateTime"
            },
            {
              "description": " Creates a date and time for the Amplify app. "
            }
          ]
        },
        "customHeaders": {
          "allOf": [
            {
              "$ref": "#/definitions/CustomHeaders"
            },
            {
              "description": "Describes the custom HTTP headers for the Amplify app."
            }
          ]
        },
        "customRules": {
          "allOf": [
            {
              "$ref": "#/definitions/CustomRules"
            },
            {
              "description": " Describes the custom redirect and rewrite rules for the Amplify app. "
            }
          ]
        },
        "defaultDomain": {
          "allOf": [
            {
              "$ref": "#/definitions/DefaultDomain"
            },
            {
              "description": " The default domain for the Amplify app. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": " The description for the Amplify app. "
            }
          ]
        },
        "enableAutoBranchCreation": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableAutoBranchCreation"
            },
            {
              "description": " Enables automated branch creation for the Amplify app. "
            }
          ]
        },
        "enableBasicAuth": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableBasicAuth"
            },
            {
              "description": " Enables basic authorization for the Amplify app's branches. "
            }
          ]
        },
        "enableBranchAutoBuild": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableBranchAutoBuild"
            },
            {
              "description": " Enables the auto-building of branches for the Amplify app. "
            }
          ]
        },
        "enableBranchAutoDeletion": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableBranchAutoDeletion"
            },
            {
              "description": " Automatically disconnect a branch in the Amplify Console when you delete a branch from your Git repository. "
            }
          ]
        },
        "environmentVariables": {
          "allOf": [
            {
              "$ref": "#/definitions/EnvironmentVariables"
            },
            {
              "description": " The environment variables for the Amplify app. "
            }
          ]
        },
        "iamServiceRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ServiceRoleArn"
            },
            {
              "description": " The AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) of the Amplify app. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": " The name for the Amplify app. "
            }
          ]
        },
        "platform": {
          "allOf": [
            {
              "$ref": "#/definitions/Platform"
            },
            {
              "description": " The platform for the Amplify app. "
            }
          ]
        },
        "productionBranch": {
          "allOf": [
            {
              "$ref": "#/definitions/ProductionBranch"
            },
            {
              "description": " Describes the information about a production branch of the Amplify app. "
            }
          ]
        },
        "repository": {
          "allOf": [
            {
              "$ref": "#/definitions/Repository"
            },
            {
              "description": " The repository for the Amplify app. "
            }
          ]
        },
        "updateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateTime"
            },
            {
              "description": " Updates the date and time for the Amplify app. "
            }
          ]
        }
      },
      "required": [
        "appId",
        "appArn",
        "name",
        "description",
        "repository",
        "platform",
        "createTime",
        "updateTime",
        "environmentVariables",
        "defaultDomain",
        "enableBranchAutoBuild",
        "enableBasicAuth"
      ],
      "type": "object"
    },
    "AppArn": {
      "maxLength": 1000,
      "type": "string"
    },
    "AppId": {
      "maxLength": 20,
      "minLength": 1,
      "pattern": "d[a-z0-9]+",
      "type": "string"
    },
    "Apps": {
      "items": {
        "$ref": "#/definitions/App"
      },
      "type": "array"
    },
    "Artifact": {
      "description": " Describes an artifact. ",
      "properties": {
        "artifactFileName": {
          "allOf": [
            {
              "$ref": "#/definitions/ArtifactFileName"
            },
            {
              "description": " The file name for the artifact. "
            }
          ]
        },
        "artifactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ArtifactId"
            },
            {
              "description": " The unique ID for the artifact. "
            }
          ]
        }
      },
      "required": [
        "artifactFileName",
        "artifactId"
      ],
      "type": "object"
    },
    "ArtifactFileName": {
      "maxLength": 1000,
      "type": "string"
    },
    "ArtifactId": {
      "maxLength": 255,
      "type": "string"
    },
    "ArtifactUrl": {
      "maxLength": 1000,
      "type": "string"
    },
    "Artifacts": {
      "items": {
        "$ref": "#/definitions/Artifact"
      },
      "type": "array"
    },
    "ArtifactsUrl": {
      "maxLength": 1000,
      "type": "string"
    },
    "AssociatedResource": {
      "maxLength": 2048,
      "minLength": 1,
      "type": "string"
    },
    "AssociatedResources": {
      "items": {
        "$ref": "#/definitions/AssociatedResource"
      },
      "type": "array"
    },
    "AutoBranchCreationConfig": {
      "description": " Describes the automated branch creation configuration. ",
      "properties": {
        "basicAuthCredentials": {
          "allOf": [
            {
              "$ref": "#/definitions/BasicAuthCredentials"
            },
            {
              "description": " The basic authorization credentials for the autocreated branch. "
            }
          ]
        },
        "buildSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/BuildSpec"
            },
            {
              "description": " The build specification (build spec) for the autocreated branch. "
            }
          ]
        },
        "enableAutoBuild": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableAutoBuild"
            },
            {
              "description": " Enables auto building for the autocreated branch. "
            }
          ]
        },
        "enableBasicAuth": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableBasicAuth"
            },
            {
              "description": " Enables basic authorization for the autocreated branch. "
            }
          ]
        },
        "enablePerformanceMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EnablePerformanceMode"
            },
            {
              "description": "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>"
            }
          ]
        },
        "enablePullRequestPreview": {
          "allOf": [
            {
              "$ref": "#/definitions/EnablePullRequestPreview"
            },
            {
              "description": " Enables pull request previews for the autocreated branch. "
            }
          ]
        },
        "environmentVariables": {
          "allOf": [
            {
              "$ref": "#/definitions/EnvironmentVariables"
            },
            {
              "description": " The environment variables for the autocreated branch. "
            }
          ]
        },
        "framework": {
          "allOf": [
            {
              "$ref": "#/definitions/Framework"
            },
            {
              "description": " The framework for the autocreated branch. "
            }
          ]
        },
        "pullRequestEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/PullRequestEnvironmentName"
            },
            {
              "description": " The Amplify environment name for the pull request. "
            }
          ]
        },
        "stage": {
          "allOf": [
            {
              "$ref": "#/definitions/Stage"
            },
            {
              "description": " Describes the current stage for the autocreated branch. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AutoBranchCreationPattern": {
      "maxLength": 2048,
      "minLength": 1,
      "type": "string"
    },
    "AutoBranchCreationPatterns": {
      "items": {
        "$ref": "#/definitions/AutoBranchCreationPattern"
      },
      "type": "array"
    },
    "AutoSubDomainCreationPattern": {
      "maxLength": 2048,
      "minLength": 1,
      "type": "string"
    },
    "AutoSubDomainCreationPatterns": {
      "items": {
        "$ref": "#/definitions/AutoSubDomainCreationPattern"
      },
      "type": "array"
    },
    "AutoSubDomainIAMRole": {
      "maxLength": 1000,
      "pattern": "^$|^arn:aws:iam::\\d{12}:role.+",
      "type": "string"
    },
    "BackendEnvironment": {
      "description": " Describes the backend environment for an Amplify app. ",
      "properties": {
        "backendEnvironmentArn": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendEnvironmentArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app. "
            }
          ]
        },
        "createTime": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateTime"
            },
            {
              "description": " The creation date and time for a backend environment that is part of an Amplify app. "
            }
          ]
        },
        "deploymentArtifacts": {
          "allOf": [
            {
              "$ref": "#/definitions/DeploymentArtifacts"
            },
            {
              "description": " The name of deployment artifacts. "
            }
          ]
        },
        "environmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/EnvironmentName"
            },
            {
              "description": " The name for a backend environment that is part of an Amplify app. "
            }
          ]
        },
        "stackName": {
          "allOf": [
            {
              "$ref": "#/definitions/StackName"
            },
            {
              "description": " The AWS CloudFormation stack name of a backend environment. "
            }
          ]
        },
        "updateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateTime"
            },
            {
              "description": " The last updated date and time for a backend environment that is part of an Amplify app. "
            }
          ]
        }
      },
      "required": [
        "backendEnvironmentArn",
        "environmentName",
        "createTime",
        "updateTime"
      ],
      "type": "object"
    },
    "BackendEnvironmentArn": {
      "maxLength": 1000,
      "minLength": 1,
      "type": "string"
    },
    "BackendEnvironments": {
      "items": {
        "$ref": "#/definitions/BackendEnvironment"
      },
      "type": "array"
    },
    "BadRequestException": {},
    "BasicAuthCredentials": {
      "format": "password",
      "maxLength": 2000,
      "type": "string"
    },
    "Branch": {
      "description": " The branch for an Amplify app, which maps to a third-party repository branch. ",
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": " The tag for the branch of an Amplify app. "
            }
          ]
        },
        "activeJobId": {
          "allOf": [
            {
              "$ref": "#/definitions/ActiveJobId"
            },
            {
              "description": " The ID of the active job for a branch of an Amplify app. "
            }
          ]
        },
        "associatedResources": {
          "allOf": [
            {
              "$ref": "#/definitions/AssociatedResources"
            },
            {
              "description": " A list of custom resources that are linked to this branch. "
            }
          ]
        },
        "backendEnvironmentArn": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendEnvironmentArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app. "
            }
          ]
        },
        "basicAuthCredentials": {
          "allOf": [
            {
              "$ref": "#/definitions/BasicAuthCredentials"
            },
            {
              "description": " The basic authorization credentials for a branch of an Amplify app. "
            }
          ]
        },
        "branchArn": {
          "allOf": [
            {
              "$ref": "#/definitions/BranchArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) for a branch that is part of an Amplify app. "
            }
          ]
        },
        "branchName": {
          "allOf": [
            {
              "$ref": "#/definitions/BranchName"
            },
            {
              "description": " The name for the branch that is part of an Amplify app. "
            }
          ]
        },
        "buildSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/BuildSpec"
            },
            {
              "description": " The build specification (build spec) content for the branch of an Amplify app. "
            }
          ]
        },
        "createTime": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateTime"
            },
            {
              "description": " The creation date and time for a branch that is part of an Amplify app. "
            }
          ]
        },
        "customDomains": {
          "allOf": [
            {
              "$ref": "#/definitions/CustomDomains"
            },
            {
              "description": " The custom domains for a branch of an Amplify app. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": " The description for the branch that is part of an Amplify app. "
            }
          ]
        },
        "destinationBranch": {
          "allOf": [
            {
              "$ref": "#/definitions/BranchName"
            },
            {
              "description": " The destination branch if the branch is a pull request branch. "
            }
          ]
        },
        "displayName": {
          "allOf": [
            {
              "$ref": "#/definitions/DisplayName"
            },
            {
              "description": " The display name for the branch. This is used as the default domain prefix. "
            }
          ]
        },
        "enableAutoBuild": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableAutoBuild"
            },
            {
              "description": " Enables auto-building on push for a branch of an Amplify app. "
            }
          ]
        },
        "enableBasicAuth": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableBasicAuth"
            },
            {
              "description": " Enables basic authorization for a branch of an Amplify app. "
            }
          ]
        },
        "enableNotification": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableNotification"
            },
            {
              "description": " Enables notifications for a branch that is part of an Amplify app. "
            }
          ]
        },
        "enablePerformanceMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EnablePerformanceMode"
            },
            {
              "description": "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>"
            }
          ]
        },
        "enablePullRequestPreview": {
          "allOf": [
            {
              "$ref": "#/definitions/EnablePullRequestPreview"
            },
            {
              "description": " Enables pull request previews for the branch. "
            }
          ]
        },
        "environmentVariables": {
          "allOf": [
            {
              "$ref": "#/definitions/EnvironmentVariables"
            },
            {
              "description": " The environment variables specific to a branch of an Amplify app. "
            }
          ]
        },
        "framework": {
          "allOf": [
            {
              "$ref": "#/definitions/Framework"
            },
            {
              "description": " The framework for a branch of an Amplify app. "
            }
          ]
        },
        "pullRequestEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/PullRequestEnvironmentName"
            },
            {
              "description": " The Amplify environment name for the pull request. "
            }
          ]
        },
        "sourceBranch": {
          "allOf": [
            {
              "$ref": "#/definitions/BranchName"
            },
            {
              "description": " The source branch if the branch is a pull request branch. "
            }
          ]
        },
        "stage": {
          "allOf": [
            {
              "$ref": "#/definitions/Stage"
            },
            {
              "description": " The current stage for the branch that is part of an Amplify app. "
            }
          ]
        },
        "thumbnailUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/ThumbnailUrl"
            },
            {
              "description": " The thumbnail URL for the branch of an Amplify app. "
            }
          ]
        },
        "totalNumberOfJobs": {
          "allOf": [
            {
              "$ref": "#/definitions/TotalNumberOfJobs"
            },
            {
              "description": " The total number of jobs that are part of an Amplify app. "
            }
          ]
        },
        "ttl": {
          "allOf": [
            {
              "$ref": "#/definitions/TTL"
            },
            {
              "description": " The content Time to Live (TTL) for the website in seconds. "
            }
          ]
        },
        "updateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateTime"
            },
            {
              "description": " The last updated date and time for a branch that is part of an Amplify app. "
            }
          ]
        }
      },
      "required": [
        "branchArn",
        "branchName",
        "description",
        "stage",
        "displayName",
        "enableNotification",
        "createTime",
        "updateTime",
        "environmentVariables",
        "enableAutoBuild",
        "customDomains",
        "framework",
        "activeJobId",
        "totalNumberOfJobs",
        "enableBasicAuth",
        "ttl",
        "enablePullRequestPreview"
      ],
      "type": "object"
    },
    "BranchArn": {
      "maxLength": 1000,
      "type": "string"
    },
    "BranchName": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "Branches": {
      "items": {
        "$ref": "#/definitions/Branch"
      },
      "maxItems": 255,
      "type": "array"
    },
    "BuildSpec": {
      "description": " The build specification (build spec) file for an Amplify app build. ",
      "maxLength": 25000,
      "minLength": 1,
      "type": "string"
    },
    "CertificateVerificationDNSRecord": {
      "maxLength": 1000,
      "type": "string"
    },
    "CommitId": {
      "maxLength": 255,
      "type": "string"
    },
    "CommitMessage": {
      "maxLength": 10000,
      "type": "string"
    },
    "CommitTime": {
      "format": "date-time",
      "type": "string"
    },
    "Condition": {
      "maxLength": 2048,
      "minLength": 1,
      "type": "string"
    },
    "Context": {
      "type": "string"
    },
    "CreateAppRequest": {
      "description": " The request structure used to create apps in Amplify. ",
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": " The tag for an Amplify app. "
            }
          ]
        },
        "accessToken": {
          "allOf": [
            {
              "$ref": "#/definitions/AccessToken"
            },
            {
              "description": " The personal access token for a third-party source control system for an Amplify app. The personal access token is used to create a webhook and a read-only deploy key. The token is not stored. "
            }
          ]
        },
        "autoBranchCreationConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoBranchCreationConfig"
            },
            {
              "description": " The automated branch creation configuration for an Amplify app. "
            }
          ]
        },
        "autoBranchCreationPatterns": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoBranchCreationPatterns"
            },
            {
              "description": " The automated branch creation glob patterns for an Amplify app. "
            }
          ]
        },
        "basicAuthCredentials": {
          "allOf": [
            {
              "$ref": "#/definitions/BasicAuthCredentials"
            },
            {
              "description": " The credentials for basic authorization for an Amplify app. "
            }
          ]
        },
        "buildSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/BuildSpec"
            },
            {
              "description": " The build specification (build spec) for an Amplify app. "
            }
          ]
        },
        "customHeaders": {
          "allOf": [
            {
              "$ref": "#/definitions/CustomHeaders"
            },
            {
              "description": "The custom HTTP headers for an Amplify app."
            }
          ]
        },
        "customRules": {
          "allOf": [
            {
              "$ref": "#/definitions/CustomRules"
            },
            {
              "description": " The custom rewrite and redirect rules for an Amplify app. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": " The description for an Amplify app. "
            }
          ]
        },
        "enableAutoBranchCreation": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableAutoBranchCreation"
            },
            {
              "description": " Enables automated branch creation for an Amplify app. "
            }
          ]
        },
        "enableBasicAuth": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableBasicAuth"
            },
            {
              "description": " Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app. "
            }
          ]
        },
        "enableBranchAutoBuild": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableBranchAutoBuild"
            },
            {
              "description": " Enables the auto building of branches for an Amplify app. "
            }
          ]
        },
        "enableBranchAutoDeletion": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableBranchAutoDeletion"
            },
            {
              "description": " Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository. "
            }
          ]
        },
        "environmentVariables": {
          "allOf": [
            {
              "$ref": "#/definitions/EnvironmentVariables"
            },
            {
              "description": " The environment variables map for an Amplify app. "
            }
          ]
        },
        "iamServiceRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ServiceRoleArn"
            },
            {
              "description": " The AWS Identity and Access Management (IAM) service role for an Amplify app. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": " The name for an Amplify app. "
            }
          ]
        },
        "oauthToken": {
          "allOf": [
            {
              "$ref": "#/definitions/OauthToken"
            },
            {
              "description": " The OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key. The OAuth token is not stored. "
            }
          ]
        },
        "platform": {
          "allOf": [
            {
              "$ref": "#/definitions/Platform"
            },
            {
              "description": " The platform or framework for an Amplify app. "
            }
          ]
        },
        "repository": {
          "allOf": [
            {
              "$ref": "#/definitions/Repository"
            },
            {
              "description": " The repository for an Amplify app. "
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "title": "CreateAppRequest",
      "type": "object"
    },
    "CreateAppResult": {
      "properties": {
        "app": {
          "$ref": "#/definitions/App"
        }
      },
      "required": [
        "app"
      ],
      "type": "object"
    },
    "CreateBackendEnvironmentRequest": {
      "description": " The request structure for the backend environment create request. ",
      "properties": {
        "deploymentArtifacts": {
          "allOf": [
            {
              "$ref": "#/definitions/DeploymentArtifacts"
            },
            {
              "description": " The name of deployment artifacts. "
            }
          ]
        },
        "environmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/EnvironmentName"
            },
            {
              "description": " The name for the backend environment. "
            }
          ]
        },
        "stackName": {
          "allOf": [
            {
              "$ref": "#/definitions/StackName"
            },
            {
              "description": " The AWS CloudFormation stack name of a backend environment. "
            }
          ]
        }
      },
      "required": [
        "environmentName"
      ],
      "title": "CreateBackendEnvironmentRequest",
      "type": "object"
    },
    "CreateBackendEnvironmentResult": {
      "description": " The result structure for the create backend environment request. ",
      "properties": {
        "backendEnvironment": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendEnvironment"
            },
            {
              "description": " Describes the backend environment for an Amplify app. "
            }
          ]
        }
      },
      "required": [
        "backendEnvironment"
      ],
      "type": "object"
    },
    "CreateBranchRequest": {
      "description": " The request structure for the create branch request. ",
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": " The tag for the branch. "
            }
          ]
        },
        "backendEnvironmentArn": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendEnvironmentArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app. "
            }
          ]
        },
        "basicAuthCredentials": {
          "allOf": [
            {
              "$ref": "#/definitions/BasicAuthCredentials"
            },
            {
              "description": " The basic authorization credentials for the branch. "
            }
          ]
        },
        "branchName": {
          "allOf": [
            {
              "$ref": "#/definitions/BranchName"
            },
            {
              "description": " The name for the branch. "
            }
          ]
        },
        "buildSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/BuildSpec"
            },
            {
              "description": " The build specification (build spec) for the branch. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": " The description for the branch. "
            }
          ]
        },
        "displayName": {
          "allOf": [
            {
              "$ref": "#/definitions/DisplayName"
            },
            {
              "description": " The display name for a branch. This is used as the default domain prefix. "
            }
          ]
        },
        "enableAutoBuild": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableAutoBuild"
            },
            {
              "description": " Enables auto building for the branch. "
            }
          ]
        },
        "enableBasicAuth": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableBasicAuth"
            },
            {
              "description": " Enables basic authorization for the branch. "
            }
          ]
        },
        "enableNotification": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableNotification"
            },
            {
              "description": " Enables notifications for the branch. "
            }
          ]
        },
        "enablePerformanceMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EnablePerformanceMode"
            },
            {
              "description": "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>"
            }
          ]
        },
        "enablePullRequestPreview": {
          "allOf": [
            {
              "$ref": "#/definitions/EnablePullRequestPreview"
            },
            {
              "description": " Enables pull request previews for this branch. "
            }
          ]
        },
        "environmentVariables": {
          "allOf": [
            {
              "$ref": "#/definitions/EnvironmentVariables"
            },
            {
              "description": " The environment variables for the branch. "
            }
          ]
        },
        "framework": {
          "allOf": [
            {
              "$ref": "#/definitions/Framework"
            },
            {
              "description": " The framework for the branch. "
            }
          ]
        },
        "pullRequestEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/PullRequestEnvironmentName"
            },
            {
              "description": " The Amplify environment name for the pull request. "
            }
          ]
        },
        "stage": {
          "allOf": [
            {
              "$ref": "#/definitions/Stage"
            },
            {
              "description": " Describes the current stage for the branch. "
            }
          ]
        },
        "ttl": {
          "allOf": [
            {
              "$ref": "#/definitions/TTL"
            },
            {
              "description": " The content Time To Live (TTL) for the website in seconds. "
            }
          ]
        }
      },
      "required": [
        "branchName"
      ],
      "title": "CreateBranchRequest",
      "type": "object"
    },
    "CreateBranchResult": {
      "description": " The result structure for create branch request. ",
      "properties": {
        "branch": {
          "allOf": [
            {
              "$ref": "#/definitions/Branch"
            },
            {
              "description": " Describes the branch for an Amplify app, which maps to a third-party repository branch. "
            }
          ]
        }
      },
      "required": [
        "branch"
      ],
      "type": "object"
    },
    "CreateDeploymentRequest": {
      "description": " The request structure for the create a new deployment request. ",
      "properties": {
        "fileMap": {
          "allOf": [
            {
              "$ref": "#/definitions/FileMap"
            },
            {
              "description": " An optional file map that contains the file name as the key and the file content md5 hash as the value. If this argument is provided, the service will generate a unique upload URL per file. Otherwise, the service will only generate a single upload URL for the zipped files. "
            }
          ]
        }
      },
      "title": "CreateDeploymentRequest",
      "type": "object"
    },
    "CreateDeploymentResult": {
      "description": " The result structure for the create a new deployment request. ",
      "properties": {
        "fileUploadUrls": {
          "allOf": [
            {
              "$ref": "#/definitions/FileUploadUrls"
            },
            {
              "description": " When the <code>fileMap</code> argument is provided in the request, <code>fileUploadUrls</code> will contain a map of file names to upload URLs. "
            }
          ]
        },
        "jobId": {
          "allOf": [
            {
              "$ref": "#/definitions/JobId"
            },
            {
              "description": " The job ID for this deployment. will supply to start deployment api. "
            }
          ]
        },
        "zipUploadUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/UploadUrl"
            },
            {
              "description": " When the <code>fileMap</code> argument is not provided in the request, this <code>zipUploadUrl</code> is returned. "
            }
          ]
        }
      },
      "required": [
        "fileUploadUrls",
        "zipUploadUrl"
      ],
      "type": "object"
    },
    "CreateDomainAssociationRequest": {
      "description": " The request structure for the create domain association request. ",
      "properties": {
        "autoSubDomainCreationPatterns": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoSubDomainCreationPatterns"
            },
            {
              "description": " Sets the branch patterns for automatic subdomain creation. "
            }
          ]
        },
        "autoSubDomainIAMRole": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoSubDomainIAMRole"
            },
            {
              "description": " The required AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) for automatically creating subdomains. "
            }
          ]
        },
        "domainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": " The domain name for the domain association. "
            }
          ]
        },
        "enableAutoSubDomain": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableAutoSubDomain"
            },
            {
              "description": " Enables the automated creation of subdomains for branches. "
            }
          ]
        },
        "subDomainSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/SubDomainSettings"
            },
            {
              "description": " The setting for the subdomain. "
            }
          ]
        }
      },
      "required": [
        "domainName",
        "subDomainSettings"
      ],
      "title": "CreateDomainAssociationRequest",
      "type": "object"
    },
    "CreateDomainAssociationResult": {
      "description": " The result structure for the create domain association request. ",
      "properties": {
        "domainAssociation": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainAssociation"
            },
            {
              "description": " Describes the structure of a domain association, which associates a custom domain with an Amplify app. "
            }
          ]
        }
      },
      "required": [
        "domainAssociation"
      ],
      "type": "object"
    },
    "CreateTime": {
      "format": "date-time",
      "type": "string"
    },
    "CreateWebhookRequest": {
      "description": " The request structure for the create webhook request. ",
      "properties": {
        "branchName": {
          "allOf": [
            {
              "$ref": "#/definitions/BranchName"
            },
            {
              "description": " The name for a branch that is part of an Amplify app. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": " The description for a webhook. "
            }
          ]
        }
      },
      "required": [
        "branchName"
      ],
      "title": "CreateWebhookRequest",
      "type": "object"
    },
    "CreateWebhookResult": {
      "description": " The result structure for the create webhook request. ",
      "properties": {
        "webhook": {
          "allOf": [
            {
              "$ref": "#/definitions/Webhook"
            },
            {
              "description": " Describes a webhook that connects repository events to an Amplify app. "
            }
          ]
        }
      },
      "required": [
        "webhook"
      ],
      "type": "object"
    },
    "CustomDomain": {
      "maxLength": 255,
      "type": "string"
    },
    "CustomDomains": {
      "items": {
        "$ref": "#/definitions/CustomDomain"
      },
      "maxItems": 255,
      "type": "array"
    },
    "CustomHeaders": {
      "maxLength": 25000,
      "minLength": 1,
      "type": "string"
    },
    "CustomRule": {
      "description": " Describes a custom rewrite or redirect rule. ",
      "properties": {
        "condition": {
          "allOf": [
            {
              "$ref": "#/definitions/Condition"
            },
            {
              "description": " The condition for a URL rewrite or redirect rule, such as a country code. "
            }
          ]
        },
        "source": {
          "allOf": [
            {
              "$ref": "#/definitions/Source"
            },
            {
              "description": " The source pattern for a URL rewrite or redirect rule. "
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/Status"
            },
            {
              "description": "<p> The status code for a URL rewrite or redirect rule. </p> <dl> <dt>200</dt> <dd> <p>Represents a 200 rewrite rule.</p> </dd> <dt>301</dt> <dd> <p>Represents a 301 (moved pemanently) redirect rule. This and all future requests should be directed to the target URL. </p> </dd> <dt>302</dt> <dd> <p>Represents a 302 temporary redirect rule.</p> </dd> <dt>404</dt> <dd> <p>Represents a 404 redirect rule.</p> </dd> <dt>404-200</dt> <dd> <p>Represents a 404 rewrite rule.</p> </dd> </dl>"
            }
          ]
        },
        "target": {
          "allOf": [
            {
              "$ref": "#/definitions/Target"
            },
            {
              "description": " The target pattern for a URL rewrite or redirect rule. "
            }
          ]
        }
      },
      "required": [
        "source",
        "target"
      ],
      "type": "object"
    },
    "CustomRules": {
      "items": {
        "$ref": "#/definitions/CustomRule"
      },
      "type": "array"
    },
    "DNSRecord": {
      "maxLength": 1000,
      "type": "string"
    },
    "DefaultDomain": {
      "maxLength": 1000,
      "minLength": 1,
      "type": "string"
    },
    "DeleteAppRequest": {
      "description": " Describes the request structure for the delete app request. ",
      "properties": {},
      "title": "DeleteAppRequest",
      "type": "object"
    },
    "DeleteAppResult": {
      "description": " The result structure for the delete app request. ",
      "properties": {
        "app": {
          "$ref": "#/definitions/App"
        }
      },
      "required": [
        "app"
      ],
      "type": "object"
    },
    "DeleteBackendEnvironmentRequest": {
      "description": " The request structure for the delete backend environment request. ",
      "properties": {},
      "title": "DeleteBackendEnvironmentRequest",
      "type": "object"
    },
    "DeleteBackendEnvironmentResult": {
      "description": " The result structure of the delete backend environment result. ",
      "properties": {
        "backendEnvironment": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendEnvironment"
            },
            {
              "description": " Describes the backend environment for an Amplify app. "
            }
          ]
        }
      },
      "required": [
        "backendEnvironment"
      ],
      "type": "object"
    },
    "DeleteBranchRequest": {
      "description": " The request structure for the delete branch request. ",
      "properties": {},
      "title": "DeleteBranchRequest",
      "type": "object"
    },
    "DeleteBranchResult": {
      "description": " The result structure for the delete branch request. ",
      "properties": {
        "branch": {
          "allOf": [
            {
              "$ref": "#/definitions/Branch"
            },
            {
              "description": " The branch for an Amplify app, which maps to a third-party repository branch. "
            }
          ]
        }
      },
      "required": [
        "branch"
      ],
      "type": "object"
    },
    "DeleteDomainAssociationRequest": {
      "description": " The request structure for the delete domain association request. ",
      "properties": {},
      "title": "DeleteDomainAssociationRequest",
      "type": "object"
    },
    "DeleteDomainAssociationResult": {
      "properties": {
        "domainAssociation": {
          "$ref": "#/definitions/DomainAssociation"
        }
      },
      "required": [
        "domainAssociation"
      ],
      "type": "object"
    },
    "DeleteJobRequest": {
      "description": " The request structure for the delete job request. ",
      "properties": {},
      "title": "DeleteJobRequest",
      "type": "object"
    },
    "DeleteJobResult": {
      "description": " The result structure for the delete job request. ",
      "properties": {
        "jobSummary": {
          "$ref": "#/definitions/JobSummary"
        }
      },
      "required": [
        "jobSummary"
      ],
      "type": "object"
    },
    "DeleteWebhookRequest": {
      "description": " The request structure for the delete webhook request. ",
      "properties": {},
      "title": "DeleteWebhookRequest",
      "type": "object"
    },
    "DeleteWebhookResult": {
      "description": " The result structure for the delete webhook request. ",
      "properties": {
        "webhook": {
          "allOf": [
            {
              "$ref": "#/definitions/Webhook"
            },
            {
              "description": " Describes a webhook that connects repository events to an Amplify app. "
            }
          ]
        }
      },
      "required": [
        "webhook"
      ],
      "type": "object"
    },
    "DependentServiceFailureException": {},
    "DeploymentArtifacts": {
      "maxLength": 1000,
      "minLength": 1,
      "type": "string"
    },
    "Description": {
      "maxLength": 1000,
      "type": "string"
    },
    "DisplayName": {
      "maxLength": 255,
      "type": "string"
    },
    "DomainAssociation": {
      "description": " Describes a domain association that associates a custom domain with an Amplify app. ",
      "properties": {
        "autoSubDomainCreationPatterns": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoSubDomainCreationPatterns"
            },
            {
              "description": " Sets branch patterns for automatic subdomain creation. "
            }
          ]
        },
        "autoSubDomainIAMRole": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoSubDomainIAMRole"
            },
            {
              "description": " The required AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) for automatically creating subdomains. "
            }
          ]
        },
        "certificateVerificationDNSRecord": {
          "allOf": [
            {
              "$ref": "#/definitions/CertificateVerificationDNSRecord"
            },
            {
              "description": " The DNS record for certificate verification. "
            }
          ]
        },
        "domainAssociationArn": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainAssociationArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) for the domain association. "
            }
          ]
        },
        "domainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": " The name of the domain. "
            }
          ]
        },
        "domainStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainStatus"
            },
            {
              "description": " The current status of the domain association. "
            }
          ]
        },
        "enableAutoSubDomain": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableAutoSubDomain"
            },
            {
              "description": " Enables the automated creation of subdomains for branches. "
            }
          ]
        },
        "statusReason": {
          "allOf": [
            {
              "$ref": "#/definitions/StatusReason"
            },
            {
              "description": " The reason for the current status of the domain association. "
            }
          ]
        },
        "subDomains": {
          "allOf": [
            {
              "$ref": "#/definitions/SubDomains"
            },
            {
              "description": " The subdomains for the domain association. "
            }
          ]
        }
      },
      "required": [
        "domainAssociationArn",
        "domainName",
        "enableAutoSubDomain",
        "domainStatus",
        "statusReason",
        "subDomains"
      ],
      "type": "object"
    },
    "DomainAssociationArn": {
      "maxLength": 1000,
      "type": "string"
    },
    "DomainAssociations": {
      "items": {
        "$ref": "#/definitions/DomainAssociation"
      },
      "maxItems": 255,
      "type": "array"
    },
    "DomainName": {
      "maxLength": 255,
      "type": "string"
    },
    "DomainPrefix": {
      "maxLength": 255,
      "type": "string"
    },
    "DomainStatus": {
      "enum": [
        "PENDING_VERIFICATION",
        "IN_PROGRESS",
        "AVAILABLE",
        "PENDING_DEPLOYMENT",
        "FAILED",
        "CREATING",
        "REQUESTING_CERTIFICATE",
        "UPDATING"
      ],
      "type": "string"
    },
    "EnableAutoBranchCreation": {
      "type": "boolean"
    },
    "EnableAutoBuild": {
      "type": "boolean"
    },
    "EnableAutoSubDomain": {
      "type": "boolean"
    },
    "EnableBasicAuth": {
      "type": "boolean"
    },
    "EnableBranchAutoBuild": {
      "type": "boolean"
    },
    "EnableBranchAutoDeletion": {
      "type": "boolean"
    },
    "EnableNotification": {
      "type": "boolean"
    },
    "EnablePerformanceMode": {
      "type": "boolean"
    },
    "EnablePullRequestPreview": {
      "type": "boolean"
    },
    "EndTime": {
      "format": "date-time",
      "type": "string"
    },
    "EnvKey": {
      "maxLength": 255,
      "type": "string"
    },
    "EnvValue": {
      "maxLength": 1000,
      "type": "string"
    },
    "EnvironmentName": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "EnvironmentVariables": {
      "additionalProperties": {
        "$ref": "#/definitions/EnvValue"
      },
      "type": "object"
    },
    "FileMap": {
      "additionalProperties": {
        "$ref": "#/definitions/MD5Hash"
      },
      "type": "object"
    },
    "FileName": {
      "maxLength": 255,
      "type": "string"
    },
    "FileUploadUrls": {
      "additionalProperties": {
        "$ref": "#/definitions/UploadUrl"
      },
      "type": "object"
    },
    "Framework": {
      "maxLength": 255,
      "type": "string"
    },
    "GenerateAccessLogsRequest": {
      "description": " The request structure for the generate access logs request. ",
      "properties": {
        "domainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": " The name of the domain. "
            }
          ]
        },
        "endTime": {
          "allOf": [
            {
              "$ref": "#/definitions/EndTime"
            },
            {
              "description": " The time at which the logs should end. The time range specified is inclusive of the end time. "
            }
          ]
        },
        "startTime": {
          "allOf": [
            {
              "$ref": "#/definitions/StartTime"
            },
            {
              "description": " The time at which the logs should start. The time range specified is inclusive of the start time. "
            }
          ]
        }
      },
      "required": [
        "domainName"
      ],
      "title": "GenerateAccessLogsRequest",
      "type": "object"
    },
    "GenerateAccessLogsResult": {
      "description": " The result structure for the generate access logs request. ",
      "properties": {
        "logUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/LogUrl"
            },
            {
              "description": " The pre-signed URL for the requested access logs. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetAppRequest": {
      "description": " The request structure for the get app request. ",
      "properties": {},
      "title": "GetAppRequest",
      "type": "object"
    },
    "GetAppResult": {
      "properties": {
        "app": {
          "$ref": "#/definitions/App"
        }
      },
      "required": [
        "app"
      ],
      "type": "object"
    },
    "GetArtifactUrlRequest": {
      "description": " Returns the request structure for the get artifact request. ",
      "properties": {},
      "title": "GetArtifactUrlRequest",
      "type": "object"
    },
    "GetArtifactUrlResult": {
      "description": " Returns the result structure for the get artifact request. ",
      "properties": {
        "artifactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ArtifactId"
            },
            {
              "description": " The unique ID for an artifact. "
            }
          ]
        },
        "artifactUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/ArtifactUrl"
            },
            {
              "description": " The presigned URL for the artifact. "
            }
          ]
        }
      },
      "required": [
        "artifactId",
        "artifactUrl"
      ],
      "type": "object"
    },
    "GetBackendEnvironmentRequest": {
      "description": " The request structure for the get backend environment request. ",
      "properties": {},
      "title": "GetBackendEnvironmentRequest",
      "type": "object"
    },
    "GetBackendEnvironmentResult": {
      "description": " The result structure for the get backend environment result. ",
      "properties": {
        "backendEnvironment": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendEnvironment"
            },
            {
              "description": " Describes the backend environment for an Amplify app. "
            }
          ]
        }
      },
      "required": [
        "backendEnvironment"
      ],
      "type": "object"
    },
    "GetBranchRequest": {
      "description": " The request structure for the get branch request. ",
      "properties": {},
      "title": "GetBranchRequest",
      "type": "object"
    },
    "GetBranchResult": {
      "properties": {
        "branch": {
          "$ref": "#/definitions/Branch"
        }
      },
      "required": [
        "branch"
      ],
      "type": "object"
    },
    "GetDomainAssociationRequest": {
      "description": " The request structure for the get domain association request. ",
      "properties": {},
      "title": "GetDomainAssociationRequest",
      "type": "object"
    },
    "GetDomainAssociationResult": {
      "description": " The result structure for the get domain association request. ",
      "properties": {
        "domainAssociation": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainAssociation"
            },
            {
              "description": " Describes the structure of a domain association, which associates a custom domain with an Amplify app. "
            }
          ]
        }
      },
      "required": [
        "domainAssociation"
      ],
      "type": "object"
    },
    "GetJobRequest": {
      "description": " The request structure for the get job request. ",
      "properties": {},
      "title": "GetJobRequest",
      "type": "object"
    },
    "GetJobResult": {
      "properties": {
        "job": {
          "$ref": "#/definitions/Job"
        }
      },
      "required": [
        "job"
      ],
      "type": "object"
    },
    "GetWebhookRequest": {
      "description": " The request structure for the get webhook request. ",
      "properties": {},
      "title": "GetWebhookRequest",
      "type": "object"
    },
    "GetWebhookResult": {
      "description": " The result structure for the get webhook request. ",
      "properties": {
        "webhook": {
          "allOf": [
            {
              "$ref": "#/definitions/Webhook"
            },
            {
              "description": " Describes the structure of a webhook. "
            }
          ]
        }
      },
      "required": [
        "webhook"
      ],
      "type": "object"
    },
    "InternalFailureException": {},
    "Job": {
      "description": " Describes an execution job for an Amplify app. ",
      "properties": {
        "steps": {
          "allOf": [
            {
              "$ref": "#/definitions/Steps"
            },
            {
              "description": " The execution steps for an execution job, for an Amplify app. "
            }
          ]
        },
        "summary": {
          "allOf": [
            {
              "$ref": "#/definitions/JobSummary"
            },
            {
              "description": " Describes the summary for an execution job for an Amplify app. "
            }
          ]
        }
      },
      "required": [
        "summary",
        "steps"
      ],
      "type": "object"
    },
    "JobArn": {
      "maxLength": 1000,
      "type": "string"
    },
    "JobId": {
      "maxLength": 255,
      "type": "string"
    },
    "JobReason": {
      "maxLength": 255,
      "type": "string"
    },
    "JobStatus": {
      "enum": [
        "PENDING",
        "PROVISIONING",
        "RUNNING",
        "FAILED",
        "SUCCEED",
        "CANCELLING",
        "CANCELLED"
      ],
      "type": "string"
    },
    "JobSummaries": {
      "items": {
        "$ref": "#/definitions/JobSummary"
      },
      "type": "array"
    },
    "JobSummary": {
      "description": " Describes the summary for an execution job for an Amplify app. ",
      "properties": {
        "commitId": {
          "allOf": [
            {
              "$ref": "#/definitions/CommitId"
            },
            {
              "description": " The commit ID from a third-party repository provider for the job. "
            }
          ]
        },
        "commitMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/CommitMessage"
            },
            {
              "description": " The commit message from a third-party repository provider for the job. "
            }
          ]
        },
        "commitTime": {
          "allOf": [
            {
              "$ref": "#/definitions/CommitTime"
            },
            {
              "description": " The commit date and time for the job. "
            }
          ]
        },
        "endTime": {
          "allOf": [
            {
              "$ref": "#/definitions/EndTime"
            },
            {
              "description": " The end date and time for the job. "
            }
          ]
        },
        "jobArn": {
          "allOf": [
            {
              "$ref": "#/definitions/JobArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) for the job. "
            }
          ]
        },
        "jobId": {
          "allOf": [
            {
              "$ref": "#/definitions/JobId"
            },
            {
              "description": " The unique ID for the job. "
            }
          ]
        },
        "jobType": {
          "allOf": [
            {
              "$ref": "#/definitions/JobType"
            },
            {
              "description": " The type for the job. If the value is <code>RELEASE</code>, the job was manually released from its source by using the <code>StartJob</code> API. If the value is <code>RETRY</code>, the job was manually retried using the <code>StartJob</code> API. If the value is <code>WEB_HOOK</code>, the job was automatically triggered by webhooks. "
            }
          ]
        },
        "startTime": {
          "allOf": [
            {
              "$ref": "#/definitions/StartTime"
            },
            {
              "description": " The start date and time for the job. "
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/JobStatus"
            },
            {
              "description": " The current status for the job. "
            }
          ]
        }
      },
      "required": [
        "jobArn",
        "jobId",
        "commitId",
        "commitMessage",
        "commitTime",
        "startTime",
        "status",
        "jobType"
      ],
      "type": "object"
    },
    "JobType": {
      "enum": [
        "RELEASE",
        "RETRY",
        "MANUAL",
        "WEB_HOOK"
      ],
      "maxLength": 10,
      "type": "string"
    },
    "LastDeployTime": {
      "format": "date-time",
      "type": "string"
    },
    "LimitExceededException": {},
    "ListAppsRequest": {
      "description": " The request structure for the list apps request. ",
      "properties": {},
      "title": "ListAppsRequest",
      "type": "object"
    },
    "ListAppsResult": {
      "description": " The result structure for an Amplify app list request. ",
      "properties": {
        "apps": {
          "allOf": [
            {
              "$ref": "#/definitions/Apps"
            },
            {
              "description": " A list of Amplify apps. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": " A pagination token. Set to null to start listing apps from start. If non-null, the pagination token is returned in a result. Pass its value in here to list more projects. "
            }
          ]
        }
      },
      "required": [
        "apps"
      ],
      "type": "object"
    },
    "ListArtifactsRequest": {
      "description": " Describes the request structure for the list artifacts request. ",
      "properties": {},
      "title": "ListArtifactsRequest",
      "type": "object"
    },
    "ListArtifactsResult": {
      "description": " The result structure for the list artifacts request. ",
      "properties": {
        "artifacts": {
          "allOf": [
            {
              "$ref": "#/definitions/Artifacts"
            },
            {
              "description": " A list of artifacts. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": " A pagination token. If a non-null pagination token is returned in a result, pass its value in another request to retrieve more entries. "
            }
          ]
        }
      },
      "required": [
        "artifacts"
      ],
      "type": "object"
    },
    "ListBackendEnvironmentsRequest": {
      "description": " The request structure for the list backend environments request. ",
      "properties": {},
      "title": "ListBackendEnvironmentsRequest",
      "type": "object"
    },
    "ListBackendEnvironmentsResult": {
      "description": " The result structure for the list backend environments result. ",
      "properties": {
        "backendEnvironments": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendEnvironments"
            },
            {
              "description": " The list of backend environments for an Amplify app. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": " A pagination token. If a non-null pagination token is returned in a result, pass its value in another request to retrieve more entries. "
            }
          ]
        }
      },
      "required": [
        "backendEnvironments"
      ],
      "type": "object"
    },
    "ListBranchesRequest": {
      "description": " The request structure for the list branches request. ",
      "properties": {},
      "title": "ListBranchesRequest",
      "type": "object"
    },
    "ListBranchesResult": {
      "description": " The result structure for the list branches request. ",
      "properties": {
        "branches": {
          "allOf": [
            {
              "$ref": "#/definitions/Branches"
            },
            {
              "description": " A list of branches for an Amplify app. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": " A pagination token. If a non-null pagination token is returned in a result, pass its value in another request to retrieve more entries. "
            }
          ]
        }
      },
      "required": [
        "branches"
      ],
      "type": "object"
    },
    "ListDomainAssociationsRequest": {
      "description": " The request structure for the list domain associations request. ",
      "properties": {},
      "title": "ListDomainAssociationsRequest",
      "type": "object"
    },
    "ListDomainAssociationsResult": {
      "description": " The result structure for the list domain association request. ",
      "properties": {
        "domainAssociations": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainAssociations"
            },
            {
              "description": " A list of domain associations. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": " A pagination token. If non-null, a pagination token is returned in a result. Pass its value in another request to retrieve more entries. "
            }
          ]
        }
      },
      "required": [
        "domainAssociations"
      ],
      "type": "object"
    },
    "ListJobsRequest": {
      "description": " The request structure for the list jobs request. ",
      "properties": {},
      "title": "ListJobsRequest",
      "type": "object"
    },
    "ListJobsResult": {
      "description": " The maximum number of records to list in a single response. ",
      "properties": {
        "jobSummaries": {
          "allOf": [
            {
              "$ref": "#/definitions/JobSummaries"
            },
            {
              "description": " The result structure for the list job result request. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": " A pagination token. If non-null the pagination token is returned in a result. Pass its value in another request to retrieve more entries. "
            }
          ]
        }
      },
      "required": [
        "jobSummaries"
      ],
      "type": "object"
    },
    "ListTagsForResourceRequest": {
      "description": " The request structure to use to list tags for a resource. ",
      "properties": {},
      "title": "ListTagsForResourceRequest",
      "type": "object"
    },
    "ListTagsForResourceResponse": {
      "description": " The response for the list tags for resource request. ",
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": " A list of tags for the specified The Amazon Resource Name (ARN). "
            }
          ]
        }
      },
      "type": "object"
    },
    "ListWebhooksRequest": {
      "description": " The request structure for the list webhooks request. ",
      "properties": {},
      "title": "ListWebhooksRequest",
      "type": "object"
    },
    "ListWebhooksResult": {
      "description": " The result structure for the list webhooks request. ",
      "properties": {
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": " A pagination token. If non-null, the pagination token is returned in a result. Pass its value in another request to retrieve more entries. "
            }
          ]
        },
        "webhooks": {
          "allOf": [
            {
              "$ref": "#/definitions/Webhooks"
            },
            {
              "description": " A list of webhooks. "
            }
          ]
        }
      },
      "required": [
        "webhooks"
      ],
      "type": "object"
    },
    "LogUrl": {
      "maxLength": 1000,
      "type": "string"
    },
    "MD5Hash": {
      "maxLength": 32,
      "type": "string"
    },
    "MaxResults": {
      "maximum": 100,
      "minimum": 0,
      "type": "integer"
    },
    "Name": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "NextToken": {
      "maxLength": 2000,
      "type": "string"
    },
    "NotFoundException": {},
    "OauthToken": {
      "format": "password",
      "maxLength": 1000,
      "type": "string"
    },
    "Platform": {
      "enum": [
        "WEB"
      ],
      "type": "string"
    },
    "ProductionBranch": {
      "description": " Describes the information about a production branch for an Amplify app. ",
      "properties": {
        "branchName": {
          "allOf": [
            {
              "$ref": "#/definitions/BranchName"
            },
            {
              "description": " The branch name for the production branch. "
            }
          ]
        },
        "lastDeployTime": {
          "allOf": [
            {
              "$ref": "#/definitions/LastDeployTime"
            },
            {
              "description": " The last deploy time of the production branch. "
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/Status"
            },
            {
              "description": " The status of the production branch. "
            }
          ]
        },
        "thumbnailUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/ThumbnailUrl"
            },
            {
              "description": " The thumbnail URL for the production branch. "
            }
          ]
        }
      },
      "type": "object"
    },
    "PullRequestEnvironmentName": {
      "maxLength": 20,
      "type": "string"
    },
    "Repository": {
      "maxLength": 1000,
      "type": "string"
    },
    "ResourceArn": {
      "pattern": "^arn:aws:amplify:.*",
      "type": "string"
    },
    "ResourceNotFoundException": {},
    "Screenshots": {
      "additionalProperties": {
        "$ref": "#/definitions/ThumbnailUrl"
      },
      "type": "object"
    },
    "ServiceRoleArn": {
      "maxLength": 1000,
      "minLength": 1,
      "type": "string"
    },
    "Source": {
      "maxLength": 2048,
      "minLength": 1,
      "type": "string"
    },
    "SourceUrl": {
      "maxLength": 1000,
      "type": "string"
    },
    "StackName": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "Stage": {
      "enum": [
        "PRODUCTION",
        "BETA",
        "DEVELOPMENT",
        "EXPERIMENTAL",
        "PULL_REQUEST"
      ],
      "type": "string"
    },
    "StartDeploymentRequest": {
      "description": " The request structure for the start a deployment request. ",
      "properties": {
        "jobId": {
          "allOf": [
            {
              "$ref": "#/definitions/JobId"
            },
            {
              "description": " The job ID for this deployment, generated by the create deployment request. "
            }
          ]
        },
        "sourceUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceUrl"
            },
            {
              "description": " The source URL for this deployment, used when calling start deployment without create deployment. The source URL can be any HTTP GET URL that is publicly accessible and downloads a single .zip file. "
            }
          ]
        }
      },
      "title": "StartDeploymentRequest",
      "type": "object"
    },
    "StartDeploymentResult": {
      "description": " The result structure for the start a deployment request. ",
      "properties": {
        "jobSummary": {
          "allOf": [
            {
              "$ref": "#/definitions/JobSummary"
            },
            {
              "description": " The summary for the job. "
            }
          ]
        }
      },
      "required": [
        "jobSummary"
      ],
      "type": "object"
    },
    "StartJobRequest": {
      "description": " The request structure for the start job request. ",
      "properties": {
        "commitId": {
          "allOf": [
            {
              "$ref": "#/definitions/CommitId"
            },
            {
              "description": " The commit ID from a third-party repository provider for the job. "
            }
          ]
        },
        "commitMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/CommitMessage"
            },
            {
              "description": " The commit message from a third-party repository provider for the job. "
            }
          ]
        },
        "commitTime": {
          "allOf": [
            {
              "$ref": "#/definitions/CommitTime"
            },
            {
              "description": " The commit date and time for the job. "
            }
          ]
        },
        "jobId": {
          "allOf": [
            {
              "$ref": "#/definitions/JobId"
            },
            {
              "description": " The unique ID for an existing job. This is required if the value of <code>jobType</code> is <code>RETRY</code>. "
            }
          ]
        },
        "jobReason": {
          "allOf": [
            {
              "$ref": "#/definitions/JobReason"
            },
            {
              "description": " A descriptive reason for starting this job. "
            }
          ]
        },
        "jobType": {
          "allOf": [
            {
              "$ref": "#/definitions/JobType"
            },
            {
              "description": " Describes the type for the job. The job type <code>RELEASE</code> starts a new job with the latest change from the specified branch. This value is available only for apps that are connected to a repository. The job type <code>RETRY</code> retries an existing job. If the job type value is <code>RETRY</code>, the <code>jobId</code> is also required. "
            }
          ]
        }
      },
      "required": [
        "jobType"
      ],
      "title": "StartJobRequest",
      "type": "object"
    },
    "StartJobResult": {
      "description": " The result structure for the run job request. ",
      "properties": {
        "jobSummary": {
          "allOf": [
            {
              "$ref": "#/definitions/JobSummary"
            },
            {
              "description": " The summary for the job. "
            }
          ]
        }
      },
      "required": [
        "jobSummary"
      ],
      "type": "object"
    },
    "StartTime": {
      "format": "date-time",
      "type": "string"
    },
    "Status": {
      "maxLength": 7,
      "minLength": 3,
      "type": "string"
    },
    "StatusReason": {
      "maxLength": 1000,
      "type": "string"
    },
    "Step": {
      "description": " Describes an execution step, for an execution job, for an Amplify app. ",
      "properties": {
        "artifactsUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/ArtifactsUrl"
            },
            {
              "description": " The URL to the artifact for the execution step. "
            }
          ]
        },
        "context": {
          "allOf": [
            {
              "$ref": "#/definitions/Context"
            },
            {
              "description": " The context for the current step. Includes a build image if the step is build. "
            }
          ]
        },
        "endTime": {
          "allOf": [
            {
              "$ref": "#/definitions/EndTime"
            },
            {
              "description": " The end date and time of the execution step. "
            }
          ]
        },
        "logUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/LogUrl"
            },
            {
              "description": " The URL to the logs for the execution step. "
            }
          ]
        },
        "screenshots": {
          "allOf": [
            {
              "$ref": "#/definitions/Screenshots"
            },
            {
              "description": " The list of screenshot URLs for the execution step, if relevant. "
            }
          ]
        },
        "startTime": {
          "allOf": [
            {
              "$ref": "#/definitions/StartTime"
            },
            {
              "description": " The start date and time of the execution step. "
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/JobStatus"
            },
            {
              "description": " The status of the execution step. "
            }
          ]
        },
        "statusReason": {
          "allOf": [
            {
              "$ref": "#/definitions/StatusReason"
            },
            {
              "description": " The reason for the current step status. "
            }
          ]
        },
        "stepName": {
          "allOf": [
            {
              "$ref": "#/definitions/StepName"
            },
            {
              "description": " The name of the execution step. "
            }
          ]
        },
        "testArtifactsUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/TestArtifactsUrl"
            },
            {
              "description": " The URL to the test artifact for the execution step. "
            }
          ]
        },
        "testConfigUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/TestConfigUrl"
            },
            {
              "description": " The URL to the test configuration for the execution step. "
            }
          ]
        }
      },
      "required": [
        "stepName",
        "startTime",
        "status",
        "endTime"
      ],
      "type": "object"
    },
    "StepName": {
      "maxLength": 255,
      "type": "string"
    },
    "Steps": {
      "items": {
        "$ref": "#/definitions/Step"
      },
      "type": "array"
    },
    "StopJobRequest": {
      "description": " The request structure for the stop job request. ",
      "properties": {},
      "title": "StopJobRequest",
      "type": "object"
    },
    "StopJobResult": {
      "description": " The result structure for the stop job request. ",
      "properties": {
        "jobSummary": {
          "allOf": [
            {
              "$ref": "#/definitions/JobSummary"
            },
            {
              "description": " The summary for the job. "
            }
          ]
        }
      },
      "required": [
        "jobSummary"
      ],
      "type": "object"
    },
    "SubDomain": {
      "description": " The subdomain for the domain association. ",
      "properties": {
        "dnsRecord": {
          "allOf": [
            {
              "$ref": "#/definitions/DNSRecord"
            },
            {
              "description": " The DNS record for the subdomain. "
            }
          ]
        },
        "subDomainSetting": {
          "allOf": [
            {
              "$ref": "#/definitions/SubDomainSetting"
            },
            {
              "description": " Describes the settings for the subdomain. "
            }
          ]
        },
        "verified": {
          "allOf": [
            {
              "$ref": "#/definitions/Verified"
            },
            {
              "description": " The verified status of the subdomain "
            }
          ]
        }
      },
      "required": [
        "subDomainSetting",
        "verified",
        "dnsRecord"
      ],
      "type": "object"
    },
    "SubDomainSetting": {
      "description": " Describes the settings for the subdomain. ",
      "properties": {
        "branchName": {
          "allOf": [
            {
              "$ref": "#/definitions/BranchName"
            },
            {
              "description": " The branch name setting for the subdomain. "
            }
          ]
        },
        "prefix": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainPrefix"
            },
            {
              "description": " The prefix setting for the subdomain. "
            }
          ]
        }
      },
      "required": [
        "prefix",
        "branchName"
      ],
      "type": "object"
    },
    "SubDomainSettings": {
      "items": {
        "$ref": "#/definitions/SubDomainSetting"
      },
      "maxItems": 255,
      "type": "array"
    },
    "SubDomains": {
      "items": {
        "$ref": "#/definitions/SubDomain"
      },
      "maxItems": 255,
      "type": "array"
    },
    "TTL": {
      "description": " The content Time to Live (TTL) for the website in seconds. ",
      "type": "string"
    },
    "TagKey": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array"
    },
    "TagMap": {
      "additionalProperties": {
        "$ref": "#/definitions/TagValue"
      },
      "maxProperties": 50,
      "minProperties": 1,
      "type": "object"
    },
    "TagResourceRequest": {
      "description": " The request structure to tag a resource with a tag key and value. ",
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": " The tags used to tag the resource. "
            }
          ]
        }
      },
      "required": [
        "tags"
      ],
      "title": "TagResourceRequest",
      "type": "object"
    },
    "TagResourceResponse": {
      "description": " The response for the tag resource request. ",
      "properties": {},
      "type": "object"
    },
    "TagValue": {
      "maxLength": 256,
      "type": "string"
    },
    "Target": {
      "maxLength": 2048,
      "minLength": 1,
      "type": "string"
    },
    "TestArtifactsUrl": {
      "maxLength": 1000,
      "type": "string"
    },
    "TestConfigUrl": {
      "maxLength": 1000,
      "type": "string"
    },
    "ThumbnailName": {
      "maxLength": 256,
      "type": "string"
    },
    "ThumbnailUrl": {
      "maxLength": 2000,
      "minLength": 1,
      "type": "string"
    },
    "TotalNumberOfJobs": {
      "maxLength": 1000,
      "type": "string"
    },
    "UnauthorizedException": {},
    "UntagResourceRequest": {
      "description": " The request structure for the untag resource request. ",
      "properties": {},
      "title": "UntagResourceRequest",
      "type": "object"
    },
    "UntagResourceResponse": {
      "description": " The response for the untag resource request. ",
      "properties": {},
      "type": "object"
    },
    "UpdateAppRequest": {
      "description": " The request structure for the update app request. ",
      "properties": {
        "accessToken": {
          "allOf": [
            {
              "$ref": "#/definitions/AccessToken"
            },
            {
              "description": " The personal access token for a third-party source control system for an Amplify app. The token is used to create webhook and a read-only deploy key. The token is not stored. "
            }
          ]
        },
        "autoBranchCreationConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoBranchCreationConfig"
            },
            {
              "description": " The automated branch creation configuration for an Amplify app. "
            }
          ]
        },
        "autoBranchCreationPatterns": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoBranchCreationPatterns"
            },
            {
              "description": " Describes the automated branch creation glob patterns for an Amplify app. "
            }
          ]
        },
        "basicAuthCredentials": {
          "allOf": [
            {
              "$ref": "#/definitions/BasicAuthCredentials"
            },
            {
              "description": " The basic authorization credentials for an Amplify app. "
            }
          ]
        },
        "buildSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/BuildSpec"
            },
            {
              "description": " The build specification (build spec) for an Amplify app. "
            }
          ]
        },
        "customHeaders": {
          "allOf": [
            {
              "$ref": "#/definitions/CustomHeaders"
            },
            {
              "description": "The custom HTTP headers for an Amplify app."
            }
          ]
        },
        "customRules": {
          "allOf": [
            {
              "$ref": "#/definitions/CustomRules"
            },
            {
              "description": " The custom redirect and rewrite rules for an Amplify app. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": " The description for an Amplify app. "
            }
          ]
        },
        "enableAutoBranchCreation": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableAutoBranchCreation"
            },
            {
              "description": " Enables automated branch creation for an Amplify app. "
            }
          ]
        },
        "enableBasicAuth": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableBasicAuth"
            },
            {
              "description": " Enables basic authorization for an Amplify app. "
            }
          ]
        },
        "enableBranchAutoBuild": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableAutoBuild"
            },
            {
              "description": " Enables branch auto-building for an Amplify app. "
            }
          ]
        },
        "enableBranchAutoDeletion": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableBranchAutoDeletion"
            },
            {
              "description": " Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository. "
            }
          ]
        },
        "environmentVariables": {
          "allOf": [
            {
              "$ref": "#/definitions/EnvironmentVariables"
            },
            {
              "description": " The environment variables for an Amplify app. "
            }
          ]
        },
        "iamServiceRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ServiceRoleArn"
            },
            {
              "description": " The AWS Identity and Access Management (IAM) service role for an Amplify app. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": " The name for an Amplify app. "
            }
          ]
        },
        "oauthToken": {
          "allOf": [
            {
              "$ref": "#/definitions/OauthToken"
            },
            {
              "description": " The OAuth token for a third-party source control system for an Amplify app. The token is used to create a webhook and a read-only deploy key. The OAuth token is not stored. "
            }
          ]
        },
        "platform": {
          "allOf": [
            {
              "$ref": "#/definitions/Platform"
            },
            {
              "description": " The platform for an Amplify app. "
            }
          ]
        },
        "repository": {
          "allOf": [
            {
              "$ref": "#/definitions/Repository"
            },
            {
              "description": " The name of the repository for an Amplify app "
            }
          ]
        }
      },
      "title": "UpdateAppRequest",
      "type": "object"
    },
    "UpdateAppResult": {
      "description": " The result structure for an Amplify app update request. ",
      "properties": {
        "app": {
          "allOf": [
            {
              "$ref": "#/definitions/App"
            },
            {
              "description": " Represents the updated Amplify app. "
            }
          ]
        }
      },
      "required": [
        "app"
      ],
      "type": "object"
    },
    "UpdateBranchRequest": {
      "description": " The request structure for the update branch request. ",
      "properties": {
        "backendEnvironmentArn": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendEnvironmentArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app. "
            }
          ]
        },
        "basicAuthCredentials": {
          "allOf": [
            {
              "$ref": "#/definitions/BasicAuthCredentials"
            },
            {
              "description": " The basic authorization credentials for the branch. "
            }
          ]
        },
        "buildSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/BuildSpec"
            },
            {
              "description": " The build specification (build spec) for the branch. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": " The description for the branch. "
            }
          ]
        },
        "displayName": {
          "allOf": [
            {
              "$ref": "#/definitions/DisplayName"
            },
            {
              "description": " The display name for a branch. This is used as the default domain prefix. "
            }
          ]
        },
        "enableAutoBuild": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableAutoBuild"
            },
            {
              "description": " Enables auto building for the branch. "
            }
          ]
        },
        "enableBasicAuth": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableBasicAuth"
            },
            {
              "description": " Enables basic authorization for the branch. "
            }
          ]
        },
        "enableNotification": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableNotification"
            },
            {
              "description": " Enables notifications for the branch. "
            }
          ]
        },
        "enablePerformanceMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EnablePerformanceMode"
            },
            {
              "description": "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>"
            }
          ]
        },
        "enablePullRequestPreview": {
          "allOf": [
            {
              "$ref": "#/definitions/EnablePullRequestPreview"
            },
            {
              "description": " Enables pull request previews for this branch. "
            }
          ]
        },
        "environmentVariables": {
          "allOf": [
            {
              "$ref": "#/definitions/EnvironmentVariables"
            },
            {
              "description": " The environment variables for the branch. "
            }
          ]
        },
        "framework": {
          "allOf": [
            {
              "$ref": "#/definitions/Framework"
            },
            {
              "description": " The framework for the branch. "
            }
          ]
        },
        "pullRequestEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/PullRequestEnvironmentName"
            },
            {
              "description": " The Amplify environment name for the pull request. "
            }
          ]
        },
        "stage": {
          "allOf": [
            {
              "$ref": "#/definitions/Stage"
            },
            {
              "description": " Describes the current stage for the branch. "
            }
          ]
        },
        "ttl": {
          "allOf": [
            {
              "$ref": "#/definitions/TTL"
            },
            {
              "description": " The content Time to Live (TTL) for the website in seconds. "
            }
          ]
        }
      },
      "title": "UpdateBranchRequest",
      "type": "object"
    },
    "UpdateBranchResult": {
      "description": " The result structure for the update branch request. ",
      "properties": {
        "branch": {
          "allOf": [
            {
              "$ref": "#/definitions/Branch"
            },
            {
              "description": " The branch for an Amplify app, which maps to a third-party repository branch. "
            }
          ]
        }
      },
      "required": [
        "branch"
      ],
      "type": "object"
    },
    "UpdateDomainAssociationRequest": {
      "description": " The request structure for the update domain association request. ",
      "properties": {
        "autoSubDomainCreationPatterns": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoSubDomainCreationPatterns"
            },
            {
              "description": " Sets the branch patterns for automatic subdomain creation. "
            }
          ]
        },
        "autoSubDomainIAMRole": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoSubDomainIAMRole"
            },
            {
              "description": " The required AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) for automatically creating subdomains. "
            }
          ]
        },
        "enableAutoSubDomain": {
          "allOf": [
            {
              "$ref": "#/definitions/EnableAutoSubDomain"
            },
            {
              "description": " Enables the automated creation of subdomains for branches. "
            }
          ]
        },
        "subDomainSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/SubDomainSettings"
            },
            {
              "description": " Describes the settings for the subdomain. "
            }
          ]
        }
      },
      "required": [
        "subDomainSettings"
      ],
      "title": "UpdateDomainAssociationRequest",
      "type": "object"
    },
    "UpdateDomainAssociationResult": {
      "description": " The result structure for the update domain association request. ",
      "properties": {
        "domainAssociation": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainAssociation"
            },
            {
              "description": " Describes a domain association, which associates a custom domain with an Amplify app. "
            }
          ]
        }
      },
      "required": [
        "domainAssociation"
      ],
      "type": "object"
    },
    "UpdateTime": {
      "format": "date-time",
      "type": "string"
    },
    "UpdateWebhookRequest": {
      "description": " The request structure for the update webhook request. ",
      "properties": {
        "branchName": {
          "allOf": [
            {
              "$ref": "#/definitions/BranchName"
            },
            {
              "description": " The name for a branch that is part of an Amplify app. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": " The description for a webhook. "
            }
          ]
        }
      },
      "title": "UpdateWebhookRequest",
      "type": "object"
    },
    "UpdateWebhookResult": {
      "description": " The result structure for the update webhook request. ",
      "properties": {
        "webhook": {
          "allOf": [
            {
              "$ref": "#/definitions/Webhook"
            },
            {
              "description": " Describes a webhook that connects repository events to an Amplify app. "
            }
          ]
        }
      },
      "required": [
        "webhook"
      ],
      "type": "object"
    },
    "UploadUrl": {
      "maxLength": 1000,
      "type": "string"
    },
    "Verified": {
      "type": "boolean"
    },
    "Webhook": {
      "description": " Describes a webhook that connects repository events to an Amplify app. ",
      "properties": {
        "branchName": {
          "allOf": [
            {
              "$ref": "#/definitions/BranchName"
            },
            {
              "description": " The name for a branch that is part of an Amplify app. "
            }
          ]
        },
        "createTime": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateTime"
            },
            {
              "description": " The create date and time for a webhook. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": " The description for a webhook. "
            }
          ]
        },
        "updateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateTime"
            },
            {
              "description": " Updates the date and time for a webhook. "
            }
          ]
        },
        "webhookArn": {
          "allOf": [
            {
              "$ref": "#/definitions/WebhookArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) for the webhook. "
            }
          ]
        },
        "webhookId": {
          "allOf": [
            {
              "$ref": "#/definitions/WebhookId"
            },
            {
              "description": " The ID of the webhook. "
            }
          ]
        },
        "webhookUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/WebhookUrl"
            },
            {
              "description": " The URL of the webhook. "
            }
          ]
        }
      },
      "required": [
        "webhookArn",
        "webhookId",
        "webhookUrl",
        "branchName",
        "description",
        "createTime",
        "updateTime"
      ],
      "type": "object"
    },
    "WebhookArn": {
      "maxLength": 1000,
      "type": "string"
    },
    "WebhookId": {
      "maxLength": 255,
      "type": "string"
    },
    "WebhookUrl": {
      "maxLength": 1000,
      "type": "string"
    },
    "Webhooks": {
      "items": {
        "$ref": "#/definitions/Webhook"
      },
      "type": "array"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/amplify/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}