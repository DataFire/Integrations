{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "RGD.Data2@mcw.edu",
      "name": "Rat Genome Database",
      "url": "http://rgd.mcw.edu",
      "x-twitter": "medicalcollege"
    },
    "description": "The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database",
    "license": {
      "name": "Creative Commons",
      "url": "https://creativecommons.org/licenses/by/4.0/legalcode"
    },
    "termsOfService": "http://rgd.mcw.edu/wg/citing-rgd",
    "title": "Rat Genome Database REST API",
    "version": "1.1",
    "x-apisguru-categories": [
      "open_data"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_medicalcollege_profile_image.jpeg"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "http://rest.rgd.mcw.edu/rgdws/v2/api-docs",
        "version": "2.0"
      },
      {
        "format": "openapi",
        "url": "http://rest.rgd.mcw.edu/rgdws/v2/api-docs",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "mcw.edu",
    "x-datafire": {
      "name": "mcw_edu",
      "type": "openapi"
    }
  },
  "basePath": "/rest.rgd.mcw.edu/rgdws",
  "paths": {
    "/agr/affectedGenomicModels/{taxonId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "The taxon ID for species",
            "in": "path",
            "name": "taxonId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "AGR"
        ],
        "operationId": "getAffectedGenomicModelsUsingGET",
        "summary": "Get affected genomic models (rat strains with gene alleles) submitted by RGD to AGR by taxonId"
      }
    },
    "/agr/alleles/{taxonId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "The taxon ID for species",
            "in": "path",
            "name": "taxonId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "AGR"
        ],
        "operationId": "getAllelesForTaxonUsingGET",
        "summary": "Get gene allele records submitted by RGD to AGR by taxonId"
      }
    },
    "/agr/expression/{taxonId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "The taxon ID for species",
            "in": "path",
            "name": "taxonId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "AGR"
        ],
        "operationId": "getExpressionForTaxonUsingGET",
        "summary": "Get expression annotations submitted by RGD to AGR by taxonId"
      }
    },
    "/agr/phenotypes/{taxonId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "The taxon ID for species",
            "in": "path",
            "name": "taxonId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "AGR"
        ],
        "operationId": "getPhenotypesForTaxonUsingGET",
        "summary": "Get phenotype annotations submitted by RGD to AGR by taxonId"
      }
    },
    "/agr/variants/{taxonId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "The taxon ID for species",
            "in": "path",
            "name": "taxonId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "AGR"
        ],
        "operationId": "getVariantsForTaxonUsingGET",
        "summary": "Get basic variant records submitted by RGD to AGR by taxonId"
      }
    },
    "/agr/{taxonId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "The taxon ID for species",
            "in": "path",
            "name": "taxonId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "AGR"
        ],
        "operationId": "getGenesForLatestAssemblyUsingGET",
        "summary": "Get gene records submitted by RGD to AGR by taxonId"
      }
    },
    "/annotations/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AnnotationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Annotation"
              },
              "type": "array"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Annotation"
        ],
        "operationId": "getAnnotationsUsingPOST",
        "summary": "Return a list of genes annotated to an ontology term"
      }
    },
    "/annotations/accId/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/MapPair"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Annotation"
        ],
        "operationId": "getTermAccIdsUsingGET",
        "summary": "Returns a list ontology term accession IDs annotated to an rgd object"
      }
    },
    "/annotations/count/{accId}/{includeChildren}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Ontology term accession ID",
            "in": "path",
            "name": "accId",
            "required": true,
            "type": "string"
          },
          {
            "description": "true: return annotations for the term and children, false: return annotations for the term only ",
            "in": "path",
            "name": "includeChildren",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Annotation"
        ],
        "operationId": "getAnnotationCountByAccIdUsingGET",
        "summary": "Returns annotation count for ontology accession ID"
      }
    },
    "/annotations/count/{accId}/{speciesTypeKey}/{includeChildren}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Ontology term accession ID",
            "in": "path",
            "name": "accId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A list of species type keys can be found using the lookup service",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "true: return annotations for the term and children, false: return annotations for the term only ",
            "in": "path",
            "name": "includeChildren",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Annotation"
        ],
        "operationId": "getAnnotationCountByAccIdAndSpeciesUsingGET",
        "summary": "Returns annotation count for ontology accession ID and speicies"
      }
    },
    "/annotations/count/{accId}/{speciesTypeKey}/{includeChildren}/{objectType}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Ontology term accession ID",
            "in": "path",
            "name": "accId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A list of species type keys can be found using the lookup service",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "true: return annotations for the term and children, false: return annotations for the term only ",
            "in": "path",
            "name": "includeChildren",
            "required": true,
            "type": "boolean"
          },
          {
            "description": "A list of object types can be found using the lookup service",
            "format": "int32",
            "in": "path",
            "name": "objectType",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Annotation"
        ],
        "operationId": "getAnnotationCountByAccIdAndObjectTypeUsingGET",
        "summary": "Returns annotation count for ontology accession ID and object type"
      }
    },
    "/annotations/reference/{refRgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Reference RGD ID",
            "format": "int32",
            "in": "path",
            "name": "refRgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Annotation"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Annotation"
        ],
        "operationId": "getAnnotsByRefrerenceUsingGET",
        "summary": "Returns a list of annotations for a reference"
      }
    },
    "/annotations/rgdId/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Annotation"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Annotation"
        ],
        "operationId": "getAnnotationsByRgdIdUsingGET",
        "summary": "Returns a list of annotations by RGD ID"
      }
    },
    "/annotations/rgdId/{rgdId}/{ontologyPrefix}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Ontology Prefix.  The prefix can be found left of the semicolon in an ontology term accession ID.  As an example, term accession PW:0000034 has the ontology prefix PW",
            "in": "path",
            "name": "ontologyPrefix",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Annotation"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Annotation"
        ],
        "operationId": "getAnnotationsByRgdIdAndOntologyUsingGET",
        "summary": "Returns a list of annotations by RGD ID and ontology prefix"
      }
    },
    "/annotations/{accId}/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Ontology Term Accession ID",
            "in": "path",
            "name": "accId",
            "required": true,
            "type": "string"
          },
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Annotation"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Annotation"
        ],
        "operationId": "getAnnotationsByAccIdAndRgdIdUsingGET",
        "summary": "Returns a list of annotations by RGD ID and ontology term accession ID"
      }
    },
    "/annotations/{accId}/{speciesTypeKey}/{includeChildren}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Ontology term accession ID",
            "in": "path",
            "name": "accId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A list of species type keys can be found using the lookup service",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "true: return annotations for the term and children, false: return annotations for the term only ",
            "in": "path",
            "name": "includeChildren",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Annotation"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Annotation"
        ],
        "operationId": "getAnnotationsUsingGET",
        "summary": "Returns a list annotations for an ontology term or a term and it's children"
      }
    },
    "/enrichment/annotatedGenes": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "geneRequest",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnrichmentGeneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "enrichment-web-service"
        ],
        "operationId": "getEnrichmentDataUsingPOST",
        "summary": "Return a list of genes annotated to the term.Genes are rgdids separated by comma.Species type is an integer value.term is the ontology"
      }
    },
    "/enrichment/data": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "enrichmentRequest",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnrichmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "enrichment-web-service"
        ],
        "operationId": "getEnrichmentDataUsingPOST_1",
        "summary": "Return a chart of ontology terms annotated to the genes.Genes are rgdids separated by comma.Species type is an integer value.Aspect is the Ontology group"
      }
    },
    "/genes/affyId/{affyId}/{speciesTypeKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Affymetrix ID",
            "in": "path",
            "name": "affyId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A list of RGD species type keys can be found in the lookup service",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Gene"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getGenesByAffyIdUsingGET",
        "summary": "Return a list of genes for an affymetrix ID"
      }
    },
    "/genes/alias/{aliasSymbol}/{speciesTypeKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Gene alias symbol",
            "in": "path",
            "name": "aliasSymbol",
            "required": true,
            "type": "string"
          },
          {
            "description": "A list of RGD species type keys can be found in the lookup service",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Gene"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getGenesByAliasSymbolUsingGET",
        "summary": "Return a list of genes for an alias and species"
      }
    },
    "/genes/allele/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID of gene",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Gene"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getGeneAllelesUsingGET",
        "summary": "Return a list of gene alleles"
      }
    },
    "/genes/annotation": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AnnotatedGeneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Gene"
              },
              "type": "array"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getAnnotatedGenesUsingPOST",
        "summary": "Return a list of genes annotated to an ontology term"
      }
    },
    "/genes/annotation/{accId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Accesstion ID",
            "in": "path",
            "name": "accId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Gene"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getAllAnnotatedGenesUsingGET",
        "summary": "Return a list of genes annotated to an ontology term"
      }
    },
    "/genes/annotation/{accId}/{speciesTypeKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Ontology term accession ID",
            "in": "path",
            "name": "accId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Species type key.  A list of species type keys can be found in the lookup service",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Gene"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getGenesAnnotatedUsingGET",
        "summary": "Return a list of genes annotated to an ontology term"
      }
    },
    "/genes/keyword/{keyword}/{speciesTypeKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Search keyword",
            "in": "path",
            "name": "keyword",
            "required": true,
            "type": "string"
          },
          {
            "description": "Species type key.  A list of species type keys can be found in the lookup service",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Gene"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getGenesByKeywordUsingGET",
        "summary": "Return a list of genes by keyword and species type key"
      }
    },
    "/genes/map/{mapKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "A list of RGD assembly map keys can be found in the lookup service",
            "format": "int32",
            "in": "path",
            "name": "mapKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/MappedGene"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getGeneByMapKeyUsingGET",
        "summary": "Return a list of all genes with position information for an assembly"
      }
    },
    "/genes/mapped/{chr}/{start}/{stop}/{mapKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Chromosome",
            "in": "path",
            "name": "chr",
            "required": true,
            "type": "string"
          },
          {
            "description": "Start Position",
            "format": "int64",
            "in": "path",
            "name": "start",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Stop Position",
            "format": "int64",
            "in": "path",
            "name": "stop",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A list of RGD assembly map keys can be found in the lookup service",
            "format": "int32",
            "in": "path",
            "name": "mapKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/MappedGene"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getMappedGenesByPositionUsingGET",
        "summary": "Return a list of genes position and map key"
      }
    },
    "/genes/orthologs": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "orthologRequest",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrthologRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "items": {
                  "$ref": "#/definitions/Gene"
                },
                "type": "array"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getOrthologsByListUsingPOST",
        "summary": "Return a list of gene orthologs"
      }
    },
    "/genes/orthologs/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID of a gene",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Gene"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getGeneOrthologsUsingGET",
        "summary": "Return a list of gene orthologs"
      }
    },
    "/genes/region/{chr}/{start}/{stop}/{mapKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Chromosome",
            "in": "path",
            "name": "chr",
            "required": true,
            "type": "string"
          },
          {
            "description": "Start Position",
            "format": "int64",
            "in": "path",
            "name": "start",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Stop Position",
            "format": "int64",
            "in": "path",
            "name": "stop",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A list of RGD assembly map keys can be found in the lookup service",
            "format": "int32",
            "in": "path",
            "name": "mapKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/MappedGenePosition"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getGenesInRegionUsingGET",
        "summary": "Return a list of genes in region"
      }
    },
    "/genes/species/{speciesTypeKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "A list of RGD species type keys can be found in the lookup service",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Gene"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getGenesBySpeciesUsingGET",
        "summary": "Return a list of all genes for a species in RGD"
      }
    },
    "/genes/{chr}/{start}/{stop}/{mapKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Chromosome",
            "in": "path",
            "name": "chr",
            "required": true,
            "type": "string"
          },
          {
            "description": "Start Position",
            "format": "int64",
            "in": "path",
            "name": "start",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Stop Position",
            "format": "int64",
            "in": "path",
            "name": "stop",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A list of RGD assembly map keys can be found in the lookup service",
            "format": "int32",
            "in": "path",
            "name": "mapKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Gene"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getGenesByPositionUsingGET",
        "summary": "Return a list of genes position and map key"
      }
    },
    "/genes/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "The RGD ID of a Gene in RGD",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Gene"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getGeneByRgdIdUsingGET",
        "summary": "Get a gene record by RGD ID"
      }
    },
    "/genes/{symbol}/{speciesTypeKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Gene Symbol",
            "in": "path",
            "name": "symbol",
            "required": true,
            "type": "string"
          },
          {
            "description": "Species type key.  A list of species type keys can be found in the lookup service",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Gene"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Gene"
        ],
        "operationId": "getGeneBySymbolUsingGET",
        "summary": "Get a gene record by symbol and species type key"
      }
    },
    "/lookup/geneTypes": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getGeneTypesUsingGET",
        "summary": "Returns a list of gene types avialable in RGD"
      }
    },
    "/lookup/id/map/EnsemblGene": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RGDIDListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getEnsemblGeneMappingUsingPOST",
        "summary": "Translate RGD IDs to Ensembl Gene IDs"
      }
    },
    "/lookup/id/map/EnsemblGene/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getEnsemblGeneMappingUsingGET",
        "summary": "Translate an RGD ID to an Ensembl Gene  ID"
      }
    },
    "/lookup/id/map/EnsemblProtein": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RGDIDListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getEnsemblProteinMappingUsingPOST",
        "summary": "Translate RGD IDs to Ensembl Protein IDs"
      }
    },
    "/lookup/id/map/EnsemblProtein/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getEnsemblProteinMappingUsingGET",
        "summary": "Translate an RGD ID to an Ensembl Protein ID"
      }
    },
    "/lookup/id/map/EnsemblTranscript": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RGDIDListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getEnsemblTranscriptMappingUsingPOST",
        "summary": "Translate RGD IDs to Ensembl Transcript IDs"
      }
    },
    "/lookup/id/map/EnsemblTranscript/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getEnsemblTranscriptMappingUsingGET",
        "summary": "Translate an RGD ID to an Ensembl Transcript ID"
      }
    },
    "/lookup/id/map/GTEx": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RGDIDListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getGTEXMappingUsingPOST",
        "summary": "Translate RGD IDs to GTEx IDs"
      }
    },
    "/lookup/id/map/GTEx/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getGTEXMappingUsingGET",
        "summary": "Translate an RGD ID to an GTEx ID"
      }
    },
    "/lookup/id/map/GenBankNucleotide": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RGDIDListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getGenBankNucleotideMappingUsingPOST",
        "summary": "Translate RGD IDs to GenBank Nucleotide IDs"
      }
    },
    "/lookup/id/map/GenBankNucleotide/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getGenBankNucleotideMappingUsingGET",
        "summary": "Translate an RGD ID to a GenBank Nucleotide ID"
      }
    },
    "/lookup/id/map/GenBankProtein": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RGDIDListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getGenBankProteinMappingUsingPOST",
        "summary": "Translate RGD IDs to GenBank Protein IDs"
      }
    },
    "/lookup/id/map/GenBankProtein/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getGenBankProteinMappingUsingGET",
        "summary": "Translate an RGD ID to a GenBank Protein ID"
      }
    },
    "/lookup/id/map/HGNC": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RGDIDListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getHGNCMappingUsingPOST",
        "summary": "Translate RGD IDs to HGNC IDs"
      }
    },
    "/lookup/id/map/HGNC/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getHGNCMappingUsingGET",
        "summary": "Translate an RGD ID to an HGNC ID"
      }
    },
    "/lookup/id/map/MGI": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RGDIDListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getMGIMappingUsingPOST",
        "summary": "Translate RGD IDs to MGI IDs"
      }
    },
    "/lookup/id/map/MGI/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getMGIMappingUsingGET",
        "summary": "Translate an RGD ID to an MGI ID"
      }
    },
    "/lookup/id/map/NCBIGene": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RGDIDListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getNCBIGeneMappingUsingPOST",
        "summary": "Translate RGD IDs to NCBI Gene IDs"
      }
    },
    "/lookup/id/map/NCBIGene/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getNCBIGeneMappingUsingGET",
        "summary": "Translate an RGD ID to an NCBI Gene ID"
      }
    },
    "/lookup/id/map/UniProt": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RGDIDListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getUniProtMappingUsingPOST",
        "summary": "Translate RGD IDs to UniProt IDs"
      }
    },
    "/lookup/id/map/UniProt/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getUniProtMappingUsingGET",
        "summary": "Translate an RGD ID to a UniProt ID"
      }
    },
    "/lookup/maps/{speciesTypeKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD species type key. A full list of keys is available throught the lookup service.  1=human, 2=mouse, 3=rat,ect",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Map"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getMapsUsingGET",
        "summary": "Return a list assembly maps for a species"
      }
    },
    "/lookup/speciesTypeKeys": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getSpeciesTypesUsingGET",
        "summary": "Return a Map of species type keys available in RGD"
      }
    },
    "/lookup/standardUnit/{accId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD term acc",
            "in": "path",
            "name": "accId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Lookup"
        ],
        "operationId": "getMapsUsingGET_1",
        "summary": "Return a standardUnit for an ontology if it exists"
      }
    },
    "/maps/chr/{chromosome}/{mapKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "chromosome",
            "in": "path",
            "name": "chromosome",
            "required": true,
            "type": "string"
          },
          {
            "description": "mapKey",
            "format": "int32",
            "in": "path",
            "name": "mapKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Chromosome"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Chromosome",
          "Map"
        ],
        "operationId": "getChromosomeByAssemblyUsingGET",
        "summary": "Return a list of chromosomes"
      }
    },
    "/maps/chr/{mapKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "mapKey",
            "format": "int32",
            "in": "path",
            "name": "mapKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Chromosome",
          "Map"
        ],
        "operationId": "getChromosomesByAssemblyUsingGET",
        "summary": "Return a list of chromosomes"
      }
    },
    "/maps/{speciesTypeKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "species Key",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Map"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Map"
        ],
        "operationId": "getMapsBySpeciesUsingGET",
        "summary": "Return a list of assemblies"
      }
    },
    "/ontology/ont/{accId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Accession ID",
            "in": "path",
            "name": "accId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Ontology"
        ],
        "operationId": "getOntDagsUsingGET",
        "summary": "Returns child and parent terms for Accession ID"
      }
    },
    "/ontology/term/{accId1}/{accId2}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Child Term Accession ID",
            "in": "path",
            "name": "accId1",
            "required": true,
            "type": "string"
          },
          {
            "description": "Parent Term Accession ID",
            "in": "path",
            "name": "accId2",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Ontology"
        ],
        "operationId": "isDescendantOfUsingGET",
        "summary": "Returns true or false for terms"
      }
    },
    "/ontology/term/{accId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Term Accession ID",
            "in": "path",
            "name": "accId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Term"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Ontology"
        ],
        "operationId": "getTermUsingGET",
        "summary": "Returns term for Accession ID"
      }
    },
    "/pathways/diagrams/search/{searchString}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Free text search string",
            "in": "path",
            "name": "searchString",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Pathway"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Pathway"
        ],
        "operationId": "searchPathwaysUsingGET",
        "summary": "Return a list of pathways based on search term"
      }
    },
    "/pathways/diagramsForCategory/{category}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Pathway Category",
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Pathway"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Pathway"
        ],
        "operationId": "getPathwaysWithDiagramsForCategoryUsingGET",
        "summary": "Return a list of pathways based on category provided"
      }
    },
    "/phenotype/phenominer/chart/{speciesTypeKey}/{refRgdId}/{termString}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Species Type Key - 3=rat 4=chinchilla ",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Reference RGD ID for a study",
            "format": "int32",
            "in": "path",
            "name": "refRgdId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "List of term accession IDs",
            "in": "path",
            "name": "termString",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Quantitative Phenotype"
        ],
        "operationId": "getChartInfoUsingGET",
        "summary": "Return a list of quantitative phenotypes values based on a combination of Clinical Measurement, Experimental Condition, Rat Strain, and/or Measurement Method ontology terms.  Results will be all records that match all terms submitted.  Ontology ids should be submitted as a comma delimited list (ex. RS:0000029,CMO:0000155,CMO:0000139).  Species type is an integer value (3=rat, 4=chinchilla).  Reference RGD ID for a study works like a filter."
      }
    },
    "/phenotype/phenominer/chart/{speciesTypeKey}/{termString}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Species Type Key - 3=rat 4=chinchilla ",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "List of term accession IDs",
            "in": "path",
            "name": "termString",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Quantitative Phenotype"
        ],
        "operationId": "getChartInfoUsingGET_1",
        "summary": "Return a list of quantitative phenotypes values based on a combination of Clinical Measurement, Experimental Condition, Rat Strain, and/or Measurement Method ontology terms.  Results will be all records that match all terms submitted.  Ontology ids should be submitted as a comma delimited list (ex. RS:0000029,CMO:0000155,CMO:0000139).  Species type is an integer value (3=rat, 4=chinchilla)"
      }
    },
    "/qtls/mapped/{chr}/{start}/{stop}/{mapKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Chromosome",
            "in": "path",
            "name": "chr",
            "required": true,
            "type": "string"
          },
          {
            "description": "Start Position",
            "format": "int64",
            "in": "path",
            "name": "start",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Stop Position",
            "format": "int64",
            "in": "path",
            "name": "stop",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A list of assembly map keys can be found using the lookup service",
            "format": "int32",
            "in": "path",
            "name": "mapKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/MappedQTL"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "QTL"
        ],
        "operationId": "getMappedQTLByPositionUsingGET",
        "summary": "Returns a list QTL for given position and assembly map"
      }
    },
    "/qtls/{chr}/{start}/{stop}/{mapKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Chromosome",
            "in": "path",
            "name": "chr",
            "required": true,
            "type": "string"
          },
          {
            "description": "Start Position",
            "format": "int64",
            "in": "path",
            "name": "start",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Stop Position",
            "format": "int64",
            "in": "path",
            "name": "stop",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A list of assembly map keys can be found using the lookup service",
            "format": "int32",
            "in": "path",
            "name": "mapKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/QTL"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "QTL"
        ],
        "operationId": "getQtlListByPositionUsingGET",
        "summary": "Returns a list QTL for given position and assembly map"
      }
    },
    "/qtls/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QTL"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "QTL"
        ],
        "operationId": "getQTLByRgdIdUsingGET",
        "summary": "Return a QTL for provided RGD ID"
      }
    },
    "/sslps/mapped/{chr}/{start}/{stop}/{mapKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Chromosome",
            "in": "path",
            "name": "chr",
            "required": true,
            "type": "string"
          },
          {
            "description": "Start Position",
            "format": "int64",
            "in": "path",
            "name": "start",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Stop Position",
            "format": "int64",
            "in": "path",
            "name": "stop",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A list of assembly map keys can be found using the lookup service",
            "format": "int32",
            "in": "path",
            "name": "mapKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/MappedSSLP"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "SSLP"
        ],
        "operationId": "getMappedSSLPByPositionUsingGET",
        "summary": "Returns a list SSLP for given position and assembly map"
      }
    },
    "/stats/count/activeObject/{speciesTypeKey}/{dateYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateYYYYMMDD",
            "in": "path",
            "name": "dateYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getActiveObjectCountUsingGET",
        "summary": "Count of active objects by type, for specified species and date"
      }
    },
    "/stats/count/geneType/{speciesTypeKey}/{dateYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateYYYYMMDD",
            "in": "path",
            "name": "dateYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getGeneTypeCountUsingGET",
        "summary": "Count of gene types, for specified species and date"
      }
    },
    "/stats/count/objectStatus/{speciesTypeKey}/{dateYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateYYYYMMDD",
            "in": "path",
            "name": "dateYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getObjectStatusCountUsingGET",
        "summary": "Count of objects with given status, for specified species and date"
      }
    },
    "/stats/count/objectWithRefSeq/{speciesTypeKey}/{dateYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateYYYYMMDD",
            "in": "path",
            "name": "dateYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getObjectsWithRefSeqCountUsingGET",
        "summary": "Count of objects with reference sequence(s), by object type, for specified species and date"
      }
    },
    "/stats/count/objectWithReference/{speciesTypeKey}/{dateYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateYYYYMMDD",
            "in": "path",
            "name": "dateYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getObjectsWithReferenceCountUsingGET",
        "summary": "Count of objects with reference, by object type, for specified species and date"
      }
    },
    "/stats/count/objectWithXdb/{speciesTypeKey}/{objectKey}/{dateYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "objectKey",
            "format": "int32",
            "in": "path",
            "name": "objectKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateYYYYMMDD",
            "in": "path",
            "name": "dateYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getObjectsWithXDBsCountUsingGET",
        "summary": "Count of objects with external database ids, by database id, for specified species, object type and date"
      }
    },
    "/stats/count/proteinInteraction/{speciesTypeKey}/{dateYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateYYYYMMDD",
            "in": "path",
            "name": "dateYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getProteinInteractionCountUsingGET",
        "summary": "Count of protein interactions, for specified species and date"
      }
    },
    "/stats/count/qtlInheritanceType/{speciesTypeKey}/{dateYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateYYYYMMDD",
            "in": "path",
            "name": "dateYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getQtlInheritanceTypeCountUsingGET",
        "summary": "Count of strains, by qtl inheritance type, for specified species and date"
      }
    },
    "/stats/count/retiredObject/{speciesTypeKey}/{dateYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateYYYYMMDD",
            "in": "path",
            "name": "dateYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getRetiredObjectCountUsingGET",
        "summary": "Count of retired objects by type, for specified species and date"
      }
    },
    "/stats/count/strainType/{speciesTypeKey}/{dateYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateYYYYMMDD",
            "in": "path",
            "name": "dateYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getStrainTypeCountUsingGET",
        "summary": "Count of strain types, for specified species and date"
      }
    },
    "/stats/count/withdrawnObject/{speciesTypeKey}/{dateYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateYYYYMMDD",
            "in": "path",
            "name": "dateYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getWithdrawnObjectCountUsingGET",
        "summary": "Count of withdrawn objects by type, for specified species and date"
      }
    },
    "/stats/count/xdb/{speciesTypeKey}/{dateYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateYYYYMMDD",
            "in": "path",
            "name": "dateYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getXdbsCountUsingGET",
        "summary": "Count of external database ids, for specied species and date"
      }
    },
    "/stats/diff/activeObject/{speciesTypeKey}/{dateFromYYYYMMDD}/{dateToYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateFromYYYYMMDD",
            "in": "path",
            "name": "dateFromYYYYMMDD",
            "required": true,
            "type": "string"
          },
          {
            "description": "dateToYYYYMMDD",
            "in": "path",
            "name": "dateToYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getActiveObjectDiffUsingGET",
        "summary": "Count difference of active objects, by type, for specified species and date range"
      }
    },
    "/stats/diff/geneType/{speciesTypeKey}/{dateFromYYYYMMDD}/{dateToYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateFromYYYYMMDD",
            "in": "path",
            "name": "dateFromYYYYMMDD",
            "required": true,
            "type": "string"
          },
          {
            "description": "dateToYYYYMMDD",
            "in": "path",
            "name": "dateToYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getGeneTypeDiffUsingGET",
        "summary": "Count difference of gene types, for specified species and date range"
      }
    },
    "/stats/diff/objectStatus/{speciesTypeKey}/{dateFromYYYYMMDD}/{dateToYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateFromYYYYMMDD",
            "in": "path",
            "name": "dateFromYYYYMMDD",
            "required": true,
            "type": "string"
          },
          {
            "description": "dateToYYYYMMDD",
            "in": "path",
            "name": "dateToYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getObjectStatusDiffUsingGET",
        "summary": "Count difference of objects with given status, for specified species and date range"
      }
    },
    "/stats/diff/objectWithRefSeq/{speciesTypeKey}/{dateFromYYYYMMDD}/{dateToYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateFromYYYYMMDD",
            "in": "path",
            "name": "dateFromYYYYMMDD",
            "required": true,
            "type": "string"
          },
          {
            "description": "dateToYYYYMMDD",
            "in": "path",
            "name": "dateToYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getObjectsWithRefSeqDiffUsingGET",
        "summary": "Count difference of objects with reference sequence(s), by object type, for specified species and date range"
      }
    },
    "/stats/diff/objectWithReference/{speciesTypeKey}/{dateFromYYYYMMDD}/{dateToYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateFromYYYYMMDD",
            "in": "path",
            "name": "dateFromYYYYMMDD",
            "required": true,
            "type": "string"
          },
          {
            "description": "dateToYYYYMMDD",
            "in": "path",
            "name": "dateToYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getObjectsWithReferenceDiffUsingGET",
        "summary": "Count difference of objects with reference, by object type, for specified species and date range"
      }
    },
    "/stats/diff/objectWithXdb/{speciesTypeKey}/{objectKey}/{dateFromYYYYMMDD}/{dateToYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "objectKey",
            "format": "int32",
            "in": "path",
            "name": "objectKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateFromYYYYMMDD",
            "in": "path",
            "name": "dateFromYYYYMMDD",
            "required": true,
            "type": "string"
          },
          {
            "description": "dateToYYYYMMDD",
            "in": "path",
            "name": "dateToYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getObjectsWithXDBsDiffUsingGET",
        "summary": "Count difference of objects with external database ids, by database id, for specified species, object type and date range"
      }
    },
    "/stats/diff/proteinInteraction/{speciesTypeKey}/{dateFromYYYYMMDD}/{dateToYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateFromYYYYMMDD",
            "in": "path",
            "name": "dateFromYYYYMMDD",
            "required": true,
            "type": "string"
          },
          {
            "description": "dateToYYYYMMDD",
            "in": "path",
            "name": "dateToYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getProteinInteractionDiffUsingGET",
        "summary": "Count difference of protein interactions, for specified species and date range"
      }
    },
    "/stats/diff/qtlInheritanceType/{speciesTypeKey}/{dateFromYYYYMMDD}/{dateToYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateFromYYYYMMDD",
            "in": "path",
            "name": "dateFromYYYYMMDD",
            "required": true,
            "type": "string"
          },
          {
            "description": "dateToYYYYMMDD",
            "in": "path",
            "name": "dateToYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getQtlInheritanceTypeDiffUsingGET",
        "summary": "Count difference of strains, by qtl inheritance type, for specified species and date range"
      }
    },
    "/stats/diff/retiredObject/{speciesTypeKey}/{dateFromYYYYMMDD}/{dateToYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateFromYYYYMMDD",
            "in": "path",
            "name": "dateFromYYYYMMDD",
            "required": true,
            "type": "string"
          },
          {
            "description": "dateToYYYYMMDD",
            "in": "path",
            "name": "dateToYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getRetiredObjectDiffUsingGET",
        "summary": "Count difference of retired objects, by type, for specified species and date range"
      }
    },
    "/stats/diff/strainType/{speciesTypeKey}/{dateFromYYYYMMDD}/{dateToYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateFromYYYYMMDD",
            "in": "path",
            "name": "dateFromYYYYMMDD",
            "required": true,
            "type": "string"
          },
          {
            "description": "dateToYYYYMMDD",
            "in": "path",
            "name": "dateToYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getStrainTypeDiffUsingGET",
        "summary": "Count difference of strain types, for specified species and date range"
      }
    },
    "/stats/diff/withdrawnObject/{speciesTypeKey}/{dateFromYYYYMMDD}/{dateToYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateFromYYYYMMDD",
            "in": "path",
            "name": "dateFromYYYYMMDD",
            "required": true,
            "type": "string"
          },
          {
            "description": "dateToYYYYMMDD",
            "in": "path",
            "name": "dateToYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getWithdrawnObjectDiffUsingGET",
        "summary": "Count difference of withdrawn objects, by type, for specified species and date range"
      }
    },
    "/stats/diff/xdb/{speciesTypeKey}/{dateFromYYYYMMDD}/{dateToYYYYMMDD}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "speciesTypeKey",
            "format": "int32",
            "in": "path",
            "name": "speciesTypeKey",
            "required": true,
            "type": "integer"
          },
          {
            "description": "dateFromYYYYMMDD",
            "in": "path",
            "name": "dateFromYYYYMMDD",
            "required": true,
            "type": "string"
          },
          {
            "description": "dateToYYYYMMDD",
            "in": "path",
            "name": "dateToYYYYMMDD",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getXdbsDiffUsingGET",
        "summary": "Count difference of external database ids, for specified species and date range"
      }
    },
    "/stats/term/{accId}/{filterAccId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "accId",
            "in": "path",
            "name": "accId",
            "required": true,
            "type": "string"
          },
          {
            "description": "filterAccId",
            "in": "path",
            "name": "filterAccId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "format": "int32",
                "type": "integer"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Statistics"
        ],
        "operationId": "getTermStatsUsingGET",
        "summary": "getTermStats"
      }
    },
    "/strains/all": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Strain"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Rat Strain"
        ],
        "operationId": "getAllStrainsUsingGET",
        "summary": "Return all active strains in RGD"
      }
    },
    "/strains/{chr}/{start}/{stop}/{mapKey}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "Chromosome",
            "in": "path",
            "name": "chr",
            "required": true,
            "type": "string"
          },
          {
            "description": "Start Position",
            "format": "int64",
            "in": "path",
            "name": "start",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Stop Position",
            "format": "int64",
            "in": "path",
            "name": "stop",
            "required": true,
            "type": "integer"
          },
          {
            "description": "RGD Map Key (available through lookup service)",
            "format": "int32",
            "in": "path",
            "name": "mapKey",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Strain"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Rat Strain"
        ],
        "operationId": "getStrainsByPositionUsingGET",
        "summary": "Return all active strains by position"
      }
    },
    "/strains/{rgdId}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "description": "RGD ID of the strain",
            "format": "int32",
            "in": "path",
            "name": "rgdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Strain"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Rat Strain"
        ],
        "operationId": "getStrainByRgdIdUsingGET",
        "summary": "Return a strain by RGD ID"
      }
    }
  },
  "definitions": {
    "AnnotatedGeneRequest": {
      "properties": {
        "accId": {
          "type": "string"
        },
        "evidenceCodes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "speciesTypeKeys": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "title": "AnnotatedGeneRequest",
      "type": "object"
    },
    "Annotation": {
      "properties": {
        "annotatedObjectRgdId": {
          "format": "int32",
          "type": "integer"
        },
        "annotationExtension": {
          "type": "string"
        },
        "aspect": {
          "type": "string"
        },
        "createdBy": {
          "format": "int32",
          "type": "integer"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "dataSrc": {
          "type": "string"
        },
        "evidence": {
          "type": "string"
        },
        "geneProductFormId": {
          "type": "string"
        },
        "key": {
          "format": "int32",
          "type": "integer"
        },
        "lastModifiedBy": {
          "format": "int32",
          "type": "integer"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "objectName": {
          "type": "string"
        },
        "objectSymbol": {
          "type": "string"
        },
        "qualifier": {
          "type": "string"
        },
        "refRgdId": {
          "format": "int32",
          "type": "integer"
        },
        "relativeTo": {
          "type": "string"
        },
        "rgdObjectKey": {
          "format": "int32",
          "type": "integer"
        },
        "speciesTypeKey": {
          "format": "int32",
          "type": "integer"
        },
        "term": {
          "type": "string"
        },
        "termAcc": {
          "type": "string"
        },
        "withInfo": {
          "type": "string"
        },
        "xrefSource": {
          "type": "string"
        }
      },
      "title": "Annotation",
      "type": "object"
    },
    "AnnotationRequest": {
      "properties": {
        "evidenceCodes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ids": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "speciesTypeKeys": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "termAcc": {
          "type": "string"
        }
      },
      "title": "AnnotationRequest",
      "type": "object"
    },
    "Chromosome": {
      "properties": {
        "chromosome": {
          "type": "string"
        },
        "contigCount": {
          "format": "int32",
          "type": "integer"
        },
        "gapCount": {
          "format": "int32",
          "type": "integer"
        },
        "gapLength": {
          "format": "int32",
          "type": "integer"
        },
        "genbankId": {
          "type": "string"
        },
        "mapKey": {
          "format": "int32",
          "type": "integer"
        },
        "ordinalNumber": {
          "format": "int32",
          "type": "integer"
        },
        "refseqId": {
          "type": "string"
        },
        "seqLength": {
          "format": "int32",
          "type": "integer"
        }
      },
      "title": "Chromosome",
      "type": "object"
    },
    "EnrichmentGeneRequest": {
      "properties": {
        "accId": {
          "type": "string"
        },
        "geneSymbols": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "species": {
          "type": "string"
        }
      },
      "title": "EnrichmentGeneRequest",
      "type": "object"
    },
    "EnrichmentRequest": {
      "properties": {
        "aspect": {
          "type": "string"
        },
        "genes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "species": {
          "type": "string"
        }
      },
      "title": "EnrichmentRequest",
      "type": "object"
    },
    "Gene": {
      "properties": {
        "agrDescription": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "ensemblFullName": {
          "type": "string"
        },
        "ensemblGeneSymbol": {
          "type": "string"
        },
        "ensemblGeneType": {
          "type": "string"
        },
        "geneSource": {
          "type": "string"
        },
        "key": {
          "format": "int32",
          "type": "integer"
        },
        "mergedDescription": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ncbiAnnotStatus": {
          "type": "string"
        },
        "nomenReviewDate": {
          "format": "date-time",
          "type": "string"
        },
        "nomenSource": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "refSeqStatus": {
          "type": "string"
        },
        "rgdId": {
          "format": "int32",
          "type": "integer"
        },
        "soAccId": {
          "type": "string"
        },
        "speciesTypeKey": {
          "format": "int32",
          "type": "integer"
        },
        "symbol": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "variant": {
          "type": "boolean"
        }
      },
      "title": "Gene",
      "type": "object"
    },
    "Map": {
      "properties": {
        "dbsnpVersion": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "key": {
          "format": "int32",
          "type": "integer"
        },
        "methodKey": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "primaryRefAssembly": {
          "type": "boolean"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "refSeqAssemblyAcc": {
          "type": "string"
        },
        "refSeqAssemblyName": {
          "type": "string"
        },
        "rgdId": {
          "format": "int32",
          "type": "integer"
        },
        "source": {
          "type": "string"
        },
        "speciesTypeKey": {
          "format": "int32",
          "type": "integer"
        },
        "ucscAssemblyId": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "Map",
      "type": "object"
    },
    "MapPair": {
      "properties": {
        "keyValue": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        }
      },
      "title": "MapPair",
      "type": "object"
    },
    "MappedGene": {
      "properties": {
        "chromosome": {
          "type": "string"
        },
        "gene": {
          "$ref": "#/definitions/Gene"
        },
        "mapKey": {
          "format": "int32",
          "type": "integer"
        },
        "start": {
          "format": "int64",
          "type": "integer"
        },
        "stop": {
          "format": "int64",
          "type": "integer"
        },
        "strand": {
          "type": "string"
        }
      },
      "title": "MappedGene",
      "type": "object"
    },
    "MappedGenePosition": {
      "properties": {
        "chromosome": {
          "type": "string"
        },
        "mapKey": {
          "format": "int32",
          "type": "integer"
        },
        "rgdId": {
          "format": "int32",
          "type": "integer"
        },
        "start": {
          "format": "int64",
          "type": "integer"
        },
        "stop": {
          "format": "int64",
          "type": "integer"
        },
        "strand": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        }
      },
      "title": "MappedGenePosition",
      "type": "object"
    },
    "MappedQTL": {
      "properties": {
        "chromosome": {
          "type": "string"
        },
        "mapKey": {
          "format": "int32",
          "type": "integer"
        },
        "qtl": {
          "$ref": "#/definitions/QTL"
        },
        "start": {
          "format": "int64",
          "type": "integer"
        },
        "stop": {
          "format": "int64",
          "type": "integer"
        },
        "strand": {
          "type": "string"
        }
      },
      "title": "MappedQTL",
      "type": "object"
    },
    "MappedSSLP": {
      "properties": {
        "chromosome": {
          "type": "string"
        },
        "mapKey": {
          "format": "int32",
          "type": "integer"
        },
        "sslp": {
          "$ref": "#/definitions/SSLP"
        },
        "start": {
          "format": "int64",
          "type": "integer"
        },
        "stop": {
          "format": "int64",
          "type": "integer"
        },
        "strand": {
          "type": "string"
        }
      },
      "title": "MappedSSLP",
      "type": "object"
    },
    "OrthologRequest": {
      "properties": {
        "rgdIds": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "speciesTypeKeys": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "title": "OrthologRequest",
      "type": "object"
    },
    "Pathway": {
      "properties": {
        "description": {
          "type": "string"
        },
        "hasAlteredPath": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "objectList": {
          "items": {
            "$ref": "#/definitions/PathwayObject"
          },
          "type": "array"
        },
        "pathwayCategories": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "referenceList": {
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "title": "Pathway",
      "type": "object"
    },
    "PathwayObject": {
      "properties": {
        "accId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "objDesc": {
          "type": "string"
        },
        "objName": {
          "type": "string"
        },
        "typeId": {
          "format": "int32",
          "type": "integer"
        },
        "typeName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "xdb_key": {
          "format": "int32",
          "type": "integer"
        }
      },
      "title": "PathwayObject",
      "type": "object"
    },
    "QTL": {
      "properties": {
        "chromosome": {
          "type": "string"
        },
        "flank1RgdId": {
          "format": "int32",
          "type": "integer"
        },
        "flank2RgdId": {
          "format": "int32",
          "type": "integer"
        },
        "inheritanceType": {
          "type": "string"
        },
        "key": {
          "format": "int32",
          "type": "integer"
        },
        "linkageImage": {
          "type": "string"
        },
        "lod": {
          "format": "double",
          "type": "number"
        },
        "lodImage": {
          "type": "string"
        },
        "mostSignificantCmoTerm": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "peakOffset": {
          "format": "int32",
          "type": "integer"
        },
        "peakRgdId": {
          "format": "int32",
          "type": "integer"
        },
        "pvalue": {
          "format": "double",
          "type": "number"
        },
        "rgdId": {
          "format": "int32",
          "type": "integer"
        },
        "sourceUrl": {
          "type": "string"
        },
        "speciesTypeKey": {
          "format": "int32",
          "type": "integer"
        },
        "symbol": {
          "type": "string"
        },
        "variance": {
          "format": "double",
          "type": "number"
        }
      },
      "title": "QTL",
      "type": "object"
    },
    "RGDIDListRequest": {
      "properties": {
        "rgdIds": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "title": "RGDIDListRequest",
      "type": "object"
    },
    "Reference": {
      "properties": {
        "citation": {
          "type": "string"
        },
        "doi": {
          "type": "string"
        },
        "editors": {
          "type": "string"
        },
        "issue": {
          "type": "string"
        },
        "key": {
          "format": "int32",
          "type": "integer"
        },
        "notes": {
          "type": "string"
        },
        "pages": {
          "type": "string"
        },
        "pubDate": {
          "format": "date-time",
          "type": "string"
        },
        "pubStatus": {
          "type": "string"
        },
        "publication": {
          "type": "string"
        },
        "publisher": {
          "type": "string"
        },
        "publisherCity": {
          "type": "string"
        },
        "refAbstract": {
          "type": "string"
        },
        "referenceType": {
          "type": "string"
        },
        "rgdId": {
          "format": "int32",
          "type": "integer"
        },
        "speciesTypeKey": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "urlWebReference": {
          "type": "string"
        },
        "volume": {
          "type": "string"
        }
      },
      "title": "Reference",
      "type": "object"
    },
    "SSLP": {
      "properties": {
        "expectedSize": {
          "format": "int32",
          "type": "integer"
        },
        "forwardSeq": {
          "type": "string"
        },
        "key": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "reverseSeq": {
          "type": "string"
        },
        "rgdId": {
          "format": "int32",
          "type": "integer"
        },
        "speciesTypeKey": {
          "format": "int32",
          "type": "integer"
        },
        "sslpType": {
          "type": "string"
        },
        "templateSeq": {
          "type": "string"
        }
      },
      "title": "SSLP",
      "type": "object"
    },
    "Status": {
      "properties": {
        "cryopreservedEmbryo": {
          "type": "boolean"
        },
        "cryopreservedSperm": {
          "type": "boolean"
        },
        "cryorecovery": {
          "type": "boolean"
        },
        "key": {
          "format": "int32",
          "type": "integer"
        },
        "liveAnimals": {
          "type": "boolean"
        },
        "statusDate": {
          "format": "date-time",
          "type": "string"
        },
        "strainRgdId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "title": "Status",
      "type": "object"
    },
    "Strain": {
      "properties": {
        "backgroundStrainRgdId": {
          "format": "int32",
          "type": "integer"
        },
        "chrAltered": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "geneticStatus": {
          "type": "string"
        },
        "genetics": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "inbredGen": {
          "type": "string"
        },
        "key": {
          "format": "int32",
          "type": "integer"
        },
        "lastStatus": {
          "type": "string"
        },
        "lastStatusObject": {
          "$ref": "#/definitions/Status"
        },
        "modificationMethod": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "researchUse": {
          "type": "string"
        },
        "rgdId": {
          "format": "int32",
          "type": "integer"
        },
        "source": {
          "type": "string"
        },
        "speciesTypeKey": {
          "format": "int32",
          "type": "integer"
        },
        "statusLog": {
          "items": {
            "$ref": "#/definitions/Status"
          },
          "type": "array"
        },
        "strain": {
          "type": "string"
        },
        "strainTypeName": {
          "type": "string"
        },
        "substrain": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        }
      },
      "title": "Strain",
      "type": "object"
    },
    "Term": {
      "properties": {
        "accId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "definition": {
          "type": "string"
        },
        "modificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "obsolete": {
          "format": "int32",
          "type": "integer"
        },
        "ontologyId": {
          "type": "string"
        },
        "term": {
          "type": "string"
        },
        "xrefs": {
          "items": {
            "$ref": "#/definitions/TermXRef"
          },
          "type": "array"
        }
      },
      "title": "Term",
      "type": "object"
    },
    "TermXRef": {
      "properties": {
        "key": {
          "format": "int32",
          "type": "integer"
        },
        "termAcc": {
          "type": "string"
        },
        "xrefDescription": {
          "type": "string"
        },
        "xrefValue": {
          "type": "string"
        }
      },
      "title": "TermXRef",
      "type": "object"
    }
  },
  "tags": [
    {
      "description": "Alliance of Genome Resources",
      "name": "AGR"
    },
    {
      "name": "Annotation"
    },
    {
      "name": "Gene"
    },
    {
      "name": "Lookup"
    },
    {
      "description": "Map Web Service",
      "name": "Map"
    },
    {
      "description": "NIH Data Commons",
      "name": "NIHdatacommons"
    },
    {
      "description": "Ontology Web Service",
      "name": "Ontology"
    },
    {
      "name": "Pathway"
    },
    {
      "name": "Phenotype"
    },
    {
      "name": "QTL"
    },
    {
      "description": "Phenotype Web Service",
      "name": "Quantitative Phenotype"
    },
    {
      "name": "Rat Strain"
    },
    {
      "description": "SSLP Web Service",
      "name": "SSLP"
    },
    {
      "description": "Stats Web Service",
      "name": "Statistics"
    },
    {
      "description": "Enrichment Web Service",
      "name": "enrichment-web-service"
    }
  ],
  "x-components": {
    "requestBodies": {
      "RGDIDListRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/RGDIDListRequest"
            }
          }
        },
        "description": "data"
      }
    }
  }
}