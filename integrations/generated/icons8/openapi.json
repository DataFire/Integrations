{
  "swagger": "2.0",
  "info": {
    "description": "# Icons8 API\n\nIcons8 API allows us to search and obtain [our icons](https://icons8.com/web-app).\n\nYou're welcome to use our icons to extend the functionality of your web and mobile applications, website templates, and even tattoos.\n\n![Tattoos](https://cdn.rawgit.com/icons8/api-docs/cff6fdf0/tattoos.svg)\n\n## Usage Examples\n\nSome examples of what you can do with our icons:\n\n* **Template customization.** This way, [Canva](https://www.canva.com/) uses our icons to customize their layouts.\n\n* **Graphics and text editors.** [Gravit](https://gravit.io/) allows to insert our icons into the mockups.\n\n* **Any application with customization.** [TimeTune](http://timetune.center/) uses our icons to customize the activities.\n\n## Getting Started\n\nTo get started, please [contact us](https://icons8.com/contact) to obtain an API key.\n\n## Pricing\n\nOur API license starts at $100/month.",
    "title": "Use a [New Version](https://icons8.github.io/icons8-docs/) Instead",
    "version": "1.0.0",
    "x-apisguru-categories": [
      "media"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_icons_8_profile_image.jpeg"
    },
    "x-origin": [
      {
        "converter": {
          "url": "https://github.com/lucybot/api-spec-converter",
          "version": "2.7.31"
        },
        "format": "apiBlueprint",
        "url": "https://raw.githubusercontent.com/icons8/api-docs/master/apiary.apib",
        "version": "1A"
      }
    ],
    "x-preferred": true,
    "x-providerName": "icons8.com",
    "x-datafire": {
      "name": "icons8",
      "type": "openapi"
    }
  },
  "host": "api.icons8.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/iconsets/v3/categories?platform={platform}&language={language}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the platform that we are searching icons for",
            "enum": [
              "ios7",
              "win8",
              "win10",
              "android",
              "androidL",
              "color",
              "office"
            ],
            "in": "path",
            "name": "platform",
            "required": true,
            "type": "string"
          },
          {
            "description": "the language code to get localized result",
            "enum": [
              "en-US",
              "fr-FR",
              "de-DE",
              "it-IT",
              "pt-BR",
              "pl-PL",
              "ru-RU",
              "es-ES"
            ],
            "in": "path",
            "name": "language",
            "required": true,
            "type": "string",
            "x-example": "en-US"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "schema": {
              "properties": {
                "parameters": {
                  "description": "copy of the input parameters from the request",
                  "properties": {
                    "language": {
                      "type": "string"
                    },
                    "platform": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "result": {
                  "description": "the result of operation",
                  "properties": {
                    "categories": {
                      "items": {},
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [],
        "description": "The operation will not return the categories that have less than 10 icons.\nWe need it to test the categories without showing garbage on the production website.",
        "summary": "Categories"
      }
    },
    "/api/iconsets/v3/category?category={category}&subcategory={subcategory}&amount={amount}&offset={offset}&platform={platform}&language={language}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the code of category",
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string",
            "x-example": "free_icons"
          },
          {
            "description": "the code of subcategory",
            "in": "path",
            "name": "subcategory",
            "required": true,
            "type": "string",
            "x-example": "home_appliances"
          },
          {
            "default": 25,
            "description": "the maximum number of icons which you'd like to receive",
            "in": "path",
            "name": "amount",
            "required": true,
            "type": "number"
          },
          {
            "description": "the offset from the first received result",
            "in": "path",
            "name": "offset",
            "required": true,
            "type": "number"
          },
          {
            "description": "the style of the icons",
            "enum": [
              "ios7",
              "win8",
              "win10",
              "android",
              "androidL",
              "color",
              "office"
            ],
            "in": "path",
            "name": "platform",
            "required": true,
            "type": "string"
          },
          {
            "description": "the language code to get localized result",
            "enum": [
              "en-US",
              "fr-FR",
              "de-DE",
              "it-IT",
              "pt-BR",
              "pl-PL",
              "ru-RU",
              "es-ES"
            ],
            "in": "path",
            "name": "language",
            "required": true,
            "type": "string",
            "x-example": "en-US"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "schema": {
              "properties": {
                "parameters": {
                  "description": "copy of the input parameters from the request",
                  "properties": {
                    "amount": {
                      "type": "number"
                    },
                    "category": {
                      "type": "string"
                    },
                    "language": {
                      "type": "string"
                    },
                    "offset": {
                      "type": "string"
                    },
                    "platform": {
                      "type": "string"
                    },
                    "subcategory": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "result": {
                  "description": "the result of operation",
                  "properties": {
                    "category": {
                      "items": {},
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [],
        "description": "",
        "summary": "By Category"
      }
    },
    "/api/iconsets/v3/latest?term={term}&amount={amount}&offset={offset}&platform={platform}&language={language}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 25,
            "description": "the maximum number of icons which you'd like to receive",
            "in": "path",
            "name": "amount",
            "required": true,
            "type": "number"
          },
          {
            "description": "the offset from the first received result",
            "in": "path",
            "name": "offset",
            "required": true,
            "type": "number"
          },
          {
            "description": "the style of the icons",
            "enum": [
              "ios7",
              "win8",
              "win10",
              "android",
              "androidL",
              "color",
              "office"
            ],
            "in": "path",
            "name": "platform",
            "required": true,
            "type": "string"
          },
          {
            "description": "the language code to get localized result",
            "enum": [
              "en-US",
              "fr-FR",
              "de-DE",
              "it-IT",
              "pt-BR",
              "pl-PL",
              "ru-RU",
              "es-ES"
            ],
            "in": "path",
            "name": "language",
            "required": true,
            "type": "string",
            "x-example": "en-US"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "schema": {
              "properties": {
                "parameters": {
                  "description": "copy of the input parameters from the request",
                  "properties": {
                    "amount": {
                      "type": "number"
                    },
                    "language": {
                      "type": "string"
                    },
                    "offset": {
                      "type": "string"
                    },
                    "platform": {
                      "type": "string"
                    },
                    "term": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "result": {
                  "description": "the result of operation",
                  "properties": {
                    "latest": {
                      "items": {},
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [],
        "description": "",
        "summary": "Latest"
      }
    },
    "/api/iconsets/v3/search?term={term}&amount={amount}&offset={offset}&platform={platform}&language={language}&exact_amount={exact_amount}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the name or tag of the icon or any other phrase.\ne.g. use \"@home\" to find icons with the tag \"home\" and \"=home\" to find icons with the name \"home\"\n",
            "in": "path",
            "name": "term",
            "required": true,
            "type": "string",
            "x-example": "home"
          },
          {
            "default": 25,
            "description": "the maximum number of icons which you'd like to receive (will be multiplied by platforms count, if you didn't specify the platform and didn't set the 'exact_amount' parameter)",
            "in": "path",
            "name": "amount",
            "required": true,
            "type": "number"
          },
          {
            "description": "set it to 'true' if you'd like to receive the exact amount of icons, not multiplied by platforms count",
            "in": "path",
            "name": "exact_amount",
            "required": true,
            "type": "boolean"
          },
          {
            "description": "the offset from the first received result",
            "in": "path",
            "name": "offset",
            "required": true,
            "type": "number"
          },
          {
            "description": "the style of the icons",
            "enum": [
              "ios7",
              "win8",
              "win10",
              "android",
              "androidL",
              "color",
              "office"
            ],
            "in": "path",
            "name": "platform",
            "required": true,
            "type": "string"
          },
          {
            "description": "the language code to get localized result",
            "enum": [
              "en-US",
              "fr-FR",
              "de-DE",
              "it-IT",
              "pt-BR",
              "pl-PL",
              "ru-RU",
              "es-ES"
            ],
            "in": "path",
            "name": "language",
            "required": true,
            "type": "string",
            "x-example": "en-US"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "schema": {
              "properties": {
                "parameters": {
                  "description": "copy of the input parameters from the request",
                  "properties": {
                    "amount": {
                      "type": "number"
                    },
                    "language": {
                      "type": "string"
                    },
                    "offset": {
                      "type": "string"
                    },
                    "platform": {
                      "type": "string"
                    },
                    "term": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "result": {
                  "description": "the result of operation",
                  "properties": {
                    "search": {
                      "items": {},
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [],
        "description": "",
        "summary": "By Keyword v3"
      }
    },
    "/api/iconsets/v3/total?since={since}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the optional date to calculate the total number of icons that were created after it.\nIt should be in format \"four year digits - dash - two month number digits - dash - two day number digits. For example 2014-12-31 means \"31th of December, 2014\".\n",
            "in": "path",
            "name": "since",
            "required": true,
            "type": "string",
            "x-example": "2014-12-31"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "schema": {
              "properties": {
                "parameters": {
                  "description": "copy of the input parameters from the request",
                  "properties": {
                    "since": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "result": {
                  "description": "the result of operation",
                  "properties": {
                    "total": {
                      "items": {},
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [],
        "description": "",
        "summary": "Totals"
      }
    },
    "/api/iconsets/v4/search?term={term}&amount={amount}&offset={offset}&platform={platform}&language={language}&exact_amount={exact_amount}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the name or tag of the icon or any other phrase.\ne.g. use \"@home\" to find icons with the tag \"home\" and \"=home\" to find icons with the name \"home\"\n",
            "in": "path",
            "name": "term",
            "required": true,
            "type": "string",
            "x-example": "home"
          },
          {
            "default": 50,
            "description": "the maximum number of icons which you'd like to receive (will be multiplied by platforms count, if you didn't specify the platform and didn't set the 'exact_amount' parameter)",
            "in": "path",
            "name": "amount",
            "required": true,
            "type": "number"
          },
          {
            "description": "the offset from the first received result",
            "in": "path",
            "name": "offset",
            "required": true,
            "type": "number"
          },
          {
            "default": "all",
            "description": "the style of the icons",
            "enum": [
              "all",
              "ios7",
              "ios11",
              "win8",
              "win10",
              "android",
              "androidL",
              "color",
              "office",
              "ultraviolet",
              "nolan",
              "p1em",
              "dotty",
              "dusk",
              "Dusk_Wired",
              "cotton",
              "doodle",
              "flat_round"
            ],
            "in": "path",
            "name": "platform",
            "required": true,
            "type": "string"
          },
          {
            "default": "en-US",
            "description": "the language code to get localized result",
            "enum": [
              "en-US",
              "fr-FR",
              "de-DE",
              "it-IT",
              "pt-BR",
              "pl-PL",
              "ru-RU",
              "es-ES",
              "zh-CN",
              "ja-JP"
            ],
            "in": "path",
            "name": "language",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "schema": {
              "properties": {
                "parameters": {
                  "description": "copy of the input parameters from the request",
                  "properties": {
                    "amount `50`": {
                      "type": "string"
                    },
                    "language": {
                      "type": "string"
                    },
                    "offset": {
                      "type": "string"
                    },
                    "platform": {
                      "type": "string"
                    },
                    "term": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "icons": {
                  "description": "the result of operation",
                  "items": {},
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [],
        "description": "",
        "summary": "By Keyword v4"
      }
    },
    "/api/task/web-font/collection": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "example": {
                "auth": {
                  "hash": "api-demo-user"
                },
                "task": {
                  "arguments": {
                    "collection": "bef787ce-41ad-4424-8e0e-19ce78e104c3",
                    "css_prefix": "icons8",
                    "css_rules_case": "lowercase",
                    "css_selector": ".icons8-{{glyph}}",
                    "font_name": "Material Very Basic"
                  }
                }
              },
              "properties": {
                "auth": {
                  "properties": {
                    "hash": {
                      "description": "Authorization hash",
                      "type": "string"
                    }
                  },
                  "required": [
                    "hash"
                  ],
                  "type": "object"
                },
                "task": {
                  "properties": {
                    "arguments": {
                      "properties": {
                        "collection": {
                          "description": "collection identifier",
                          "type": "string"
                        },
                        "css_prefix": {
                          "default": "icons8",
                          "description": "prefix for CSS rules, used to generate LESS/SCSS",
                          "type": "string"
                        },
                        "css_rules_case": {
                          "default": "lowercase",
                          "description": "glyph names conversion rule",
                          "enum": [
                            "lowercase",
                            "as_is"
                          ],
                          "type": "string"
                        },
                        "css_selector": {
                          "default": ".icons8-{{glyph}}",
                          "description": "template for glyph selector; placeholder {{glyph}} will be replaced with glyph names",
                          "type": "string"
                        },
                        "font_name": {
                          "default": "font_icons8",
                          "description": "name of iconic webfont",
                          "type": "string"
                        }
                      },
                      "required": [
                        "collection",
                        "font_name"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "schema": {
              "properties": {
                "messages": {
                  "items": {},
                  "type": "array"
                },
                "result": {
                  "properties": {
                    "description": {
                      "description": "human readable description",
                      "type": "string"
                    },
                    "id": {
                      "description": "task identifier",
                      "type": "string"
                    },
                    "results": {
                      "properties": {
                        "zip": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "description": "task status",
                      "type": "string"
                    },
                    "type": {
                      "description": "task type",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "type",
                    "status"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [],
        "description": "",
        "summary": "From a Collection"
      }
    },
    "/api/task/web-font/icons": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "example": {
                "auth": {
                  "hash": "api-demo-user"
                },
                "task": {
                  "arguments": {
                    "collection": "bef787ce-41ad-4424-8e0e-19ce78e104c3",
                    "css_prefix": "icons8",
                    "css_rules_case": "lowercase",
                    "css_selector": ".icons8-{{glyph}}",
                    "font_name": "Material Very Basic"
                  }
                }
              },
              "properties": {
                "auth": {
                  "properties": {
                    "hash": {
                      "description": "Authorization hash",
                      "type": "string"
                    }
                  },
                  "required": [
                    "hash"
                  ],
                  "type": "object"
                },
                "task": {
                  "properties": {
                    "arguments": {
                      "properties": {
                        "collection": {
                          "description": "collection identifier",
                          "type": "string"
                        },
                        "css_prefix": {
                          "default": "icons8",
                          "description": "prefix for CSS rules, used to generate LESS/SCSS",
                          "type": "string"
                        },
                        "css_rules_case": {
                          "default": "lowercase",
                          "description": "glyph names conversion rule",
                          "enum": [
                            "lowercase",
                            "as_is"
                          ],
                          "type": "string"
                        },
                        "css_selector": {
                          "default": ".icons8-{{glyph}}",
                          "description": "template for glyph selector; placeholder {{glyph}} will be replaced with glyph names",
                          "type": "string"
                        },
                        "font_name": {
                          "default": "font_icons8",
                          "description": "name of iconic webfont",
                          "type": "string"
                        }
                      },
                      "required": [
                        "collection",
                        "font_name"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "schema": {
              "properties": {
                "messages": {
                  "items": {},
                  "type": "array"
                },
                "result": {
                  "properties": {
                    "description": {
                      "description": "human readable description",
                      "type": "string"
                    },
                    "id": {
                      "description": "task identifier",
                      "type": "string"
                    },
                    "results": {
                      "properties": {
                        "zip": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "description": "task status",
                      "type": "string"
                    },
                    "type": {
                      "description": "task type",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "type",
                    "status"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [],
        "description": "",
        "summary": "From Separate Icons"
      }
    }
  },
  "definitions": {
    "AuthArgument": {
      "properties": {
        "hash": {
          "description": "Authorization hash",
          "type": "string"
        }
      },
      "required": [
        "hash"
      ],
      "type": "object"
    },
    "CategoryV3Item": {
      "properties": {
        "category_code": {
          "type": "string"
        },
        "category_name": {
          "type": "string"
        },
        "subcategory": {
          "items": {},
          "type": "array"
        }
      },
      "type": "object"
    },
    "CollectionWebFontTaskArguments": {
      "properties": {
        "arguments": {
          "properties": {
            "collection": {
              "description": "collection identifier",
              "type": "string"
            },
            "css_prefix": {
              "description": "prefix for CSS rules, used to generate LESS/SCSS",
              "type": "string"
            },
            "css_rules_case": {
              "description": "glyph names conversion rule",
              "enum": [
                "lowercase",
                "as_is"
              ],
              "type": "string"
            },
            "css_selector": {
              "description": "template for glyph selector; placeholder {{glyph}} will be replaced with glyph names",
              "type": "string"
            },
            "font_name": {
              "description": "name of iconic webfont",
              "type": "string"
            }
          },
          "required": [
            "collection",
            "font_name"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "CompactCategoryV3Item": {
      "properties": {
        "api_code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "api_code"
      ],
      "type": "object"
    },
    "CompactIconV3Item": {
      "properties": {
        "category": {
          "type": "string"
        },
        "common_icon_id": {
          "description": "identifier for group of the same icons in different styles; i.e. id of all \"home\" icons",
          "type": "number"
        },
        "created": {
          "description": "date (ISO8601 format) of icon was published",
          "type": "string"
        },
        "features": {
          "description": "internal service attribute; internal information about icon features; private; depend on the rights of the current user",
          "properties": {
            "bitmap": {
              "description": "\"Could user use images in bitmap / raster formats in any size ?\"",
              "type": "number"
            },
            "nolink": {
              "description": "\"Could user use images without any link to Icons8 ?\"",
              "type": "number"
            },
            "vector": {
              "description": "\"Could user use images in vector formats ?\"",
              "type": "number"
            }
          },
          "required": [
            "bitmap",
            "vector",
            "nolink"
          ],
          "type": "object"
        },
        "id": {
          "description": "unique icon identifier",
          "type": "number"
        },
        "name": {
          "description": "icon name",
          "type": "string"
        },
        "platform_code": {
          "description": "icon style",
          "type": "string"
        },
        "share": {
          "description": "internal service attribute; some links to spread the world",
          "properties": {
            "png": {
              "description": "some raster images for share the icon",
              "items": {},
              "type": "array"
            },
            "url": {
              "description": "short URL to use in twitter",
              "type": "string"
            }
          },
          "type": "object"
        },
        "subcategory": {
          "properties": {
            "api_code": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "api_code"
          ],
          "type": "object"
        },
        "svg": {
          "description": "plain SVG content of icon",
          "type": "string"
        },
        "url": {
          "description": "internal service attribute; the meaning of this attribute is \"Identifier of thread at Disquss\"",
          "type": "string"
        },
        "vector": {
          "description": "URLs to icon sources in different vector formats; private; depend on the current user and could be opened in user's browser only",
          "properties": {
            "eps": {
              "description": "absolute URL to file in EPS format",
              "type": "string"
            },
            "pdf": {
              "description": "absolute URL to file in PDF format",
              "type": "string"
            },
            "svg-editable": {
              "description": "absolute URL to original SVG file",
              "type": "string"
            },
            "svg-simplified": {
              "description": "absolute URL to compressed and simplified SVG file",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "id",
        "name",
        "platform_code",
        "created",
        "common_icon_id",
        "svg",
        "features"
      ],
      "type": "object"
    },
    "IconV3Item": {
      "allOf": [
        {
          "$ref": "#/definitions/CompactIconV3Item"
        },
        {
          "properties": {
            "category": {
              "type": "string"
            },
            "common_icon_id": {
              "description": "identifier for group of the same icons in different styles; i.e. id of all \"home\" icons",
              "type": "number"
            },
            "created": {
              "description": "date (ISO8601 format) of icon was published",
              "type": "string"
            },
            "features": {
              "description": "internal service attribute; internal information about icon features; private; depend on the rights of the current user",
              "properties": {
                "bitmap": {
                  "description": "\"Could user use images in bitmap / raster formats in any size ?\"",
                  "type": "number"
                },
                "nolink": {
                  "description": "\"Could user use images without any link to Icons8 ?\"",
                  "type": "number"
                },
                "vector": {
                  "description": "\"Could user use images in vector formats ?\"",
                  "type": "number"
                }
              },
              "required": [
                "bitmap",
                "vector",
                "nolink"
              ],
              "type": "object"
            },
            "id": {
              "description": "unique icon identifier",
              "type": "number"
            },
            "name": {
              "description": "icon name",
              "type": "string"
            },
            "platform_code": {
              "description": "icon style",
              "type": "string"
            },
            "share": {
              "description": "internal service attribute; some links to spread the world",
              "properties": {
                "png": {
                  "description": "some raster images for share the icon",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "short URL to use in twitter",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "subcategory": {
              "properties": {
                "api_code": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "api_code"
              ],
              "type": "object"
            },
            "svg": {
              "description": "plain SVG content of icon",
              "type": "string"
            },
            "url": {
              "description": "internal service attribute; the meaning of this attribute is \"Identifier of thread at Disquss\"",
              "type": "string"
            },
            "vector": {
              "description": "URLs to icon sources in different vector formats; private; depend on the current user and could be opened in user's browser only",
              "properties": {
                "eps": {
                  "description": "absolute URL to file in EPS format",
                  "type": "string"
                },
                "pdf": {
                  "description": "absolute URL to file in PDF format",
                  "type": "string"
                },
                "svg-editable": {
                  "description": "absolute URL to original SVG file",
                  "type": "string"
                },
                "svg-simplified": {
                  "description": "absolute URL to compressed and simplified SVG file",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "id",
            "name",
            "platform_code",
            "created",
            "common_icon_id",
            "svg",
            "features"
          ],
          "type": "object"
        }
      ]
    },
    "Meta": {},
    "Search": {},
    "TaskError": {
      "properties": {
        "code": {
          "description": "error code",
          "enum": [
            "json_not_valid",
            "auth_required",
            "auth_failed",
            "access_denied",
            "io_fail",
            "database_fail",
            "argument_is_missed",
            "argument_is_wrong",
            "paid_feature",
            "not_possible"
          ],
          "type": "string"
        },
        "description": {
          "description": "human readable error message",
          "type": "string"
        }
      },
      "required": [
        "code",
        "description"
      ],
      "type": "object"
    },
    "TaskResult": {
      "properties": {
        "description": {
          "description": "human readable description",
          "type": "string"
        },
        "id": {
          "description": "task identifier",
          "type": "string"
        },
        "results": {
          "properties": {
            "zip": {
              "description": "URL to webfont files in ZIP format",
              "type": "string"
            }
          },
          "type": "object"
        },
        "status": {
          "description": "task status",
          "enum": [
            "`preparing+",
            "idle",
            "in_progress",
            "timeout",
            "complete",
            "failed"
          ],
          "type": "string"
        },
        "type": {
          "description": "task type",
          "enum": [
            "create_web_font",
            "create_svg_set"
          ],
          "type": "string"
        }
      },
      "required": [
        "id",
        "type",
        "status"
      ],
      "type": "object"
    },
    "TotalV3Item": {
      "properties": {
        "api_code": {
          "description": "icons style code; in other places it named `plarform` or `platform_api_code`",
          "enum": [
            "ios7",
            "win8",
            "win10",
            "android",
            "androidL",
            "color",
            "office"
          ],
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "total": {
          "type": "number"
        }
      },
      "required": [
        "name",
        "api_code",
        "total"
      ],
      "type": "object"
    },
    "Web_Fonts": {}
  },
  "tags": [
    {
      "description": "## Platform\n\nAttributes and parameters named `platform` or `platform_api_code` or `platform_code` all indicate the style of the icons.\nWe’re sorry we have various parameters meaning the same.\n\n`platform` | Icon style | Example\n---:|---|---\nwin8 | icons in the Microsoft Windows 8/Metro style | [example](https://icons8.com/windows-8-icons/)\nwin10 | icons in the Microsoft Windows 10/Threshold style | [example](https://icons8.com/download-huge-windows8-set/)\nios7 | icons in the Apple iOS 7/8/9/10 style | [example](https://icons8.com/free-ios-7-icons-in-vector/)\nandroid | icons in the Google Android 4 Kitkat style | [example](https://icons8.com/android-kitkat-icons/)\nandroidL | icons in the Google Android 5 Lollipop (Material) style | [example](https://icons8.com/android-icons/)\ncolor | flat color icons | [example](https://icons8.com/color-icons/)\noffice | icons in the Microsoft Office style | [example](https://icons8.com/office-icons/)\n\n## Language\n\nIcon names, categories and tags are localized. Here's the list of supported languages:\n\n`language` | Language name\n---|---\n`en-US` | English\n`fr-FR` | French\n`de-DE` | German\n`it-IT` | Italian\n`pt-BR` | Portuguese\n`pl-PL` | Polish\n`ru-RU` | Russian\n`es-ES` | Spanish\n`zh-CN` | Chinese\n`ja-JP` | Japanese\n\nThe primary language is English - if we do not translate something, it will be in English.",
      "name": "Parameters"
    }
  ],
  "x-components": {
    "requestBodies": {
      "Body": {
        "content": {
          "application/json": {
            "schema": {
              "example": {
                "auth": {
                  "hash": "api-demo-user"
                },
                "task": {
                  "arguments": {
                    "collection": "bef787ce-41ad-4424-8e0e-19ce78e104c3",
                    "css_prefix": "icons8",
                    "css_rules_case": "lowercase",
                    "css_selector": ".icons8-{{glyph}}",
                    "font_name": "Material Very Basic"
                  }
                }
              },
              "properties": {
                "auth": {
                  "properties": {
                    "hash": {
                      "description": "Authorization hash",
                      "type": "string"
                    }
                  },
                  "required": [
                    "hash"
                  ],
                  "type": "object"
                },
                "task": {
                  "properties": {
                    "arguments": {
                      "properties": {
                        "collection": {
                          "description": "collection identifier",
                          "type": "string"
                        },
                        "css_prefix": {
                          "default": "icons8",
                          "description": "prefix for CSS rules, used to generate LESS/SCSS",
                          "type": "string"
                        },
                        "css_rules_case": {
                          "default": "lowercase",
                          "description": "glyph names conversion rule",
                          "enum": [
                            "lowercase",
                            "as_is"
                          ],
                          "type": "string"
                        },
                        "css_selector": {
                          "default": ".icons8-{{glyph}}",
                          "description": "template for glyph selector; placeholder {{glyph}} will be replaced with glyph names",
                          "type": "string"
                        },
                        "font_name": {
                          "default": "font_icons8",
                          "description": "name of iconic webfont",
                          "type": "string"
                        }
                      },
                      "required": [
                        "collection",
                        "font_name"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    }
  }
}