{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "gunifydevops@vonage.com",
      "name": "VGIS",
      "url": "https://integrate.vonage.com"
    },
    "description": "The Vonage Integration Suite API enables call control and webhooks for call events.\n\nYour application must subscribe to the VonageIntegrationSuite API suite to use this API.\n",
    "title": "Vonage Integration Suite",
    "version": "1.0.1",
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://raw.githubusercontent.com/nexmo/api-specification/master/definitions/vonage-business-cloud/vgis.yml",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "vonage.com",
    "x-serviceName": "vgis",
    "x-datafire": {
      "name": "vonage_vgis",
      "type": "openapi"
    }
  },
  "host": "api.vonage.com",
  "basePath": "/t/vbc.prod/vis/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/self": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "getUser",
        "summary": "User info",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/self/account": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "getAccount",
        "summary": "Account info",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/self/calls": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Return calls that occurred after this point in time",
            "in": "query",
            "name": "fromDate",
            "type": "integer"
          },
          {
            "description": "Return calls that occurred before this point in time",
            "in": "query",
            "name": "toDate",
            "type": "integer"
          },
          {
            "description": "Filter by call direction. For multiple criteria, seperate values by a comma.",
            "enum": [
              "INBOUND",
              "OUTBOUND"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          },
          {
            "default": "ACTIVE",
            "description": "Filter calls by state. For multiple criteria, seperate values by a comma.",
            "enum": [
              "INITIALIZING",
              "RINGING",
              "ACTIVE",
              "HELD",
              "REMOTE_HELD"
            ],
            "in": "query",
            "name": "states",
            "type": "string"
          },
          {
            "description": "Page number of calls to return",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "default": 20,
            "description": "Return this amount of calls in the response",
            "in": "query",
            "name": "size",
            "type": "integer"
          },
          {
            "default": "ASC",
            "description": "Sort in either ascending or descending order",
            "enum": [
              "DESC",
              "ASC"
            ],
            "in": "query",
            "name": "order",
            "type": "string"
          },
          {
            "description": "Sort calls by property",
            "in": "query",
            "name": "sort",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "items": {
                "$ref": "#/definitions/Call"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Calls"
        ],
        "description": "Lists currently active calls",
        "operationId": "listCalls",
        "summary": "List active calls",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Place call parameters",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CallCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful",
            "schema": {
              "items": {
                "$ref": "#/definitions/Call"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Calls"
        ],
        "operationId": "createCall",
        "summary": "Place a call",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/self/calls/count": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Return calls that occurred after this point in time",
            "in": "query",
            "name": "fromDate",
            "type": "integer"
          },
          {
            "description": "Return calls that occurred before this point in time",
            "in": "query",
            "name": "toDate",
            "type": "integer"
          },
          {
            "description": "Filter by call direction. For multiple criteria, seperate values by a comma.",
            "enum": [
              "INBOUND",
              "OUTBOUND"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          },
          {
            "default": "ACTIVE",
            "description": "Filter calls by state. For multiple criteria, seperate values by a comma.",
            "enum": [
              "INITIALIZING",
              "RINGING",
              "ACTIVE",
              "HELD",
              "REMOTE_HELD"
            ],
            "in": "query",
            "name": "states",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/EventsCount"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Calls"
        ],
        "operationId": "getCallsCount",
        "summary": "Get calls count",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/self/calls/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier of the call",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "items": {
                "$ref": "#/definitions/Call"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Calls"
        ],
        "operationId": "destroyCall",
        "summary": "End a call",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier of the call",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "items": {
                "$ref": "#/definitions/Call"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Calls"
        ],
        "operationId": "getRoles",
        "summary": "Get a call",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/self/calls/{id}/answer": {
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier of the call",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Call"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Calls"
        ],
        "operationId": "callAnswer",
        "summary": "Answer call (On supported devices)",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/self/calls/{id}/hold": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier of the call",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Call"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Calls"
        ],
        "operationId": "callUnold",
        "summary": "Unhold",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier of the call",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Call"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Calls"
        ],
        "operationId": "callHold",
        "summary": "Put call on hold",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/self/calls/{id}/transfer": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier of the call",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Call transfer parameters",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CallTransfer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Call"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Calls"
        ],
        "operationId": "callTransfer",
        "summary": "Transfer call",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/self/calls/{id}/vmtransfer": {
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier of the call",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Call"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Calls"
        ],
        "operationId": "callVMTransfer",
        "summary": "Send call to voicemail",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/self/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Record type",
            "enum": [
              "CALL"
            ],
            "in": "query",
            "name": "types",
            "type": "string"
          },
          {
            "description": "Return events that occurred after this point in time",
            "in": "query",
            "name": "fromDate",
            "type": "integer"
          },
          {
            "description": "Return events that occurred before this point in time",
            "in": "query",
            "name": "toDate",
            "type": "integer"
          },
          {
            "description": "Filter by event direction",
            "enum": [
              "INBOUND",
              "OUTBOUND"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          },
          {
            "description": "Filter events by state",
            "enum": [
              "INITIALIZING",
              "RINGING",
              "ACTIVE",
              "HELD",
              "REMOTE_HELD",
              "DETACHED",
              "REJECTED",
              "CANCELLED",
              "ANSWERED",
              "MISSED"
            ],
            "in": "query",
            "name": "states",
            "type": "string"
          },
          {
            "description": "Page number of events to return",
            "format": "int64",
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "default": 20,
            "description": "Return this amount of events in the response",
            "in": "query",
            "name": "size",
            "type": "integer"
          },
          {
            "default": "ASC",
            "description": "Sort in either ascending or descending order'",
            "enum": [
              "DESC",
              "ASC"
            ],
            "in": "query",
            "name": "order",
            "type": "string"
          },
          {
            "description": "Sort events by property",
            "in": "query",
            "name": "sort",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "items": {
                "$ref": "#/definitions/Event"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Events"
        ],
        "operationId": "listEvents",
        "summary": "List events",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/self/events/count": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Return events that occurred after this point in time",
            "in": "query",
            "name": "fromDate",
            "type": "integer"
          },
          {
            "description": "Return events that occurred before this point in time",
            "in": "query",
            "name": "toDate",
            "type": "integer"
          },
          {
            "description": "Filter by event direction",
            "enum": [
              "INBOUND",
              "OUTBOUND"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          },
          {
            "description": "Filter events by state",
            "enum": [
              "INITIALIZING",
              "RINGING",
              "ACTIVE",
              "HELD",
              "REMOTE_HELD"
            ],
            "in": "query",
            "name": "states",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/EventsCount"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Events"
        ],
        "operationId": "getEventsCount",
        "summary": "Get events count",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/self/events/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier of the event",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "items": {
                "$ref": "#/definitions/Event"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Events"
        ],
        "operationId": "getEvent",
        "summary": "Get event",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/self/webhooks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "items": {
                "$ref": "#/definitions/Webhook"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Webhooks"
        ],
        "operationId": "listWebhooks",
        "summary": "List web hooks",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Webhook create parameters",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Webhooks"
        ],
        "operationId": "createWebhook",
        "summary": "Create a new webhook subscription",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/self/webhooks/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier of the webhook",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful"
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Webhooks"
        ],
        "operationId": "destroyWebhook",
        "summary": "Remove a web hook",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier of the webhook",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Webhooks"
        ],
        "operationId": "viewWebhook",
        "summary": "Get web hook details",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/self/webhooks/{id}/renew": {
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Webhook ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "400": {
            "description": "Bad Request: The client should not repeat the request without modifications",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid access token"
          },
          "403": {
            "description": "Forbidden: The user has no rights to access the resource(s)"
          },
          "408": {
            "description": "Timeout: The client may repeat the request without modifications"
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        },
        "tags": [
          "Webhooks"
        ],
        "operationId": "renewWebhook",
        "summary": "Renews a web hook",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    }
  },
  "definitions": {
    "Account": {
      "properties": {
        "id": {
          "description": "Unique identifier of the account",
          "example": 257073,
          "type": "integer"
        },
        "name": {
          "description": "Name of the account",
          "example": "Vonage",
          "type": "string"
        },
        "org": {
          "description": "Organization of the account",
          "example": "Vonage",
          "type": "string"
        },
        "status": {
          "description": "Status of the account",
          "enum": [
            "PENDING",
            "ACTIVE",
            "DELETED",
            "ARCHIVED"
          ],
          "example": "ACTIVE",
          "type": "string"
        },
        "ucis": {
          "items": {
            "properties": {
              "health": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "format": "int64",
                "type": "integer"
              },
              "type": {
                "default": "ACCOUNT_UCI",
                "type": "string"
              },
              "ucpAccountId": {
                "type": "string"
              },
              "ucpLabel": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Call": {
      "properties": {
        "accountId": {
          "description": "Unique identifier of the account",
          "format": "int64",
          "type": "integer"
        },
        "answerTime": {
          "description": "Time to answer the call",
          "format": "date",
          "type": "string"
        },
        "callerId": {
          "description": "Remote caller ID",
          "type": "string"
        },
        "direction": {
          "description": "Direction of the call",
          "enum": [
            "INBOUND",
            "OUTBOUND"
          ],
          "type": "string"
        },
        "duration": {
          "description": "Duration of the call in milliseconds",
          "format": "int64",
          "type": "integer"
        },
        "endTime": {
          "description": "End time of the call",
          "format": "date",
          "type": "string"
        },
        "externalId": {
          "description": "External identifier of the call",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier of the call",
          "format": "int64",
          "type": "integer"
        },
        "phoneNumber": {
          "description": "Unique identifier of the account",
          "type": "string"
        },
        "startTime": {
          "description": "Start time of the call",
          "format": "date",
          "type": "string"
        },
        "state": {
          "description": "Status of the call",
          "enum": [
            "INITIALIZING",
            "RINGING",
            "ACTIVE",
            "HELD",
            "REMOTE_HELD",
            "DETACHED",
            "REJECTED",
            "CANCELLED",
            "ANSWERED",
            "MISSED"
          ],
          "type": "string"
        },
        "type": {
          "description": "Record type",
          "enum": [
            "CALL"
          ],
          "type": "string"
        },
        "uciId": {
          "description": "Unique identifier of communications provider",
          "format": "int64",
          "type": "integer"
        },
        "userId": {
          "description": "Unique identifier of the user",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "id",
        "type",
        "accountId",
        "userId",
        "uciId",
        "direction",
        "duration",
        "state",
        "phoneNumber",
        "startTime"
      ],
      "type": "object"
    },
    "CallCreate": {
      "properties": {
        "phoneNumber": {
          "description": "Phone number to call",
          "type": "string"
        }
      },
      "required": [
        "phoneNumber"
      ],
      "type": "object"
    },
    "CallTransfer": {
      "properties": {
        "phoneNumber": {
          "description": "Phone number to transfer to",
          "type": "string"
        }
      },
      "required": [
        "phoneNumber"
      ],
      "type": "object"
    },
    "Error": {
      "properties": {
        "field": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ErrorResponse": {
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Event": {
      "properties": {
        "accountId": {
          "description": "Unique identifier of the account",
          "format": "int64",
          "type": "integer"
        },
        "answerTime": {
          "description": "Time to answer the event",
          "format": "date",
          "type": "string"
        },
        "callerId": {
          "description": "Remote caller ID",
          "type": "string"
        },
        "direction": {
          "description": "Direction of the event",
          "enum": [
            "INBOUND",
            "OUTBOUND"
          ],
          "type": "string"
        },
        "duration": {
          "description": "Duration of the call in milliseconds",
          "format": "int64",
          "type": "integer"
        },
        "endTime": {
          "description": "End time of the event",
          "format": "date",
          "type": "string"
        },
        "externalId": {
          "description": "External identifier of the event",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier of the event",
          "format": "int64",
          "type": "integer"
        },
        "phoneNumber": {
          "description": "Unique identifier of the account",
          "type": "string"
        },
        "smsData": {
          "type": "string"
        },
        "startTime": {
          "description": "Start time of the event",
          "format": "date",
          "type": "string"
        },
        "state": {
          "description": "Status of the event",
          "enum": [
            "INITIALIZING",
            "RINGING",
            "ACTIVE",
            "HELD",
            "REMOTE_HELD",
            "DETACHED",
            "REJECTED",
            "CANCELLED",
            "ANSWERED",
            "MISSED"
          ],
          "type": "string"
        },
        "type": {
          "description": "Record type",
          "enum": [
            "CALL"
          ],
          "type": "string"
        },
        "uciId": {
          "description": "Unique identifier of communications provider",
          "format": "int64",
          "type": "integer"
        },
        "userId": {
          "description": "Unique identifier of the user",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "id",
        "type",
        "accountId",
        "userId",
        "uciId",
        "direction",
        "state",
        "phoneNumber",
        "startTime"
      ],
      "type": "object"
    },
    "EventsCount": {
      "properties": {
        "count": {
          "description": "Number of events found",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "User": {
      "properties": {
        "accountId": {
          "description": "Unique identifier of the user's account",
          "example": 257073,
          "type": "integer"
        },
        "acountLabel": {
          "description": "The name of the user's account",
          "example": "Vonage",
          "type": "string"
        },
        "contactNumber": {
          "description": "Contact number of the user",
          "example": 14155550100,
          "type": "string"
        },
        "emailAddress": {
          "description": "Email address of the user",
          "example": "john.smith@example.com",
          "type": "string"
        },
        "firstName": {
          "description": "First name of the user",
          "example": "Robert",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier of the user",
          "example": 522078,
          "type": "integer"
        },
        "lastName": {
          "description": "Last name of the user",
          "example": "Smith",
          "type": "string"
        },
        "roles": {
          "items": {
            "properties": {
              "code": {
                "description": "Code for the role",
                "example": "AU",
                "type": "string"
              },
              "name": {
                "description": "Name for the role",
                "example": "Account User",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "status": {
          "description": "Status of the user",
          "enum": [
            "PENDING",
            "ACTIVE",
            "DELETED",
            "ARCHIVED"
          ],
          "example": "ACTIVE",
          "type": "string"
        },
        "ucis": {
          "items": {
            "properties": {
              "health": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "format": "int64",
                "type": "integer"
              },
              "type": {
                "default": "USER_UCI",
                "type": "string"
              },
              "ucpLabel": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Webhook": {
      "properties": {
        "accountId": {
          "description": "Unique identifier of the account",
          "example": 257073,
          "type": "string"
        },
        "createdAt": {
          "description": "Created time for the webhook",
          "example": "2019-01-01T00:00:00.000Z",
          "type": "string"
        },
        "events": {
          "description": "Subscribed events for the webhook",
          "example": [
            "CALL"
          ],
          "items": {
            "enum": [
              "CALL"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "expireAt": {
          "description": "Expiration time for the webhook",
          "example": "2019-01-01T00:00:00.000Z",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the webhook",
          "example": 184094,
          "type": "string"
        },
        "metadataPolicy": {
          "description": "Metadata policy for the webhook",
          "enum": [
            "NONE",
            "HEADER",
            "BODY"
          ],
          "example": "NONE",
          "type": "string"
        },
        "purgeAt": {
          "description": "Scheduled purge time for the webhook",
          "example": "2019-01-01T00:00:00.000Z",
          "type": "string"
        },
        "renewedAt": {
          "description": "Last renewed time for the webhook",
          "example": "2019-01-01T00:00:00.000Z",
          "type": "string"
        },
        "signingAlgo": {
          "description": "Signing algorithm for the webhook",
          "enum": [
            "HMAC_SHA256",
            "NONE"
          ],
          "example": "HMAC_SHA256",
          "type": "string"
        },
        "signingKey": {
          "description": "Signing key for the webhook",
          "type": "string"
        },
        "statistics": {
          "properties": {
            "failed": {
              "description": "Current delivery status",
              "example": false,
              "type": "boolean"
            },
            "totalAttempts": {
              "description": "Total delivery attempts",
              "example": 10,
              "type": "integer"
            },
            "totalFailures": {
              "description": "Total failed deliveries",
              "example": 10,
              "type": "integer"
            },
            "totalSuccesses": {
              "description": "Total successful deliveries",
              "example": 10,
              "type": "integer"
            }
          },
          "type": "object"
        },
        "status": {
          "description": "Status for the webhook",
          "enum": [
            "ACTIVE",
            "PAUSED"
          ],
          "example": "ACTIVE",
          "type": "string"
        },
        "url": {
          "description": "Destination URL for events",
          "example": "https://www.example.com",
          "type": "string"
        },
        "userId": {
          "description": "Unique identifier of the user",
          "example": 522078,
          "type": "string"
        }
      },
      "type": "object"
    },
    "WebhookCreate": {
      "properties": {
        "events": {
          "description": "Events to subscribe to the webhook",
          "example": [
            "CALL"
          ],
          "items": {
            "enum": [
              "CALL"
            ],
            "example": "CALL",
            "type": "string"
          },
          "type": "array"
        },
        "metadataPolicy": {
          "description": "Metadata policy for the webhook",
          "enum": [
            "NONE",
            "HEADER",
            "BODY"
          ],
          "example": "NONE",
          "type": "string"
        },
        "signingAlgo": {
          "description": "Signing algorithm for the webhook",
          "enum": [
            "HMAC_SHA256"
          ],
          "example": "HMAC_SHA256",
          "type": "string"
        },
        "signingKey": {
          "description": "Signing key for the webhook",
          "type": "string"
        },
        "url": {
          "description": "Destination URL for events",
          "example": "https://www.example.com",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "tags": [
    {
      "name": "Users"
    },
    {
      "name": "Accounts"
    },
    {
      "name": "Calls"
    },
    {
      "name": "Events"
    },
    {
      "description": "Webhooks are external URLs which subscribe to receive events via HTTP POST for a specified set of events.",
      "name": "Webhooks"
    }
  ],
  "x-components": {}
}