{
  "swagger": "2.0",
  "info": {
    "title": "WikiPathways Webservices",
    "version": "1.0",
    "x-origin": [
      {
        "format": "swagger",
        "url": "http://webservice.wikipathways.org/index.php?swagger",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "wikipathways.org",
    "x-datafire": {
      "name": "wikipathways",
      "type": "openapi"
    }
  },
  "host": "webservice.wikipathways.org",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/createPathway": {
      "post": {
        "parameters": [
          {
            "description": "The GPML code for the new pathway",
            "in": "query",
            "name": "gpml",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authentication info",
            "in": "query",
            "name": "auth",
            "required": true,
            "type": "string"
          },
          {
            "description": "The user name",
            "in": "query",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "All functions",
          "Write (create/update/delete)"
        ],
        "description": "createPathwayCreate a new pathway on the wiki with the given GPML code.<br>Note: To create/modify pathways via the web service, you need to have an account with web service write permissions. Please contact us to request write access for the web service."
      }
    },
    "/findInteractions": {
      "get": {
        "parameters": [
          {
            "description": "The name of an entity to find interactions for (e.g. 'P53')",
            "in": "query",
            "name": "query",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "Search",
          "All functions"
        ],
        "description": "findInteractionsFind interactions defined in WikiPathways pathways."
      }
    },
    "/findPathwaysByLiterature": {
      "get": {
        "parameters": [
          {
            "description": "The query, can be a pubmed id, author name or title keyword.",
            "in": "query",
            "name": "query",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "Search",
          "All functions"
        ],
        "description": "findPathwaysByLiterature"
      }
    },
    "/findPathwaysByText": {
      "get": {
        "parameters": [
          {
            "description": "The query, e.g. 'apoptosis'",
            "in": "query",
            "name": "query",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional, limit the query by species. Leave",
            "in": "query",
            "name": "species",
            "required": false,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "All functions",
          "Search"
        ],
        "description": "findPathwaysByText"
      }
    },
    "/findPathwaysByXref": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "string",
            "in": "query",
            "items": {},
            "name": "ids",
            "required": true,
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "string",
            "in": "query",
            "items": {},
            "name": "codes",
            "required": false,
            "type": "array"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "All functions",
          "Search"
        ],
        "description": "findPathwaysByXref"
      }
    },
    "/getColoredPathway": {
      "get": {
        "parameters": [
          {
            "description": "The pathway identifier",
            "in": "query",
            "name": "pwId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The revision of the pathway (use '0' for most recent)",
            "in": "query",
            "name": "revision",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "string",
            "in": "query",
            "items": {},
            "name": "graphId",
            "required": true,
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "string",
            "in": "query",
            "items": {},
            "name": "color",
            "required": true,
            "type": "array"
          },
          {
            "description": "The image type (One of 'svg', 'pdf' or 'png').",
            "in": "query",
            "name": "fileType",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "All functions",
          "Download"
        ],
        "description": "getColoredPathwayGet a colored image version of the pathway."
      }
    },
    "/getCurationTagHistory": {
      "get": {
        "parameters": [
          {
            "description": "The pathway identifier",
            "in": "query",
            "name": "pwId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Only include history from after the given date",
            "in": "query",
            "name": "timestamp",
            "required": false,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "All functions",
          "History",
          "Curation tags"
        ],
        "description": "getCurationTagHistory"
      }
    },
    "/getCurationTags": {
      "get": {
        "parameters": [
          {
            "description": "The pathway identifier",
            "in": "query",
            "name": "pwId",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "All functions",
          "Pathway information",
          "Curation tags"
        ],
        "description": "getCurationTagsGet all curation tags for the given tag name. Use this method if you want to find all pathways that are tagged with a specific curation tag."
      }
    },
    "/getCurationTagsByName": {
      "get": {
        "parameters": [
          {
            "description": "The tag name",
            "in": "query",
            "name": "tagName",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "All functions",
          "Pathway list",
          "Curation tags"
        ],
        "description": "getCurationTagsByNameGet all curation tags for the given tag name. Use this method if you want to find all pathways that are tagged with a specific curation tag."
      }
    },
    "/getOntologyTermsByPathway": {
      "get": {
        "parameters": [
          {
            "description": "The pathway identifier",
            "in": "query",
            "name": "pwId",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "Pathway information",
          "Curation tags",
          "All functions"
        ],
        "description": "getOntologyTermsByPathway"
      }
    },
    "/getPathway": {
      "get": {
        "parameters": [
          {
            "description": "The pathway identifier",
            "in": "query",
            "name": "pwId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The revision number of the pathway (use 0 for most recent)",
            "in": "query",
            "name": "revision",
            "required": false,
            "type": "integer"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "Pathway information",
          "All functions"
        ],
        "description": "getPathway"
      }
    },
    "/getPathwayAs": {
      "get": {
        "parameters": [
          {
            "description": "The file type to convert to, e.g.",
            "in": "query",
            "name": "fileType",
            "required": true,
            "type": "string"
          },
          {
            "description": "The pathway identifier",
            "in": "query",
            "name": "pwId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The revision number of the pathway (use 0 for most recent)",
            "in": "query",
            "name": "revision",
            "required": false,
            "type": "integer"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "Download",
          "All functions"
        ],
        "description": "getPathwayAsDownload a pathway in the specified file format."
      }
    },
    "/getPathwayHistory": {
      "get": {
        "parameters": [
          {
            "description": "The pathway identifier",
            "in": "query",
            "name": "pwId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Limit by time, only history items after the given",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "History",
          "All functions"
        ],
        "description": "getPathwayHistoryGet the revision history of a pathway."
      }
    },
    "/getPathwayInfo": {
      "get": {
        "parameters": [
          {
            "description": "The pathway identifier",
            "in": "query",
            "name": "pwId",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "Pathway information",
          "All functions"
        ],
        "description": "getPathwayInfoGet some general info about the pathway, such as the name, species, without downloading the GPML."
      }
    },
    "/getPathwaysByOntologyTerm": {
      "get": {
        "parameters": [
          {
            "description": "The Ontology term",
            "in": "query",
            "name": "term",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "Pathway list",
          "Ontology tags",
          "All functions"
        ],
        "description": "getPathwaysByOntologyTerm"
      }
    },
    "/getPathwaysByParentOntologyTerm": {
      "get": {
        "parameters": [
          {
            "description": "The Ontology term",
            "in": "query",
            "name": "term",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "Pathway list",
          "Ontology tags",
          "All functions"
        ],
        "description": "getPathwaysByParentOntologyTerm"
      }
    },
    "/getRecentChanges": {
      "get": {
        "parameters": [
          {
            "description": "Get the changes after this time",
            "in": "query",
            "name": "timestamp",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "History",
          "All functions"
        ],
        "description": "getRecentChangesGet the recently changed pathways.<br>Note: the recent changes table only retains items for a limited time (2 months), so there is no guarantee that you will get all changes when the timestamp points to a date that is more than 2 months in the past."
      }
    },
    "/getUserByOrcid": {
      "get": {
        "parameters": [
          {
            "description": "string",
            "in": "query",
            "name": "orcid",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "User management",
          "All functions"
        ],
        "description": "getUserByOrcid"
      }
    },
    "/getXrefList": {
      "get": {
        "parameters": [
          {
            "description": "The pathway identifier.",
            "in": "query",
            "name": "pwId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The database code to translate to (e.g. 'S' for UniProt).",
            "in": "query",
            "name": "code",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "Download",
          "All functions"
        ],
        "description": "getXrefList"
      }
    },
    "/listOrganisms": {
      "get": {
        "parameters": [
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "Organism list",
          "All functions"
        ],
        "description": "listOrganisms"
      }
    },
    "/listPathways": {
      "get": {
        "parameters": [
          {
            "description": "The organism to filter by (optional)",
            "in": "query",
            "name": "organism",
            "required": false,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "Pathway list",
          "All functions"
        ],
        "description": "listPathways"
      }
    },
    "/login": {
      "get": {
        "parameters": [
          {
            "description": "The usernameset_include_path(get_include_path().PATH_SEPARATOR.realpath('../includes').PATH_SEPARATOR.realpath('../').PATH_SEPARATOR);",
            "in": "query",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The password",
            "in": "query",
            "name": "pass",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "User management",
          "All functions"
        ],
        "description": "loginStart a logged in session, using an existing WikiPathways account. This function will return an authentication code that can be used to excecute methods that need authentication (e.g. updatePathway)."
      }
    },
    "/removeCurationTag": {
      "get": {
        "parameters": [
          {
            "description": "The pathway identifier",
            "in": "query",
            "name": "pwId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the tag to apply",
            "in": "query",
            "name": "tagName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authentication data",
            "in": "query",
            "name": "auth",
            "required": true,
            "type": "string"
          },
          {
            "description": "The user name",
            "in": "query",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "All functions",
          "Search"
        ],
        "description": "removeCurationTagRemove a curation tag from a pathway."
      }
    },
    "/removeOntologyTag": {
      "get": {
        "parameters": [
          {
            "description": "The pathway identifier",
            "in": "query",
            "name": "pwId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ontology term identifier in the ontology",
            "in": "query",
            "name": "termId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authentication key",
            "in": "query",
            "name": "auth",
            "required": true,
            "type": "string"
          },
          {
            "description": "The username",
            "in": "query",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "Write (create/update/delete)",
          "Ontology tags",
          "All functions"
        ],
        "description": "removeOntologyTag"
      }
    },
    "/saveCurationTag": {
      "get": {
        "parameters": [
          {
            "description": "The pathway identifier",
            "in": "query",
            "name": "pwId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the tag to apply",
            "in": "query",
            "name": "tagName",
            "required": true,
            "type": "string"
          },
          {
            "description": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          },
          {
            "description": "The revision this tag applies to",
            "in": "query",
            "name": "revision",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The authentication key",
            "in": "query",
            "name": "auth",
            "required": true,
            "type": "string"
          },
          {
            "description": "The user name",
            "in": "query",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "All functions",
          "Write (create/update/delete)",
          "Curation tags"
        ],
        "description": "saveCurationTag"
      }
    },
    "/saveOntologyTag": {
      "get": {
        "parameters": [
          {
            "description": "The pathway identifier",
            "in": "query",
            "name": "pwId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ontology term to apply",
            "in": "query",
            "name": "term",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the term in the ontology",
            "in": "query",
            "name": "termId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authentication key",
            "in": "query",
            "name": "auth",
            "required": true,
            "type": "string"
          },
          {
            "description": "The username",
            "in": "query",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "Write (create/update/delete)",
          "Ontology tags",
          "All functions"
        ],
        "description": "saveOntologyTag"
      }
    },
    "/updatePathway": {
      "get": {
        "parameters": [
          {
            "description": "The pathway identifier",
            "in": "query",
            "name": "pwId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A description of the modifications",
            "in": "query",
            "name": "description",
            "required": true,
            "type": "string"
          },
          {
            "description": "The updated GPML code",
            "in": "query",
            "name": "gpml",
            "required": true,
            "type": "string"
          },
          {
            "description": "The revision the GPML code is based on",
            "in": "query",
            "name": "revision",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The authentication key",
            "in": "query",
            "name": "auth",
            "required": true,
            "type": "string"
          },
          {
            "description": "The username",
            "in": "query",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "default": "xml",
            "enum": [
              "json",
              "xml",
              "html",
              "dump",
              "jpg",
              "pdf"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "everything ok"
          }
        },
        "tags": [
          "Write (create/update/delete)",
          "All functions"
        ],
        "description": "updatePathwayUpdate a pathway on the wiki with the given GPML code.<br>Note: To create/modify pathways via the web service, you need to have an account with web service write permissions. Please contact us to request write access for the web service."
      }
    }
  }
}