{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>AWS Step Functions</fullname> <p>AWS Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.</p> <p>You can use Step Functions to build applications from individual components, each of which performs a discrete function, or <i>task</i>, allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.</p> <p>Step Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on AWS, your own servers, or any system that has access to AWS. You can access and use Step Functions using the console, the AWS SDKs, or an HTTP API. For more information about Step Functions, see the <i> <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html\">AWS Step Functions Developer Guide</a> </i>.</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Step Functions",
    "version": "2016-11-23",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/states-2016-11-23.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "states",
    "x-datafire": {
      "name": "amazonaws_states",
      "type": "openapi"
    }
  },
  "host": "states.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/#X-Amz-Target=AWSStepFunctions.CreateActivity": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.CreateActivity"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateActivityInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateActivityOutput"
            }
          },
          "480": {
            "description": "ActivityLimitExceeded",
            "schema": {
              "$ref": "#/definitions/ActivityLimitExceeded"
            }
          },
          "481": {
            "description": "InvalidName",
            "schema": {
              "$ref": "#/definitions/InvalidName"
            }
          },
          "482": {
            "description": "TooManyTags",
            "schema": {
              "$ref": "#/definitions/TooManyTags"
            }
          }
        },
        "description": "<p>Creates an activity. An activity is a task that you write in any programming language and host on any machine that has access to AWS Step Functions. Activities must poll Step Functions using the <code>GetActivityTask</code> API action and respond using <code>SendTask*</code> API actions. This function lets Step Functions know the existence of your activity and returns an identifier for use in a state machine and when polling from the activity.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <note> <p> <code>CreateActivity</code> is an idempotent API. Subsequent requests wonâ€™t create a duplicate resource if it was already created. <code>CreateActivity</code>'s idempotency check is based on the activity <code>name</code>. If a following request has different <code>tags</code> values, Step Functions will ignore these differences and treat it as an idempotent request of the previous. In this case, <code>tags</code> will not be updated, even if they are different.</p> </note>",
        "operationId": "CreateActivity"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.CreateStateMachine": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.CreateStateMachine"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateStateMachineInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateStateMachineOutput"
            }
          },
          "480": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          },
          "481": {
            "description": "InvalidDefinition",
            "schema": {
              "$ref": "#/definitions/InvalidDefinition"
            }
          },
          "482": {
            "description": "InvalidName",
            "schema": {
              "$ref": "#/definitions/InvalidName"
            }
          },
          "483": {
            "description": "InvalidLoggingConfiguration",
            "schema": {
              "$ref": "#/definitions/InvalidLoggingConfiguration"
            }
          },
          "484": {
            "description": "InvalidTracingConfiguration",
            "schema": {
              "$ref": "#/definitions/InvalidTracingConfiguration"
            }
          },
          "485": {
            "description": "StateMachineAlreadyExists",
            "schema": {
              "$ref": "#/definitions/StateMachineAlreadyExists"
            }
          },
          "486": {
            "description": "StateMachineDeleting",
            "schema": {
              "$ref": "#/definitions/StateMachineDeleting"
            }
          },
          "487": {
            "description": "StateMachineLimitExceeded",
            "schema": {
              "$ref": "#/definitions/StateMachineLimitExceeded"
            }
          },
          "488": {
            "description": "StateMachineTypeNotSupported",
            "schema": {
              "$ref": "#/definitions/StateMachineTypeNotSupported"
            }
          },
          "489": {
            "description": "TooManyTags",
            "schema": {
              "$ref": "#/definitions/TooManyTags"
            }
          }
        },
        "description": "<p>Creates a state machine. A state machine consists of a collection of states that can do work (<code>Task</code> states), determine to which states to transition next (<code>Choice</code> states), stop an execution with an error (<code>Fail</code> states), and so on. State machines are specified using a JSON-based, structured language. For more information, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a> in the AWS Step Functions User Guide.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <note> <p> <code>CreateStateMachine</code> is an idempotent API. Subsequent requests wonâ€™t create a duplicate resource if it was already created. <code>CreateStateMachine</code>'s idempotency check is based on the state machine <code>name</code>, <code>definition</code>, <code>type</code>, <code>LoggingConfiguration</code> and <code>TracingConfiguration</code>. If a following request has a different <code>roleArn</code> or <code>tags</code>, Step Functions will ignore these differences and treat it as an idempotent request of the previous. In this case, <code>roleArn</code> and <code>tags</code> will not be updated, even if they are different.</p> </note>",
        "operationId": "CreateStateMachine"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.DeleteActivity": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.DeleteActivity"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteActivityInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteActivityOutput"
            }
          },
          "480": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          }
        },
        "description": "Deletes an activity.",
        "operationId": "DeleteActivity"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.DeleteStateMachine": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.DeleteStateMachine"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteStateMachineInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteStateMachineOutput"
            }
          },
          "480": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          }
        },
        "description": "<p>Deletes a state machine. This is an asynchronous operation: It sets the state machine's status to <code>DELETING</code> and begins the deletion process. </p> <note> <p>For <code>EXPRESS</code>state machines, the deletion will happen eventually (usually less than a minute). Running executions may emit logs after <code>DeleteStateMachine</code> API is called.</p> </note>",
        "operationId": "DeleteStateMachine"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.DescribeActivity": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.DescribeActivity"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeActivityInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeActivityOutput"
            }
          },
          "480": {
            "description": "ActivityDoesNotExist",
            "schema": {
              "$ref": "#/definitions/ActivityDoesNotExist"
            }
          },
          "481": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          }
        },
        "description": "<p>Describes an activity.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
        "operationId": "DescribeActivity"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.DescribeExecution": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.DescribeExecution"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeExecutionInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeExecutionOutput"
            }
          },
          "480": {
            "description": "ExecutionDoesNotExist",
            "schema": {
              "$ref": "#/definitions/ExecutionDoesNotExist"
            }
          },
          "481": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          }
        },
        "description": "<p>Describes an execution.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
        "operationId": "DescribeExecution"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.DescribeStateMachine": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.DescribeStateMachine"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeStateMachineInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeStateMachineOutput"
            }
          },
          "480": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          },
          "481": {
            "description": "StateMachineDoesNotExist",
            "schema": {
              "$ref": "#/definitions/StateMachineDoesNotExist"
            }
          }
        },
        "description": "<p>Describes a state machine.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
        "operationId": "DescribeStateMachine"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.DescribeStateMachineForExecution": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.DescribeStateMachineForExecution"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeStateMachineForExecutionInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeStateMachineForExecutionOutput"
            }
          },
          "480": {
            "description": "ExecutionDoesNotExist",
            "schema": {
              "$ref": "#/definitions/ExecutionDoesNotExist"
            }
          },
          "481": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          }
        },
        "description": "<p>Describes the state machine associated with a specific execution.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
        "operationId": "DescribeStateMachineForExecution"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.GetActivityTask": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.GetActivityTask"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetActivityTaskInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetActivityTaskOutput"
            }
          },
          "480": {
            "description": "ActivityDoesNotExist",
            "schema": {
              "$ref": "#/definitions/ActivityDoesNotExist"
            }
          },
          "481": {
            "description": "ActivityWorkerLimitExceeded",
            "schema": {
              "$ref": "#/definitions/ActivityWorkerLimitExceeded"
            }
          },
          "482": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          }
        },
        "description": "<p>Used by workers to retrieve a task (with the specified activity ARN) which has been scheduled for execution by a running state machine. This initiates a long poll, where the service holds the HTTP connection open and responds as soon as a task becomes available (i.e. an execution of a task of this type is needed.) The maximum time the service holds on to the request before responding is 60 seconds. If no task is available within 60 seconds, the poll returns a <code>taskToken</code> with a null string.</p> <important> <p>Workers should set their client side socket timeout to at least 65 seconds (5 seconds higher than the maximum time the service may hold the poll request).</p> <p>Polling with <code>GetActivityTask</code> can cause latency in some implementations. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/bp-activity-pollers.html\">Avoid Latency When Polling for Activity Tasks</a> in the Step Functions Developer Guide.</p> </important>",
        "operationId": "GetActivityTask"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.GetExecutionHistory": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSStepFunctions.GetExecutionHistory"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetExecutionHistoryInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetExecutionHistoryOutput"
            }
          },
          "480": {
            "description": "ExecutionDoesNotExist",
            "schema": {
              "$ref": "#/definitions/ExecutionDoesNotExist"
            }
          },
          "481": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          },
          "482": {
            "description": "InvalidToken",
            "schema": {
              "$ref": "#/definitions/InvalidToken"
            }
          }
        },
        "description": "<p>Returns the history of the specified execution as a list of events. By default, the results are returned in ascending order of the <code>timeStamp</code> of the events. Use the <code>reverseOrder</code> parameter to get the latest events first.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
        "operationId": "GetExecutionHistory"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.ListActivities": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSStepFunctions.ListActivities"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListActivitiesInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListActivitiesOutput"
            }
          },
          "480": {
            "description": "InvalidToken",
            "schema": {
              "$ref": "#/definitions/InvalidToken"
            }
          }
        },
        "description": "<p>Lists the existing activities.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
        "operationId": "ListActivities"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.ListExecutions": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSStepFunctions.ListExecutions"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListExecutionsInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListExecutionsOutput"
            }
          },
          "480": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          },
          "481": {
            "description": "InvalidToken",
            "schema": {
              "$ref": "#/definitions/InvalidToken"
            }
          },
          "482": {
            "description": "StateMachineDoesNotExist",
            "schema": {
              "$ref": "#/definitions/StateMachineDoesNotExist"
            }
          },
          "483": {
            "description": "StateMachineTypeNotSupported",
            "schema": {
              "$ref": "#/definitions/StateMachineTypeNotSupported"
            }
          }
        },
        "description": "<p>Lists the executions of a state machine that meet the filtering criteria. Results are sorted by time, with the most recent execution first.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
        "operationId": "ListExecutions"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.ListStateMachines": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSStepFunctions.ListStateMachines"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListStateMachinesInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListStateMachinesOutput"
            }
          },
          "480": {
            "description": "InvalidToken",
            "schema": {
              "$ref": "#/definitions/InvalidToken"
            }
          }
        },
        "description": "<p>Lists the existing state machines.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
        "operationId": "ListStateMachines"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.ListTagsForResource": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.ListTagsForResource"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceOutput"
            }
          },
          "480": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          },
          "481": {
            "description": "ResourceNotFound",
            "schema": {
              "$ref": "#/definitions/ResourceNotFound"
            }
          }
        },
        "description": "<p>List tags for a given resource.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>",
        "operationId": "ListTagsForResource"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.SendTaskFailure": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.SendTaskFailure"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendTaskFailureInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SendTaskFailureOutput"
            }
          },
          "480": {
            "description": "TaskDoesNotExist",
            "schema": {
              "$ref": "#/definitions/TaskDoesNotExist"
            }
          },
          "481": {
            "description": "InvalidToken",
            "schema": {
              "$ref": "#/definitions/InvalidToken"
            }
          },
          "482": {
            "description": "TaskTimedOut",
            "schema": {
              "$ref": "#/definitions/TaskTimedOut"
            }
          }
        },
        "description": "Used by activity workers and task states using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern to report that the task identified by the <code>taskToken</code> failed.",
        "operationId": "SendTaskFailure"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.SendTaskHeartbeat": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.SendTaskHeartbeat"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendTaskHeartbeatInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SendTaskHeartbeatOutput"
            }
          },
          "480": {
            "description": "TaskDoesNotExist",
            "schema": {
              "$ref": "#/definitions/TaskDoesNotExist"
            }
          },
          "481": {
            "description": "InvalidToken",
            "schema": {
              "$ref": "#/definitions/InvalidToken"
            }
          },
          "482": {
            "description": "TaskTimedOut",
            "schema": {
              "$ref": "#/definitions/TaskTimedOut"
            }
          }
        },
        "description": "<p>Used by activity workers and task states using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern to report to Step Functions that the task represented by the specified <code>taskToken</code> is still making progress. This action resets the <code>Heartbeat</code> clock. The <code>Heartbeat</code> threshold is specified in the state machine's Amazon States Language definition (<code>HeartbeatSeconds</code>). This action does not in itself create an event in the execution history. However, if the task times out, the execution history contains an <code>ActivityTimedOut</code> entry for activities, or a <code>TaskTimedOut</code> entry for for tasks using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-sync\">job run</a> or <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern.</p> <note> <p>The <code>Timeout</code> of a task, defined in the state machine's Amazon States Language definition, is its maximum allowed duration, regardless of the number of <a>SendTaskHeartbeat</a> requests received. Use <code>HeartbeatSeconds</code> to configure the timeout interval for heartbeats.</p> </note>",
        "operationId": "SendTaskHeartbeat"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.SendTaskSuccess": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.SendTaskSuccess"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendTaskSuccessInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SendTaskSuccessOutput"
            }
          },
          "480": {
            "description": "TaskDoesNotExist",
            "schema": {
              "$ref": "#/definitions/TaskDoesNotExist"
            }
          },
          "481": {
            "description": "InvalidOutput",
            "schema": {
              "$ref": "#/definitions/InvalidOutput"
            }
          },
          "482": {
            "description": "InvalidToken",
            "schema": {
              "$ref": "#/definitions/InvalidToken"
            }
          },
          "483": {
            "description": "TaskTimedOut",
            "schema": {
              "$ref": "#/definitions/TaskTimedOut"
            }
          }
        },
        "description": "Used by activity workers and task states using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern to report that the task identified by the <code>taskToken</code> completed successfully.",
        "operationId": "SendTaskSuccess"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.StartExecution": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.StartExecution"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartExecutionInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartExecutionOutput"
            }
          },
          "480": {
            "description": "ExecutionLimitExceeded",
            "schema": {
              "$ref": "#/definitions/ExecutionLimitExceeded"
            }
          },
          "481": {
            "description": "ExecutionAlreadyExists",
            "schema": {
              "$ref": "#/definitions/ExecutionAlreadyExists"
            }
          },
          "482": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          },
          "483": {
            "description": "InvalidExecutionInput",
            "schema": {
              "$ref": "#/definitions/InvalidExecutionInput"
            }
          },
          "484": {
            "description": "InvalidName",
            "schema": {
              "$ref": "#/definitions/InvalidName"
            }
          },
          "485": {
            "description": "StateMachineDoesNotExist",
            "schema": {
              "$ref": "#/definitions/StateMachineDoesNotExist"
            }
          },
          "486": {
            "description": "StateMachineDeleting",
            "schema": {
              "$ref": "#/definitions/StateMachineDeleting"
            }
          }
        },
        "description": "<p>Starts a state machine execution.</p> <note> <p> <code>StartExecution</code> is idempotent. If <code>StartExecution</code> is called with the same name and input as a running execution, the call will succeed and return the same response as the original request. If the execution is closed or if the input is different, it will return a 400 <code>ExecutionAlreadyExists</code> error. Names can be reused after 90 days. </p> </note>",
        "operationId": "StartExecution"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.StartSyncExecution": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.StartSyncExecution"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartSyncExecutionInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartSyncExecutionOutput"
            }
          },
          "480": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          },
          "481": {
            "description": "InvalidExecutionInput",
            "schema": {
              "$ref": "#/definitions/InvalidExecutionInput"
            }
          },
          "482": {
            "description": "InvalidName",
            "schema": {
              "$ref": "#/definitions/InvalidName"
            }
          },
          "483": {
            "description": "StateMachineDoesNotExist",
            "schema": {
              "$ref": "#/definitions/StateMachineDoesNotExist"
            }
          },
          "484": {
            "description": "StateMachineDeleting",
            "schema": {
              "$ref": "#/definitions/StateMachineDeleting"
            }
          },
          "485": {
            "description": "StateMachineTypeNotSupported",
            "schema": {
              "$ref": "#/definitions/StateMachineTypeNotSupported"
            }
          }
        },
        "description": "Starts a Synchronous Express state machine execution.",
        "operationId": "StartSyncExecution"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.StopExecution": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.StopExecution"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StopExecutionInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopExecutionOutput"
            }
          },
          "480": {
            "description": "ExecutionDoesNotExist",
            "schema": {
              "$ref": "#/definitions/ExecutionDoesNotExist"
            }
          },
          "481": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          }
        },
        "description": "<p>Stops an execution.</p> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
        "operationId": "StopExecution"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.TagResource": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.TagResource"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagResourceInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagResourceOutput"
            }
          },
          "480": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          },
          "481": {
            "description": "ResourceNotFound",
            "schema": {
              "$ref": "#/definitions/ResourceNotFound"
            }
          },
          "482": {
            "description": "TooManyTags",
            "schema": {
              "$ref": "#/definitions/TooManyTags"
            }
          }
        },
        "description": "<p>Add a tag to a Step Functions resource.</p> <p>An array of key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>, and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html\">Controlling Access Using IAM Tags</a>.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>",
        "operationId": "TagResource"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.UntagResource": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.UntagResource"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UntagResourceInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UntagResourceOutput"
            }
          },
          "480": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          },
          "481": {
            "description": "ResourceNotFound",
            "schema": {
              "$ref": "#/definitions/ResourceNotFound"
            }
          }
        },
        "description": "Remove a tag from a Step Functions resource",
        "operationId": "UntagResource"
      }
    },
    "/#X-Amz-Target=AWSStepFunctions.UpdateStateMachine": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSStepFunctions.UpdateStateMachine"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateStateMachineInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateStateMachineOutput"
            }
          },
          "480": {
            "description": "InvalidArn",
            "schema": {
              "$ref": "#/definitions/InvalidArn"
            }
          },
          "481": {
            "description": "InvalidDefinition",
            "schema": {
              "$ref": "#/definitions/InvalidDefinition"
            }
          },
          "482": {
            "description": "InvalidLoggingConfiguration",
            "schema": {
              "$ref": "#/definitions/InvalidLoggingConfiguration"
            }
          },
          "483": {
            "description": "InvalidTracingConfiguration",
            "schema": {
              "$ref": "#/definitions/InvalidTracingConfiguration"
            }
          },
          "484": {
            "description": "MissingRequiredParameter",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameter"
            }
          },
          "485": {
            "description": "StateMachineDeleting",
            "schema": {
              "$ref": "#/definitions/StateMachineDeleting"
            }
          },
          "486": {
            "description": "StateMachineDoesNotExist",
            "schema": {
              "$ref": "#/definitions/StateMachineDoesNotExist"
            }
          }
        },
        "description": "<p>Updates an existing state machine by modifying its <code>definition</code>, <code>roleArn</code>, or <code>loggingConfiguration</code>. Running executions will continue to use the previous <code>definition</code> and <code>roleArn</code>. You must include at least one of <code>definition</code> or <code>roleArn</code> or you will receive a <code>MissingRequiredParameter</code> error.</p> <note> <p>All <code>StartExecution</code> calls within a few seconds will use the updated <code>definition</code> and <code>roleArn</code>. Executions started immediately after calling <code>UpdateStateMachine</code> may use the previous state machine <code>definition</code> and <code>roleArn</code>. </p> </note>",
        "operationId": "UpdateStateMachine"
      }
    }
  },
  "definitions": {
    "ActivityDoesNotExist": {},
    "ActivityFailedEventDetails": {
      "description": "Contains details about an activity that failed during an execution.",
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the failure."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        }
      },
      "type": "object"
    },
    "ActivityLimitExceeded": {},
    "ActivityList": {
      "items": {
        "$ref": "#/definitions/ActivityListItem"
      },
      "type": "array"
    },
    "ActivityListItem": {
      "description": "Contains details about an activity.",
      "properties": {
        "activityArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) that identifies the activity."
            }
          ]
        },
        "creationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date the activity is created."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "<p>The name of the activity.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>"
            }
          ]
        }
      },
      "required": [
        "activityArn",
        "name",
        "creationDate"
      ],
      "type": "object"
    },
    "ActivityScheduleFailedEventDetails": {
      "description": "Contains details about an activity schedule failure that occurred during an execution.",
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the failure."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        }
      },
      "type": "object"
    },
    "ActivityScheduledEventDetails": {
      "description": "Contains details about an activity scheduled during an execution.",
      "properties": {
        "heartbeatInSeconds": {
          "allOf": [
            {
              "$ref": "#/definitions/TimeoutInSeconds"
            },
            {
              "description": "The maximum allowed duration between two heartbeats for the activity task."
            }
          ]
        },
        "input": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "The JSON data input to the activity task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "inputDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryEventExecutionDataDetails"
            },
            {
              "description": "Contains details about the input for an execution history event."
            }
          ]
        },
        "resource": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the scheduled activity."
            }
          ]
        },
        "timeoutInSeconds": {
          "allOf": [
            {
              "$ref": "#/definitions/TimeoutInSeconds"
            },
            {
              "description": "The maximum allowed duration of the activity task."
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "ActivityStartedEventDetails": {
      "description": "Contains details about the start of an activity during an execution.",
      "properties": {
        "workerName": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The name of the worker that the task is assigned to. These names are provided by the workers when calling <a>GetActivityTask</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "ActivitySucceededEventDetails": {
      "description": "Contains details about an activity that successfully terminated during an execution.",
      "properties": {
        "output": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "The JSON data output by the activity task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "outputDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryEventExecutionDataDetails"
            },
            {
              "description": "Contains details about the output of an execution history event."
            }
          ]
        }
      },
      "type": "object"
    },
    "ActivityTimedOutEventDetails": {
      "description": "Contains details about an activity timeout that occurred during an execution.",
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the timeout."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        }
      },
      "type": "object"
    },
    "ActivityWorkerLimitExceeded": {},
    "Arn": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "BilledDuration": {
      "minimum": 0,
      "type": "integer"
    },
    "BilledMemoryUsed": {
      "minimum": 0,
      "type": "integer"
    },
    "BillingDetails": {
      "description": "An object that describes workflow billing details.",
      "properties": {
        "billedDurationInMilliseconds": {
          "allOf": [
            {
              "$ref": "#/definitions/BilledDuration"
            },
            {
              "description": "Billed duration of your workflow, in milliseconds."
            }
          ]
        },
        "billedMemoryUsedInMB": {
          "allOf": [
            {
              "$ref": "#/definitions/BilledMemoryUsed"
            },
            {
              "description": "Billed memory consumption of your workflow, in MB."
            }
          ]
        }
      },
      "type": "object"
    },
    "CloudWatchEventsExecutionDataDetails": {
      "description": "Provides details about execution input or output.",
      "properties": {
        "included": {
          "allOf": [
            {
              "$ref": "#/definitions/includedDetails"
            },
            {
              "description": "Indicates whether input or output was included in the response. Always <code>true</code> for API calls. "
            }
          ]
        }
      },
      "type": "object"
    },
    "CloudWatchLogsLogGroup": {
      "description": "<p/>",
      "properties": {
        "logGroupArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the the CloudWatch log group to which you want your logs emitted to. The ARN must end with <code>:*</code> "
            }
          ]
        }
      },
      "type": "object"
    },
    "ConnectorParameters": {
      "format": "password",
      "maxLength": 262144,
      "minLength": 0,
      "type": "string"
    },
    "CreateActivityInput": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "<p>The list of tags to add to a resource.</p> <p>An array of key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>, and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html\">Controlling Access Using IAM Tags</a>.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>"
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "<p>The name of the activity to create. This name must be unique for your AWS account and region for 90 days. For more information, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/limits.html#service-limits-state-machine-executions\"> Limits Related to State Machine Executions</a> in the <i>AWS Step Functions Developer Guide</i>.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "title": "CreateActivityInput",
      "type": "object"
    },
    "CreateActivityOutput": {
      "properties": {
        "activityArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) that identifies the created activity."
            }
          ]
        },
        "creationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date the activity is created."
            }
          ]
        }
      },
      "required": [
        "activityArn",
        "creationDate"
      ],
      "type": "object"
    },
    "CreateStateMachineInput": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "<p>Tags to be added when creating a state machine.</p> <p>An array of key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>, and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html\">Controlling Access Using IAM Tags</a>.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>"
            }
          ]
        },
        "definition": {
          "allOf": [
            {
              "$ref": "#/definitions/Definition"
            },
            {
              "description": "The Amazon States Language definition of the state machine. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a>."
            }
          ]
        },
        "loggingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/LoggingConfiguration"
            },
            {
              "description": "<p>Defines what execution history events are logged and where they are logged.</p> <note> <p>By default, the <code>level</code> is set to <code>OFF</code>. For more information see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/cloudwatch-log-level.html\">Log Levels</a> in the AWS Step Functions User Guide.</p> </note>"
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "<p>The name of the state machine. </p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>"
            }
          ]
        },
        "roleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the IAM role to use for this state machine."
            }
          ]
        },
        "tracingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/TracingConfiguration"
            },
            {
              "description": "Selects whether AWS X-Ray tracing is enabled."
            }
          ]
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/StateMachineType"
            },
            {
              "description": "Determines whether a Standard or Express state machine is created. The default is <code>STANDARD</code>. You cannot update the <code>type</code> of a state machine once it has been created."
            }
          ]
        }
      },
      "required": [
        "name",
        "definition",
        "roleArn"
      ],
      "title": "CreateStateMachineInput",
      "type": "object"
    },
    "CreateStateMachineOutput": {
      "properties": {
        "creationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date the state machine is created."
            }
          ]
        },
        "stateMachineArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) that identifies the created state machine."
            }
          ]
        }
      },
      "required": [
        "stateMachineArn",
        "creationDate"
      ],
      "type": "object"
    },
    "Definition": {
      "format": "password",
      "maxLength": 1048576,
      "minLength": 1,
      "type": "string"
    },
    "DeleteActivityInput": {
      "properties": {
        "activityArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the activity to delete."
            }
          ]
        }
      },
      "required": [
        "activityArn"
      ],
      "title": "DeleteActivityInput",
      "type": "object"
    },
    "DeleteActivityOutput": {
      "properties": {},
      "type": "object"
    },
    "DeleteStateMachineInput": {
      "properties": {
        "stateMachineArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the state machine to delete."
            }
          ]
        }
      },
      "required": [
        "stateMachineArn"
      ],
      "title": "DeleteStateMachineInput",
      "type": "object"
    },
    "DeleteStateMachineOutput": {
      "properties": {},
      "type": "object"
    },
    "DescribeActivityInput": {
      "properties": {
        "activityArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the activity to describe."
            }
          ]
        }
      },
      "required": [
        "activityArn"
      ],
      "title": "DescribeActivityInput",
      "type": "object"
    },
    "DescribeActivityOutput": {
      "properties": {
        "activityArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) that identifies the activity."
            }
          ]
        },
        "creationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date the activity is created."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "<p>The name of the activity.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>"
            }
          ]
        }
      },
      "required": [
        "activityArn",
        "name",
        "creationDate"
      ],
      "type": "object"
    },
    "DescribeExecutionInput": {
      "properties": {
        "executionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the execution to describe."
            }
          ]
        }
      },
      "required": [
        "executionArn"
      ],
      "title": "DescribeExecutionInput",
      "type": "object"
    },
    "DescribeExecutionOutput": {
      "properties": {
        "executionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) that identifies the execution."
            }
          ]
        },
        "input": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "The string that contains the JSON input data of the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "inputDetails": {
          "$ref": "#/definitions/CloudWatchEventsExecutionDataDetails"
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "<p>The name of the execution.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>"
            }
          ]
        },
        "output": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "<p>The JSON output data of the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.</p> <note> <p>This field is set only if the execution succeeds. If the execution fails, this field is null.</p> </note>"
            }
          ]
        },
        "outputDetails": {
          "$ref": "#/definitions/CloudWatchEventsExecutionDataDetails"
        },
        "startDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date the execution is started."
            }
          ]
        },
        "stateMachineArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the executed stated machine."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/ExecutionStatus"
            },
            {
              "description": "The current status of the execution."
            }
          ]
        },
        "stopDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "If the execution has already ended, the date the execution stopped."
            }
          ]
        },
        "traceHeader": {
          "allOf": [
            {
              "$ref": "#/definitions/TraceHeader"
            },
            {
              "description": "The AWS X-Ray trace header that was passed to the execution."
            }
          ]
        }
      },
      "required": [
        "executionArn",
        "stateMachineArn",
        "status",
        "startDate"
      ],
      "type": "object"
    },
    "DescribeStateMachineForExecutionInput": {
      "properties": {
        "executionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the execution you want state machine information for."
            }
          ]
        }
      },
      "required": [
        "executionArn"
      ],
      "title": "DescribeStateMachineForExecutionInput",
      "type": "object"
    },
    "DescribeStateMachineForExecutionOutput": {
      "properties": {
        "definition": {
          "allOf": [
            {
              "$ref": "#/definitions/Definition"
            },
            {
              "description": "The Amazon States Language definition of the state machine. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a>."
            }
          ]
        },
        "loggingConfiguration": {
          "$ref": "#/definitions/LoggingConfiguration"
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The name of the state machine associated with the execution."
            }
          ]
        },
        "roleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the IAM role of the State Machine for the execution. "
            }
          ]
        },
        "stateMachineArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the state machine associated with the execution."
            }
          ]
        },
        "tracingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/TracingConfiguration"
            },
            {
              "description": "Selects whether AWS X-Ray tracing is enabled."
            }
          ]
        },
        "updateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date and time the state machine associated with an execution was updated. For a newly created state machine, this is the creation date."
            }
          ]
        }
      },
      "required": [
        "stateMachineArn",
        "name",
        "definition",
        "roleArn",
        "updateDate"
      ],
      "type": "object"
    },
    "DescribeStateMachineInput": {
      "properties": {
        "stateMachineArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the state machine to describe."
            }
          ]
        }
      },
      "required": [
        "stateMachineArn"
      ],
      "title": "DescribeStateMachineInput",
      "type": "object"
    },
    "DescribeStateMachineOutput": {
      "properties": {
        "creationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date the state machine is created."
            }
          ]
        },
        "definition": {
          "allOf": [
            {
              "$ref": "#/definitions/Definition"
            },
            {
              "description": "The Amazon States Language definition of the state machine. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a>."
            }
          ]
        },
        "loggingConfiguration": {
          "$ref": "#/definitions/LoggingConfiguration"
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "<p>The name of the state machine.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>"
            }
          ]
        },
        "roleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the IAM role used when creating this state machine. (The IAM role maintains security by granting Step Functions access to AWS resources.)"
            }
          ]
        },
        "stateMachineArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) that identifies the state machine."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/StateMachineStatus"
            },
            {
              "description": "The current status of the state machine."
            }
          ]
        },
        "tracingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/TracingConfiguration"
            },
            {
              "description": "Selects whether AWS X-Ray tracing is enabled."
            }
          ]
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/StateMachineType"
            },
            {
              "description": "The <code>type</code> of the state machine (<code>STANDARD</code> or <code>EXPRESS</code>)."
            }
          ]
        }
      },
      "required": [
        "stateMachineArn",
        "name",
        "definition",
        "roleArn",
        "type",
        "creationDate"
      ],
      "type": "object"
    },
    "Enabled": {
      "type": "boolean"
    },
    "EventId": {
      "type": "integer"
    },
    "ExecutionAbortedEventDetails": {
      "description": "Contains details about an abort of an execution.",
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the failure."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        }
      },
      "type": "object"
    },
    "ExecutionAlreadyExists": {},
    "ExecutionDoesNotExist": {},
    "ExecutionFailedEventDetails": {
      "description": "Contains details about an execution failure event.",
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the failure."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        }
      },
      "type": "object"
    },
    "ExecutionLimitExceeded": {},
    "ExecutionList": {
      "items": {
        "$ref": "#/definitions/ExecutionListItem"
      },
      "type": "array"
    },
    "ExecutionListItem": {
      "description": "Contains details about an execution.",
      "properties": {
        "executionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) that identifies the execution."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "<p>The name of the execution.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>"
            }
          ]
        },
        "startDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date the execution started."
            }
          ]
        },
        "stateMachineArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the executed state machine."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/ExecutionStatus"
            },
            {
              "description": "The current status of the execution."
            }
          ]
        },
        "stopDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "If the execution already ended, the date the execution stopped."
            }
          ]
        }
      },
      "required": [
        "executionArn",
        "stateMachineArn",
        "name",
        "status",
        "startDate"
      ],
      "type": "object"
    },
    "ExecutionStartedEventDetails": {
      "description": "Contains details about the start of the execution.",
      "properties": {
        "input": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "The JSON data input to the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "inputDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryEventExecutionDataDetails"
            },
            {
              "description": "Contains details about the input for an execution history event."
            }
          ]
        },
        "roleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the IAM role used for executing AWS Lambda tasks."
            }
          ]
        }
      },
      "type": "object"
    },
    "ExecutionStatus": {
      "enum": [
        "RUNNING",
        "SUCCEEDED",
        "FAILED",
        "TIMED_OUT",
        "ABORTED"
      ],
      "type": "string"
    },
    "ExecutionSucceededEventDetails": {
      "description": "Contains details about the successful termination of the execution.",
      "properties": {
        "output": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "The JSON data output by the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "outputDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryEventExecutionDataDetails"
            },
            {
              "description": "Contains details about the output of an execution history event."
            }
          ]
        }
      },
      "type": "object"
    },
    "ExecutionTimedOutEventDetails": {
      "description": "Contains details about the execution timeout that occurred during the execution.",
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the timeout."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetActivityTaskInput": {
      "properties": {
        "activityArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the activity to retrieve tasks from (assigned when you create the task using <a>CreateActivity</a>.)"
            }
          ]
        },
        "workerName": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "You can provide an arbitrary name in order to identify the worker that the task is assigned to. This name is used when it is logged in the execution history."
            }
          ]
        }
      },
      "required": [
        "activityArn"
      ],
      "title": "GetActivityTaskInput",
      "type": "object"
    },
    "GetActivityTaskOutput": {
      "properties": {
        "input": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveDataJobInput"
            },
            {
              "description": "The string that contains the JSON input data for the task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "taskToken": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskToken"
            },
            {
              "description": "A token that identifies the scheduled task. This token must be copied and included in subsequent calls to <a>SendTaskHeartbeat</a>, <a>SendTaskSuccess</a> or <a>SendTaskFailure</a> in order to report the progress or completion of the task."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetExecutionHistoryInput": {
      "properties": {
        "executionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the execution."
            }
          ]
        },
        "includeExecutionData": {
          "allOf": [
            {
              "$ref": "#/definitions/IncludeExecutionDataGetExecutionHistory"
            },
            {
              "description": "You can select whether execution data (input or output of a history event) is returned. The default is <code>true</code>."
            }
          ]
        },
        "maxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/PageSize"
            },
            {
              "description": "<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>"
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PageToken"
            },
            {
              "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error."
            }
          ]
        },
        "reverseOrder": {
          "allOf": [
            {
              "$ref": "#/definitions/ReverseOrder"
            },
            {
              "description": "Lists events in descending order of their <code>timeStamp</code>."
            }
          ]
        }
      },
      "required": [
        "executionArn"
      ],
      "title": "GetExecutionHistoryInput",
      "type": "object"
    },
    "GetExecutionHistoryOutput": {
      "properties": {
        "events": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryEventList"
            },
            {
              "description": "The list of events that occurred in the execution."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PageToken"
            },
            {
              "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error."
            }
          ]
        }
      },
      "required": [
        "events"
      ],
      "type": "object"
    },
    "HistoryEvent": {
      "description": "Contains details about the events of an execution.",
      "properties": {
        "activityFailedEventDetails": {
          "$ref": "#/definitions/ActivityFailedEventDetails"
        },
        "activityScheduleFailedEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/ActivityScheduleFailedEventDetails"
            },
            {
              "description": "Contains details about an activity schedule event that failed during an execution."
            }
          ]
        },
        "activityScheduledEventDetails": {
          "$ref": "#/definitions/ActivityScheduledEventDetails"
        },
        "activityStartedEventDetails": {
          "$ref": "#/definitions/ActivityStartedEventDetails"
        },
        "activitySucceededEventDetails": {
          "$ref": "#/definitions/ActivitySucceededEventDetails"
        },
        "activityTimedOutEventDetails": {
          "$ref": "#/definitions/ActivityTimedOutEventDetails"
        },
        "executionAbortedEventDetails": {
          "$ref": "#/definitions/ExecutionAbortedEventDetails"
        },
        "executionFailedEventDetails": {
          "$ref": "#/definitions/ExecutionFailedEventDetails"
        },
        "executionStartedEventDetails": {
          "$ref": "#/definitions/ExecutionStartedEventDetails"
        },
        "executionSucceededEventDetails": {
          "$ref": "#/definitions/ExecutionSucceededEventDetails"
        },
        "executionTimedOutEventDetails": {
          "$ref": "#/definitions/ExecutionTimedOutEventDetails"
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/EventId"
            },
            {
              "description": "The id of the event. Events are numbered sequentially, starting at one."
            }
          ]
        },
        "lambdaFunctionFailedEventDetails": {
          "$ref": "#/definitions/LambdaFunctionFailedEventDetails"
        },
        "lambdaFunctionScheduleFailedEventDetails": {
          "$ref": "#/definitions/LambdaFunctionScheduleFailedEventDetails"
        },
        "lambdaFunctionScheduledEventDetails": {
          "$ref": "#/definitions/LambdaFunctionScheduledEventDetails"
        },
        "lambdaFunctionStartFailedEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/LambdaFunctionStartFailedEventDetails"
            },
            {
              "description": "Contains details about a lambda function that failed to start during an execution."
            }
          ]
        },
        "lambdaFunctionSucceededEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/LambdaFunctionSucceededEventDetails"
            },
            {
              "description": "Contains details about a lambda function that terminated successfully during an execution."
            }
          ]
        },
        "lambdaFunctionTimedOutEventDetails": {
          "$ref": "#/definitions/LambdaFunctionTimedOutEventDetails"
        },
        "mapIterationAbortedEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/MapIterationEventDetails"
            },
            {
              "description": "Contains details about an iteration of a Map state that was aborted."
            }
          ]
        },
        "mapIterationFailedEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/MapIterationEventDetails"
            },
            {
              "description": "Contains details about an iteration of a Map state that failed."
            }
          ]
        },
        "mapIterationStartedEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/MapIterationEventDetails"
            },
            {
              "description": "Contains details about an iteration of a Map state that was started."
            }
          ]
        },
        "mapIterationSucceededEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/MapIterationEventDetails"
            },
            {
              "description": "Contains details about an iteration of a Map state that succeeded."
            }
          ]
        },
        "mapStateStartedEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/MapStateStartedEventDetails"
            },
            {
              "description": "Contains details about Map state that was started."
            }
          ]
        },
        "previousEventId": {
          "allOf": [
            {
              "$ref": "#/definitions/EventId"
            },
            {
              "description": "The id of the previous event."
            }
          ]
        },
        "stateEnteredEventDetails": {
          "$ref": "#/definitions/StateEnteredEventDetails"
        },
        "stateExitedEventDetails": {
          "$ref": "#/definitions/StateExitedEventDetails"
        },
        "taskFailedEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskFailedEventDetails"
            },
            {
              "description": "Contains details about the failure of a task."
            }
          ]
        },
        "taskScheduledEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskScheduledEventDetails"
            },
            {
              "description": "Contains details about a task that was scheduled."
            }
          ]
        },
        "taskStartFailedEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskStartFailedEventDetails"
            },
            {
              "description": "Contains details about a task that failed to start."
            }
          ]
        },
        "taskStartedEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskStartedEventDetails"
            },
            {
              "description": "Contains details about a task that was started."
            }
          ]
        },
        "taskSubmitFailedEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskSubmitFailedEventDetails"
            },
            {
              "description": "Contains details about a task that where the submit failed."
            }
          ]
        },
        "taskSubmittedEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskSubmittedEventDetails"
            },
            {
              "description": "Contains details about a submitted task."
            }
          ]
        },
        "taskSucceededEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskSucceededEventDetails"
            },
            {
              "description": "Contains details about a task that succeeded."
            }
          ]
        },
        "taskTimedOutEventDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskTimedOutEventDetails"
            },
            {
              "description": "Contains details about a task that timed out."
            }
          ]
        },
        "timestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date and time the event occurred."
            }
          ]
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryEventType"
            },
            {
              "description": "The type of the event."
            }
          ]
        }
      },
      "required": [
        "timestamp",
        "type",
        "id"
      ],
      "type": "object"
    },
    "HistoryEventExecutionDataDetails": {
      "description": "Provides details about input or output in an execution history event.",
      "properties": {
        "truncated": {
          "allOf": [
            {
              "$ref": "#/definitions/truncated"
            },
            {
              "description": "Indicates whether input or output was truncated in the response. Always <code>false</code> for API calls."
            }
          ]
        }
      },
      "type": "object"
    },
    "HistoryEventList": {
      "description": "Contains details about the events that occurred during an execution.",
      "items": {
        "$ref": "#/definitions/HistoryEvent"
      },
      "type": "array"
    },
    "HistoryEventType": {
      "enum": [
        "ActivityFailed",
        "ActivityScheduled",
        "ActivityScheduleFailed",
        "ActivityStarted",
        "ActivitySucceeded",
        "ActivityTimedOut",
        "ChoiceStateEntered",
        "ChoiceStateExited",
        "ExecutionAborted",
        "ExecutionFailed",
        "ExecutionStarted",
        "ExecutionSucceeded",
        "ExecutionTimedOut",
        "FailStateEntered",
        "LambdaFunctionFailed",
        "LambdaFunctionScheduled",
        "LambdaFunctionScheduleFailed",
        "LambdaFunctionStarted",
        "LambdaFunctionStartFailed",
        "LambdaFunctionSucceeded",
        "LambdaFunctionTimedOut",
        "MapIterationAborted",
        "MapIterationFailed",
        "MapIterationStarted",
        "MapIterationSucceeded",
        "MapStateAborted",
        "MapStateEntered",
        "MapStateExited",
        "MapStateFailed",
        "MapStateStarted",
        "MapStateSucceeded",
        "ParallelStateAborted",
        "ParallelStateEntered",
        "ParallelStateExited",
        "ParallelStateFailed",
        "ParallelStateStarted",
        "ParallelStateSucceeded",
        "PassStateEntered",
        "PassStateExited",
        "SucceedStateEntered",
        "SucceedStateExited",
        "TaskFailed",
        "TaskScheduled",
        "TaskStarted",
        "TaskStartFailed",
        "TaskStateAborted",
        "TaskStateEntered",
        "TaskStateExited",
        "TaskSubmitFailed",
        "TaskSubmitted",
        "TaskSucceeded",
        "TaskTimedOut",
        "WaitStateAborted",
        "WaitStateEntered",
        "WaitStateExited"
      ],
      "type": "string"
    },
    "Identity": {
      "maxLength": 256,
      "type": "string"
    },
    "IncludeExecutionData": {
      "type": "boolean"
    },
    "IncludeExecutionDataGetExecutionHistory": {
      "type": "boolean"
    },
    "InvalidArn": {},
    "InvalidDefinition": {},
    "InvalidExecutionInput": {},
    "InvalidLoggingConfiguration": {},
    "InvalidName": {},
    "InvalidOutput": {},
    "InvalidToken": {},
    "InvalidTracingConfiguration": {},
    "LambdaFunctionFailedEventDetails": {
      "description": "Contains details about a lambda function that failed during an execution.",
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the failure."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        }
      },
      "type": "object"
    },
    "LambdaFunctionScheduleFailedEventDetails": {
      "description": "Contains details about a failed lambda function schedule event that occurred during an execution.",
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the failure."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        }
      },
      "type": "object"
    },
    "LambdaFunctionScheduledEventDetails": {
      "description": "Contains details about a lambda function scheduled during an execution.",
      "properties": {
        "input": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "The JSON data input to the lambda function. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "inputDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryEventExecutionDataDetails"
            },
            {
              "description": "Contains details about input for an execution history event."
            }
          ]
        },
        "resource": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the scheduled lambda function."
            }
          ]
        },
        "timeoutInSeconds": {
          "allOf": [
            {
              "$ref": "#/definitions/TimeoutInSeconds"
            },
            {
              "description": "The maximum allowed duration of the lambda function."
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "LambdaFunctionStartFailedEventDetails": {
      "description": "Contains details about a lambda function that failed to start during an execution.",
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the failure."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        }
      },
      "type": "object"
    },
    "LambdaFunctionSucceededEventDetails": {
      "description": "Contains details about a lambda function that successfully terminated during an execution.",
      "properties": {
        "output": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "The JSON data output by the lambda function. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "outputDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryEventExecutionDataDetails"
            },
            {
              "description": "Contains details about the output of an execution history event."
            }
          ]
        }
      },
      "type": "object"
    },
    "LambdaFunctionTimedOutEventDetails": {
      "description": "Contains details about a lambda function timeout that occurred during an execution.",
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the timeout."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListActivitiesInput": {
      "properties": {
        "maxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/PageSize"
            },
            {
              "description": "<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>"
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PageToken"
            },
            {
              "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error."
            }
          ]
        }
      },
      "title": "ListActivitiesInput",
      "type": "object"
    },
    "ListActivitiesOutput": {
      "properties": {
        "activities": {
          "allOf": [
            {
              "$ref": "#/definitions/ActivityList"
            },
            {
              "description": "The list of activities."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PageToken"
            },
            {
              "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error."
            }
          ]
        }
      },
      "required": [
        "activities"
      ],
      "type": "object"
    },
    "ListExecutionsInput": {
      "properties": {
        "maxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/PageSize"
            },
            {
              "description": "<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>"
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ListExecutionsPageToken"
            },
            {
              "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error."
            }
          ]
        },
        "stateMachineArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the state machine whose executions is listed."
            }
          ]
        },
        "statusFilter": {
          "allOf": [
            {
              "$ref": "#/definitions/ExecutionStatus"
            },
            {
              "description": "If specified, only list the executions whose current execution status matches the given filter."
            }
          ]
        }
      },
      "required": [
        "stateMachineArn"
      ],
      "title": "ListExecutionsInput",
      "type": "object"
    },
    "ListExecutionsOutput": {
      "properties": {
        "executions": {
          "allOf": [
            {
              "$ref": "#/definitions/ExecutionList"
            },
            {
              "description": "The list of matching executions."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ListExecutionsPageToken"
            },
            {
              "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error."
            }
          ]
        }
      },
      "required": [
        "executions"
      ],
      "type": "object"
    },
    "ListExecutionsPageToken": {
      "maxLength": 3096,
      "minLength": 1,
      "type": "string"
    },
    "ListStateMachinesInput": {
      "properties": {
        "maxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/PageSize"
            },
            {
              "description": "<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>"
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PageToken"
            },
            {
              "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error."
            }
          ]
        }
      },
      "title": "ListStateMachinesInput",
      "type": "object"
    },
    "ListStateMachinesOutput": {
      "properties": {
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/PageToken"
            },
            {
              "description": "If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error."
            }
          ]
        },
        "stateMachines": {
          "$ref": "#/definitions/StateMachineList"
        }
      },
      "required": [
        "stateMachines"
      ],
      "type": "object"
    },
    "ListTagsForResourceInput": {
      "properties": {
        "resourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the Step Functions state machine or activity."
            }
          ]
        }
      },
      "required": [
        "resourceArn"
      ],
      "title": "ListTagsForResourceInput",
      "type": "object"
    },
    "ListTagsForResourceOutput": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "An array of tags associated with the resource."
            }
          ]
        }
      },
      "type": "object"
    },
    "LogDestination": {
      "description": "<p/>",
      "properties": {
        "cloudWatchLogsLogGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/CloudWatchLogsLogGroup"
            },
            {
              "description": "An object describing a CloudWatch log group. For more information, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html\">AWS::Logs::LogGroup</a> in the AWS CloudFormation User Guide."
            }
          ]
        }
      },
      "type": "object"
    },
    "LogDestinationList": {
      "items": {
        "$ref": "#/definitions/LogDestination"
      },
      "type": "array"
    },
    "LogLevel": {
      "enum": [
        "ALL",
        "ERROR",
        "FATAL",
        "OFF"
      ],
      "type": "string"
    },
    "LoggingConfiguration": {
      "description": "The <code>LoggingConfiguration</code> data type is used to set CloudWatch Logs options.",
      "properties": {
        "destinations": {
          "allOf": [
            {
              "$ref": "#/definitions/LogDestinationList"
            },
            {
              "description": "An array of objects that describes where your execution history events will be logged. Limited to size 1. Required, if your log level is not set to <code>OFF</code>."
            }
          ]
        },
        "includeExecutionData": {
          "allOf": [
            {
              "$ref": "#/definitions/IncludeExecutionData"
            },
            {
              "description": "Determines whether execution data is included in your log. When set to <code>false</code>, data is excluded."
            }
          ]
        },
        "level": {
          "allOf": [
            {
              "$ref": "#/definitions/LogLevel"
            },
            {
              "description": "Defines which category of execution history events are logged."
            }
          ]
        }
      },
      "type": "object"
    },
    "MapIterationEventDetails": {
      "description": "Contains details about an iteration of a Map state.",
      "properties": {
        "index": {
          "allOf": [
            {
              "$ref": "#/definitions/UnsignedInteger"
            },
            {
              "description": "The index of the array belonging to the Map state iteration."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The name of the iterationâ€™s parent Map state."
            }
          ]
        }
      },
      "type": "object"
    },
    "MapStateStartedEventDetails": {
      "description": "Details about a Map state that was started.",
      "properties": {
        "length": {
          "allOf": [
            {
              "$ref": "#/definitions/UnsignedInteger"
            },
            {
              "description": "The size of the array for Map state iterations."
            }
          ]
        }
      },
      "type": "object"
    },
    "MissingRequiredParameter": {},
    "Name": {
      "maxLength": 80,
      "minLength": 1,
      "type": "string"
    },
    "PageSize": {
      "maximum": 1000,
      "minimum": 0,
      "type": "integer"
    },
    "PageToken": {
      "maxLength": 1024,
      "minLength": 1,
      "type": "string"
    },
    "ResourceNotFound": {},
    "ReverseOrder": {
      "type": "boolean"
    },
    "SendTaskFailureInput": {
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the failure."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        },
        "taskToken": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskToken"
            },
            {
              "description": "The token that represents this task. Task tokens are generated by Step Functions when tasks are assigned to a worker, or in the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/input-output-contextobject.html\">context object</a> when a workflow enters a task state. See <a>GetActivityTaskOutput$taskToken</a>."
            }
          ]
        }
      },
      "required": [
        "taskToken"
      ],
      "title": "SendTaskFailureInput",
      "type": "object"
    },
    "SendTaskFailureOutput": {
      "properties": {},
      "type": "object"
    },
    "SendTaskHeartbeatInput": {
      "properties": {
        "taskToken": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskToken"
            },
            {
              "description": "The token that represents this task. Task tokens are generated by Step Functions when tasks are assigned to a worker, or in the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/input-output-contextobject.html\">context object</a> when a workflow enters a task state. See <a>GetActivityTaskOutput$taskToken</a>."
            }
          ]
        }
      },
      "required": [
        "taskToken"
      ],
      "title": "SendTaskHeartbeatInput",
      "type": "object"
    },
    "SendTaskHeartbeatOutput": {
      "properties": {},
      "type": "object"
    },
    "SendTaskSuccessInput": {
      "properties": {
        "output": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "The JSON output of the task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "taskToken": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskToken"
            },
            {
              "description": "The token that represents this task. Task tokens are generated by Step Functions when tasks are assigned to a worker, or in the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/input-output-contextobject.html\">context object</a> when a workflow enters a task state. See <a>GetActivityTaskOutput$taskToken</a>."
            }
          ]
        }
      },
      "required": [
        "taskToken",
        "output"
      ],
      "title": "SendTaskSuccessInput",
      "type": "object"
    },
    "SendTaskSuccessOutput": {
      "properties": {},
      "type": "object"
    },
    "SensitiveCause": {
      "format": "password",
      "maxLength": 32768,
      "minLength": 0,
      "type": "string"
    },
    "SensitiveData": {
      "format": "password",
      "maxLength": 262144,
      "type": "string"
    },
    "SensitiveDataJobInput": {
      "format": "password",
      "maxLength": 262144,
      "type": "string"
    },
    "SensitiveError": {
      "format": "password",
      "maxLength": 256,
      "minLength": 0,
      "type": "string"
    },
    "StartExecutionInput": {
      "properties": {
        "input": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "<p>The string that contains the JSON input data for the execution, for example:</p> <p> <code>\"input\": \"{\\\"first_name\\\" : \\\"test\\\"}\"</code> </p> <note> <p>If you don't include any JSON input data, you still must include the two braces, for example: <code>\"input\": \"{}\"</code> </p> </note> <p>Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.</p>"
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "<p>The name of the execution. This name must be unique for your AWS account, region, and state machine for 90 days. For more information, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/limits.html#service-limits-state-machine-executions\"> Limits Related to State Machine Executions</a> in the <i>AWS Step Functions Developer Guide</i>.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>"
            }
          ]
        },
        "stateMachineArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the state machine to execute."
            }
          ]
        },
        "traceHeader": {
          "allOf": [
            {
              "$ref": "#/definitions/TraceHeader"
            },
            {
              "description": "Passes the AWS X-Ray trace header. The trace header can also be passed in the request payload."
            }
          ]
        }
      },
      "required": [
        "stateMachineArn"
      ],
      "title": "StartExecutionInput",
      "type": "object"
    },
    "StartExecutionOutput": {
      "properties": {
        "executionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) that identifies the execution."
            }
          ]
        },
        "startDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date the execution is started."
            }
          ]
        }
      },
      "required": [
        "executionArn",
        "startDate"
      ],
      "type": "object"
    },
    "StartSyncExecutionInput": {
      "properties": {
        "input": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "<p>The string that contains the JSON input data for the execution, for example:</p> <p> <code>\"input\": \"{\\\"first_name\\\" : \\\"test\\\"}\"</code> </p> <note> <p>If you don't include any JSON input data, you still must include the two braces, for example: <code>\"input\": \"{}\"</code> </p> </note> <p>Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.</p>"
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The name of the execution."
            }
          ]
        },
        "stateMachineArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the state machine to execute."
            }
          ]
        },
        "traceHeader": {
          "allOf": [
            {
              "$ref": "#/definitions/TraceHeader"
            },
            {
              "description": "Passes the AWS X-Ray trace header. The trace header can also be passed in the request payload."
            }
          ]
        }
      },
      "required": [
        "stateMachineArn"
      ],
      "title": "StartSyncExecutionInput",
      "type": "object"
    },
    "StartSyncExecutionOutput": {
      "properties": {
        "billingDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/BillingDetails"
            },
            {
              "description": "An object that describes workflow billing details, including billed duration and memory use."
            }
          ]
        },
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the failure."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        },
        "executionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) that identifies the execution."
            }
          ]
        },
        "input": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "The string that contains the JSON input data of the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "inputDetails": {
          "$ref": "#/definitions/CloudWatchEventsExecutionDataDetails"
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The name of the execution."
            }
          ]
        },
        "output": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "<p>The JSON output data of the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.</p> <note> <p>This field is set only if the execution succeeds. If the execution fails, this field is null.</p> </note>"
            }
          ]
        },
        "outputDetails": {
          "$ref": "#/definitions/CloudWatchEventsExecutionDataDetails"
        },
        "startDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date the execution is started."
            }
          ]
        },
        "stateMachineArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) that identifies the state machine."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/SyncExecutionStatus"
            },
            {
              "description": "The current status of the execution."
            }
          ]
        },
        "stopDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "If the execution has already ended, the date the execution stopped."
            }
          ]
        },
        "traceHeader": {
          "allOf": [
            {
              "$ref": "#/definitions/TraceHeader"
            },
            {
              "description": "The AWS X-Ray trace header that was passed to the execution."
            }
          ]
        }
      },
      "required": [
        "executionArn",
        "startDate",
        "stopDate",
        "status"
      ],
      "type": "object"
    },
    "StateEnteredEventDetails": {
      "description": "Contains details about a state entered during an execution.",
      "properties": {
        "input": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "The string that contains the JSON input data for the state. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "inputDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryEventExecutionDataDetails"
            },
            {
              "description": "Contains details about the input for an execution history event."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The name of the state."
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "StateExitedEventDetails": {
      "description": "Contains details about an exit from a state during an execution.",
      "properties": {
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "<p>The name of the state.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>"
            }
          ]
        },
        "output": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "The JSON output data of the state. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "outputDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryEventExecutionDataDetails"
            },
            {
              "description": "Contains details about the output of an execution history event."
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "StateMachineAlreadyExists": {},
    "StateMachineDeleting": {},
    "StateMachineDoesNotExist": {},
    "StateMachineLimitExceeded": {},
    "StateMachineList": {
      "items": {
        "$ref": "#/definitions/StateMachineListItem"
      },
      "type": "array"
    },
    "StateMachineListItem": {
      "description": "Contains details about the state machine.",
      "properties": {
        "creationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date the state machine is created."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "<p>The name of the state machine.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>\" # % \\ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>"
            }
          ]
        },
        "stateMachineArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) that identifies the state machine."
            }
          ]
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/StateMachineType"
            },
            {
              "description": "<p/>"
            }
          ]
        }
      },
      "required": [
        "stateMachineArn",
        "name",
        "type",
        "creationDate"
      ],
      "type": "object"
    },
    "StateMachineStatus": {
      "enum": [
        "ACTIVE",
        "DELETING"
      ],
      "type": "string"
    },
    "StateMachineType": {
      "enum": [
        "STANDARD",
        "EXPRESS"
      ],
      "type": "string"
    },
    "StateMachineTypeNotSupported": {},
    "StopExecutionInput": {
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the failure."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        },
        "executionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the execution to stop."
            }
          ]
        }
      },
      "required": [
        "executionArn"
      ],
      "title": "StopExecutionInput",
      "type": "object"
    },
    "StopExecutionOutput": {
      "properties": {
        "stopDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date the execution is stopped."
            }
          ]
        }
      },
      "required": [
        "stopDate"
      ],
      "type": "object"
    },
    "SyncExecutionStatus": {
      "enum": [
        "SUCCEEDED",
        "FAILED",
        "TIMED_OUT"
      ],
      "type": "string"
    },
    "Tag": {
      "description": "<p>Tags are key-value pairs that can be associated with Step Functions state machines and activities.</p> <p>An array of key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>, and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html\">Controlling Access Using IAM Tags</a>.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>",
      "properties": {
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/TagKey"
            },
            {
              "description": "The key of a tag."
            }
          ]
        },
        "value": {
          "allOf": [
            {
              "$ref": "#/definitions/TagValue"
            },
            {
              "description": "The value of a tag."
            }
          ]
        }
      },
      "type": "object"
    },
    "TagKey": {
      "maxLength": 128,
      "minLength": 1,
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "type": "array"
    },
    "TagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array"
    },
    "TagResourceInput": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "<p>The list of tags to add to a resource.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>"
            }
          ]
        },
        "resourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the Step Functions state machine or activity."
            }
          ]
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "title": "TagResourceInput",
      "type": "object"
    },
    "TagResourceOutput": {
      "properties": {},
      "type": "object"
    },
    "TagValue": {
      "maxLength": 256,
      "minLength": 0,
      "type": "string"
    },
    "TaskDoesNotExist": {},
    "TaskFailedEventDetails": {
      "description": "Contains details about a task failure event.",
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the failure."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        },
        "resource": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The service name of the resource in a task state."
            }
          ]
        },
        "resourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The action of the resource called by a task state."
            }
          ]
        }
      },
      "required": [
        "resourceType",
        "resource"
      ],
      "type": "object"
    },
    "TaskScheduledEventDetails": {
      "description": "Contains details about a task scheduled during an execution.",
      "properties": {
        "parameters": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectorParameters"
            },
            {
              "description": "The JSON data passed to the resource referenced in a task state. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "heartbeatInSeconds": {
          "allOf": [
            {
              "$ref": "#/definitions/TimeoutInSeconds"
            },
            {
              "description": "The maximum allowed duration between two heartbeats for the task."
            }
          ]
        },
        "region": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The region of the scheduled task"
            }
          ]
        },
        "resource": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The service name of the resource in a task state."
            }
          ]
        },
        "resourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The action of the resource called by a task state."
            }
          ]
        },
        "timeoutInSeconds": {
          "allOf": [
            {
              "$ref": "#/definitions/TimeoutInSeconds"
            },
            {
              "description": "The maximum allowed duration of the task."
            }
          ]
        }
      },
      "required": [
        "resourceType",
        "resource",
        "region",
        "parameters"
      ],
      "type": "object"
    },
    "TaskStartFailedEventDetails": {
      "description": "Contains details about a task that failed to start during an execution.",
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the failure."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        },
        "resource": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The service name of the resource in a task state."
            }
          ]
        },
        "resourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The action of the resource called by a task state."
            }
          ]
        }
      },
      "required": [
        "resourceType",
        "resource"
      ],
      "type": "object"
    },
    "TaskStartedEventDetails": {
      "description": "Contains details about the start of a task during an execution.",
      "properties": {
        "resource": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The service name of the resource in a task state."
            }
          ]
        },
        "resourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The action of the resource called by a task state."
            }
          ]
        }
      },
      "required": [
        "resourceType",
        "resource"
      ],
      "type": "object"
    },
    "TaskSubmitFailedEventDetails": {
      "description": "Contains details about a task that failed to submit during an execution.",
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the failure."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        },
        "resource": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The service name of the resource in a task state."
            }
          ]
        },
        "resourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The action of the resource called by a task state."
            }
          ]
        }
      },
      "required": [
        "resourceType",
        "resource"
      ],
      "type": "object"
    },
    "TaskSubmittedEventDetails": {
      "description": "Contains details about a task submitted to a resource .",
      "properties": {
        "output": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "The response from a resource when a task has started. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "outputDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryEventExecutionDataDetails"
            },
            {
              "description": "Contains details about the output of an execution history event."
            }
          ]
        },
        "resource": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The service name of the resource in a task state."
            }
          ]
        },
        "resourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The action of the resource called by a task state."
            }
          ]
        }
      },
      "required": [
        "resourceType",
        "resource"
      ],
      "type": "object"
    },
    "TaskSucceededEventDetails": {
      "description": "Contains details about the successful completion of a task state.",
      "properties": {
        "output": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "The full JSON response from a resource when a task has succeeded. This response becomes the output of the related task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
            }
          ]
        },
        "outputDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoryEventExecutionDataDetails"
            },
            {
              "description": "Contains details about the output of an execution history event."
            }
          ]
        },
        "resource": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The service name of the resource in a task state."
            }
          ]
        },
        "resourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The action of the resource called by a task state."
            }
          ]
        }
      },
      "required": [
        "resourceType",
        "resource"
      ],
      "type": "object"
    },
    "TaskTimedOut": {},
    "TaskTimedOutEventDetails": {
      "description": "Contains details about a resource timeout that occurred during an execution.",
      "properties": {
        "cause": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveCause"
            },
            {
              "description": "A more detailed explanation of the cause of the failure."
            }
          ]
        },
        "error": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveError"
            },
            {
              "description": "The error code of the failure."
            }
          ]
        },
        "resource": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The service name of the resource in a task state."
            }
          ]
        },
        "resourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The action of the resource called by a task state."
            }
          ]
        }
      },
      "required": [
        "resourceType",
        "resource"
      ],
      "type": "object"
    },
    "TaskToken": {
      "maxLength": 1024,
      "minLength": 1,
      "type": "string"
    },
    "TimeoutInSeconds": {
      "type": "integer"
    },
    "Timestamp": {
      "format": "date-time",
      "type": "string"
    },
    "TooManyTags": {},
    "TraceHeader": {
      "maxLength": 256,
      "minLength": 0,
      "pattern": "\\p{ASCII}*",
      "type": "string"
    },
    "TracingConfiguration": {
      "description": "Selects whether or not the state machine's AWS X-Ray tracing is enabled. Default is <code>false</code> ",
      "properties": {
        "enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Enabled"
            },
            {
              "description": "When set to <code>true</code>, AWS X-Ray tracing is enabled."
            }
          ]
        }
      },
      "type": "object"
    },
    "UnsignedInteger": {
      "minimum": 0,
      "type": "integer"
    },
    "UntagResourceInput": {
      "properties": {
        "resourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the Step Functions state machine or activity."
            }
          ]
        },
        "tagKeys": {
          "allOf": [
            {
              "$ref": "#/definitions/TagKeyList"
            },
            {
              "description": "The list of tags to remove from the resource."
            }
          ]
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "title": "UntagResourceInput",
      "type": "object"
    },
    "UntagResourceOutput": {
      "properties": {},
      "type": "object"
    },
    "UpdateStateMachineInput": {
      "properties": {
        "definition": {
          "allOf": [
            {
              "$ref": "#/definitions/Definition"
            },
            {
              "description": "The Amazon States Language definition of the state machine. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a>."
            }
          ]
        },
        "loggingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/LoggingConfiguration"
            },
            {
              "description": "The <code>LoggingConfiguration</code> data type is used to set CloudWatch Logs options."
            }
          ]
        },
        "roleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the IAM role of the state machine."
            }
          ]
        },
        "stateMachineArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the state machine."
            }
          ]
        },
        "tracingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/TracingConfiguration"
            },
            {
              "description": "Selects whether AWS X-Ray tracing is enabled."
            }
          ]
        }
      },
      "required": [
        "stateMachineArn"
      ],
      "title": "UpdateStateMachineInput",
      "type": "object"
    },
    "UpdateStateMachineOutput": {
      "properties": {
        "updateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date and time the state machine was updated."
            }
          ]
        }
      },
      "required": [
        "updateDate"
      ],
      "type": "object"
    },
    "includedDetails": {
      "type": "boolean"
    },
    "truncated": {
      "type": "boolean"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/states/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}