{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "api.taxrates.io",
  "basePath": "/api",
  "info": {
    "contact": {
      "name": "apiteam@taxrates.io"
    },
    "description": "Taxrates.io API - the successfully streamlined tax rates monitoring process. We recommend using <a href='https://www.getpostman.com/' target=_new>Postman</a> when discovering our API. Happy using!",
    "license": {
      "name": "Private licence - only for using by authorized Members of taxrates.io",
      "url": "http://taxrates.io/license/"
    },
    "termsOfService": "http://taxrates.io/terms/",
    "title": "Taxrates.io",
    "version": "3.0",
    "x-apisguru-categories": [
      "financial"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_919999226955927553_lLFntE3W_400x400.jpg"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://api.taxrates.io/taxrates_io_API.yaml",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "taxrates.io",
    "x-datafire": {
      "name": "taxrates",
      "type": "openapi"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Apikey": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "paths": {
    "/v1/tax/byaddress": {
      "post": {
        "description": "This endpoint returns tax rates for the country based on the address provided <pre><code class=\"js\">var taxrates_endpoint = 'tax/address';\n  var taxrates_params = '?domain=api.taxrates.io';\n  var taxrates_url = '/api/v1/';\n  var taxrates_body = '{\n    \"street\":\"MyStreetName\",\n    \"street_number\":\"107\",\n    \"apartment_number\":\"d34\",\n    \"city\":\"Dublin\",\n    \"zip\":\"84534\"\n    \"state\":\"\",\n    \"country\":\"Ireland\"\n  }';\n  if ( localStorage.getItem(\"Taxrates_API_Client_Secret\") ){\n  jQuery.support.cors = true;\n  jQuery.ajax({\n      url: taxrates_url+taxrates_endpoint+taxrates_params,\n      type: 'post',\n      method: 'post',\n      dataType: \"json\",\n      data: taxrates_body,\n      beforeSend: function (request) {\n              request.withCredentials = true;\n              request.setRequestHeader(\"Authorization\", \"Apikey \" + localStorage.getItem(\"Taxrates_API_Client_Secret\"));\n      },\n      headers: {\n        \"accept\": \"application/json\"\n      },\n      contentType: 'application/json; charset=utf-8',\n      success: function (data) {\n        //Maintain errors inside success because the API may return 200 in general, but different code inside\n          if(data.ErrorCode=='404' || data.ErrorCode=='500'){\n            //Maintain errors here\n            console.log(data.ErrorMessage);\n            return false;\n          }else{\n            var rates = [];\n            var i=0;\n            jQuery.each(data.Rates, function(k, v) {\n                if(v.hasOwnProperty(\"taxes\")){\n                    jQuery.each(v.taxes, function(m, w) {\n                        rates[i] = [];\n                        //Only showing standard rate type\n                        if( w.Type == \"standard\" ){\n                            rates[i][0] = w.Country;\n                            rates[i][1] = w.Type;\n                            rates[i][2] = w.data_value;\n                            i++;\n                        }\n                    });\n                }\n            //Now you have all your rates inside rates variable.\n            }).fail(function(xhr) {\n                    //Maintain your errors here\n                    return false;\n            });\n            return true;\n  }else{\n    //Not logged into taxrates.io\n    //Maintain your errors here\n    return false;\n  }</code></pre>\n",
        "parameters": [
          {
            "description": "Domain name: api.taxrates.io",
            "in": "query",
            "name": "domain",
            "required": true,
            "type": "string"
          },
          {
            "description": "Address",
            "in": "body",
            "name": "address",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          },
          {
            "description": "You can filter your taxes by one of following types: 'standard', 'reduced', 'second reduced', 'third reduced' and 'super reduced'.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Rates"
            }
          },
          "404": {
            "description": "Country not found. Please check you address and make sure it is valid."
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Apikey": []
          }
        ],
        "summary": "Get tax rates by address",
        "tags": [
          "Tax service"
        ],
        "operationId": "v1.tax.byaddress.post"
      }
    },
    "/v1/tax/countrycode": {
      "get": {
        "description": "This endpoint returns all available tax rates for selected country <pre><code class=\"js\">var taxrates_endpoint = 'tax/countrycode';\n  var taxrates_params = {'domain':'api.taxrates.io', 'country_code':'IE'};\n  var taxrates_url = '/api/v1/';\n  if ( localStorage.getItem(\"Taxrates_API_Client_Secret\") ){\n  jQuery.support.cors = true;\n  jQuery.ajax({\n      url: taxrates_url+taxrates_endpoint,\n      type: 'get',\n      method: 'get',\n      dataType: \"json\",\n      data: taxrates_params,\n      beforeSend: function (request) {\n              request.withCredentials = true;\n              request.setRequestHeader(\"Authorization\", \"Apikey \" + localStorage.getItem(\"Taxrates_API_Client_Secret\"));\n      },\n      headers: {\n        \"accept\": \"application/json\"\n      },\n      contentType: 'application/json; charset=utf-8',\n      success: function (data) {\n        //Maintain errors inside success because the API may return 200 in general, but different code inside\n          if(data.ErrorCode=='404' || data.ErrorCode=='500'){\n            //Maintain errors here\n            console.log(data.ErrorMessage);\n            return false;\n          }else{\n            var rates = [];\n            var i=0;\n            jQuery.each(data.Rates, function(k, v) {\n                if(v.hasOwnProperty(\"taxes\")){\n                    jQuery.each(v.taxes, function(m, w) {\n                        rates[i] = [];\n                        //Only showing standard rate type\n                        if( w.Type == \"standard\" ){\n                            rates[i][0] = w.Country;\n                            rates[i][1] = w.Type;\n                            rates[i][2] = w.data_value;\n                            i++;\n                        }\n                    });\n                }\n            //Now you have all your rates inside rates variable.\n            }).fail(function(xhr) {\n                    //Maintain your errors here\n                    return false;\n            });\n            return true;\n  }else{\n    //Not logged into taxrates.io\n    //Maintain your errors here\n    return false;\n  }</code></pre>\n",
        "parameters": [
          {
            "description": "Domain name: api.taxrates.io",
            "in": "query",
            "name": "domain",
            "required": true,
            "type": "string"
          },
          {
            "description": "Country code alpha 2",
            "in": "query",
            "name": "country_code",
            "required": true,
            "type": "string"
          },
          {
            "description": "You can filter your taxes by one of following types: 'standard', 'reduced', 'second reduced', 'third reduced' and 'super reduced'.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "You must provide a zip code if one of your selected countries is United States and you've had selected a state on your Taxrates.io member's dashboard.",
            "in": "query",
            "name": "zip",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Rates"
            }
          },
          "404": {
            "description": "Country not found. Have you provided correct alpha-2 country code?"
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Apikey": []
          }
        ],
        "summary": "Returns tax rate for selected country",
        "tags": [
          "Tax service"
        ],
        "operationId": "v1.tax.countrycode.get"
      }
    },
    "/v1/tax/ip": {
      "get": {
        "description": "This endpoint will return tax rates for country discovered based on Customer's IP address <pre><code class=\"js\">var taxrates_endpoint = 'tax/ip';\n  var taxrates_params = {'domain':'api.taxrates.io', 'ip':'208.80.152.201'};\n  var taxrates_url = '/api/v1/';\n  if ( localStorage.getItem(\"Taxrates_API_Client_Secret\") ){\n  jQuery.support.cors = true;\n  jQuery.ajax({\n      url: taxrates_url+taxrates_endpoint,\n      type: 'get',\n      method: 'get',\n      dataType: \"json\",\n      data: taxrates_params,\n      beforeSend: function (request) {\n              request.withCredentials = true;\n              request.setRequestHeader(\"Authorization\", \"Apikey \" + localStorage.getItem(\"Taxrates_API_Client_Secret\"));\n      },\n      headers: {\n        \"accept\": \"application/json\"\n      },\n      contentType: 'application/json; charset=utf-8',\n      success: function (data) {\n        //Maintain errors inside success because the API may return 200 in general, but different code inside\n          if(data.ErrorCode=='404' || data.ErrorCode=='500'){\n            //Maintain errors here\n            console.log(data.ErrorMessage);\n            return false;\n          }else{\n            var rates = [];\n            var i=0;\n            jQuery.each(data.Rates, function(k, v) {\n                if(v.hasOwnProperty(\"taxes\")){\n                    jQuery.each(v.taxes, function(m, w) {\n                        rates[i] = [];\n                        //Only showing standard rate type\n                        if( w.Type == \"standard\" ){\n                            rates[i][0] = w.Country;\n                            rates[i][1] = w.Type;\n                            rates[i][2] = w.data_value;\n                            i++;\n                        }\n                    });\n                }\n            //Now you have all your rates inside rates variable.\n            }).fail(function(xhr) {\n                    //Maintain your errors here\n                    return false;\n            });\n            return true;\n  }else{\n    //Not logged into taxrates.io\n    //Maintain your errors here\n    return false;\n  }</code></pre>\n",
        "parameters": [
          {
            "description": "Domain name: api.taxrates.io",
            "in": "query",
            "name": "domain",
            "required": true,
            "type": "string"
          },
          {
            "description": "Customer's IP address",
            "in": "query",
            "name": "ip",
            "required": true,
            "type": "string"
          },
          {
            "description": "You can filter your taxes by one of following types: 'standard', 'reduced', 'second reduced', 'third reduced' and 'super reduced'.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "You must provide a zip code if one of your selected countries is United States and you've had selected a state on your Taxrates.io member's dashboard.",
            "in": "query",
            "name": "zip",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of tax rates for VAT, GST & TAX",
            "schema": {
              "items": {
                "$ref": "#/definitions/Rates"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "Geolocation can not be processed/No matching country found"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Apikey": []
          }
        ],
        "summary": "Tax rates by geolocation based on Customer IP address",
        "tags": [
          "Tax service"
        ],
        "operationId": "v1.tax.ip.get"
      }
    },
    "/v3/tax/rates": {
      "get": {
        "description": "This method returns all tax rates configured on Member's account using cursor. Use X-Cursor-Next header to recursively read all rates. Max limit is 500 records per request. <pre><code class=\"js\">\n  var taxrates_endpoint = 'tax/rates';\n  var taxrates_params = {'domain':'api.taxrates.io'};\n  var taxrates_url = '/api/v3/';\n  if ( localStorage.getItem(\"Taxrates_API_Client_Secret\") ){\n  jQuery.support.cors = true;\n  jQuery.ajax({\n      url: taxrates_url+taxrates_endpoint,\n      type: 'get',\n      method: 'get',\n      dataType: \"json\",\n      data: taxrates_params,\n      beforeSend: function (request) {\n              request.withCredentials = true;\n              request.setRequestHeader(\"Authorization\", \"Apikey \" + localStorage.getItem(\"Taxrates_API_Client_Secret\"));\n      },\n      headers: {\n        \"accept\": \"application/json\"\n      },\n      contentType: 'application/json; charset=utf-8',\n      success: function (data) {\n        //Maintain errors inside success because the API may return 200 in general, but different code inside\n          if(data.ErrorCode=='404' || data.ErrorCode=='500'){\n            //Maintain errors here\n            console.log(data.ErrorMessage);\n            return false;\n          }else{\n            var rates = [];\n            var i=0;\n            var taxrates_range = '';\n            jQuery.each(data, function(k, v) {\n                if(v.hasOwnProperty(\"rates\")){\n                    jQuery.each(v.rates, function(m, w) {\n                        rates[i] = [];\n                        //Only showing standard rate type\n                        if( w.Type == \"standard\" ){\n                            rates[i][0] = w.Type;\n                            rates[i][1] = w.data_value;\n                            i++;\n                        }\n                    });\n                }\n            //Now you have all your rates inside rates variable.\n            }).fail(function(xhr) {\n                    //Maintain your errors here\n                    return false;\n            });\n            return true;\n  }else{\n    //Not logged into taxrates.io\n    //Maintain your errors here\n    return false;\n  }</code></pre>\n",
        "parameters": [
          {
            "description": "Domain name: api.taxrates.io",
            "in": "query",
            "name": "domain",
            "required": true,
            "type": "string"
          },
          {
            "description": "You can filter your taxes by one of following types: 'standard', 'reduced', 'second reduced', 'third reduced' and 'super reduced'.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Cursor shows from which record you want to get information. Default value is 0, next value can be retrieved from X-Cursor-Next header.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of locations with tax rates",
            "schema": {
              "items": {
                "$ref": "#/definitions/Location"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "No configured tax rates found. Have you added any country to your account?"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Apikey": []
          }
        ],
        "summary": "Get all tax rates",
        "tags": [
          "Tax service"
        ],
        "operationId": "v3.tax.rates.get"
      }
    }
  },
  "definitions": {
    "Address": {
      "properties": {
        "apartment_number": {
          "description": "Apartment number if any",
          "type": "string"
        },
        "city": {
          "description": "City name",
          "type": "string"
        },
        "country": {
          "description": "Country name",
          "type": "string"
        },
        "postal_code": {
          "description": "City zip code",
          "type": "string"
        },
        "state": {
          "description": "Province or state",
          "type": "string"
        },
        "street": {
          "description": "Street",
          "type": "string"
        },
        "street_number": {
          "description": "Street number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Error": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "fields": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Location": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "description": "Country name",
          "type": "string"
        },
        "rates": {
          "items": {
            "$ref": "#/definitions/TaxRate"
          },
          "type": "array"
        },
        "state": {
          "description": "State/province name if exists",
          "type": "string"
        },
        "zip": {
          "description": "Zipcode",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Rates": {
      "properties": {
        "country_name": {
          "description": "The country name",
          "type": "string"
        },
        "taxes": {
          "items": {
            "$ref": "#/definitions/Tax"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Tax": {
      "properties": {
        "Country": {
          "description": "The country name",
          "type": "string"
        },
        "Type": {
          "description": "The tax type",
          "type": "string"
        },
        "data_name": {
          "description": "The tax name and description (VAT, GST, PIT, CIT etc)",
          "type": "string"
        },
        "data_value": {
          "description": "The tax value in percents",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxRate": {
      "properties": {
        "data_name": {
          "description": "The tax name and description (VAT, GST, PIT, CIT etc)",
          "type": "string"
        },
        "data_value": {
          "description": "The tax value in percents",
          "type": "string"
        },
        "type": {
          "description": "The tax type",
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}